"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@atproto";
exports.ids = ["vendor-chunks/@atproto"];
exports.modules = {

/***/ "(ssr)/./node_modules/@atproto/api/dist/agent.js":
/*!*************************************************!*\
  !*** ./node_modules/@atproto/api/dist/agent.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Agent_prefsLock;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Agent = void 0;\nconst await_lock_1 = __importDefault(__webpack_require__(/*! await-lock */ \"(ssr)/./node_modules/await-lock/build/AwaitLock.js\"));\nconst common_web_1 = __webpack_require__(/*! @atproto/common-web */ \"(ssr)/./node_modules/@atproto/common-web/dist/index.js\");\nconst syntax_1 = __webpack_require__(/*! @atproto/syntax */ \"(ssr)/./node_modules/@atproto/syntax/dist/index.js\");\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nconst index_1 = __webpack_require__(/*! ./client/index */ \"(ssr)/./node_modules/@atproto/api/dist/client/index.js\");\nconst lexicons_1 = __webpack_require__(/*! ./client/lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nconst const_1 = __webpack_require__(/*! ./const */ \"(ssr)/./node_modules/@atproto/api/dist/const.js\");\nconst moderation_1 = __webpack_require__(/*! ./moderation */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/index.js\");\nconst labels_1 = __webpack_require__(/*! ./moderation/const/labels */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/const/labels.js\");\nconst util_1 = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/@atproto/api/dist/util.js\");\nconst FEED_VIEW_PREF_DEFAULTS = {\n    hideReplies: false,\n    hideRepliesByUnfollowed: true,\n    hideRepliesByLikeCount: 0,\n    hideReposts: false,\n    hideQuotePosts: false,\n};\nconst THREAD_VIEW_PREF_DEFAULTS = {\n    sort: 'hotness',\n    prioritizeFollowedUsers: true,\n};\n/**\n * An {@link Agent} is an {@link AtpBaseClient} with the following\n * additional features:\n * - AT Protocol labelers configuration utilities\n * - AT Protocol proxy configuration utilities\n * - Cloning utilities\n * - `app.bsky` syntactic sugar\n * - `com.atproto` syntactic sugar\n */\nclass Agent extends xrpc_1.XrpcClient {\n    /**\n     * Configures the Agent (or its sub classes) globally.\n     */\n    static configure(opts) {\n        if (opts.appLabelers) {\n            this.appLabelers = opts.appLabelers.map(util_1.asDid); // Validate & copy\n        }\n    }\n    /** @deprecated use `this` instead */\n    get xrpc() {\n        return this;\n    }\n    constructor(options) {\n        const sessionManager = typeof options === 'string' || options instanceof URL\n            ? {\n                did: undefined,\n                fetchHandler: (0, xrpc_1.buildFetchHandler)(options),\n            }\n            : options;\n        super((url, init) => {\n            const headers = new Headers(init?.headers);\n            if (this.proxy && !headers.has('atproto-proxy')) {\n                headers.set('atproto-proxy', this.proxy);\n            }\n            // Merge the labelers header of this particular request with the app &\n            // instance labelers.\n            headers.set('atproto-accept-labelers', [\n                ...this.appLabelers.map((l) => `${l};redact`),\n                ...this.labelers,\n                headers.get('atproto-accept-labelers')?.trim(),\n            ]\n                .filter(Boolean)\n                .join(', '));\n            return this.sessionManager.fetchHandler(url, { ...init, headers });\n        }, lexicons_1.schemas);\n        //#endregion\n        Object.defineProperty(this, \"com\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new index_1.ComNS(this)\n        });\n        Object.defineProperty(this, \"app\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new index_1.AppNS(this)\n        });\n        Object.defineProperty(this, \"chat\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new index_1.ChatNS(this)\n        });\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new index_1.ToolsNS(this)\n        });\n        Object.defineProperty(this, \"sessionManager\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"labelers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        //#endregion\n        //#region ATPROTO proxy configuration utilities\n        Object.defineProperty(this, \"proxy\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        //#region \"com.atproto\" lexicon short hand methods\n        /**\n         * Upload a binary blob to the server\n         */\n        Object.defineProperty(this, \"uploadBlob\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (data, opts) => this.com.atproto.repo.uploadBlob(data, opts)\n        });\n        /**\n         * Resolve a handle to a DID\n         */\n        Object.defineProperty(this, \"resolveHandle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (params, opts) => this.com.atproto.identity.resolveHandle(params, opts)\n        });\n        /**\n         * Change the user's handle\n         */\n        Object.defineProperty(this, \"updateHandle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (data, opts) => this.com.atproto.identity.updateHandle(data, opts)\n        });\n        /**\n         * Create a moderation report\n         */\n        Object.defineProperty(this, \"createModerationReport\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (data, opts) => this.com.atproto.moderation.createReport(data, opts)\n        });\n        //#endregion\n        //#region \"app.bsky\" lexicon short hand methods\n        Object.defineProperty(this, \"getTimeline\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (params, opts) => this.app.bsky.feed.getTimeline(params, opts)\n        });\n        Object.defineProperty(this, \"getAuthorFeed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (params, opts) => this.app.bsky.feed.getAuthorFeed(params, opts)\n        });\n        Object.defineProperty(this, \"getActorLikes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (params, opts) => this.app.bsky.feed.getActorLikes(params, opts)\n        });\n        Object.defineProperty(this, \"getPostThread\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (params, opts) => this.app.bsky.feed.getPostThread(params, opts)\n        });\n        Object.defineProperty(this, \"getPost\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (params) => this.app.bsky.feed.post.get(params)\n        });\n        Object.defineProperty(this, \"getPosts\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (params, opts) => this.app.bsky.feed.getPosts(params, opts)\n        });\n        Object.defineProperty(this, \"getLikes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (params, opts) => this.app.bsky.feed.getLikes(params, opts)\n        });\n        Object.defineProperty(this, \"getRepostedBy\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (params, opts) => this.app.bsky.feed.getRepostedBy(params, opts)\n        });\n        Object.defineProperty(this, \"getFollows\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (params, opts) => this.app.bsky.graph.getFollows(params, opts)\n        });\n        Object.defineProperty(this, \"getFollowers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (params, opts) => this.app.bsky.graph.getFollowers(params, opts)\n        });\n        Object.defineProperty(this, \"getProfile\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (params, opts) => this.app.bsky.actor.getProfile(params, opts)\n        });\n        Object.defineProperty(this, \"getProfiles\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (params, opts) => this.app.bsky.actor.getProfiles(params, opts)\n        });\n        Object.defineProperty(this, \"getSuggestions\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (params, opts) => this.app.bsky.actor.getSuggestions(params, opts)\n        });\n        Object.defineProperty(this, \"searchActors\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (params, opts) => this.app.bsky.actor.searchActors(params, opts)\n        });\n        Object.defineProperty(this, \"searchActorsTypeahead\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (params, opts) => this.app.bsky.actor.searchActorsTypeahead(params, opts)\n        });\n        Object.defineProperty(this, \"listNotifications\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (params, opts) => this.app.bsky.notification.listNotifications(params, opts)\n        });\n        Object.defineProperty(this, \"countUnreadNotifications\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (params, opts) => this.app.bsky.notification.getUnreadCount(params, opts)\n        });\n        Object.defineProperty(this, \"getLabelers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (params, opts) => this.app.bsky.labeler.getServices(params, opts)\n        });\n        //- Private methods\n        _Agent_prefsLock.set(this, new await_lock_1.default()\n        /**\n         * This function updates the preferences of a user and allows for a callback function to be executed\n         * before the update.\n         * @param cb - cb is a callback function that takes in a single parameter of type\n         * AppBskyActorDefs.Preferences and returns either a boolean or void. This callback function is used to\n         * update the preferences of the user. The function is called with the current preferences as an\n         * argument and if the callback returns false, the preferences are not updated.\n         */\n        );\n        this.sessionManager = sessionManager;\n    }\n    //#region Cloning utilities\n    clone() {\n        return this.copyInto(new Agent(this.sessionManager));\n    }\n    copyInto(inst) {\n        inst.configureLabelers(this.labelers);\n        inst.configureProxy(this.proxy ?? null);\n        inst.clearHeaders();\n        for (const [key, value] of this.headers)\n            inst.setHeader(key, value);\n        return inst;\n    }\n    withProxy(serviceType, did) {\n        const inst = this.clone();\n        inst.configureProxy(`${(0, util_1.asDid)(did)}#${serviceType}`);\n        return inst;\n    }\n    //#endregion\n    //#region ATPROTO labelers configuration utilities\n    /**\n     * The labelers statically configured on the class of the current instance.\n     */\n    get appLabelers() {\n        return this.constructor.appLabelers;\n    }\n    configureLabelers(labelerDids) {\n        this.labelers = labelerDids.map(util_1.asDid); // Validate & copy\n    }\n    /** @deprecated use {@link configureLabelers} instead */\n    configureLabelersHeader(labelerDids) {\n        // Filtering non-did values for backwards compatibility\n        this.configureLabelers(labelerDids.filter(util_1.isDid));\n    }\n    configureProxy(value) {\n        if (value === null)\n            this.proxy = undefined;\n        else if ((0, util_1.isDid)(value))\n            this.proxy = value;\n        else\n            throw new TypeError('Invalid proxy DID');\n    }\n    /** @deprecated use {@link configureProxy} instead */\n    configureProxyHeader(serviceType, did) {\n        // Ignoring non-did values for backwards compatibility\n        if ((0, util_1.isDid)(did))\n            this.configureProxy(`${did}#${serviceType}`);\n    }\n    //#endregion\n    //#region Session management\n    /**\n     * Get the authenticated user's DID, if any.\n     */\n    get did() {\n        return this.sessionManager.did;\n    }\n    /** @deprecated Use {@link Agent.assertDid} instead */\n    get accountDid() {\n        return this.assertDid;\n    }\n    /**\n     * Get the authenticated user's DID, or throw an error if not authenticated.\n     */\n    get assertDid() {\n        this.assertAuthenticated();\n        return this.did;\n    }\n    /**\n     * Assert that the user is authenticated.\n     */\n    assertAuthenticated() {\n        if (!this.did)\n            throw new Error('Not logged in');\n    }\n    //#endregion\n    /** @deprecated use \"this\" instead */\n    get api() {\n        return this;\n    }\n    async getLabelDefinitions(prefs) {\n        // collect the labeler dids\n        const dids = [...this.appLabelers];\n        if (isBskyPrefs(prefs)) {\n            dids.push(...prefs.moderationPrefs.labelers.map((l) => l.did));\n        }\n        else if (isModPrefs(prefs)) {\n            dids.push(...prefs.labelers.map((l) => l.did));\n        }\n        else {\n            dids.push(...prefs);\n        }\n        // fetch their definitions\n        const labelers = await this.getLabelers({\n            dids,\n            detailed: true,\n        });\n        // assemble a map of labeler dids to the interpreted label value definitions\n        const labelDefs = {};\n        if (labelers.data) {\n            for (const labeler of labelers.data\n                .views) {\n                labelDefs[labeler.creator.did] = (0, moderation_1.interpretLabelValueDefinitions)(labeler);\n            }\n        }\n        return labelDefs;\n    }\n    async post(record) {\n        record.createdAt || (record.createdAt = new Date().toISOString());\n        return this.app.bsky.feed.post.create({ repo: this.accountDid }, record);\n    }\n    async deletePost(postUri) {\n        this.assertAuthenticated();\n        const postUrip = new syntax_1.AtUri(postUri);\n        return this.app.bsky.feed.post.delete({\n            repo: postUrip.hostname,\n            rkey: postUrip.rkey,\n        });\n    }\n    async like(uri, cid) {\n        return this.app.bsky.feed.like.create({ repo: this.accountDid }, {\n            subject: { uri, cid },\n            createdAt: new Date().toISOString(),\n        });\n    }\n    async deleteLike(likeUri) {\n        this.assertAuthenticated();\n        const likeUrip = new syntax_1.AtUri(likeUri);\n        return this.app.bsky.feed.like.delete({\n            repo: likeUrip.hostname,\n            rkey: likeUrip.rkey,\n        });\n    }\n    async repost(uri, cid) {\n        return this.app.bsky.feed.repost.create({ repo: this.accountDid }, {\n            subject: { uri, cid },\n            createdAt: new Date().toISOString(),\n        });\n    }\n    async deleteRepost(repostUri) {\n        this.assertAuthenticated();\n        const repostUrip = new syntax_1.AtUri(repostUri);\n        return this.app.bsky.feed.repost.delete({\n            repo: repostUrip.hostname,\n            rkey: repostUrip.rkey,\n        });\n    }\n    async follow(subjectDid) {\n        return this.app.bsky.graph.follow.create({ repo: this.accountDid }, {\n            subject: subjectDid,\n            createdAt: new Date().toISOString(),\n        });\n    }\n    async deleteFollow(followUri) {\n        this.assertAuthenticated();\n        const followUrip = new syntax_1.AtUri(followUri);\n        return this.app.bsky.graph.follow.delete({\n            repo: followUrip.hostname,\n            rkey: followUrip.rkey,\n        });\n    }\n    async upsertProfile(updateFn) {\n        const repo = this.accountDid;\n        let retriesRemaining = 5;\n        while (retriesRemaining >= 0) {\n            // fetch existing\n            const existing = await this.com.atproto.repo\n                .getRecord({\n                repo,\n                collection: 'app.bsky.actor.profile',\n                rkey: 'self',\n            })\n                .catch((_) => undefined);\n            // run the update\n            const updated = await updateFn(existing?.data.value);\n            if (updated) {\n                updated.$type = 'app.bsky.actor.profile';\n            }\n            // validate the record\n            const validation = index_1.AppBskyActorProfile.validateRecord(updated);\n            if (!validation.success) {\n                throw validation.error;\n            }\n            try {\n                // attempt the put\n                await this.com.atproto.repo.putRecord({\n                    repo,\n                    collection: 'app.bsky.actor.profile',\n                    rkey: 'self',\n                    record: updated,\n                    swapRecord: existing?.data.cid || null,\n                });\n            }\n            catch (e) {\n                if (retriesRemaining > 0 &&\n                    e instanceof index_1.ComAtprotoRepoPutRecord.InvalidSwapError) {\n                    // try again\n                    retriesRemaining--;\n                    continue;\n                }\n                else {\n                    throw e;\n                }\n            }\n            break;\n        }\n    }\n    async mute(actor) {\n        return this.app.bsky.graph.muteActor({ actor });\n    }\n    async unmute(actor) {\n        return this.app.bsky.graph.unmuteActor({ actor });\n    }\n    async muteModList(uri) {\n        return this.app.bsky.graph.muteActorList({ list: uri });\n    }\n    async unmuteModList(uri) {\n        return this.app.bsky.graph.unmuteActorList({ list: uri });\n    }\n    async blockModList(uri) {\n        return this.app.bsky.graph.listblock.create({ repo: this.accountDid }, {\n            subject: uri,\n            createdAt: new Date().toISOString(),\n        });\n    }\n    async unblockModList(uri) {\n        const repo = this.accountDid;\n        const listInfo = await this.app.bsky.graph.getList({\n            list: uri,\n            limit: 1,\n        });\n        const blocked = listInfo.data.list.viewer?.blocked;\n        if (blocked) {\n            const { rkey } = new syntax_1.AtUri(blocked);\n            return this.app.bsky.graph.listblock.delete({\n                repo,\n                rkey,\n            });\n        }\n    }\n    async updateSeenNotifications(seenAt = new Date().toISOString()) {\n        return this.app.bsky.notification.updateSeen({ seenAt });\n    }\n    async getPreferences() {\n        const prefs = {\n            feeds: {\n                saved: undefined,\n                pinned: undefined,\n            },\n            // @ts-ignore populating below\n            savedFeeds: undefined,\n            feedViewPrefs: {\n                home: {\n                    ...FEED_VIEW_PREF_DEFAULTS,\n                },\n            },\n            threadViewPrefs: { ...THREAD_VIEW_PREF_DEFAULTS },\n            moderationPrefs: {\n                adultContentEnabled: false,\n                labels: { ...labels_1.DEFAULT_LABEL_SETTINGS },\n                labelers: this.appLabelers.map((did) => ({\n                    did,\n                    labels: {},\n                })),\n                mutedWords: [],\n                hiddenPosts: [],\n            },\n            birthDate: undefined,\n            interests: {\n                tags: [],\n            },\n            bskyAppState: {\n                queuedNudges: [],\n                activeProgressGuide: undefined,\n                nuxs: [],\n            },\n            postInteractionSettings: {\n                threadgateAllowRules: undefined,\n                postgateEmbeddingRules: undefined,\n            },\n        };\n        const res = await this.app.bsky.actor.getPreferences({});\n        const labelPrefs = [];\n        for (const pref of res.data.preferences) {\n            if (index_1.AppBskyActorDefs.isAdultContentPref(pref) &&\n                index_1.AppBskyActorDefs.validateAdultContentPref(pref).success) {\n                // adult content preferences\n                prefs.moderationPrefs.adultContentEnabled = pref.enabled;\n            }\n            else if (index_1.AppBskyActorDefs.isContentLabelPref(pref) &&\n                index_1.AppBskyActorDefs.validateContentLabelPref(pref).success) {\n                // content label preference\n                const adjustedPref = adjustLegacyContentLabelPref(pref);\n                labelPrefs.push(adjustedPref);\n            }\n            else if (index_1.AppBskyActorDefs.isLabelersPref(pref) &&\n                index_1.AppBskyActorDefs.validateLabelersPref(pref).success) {\n                // labelers preferences\n                prefs.moderationPrefs.labelers = this.appLabelers\n                    .map((did) => ({ did, labels: {} }))\n                    .concat(pref.labelers.map((labeler) => ({\n                    ...labeler,\n                    labels: {},\n                })));\n            }\n            else if (index_1.AppBskyActorDefs.isSavedFeedsPrefV2(pref) &&\n                index_1.AppBskyActorDefs.validateSavedFeedsPrefV2(pref).success) {\n                prefs.savedFeeds = pref.items;\n            }\n            else if (index_1.AppBskyActorDefs.isSavedFeedsPref(pref) &&\n                index_1.AppBskyActorDefs.validateSavedFeedsPref(pref).success) {\n                // saved and pinned feeds\n                prefs.feeds.saved = pref.saved;\n                prefs.feeds.pinned = pref.pinned;\n            }\n            else if (index_1.AppBskyActorDefs.isPersonalDetailsPref(pref) &&\n                index_1.AppBskyActorDefs.validatePersonalDetailsPref(pref).success) {\n                // birth date (irl)\n                if (pref.birthDate) {\n                    prefs.birthDate = new Date(pref.birthDate);\n                }\n            }\n            else if (index_1.AppBskyActorDefs.isFeedViewPref(pref) &&\n                index_1.AppBskyActorDefs.validateFeedViewPref(pref).success) {\n                // feed view preferences\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const { $type, feed, ...v } = pref;\n                prefs.feedViewPrefs[pref.feed] = { ...FEED_VIEW_PREF_DEFAULTS, ...v };\n            }\n            else if (index_1.AppBskyActorDefs.isThreadViewPref(pref) &&\n                index_1.AppBskyActorDefs.validateThreadViewPref(pref).success) {\n                // thread view preferences\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const { $type, ...v } = pref;\n                prefs.threadViewPrefs = { ...prefs.threadViewPrefs, ...v };\n            }\n            else if (index_1.AppBskyActorDefs.isInterestsPref(pref) &&\n                index_1.AppBskyActorDefs.validateInterestsPref(pref).success) {\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const { $type, ...v } = pref;\n                prefs.interests = { ...prefs.interests, ...v };\n            }\n            else if (index_1.AppBskyActorDefs.isMutedWordsPref(pref) &&\n                index_1.AppBskyActorDefs.validateMutedWordsPref(pref).success) {\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const { $type, ...v } = pref;\n                prefs.moderationPrefs.mutedWords = v.items;\n                if (prefs.moderationPrefs.mutedWords.length) {\n                    prefs.moderationPrefs.mutedWords =\n                        prefs.moderationPrefs.mutedWords.map((word) => {\n                            word.actorTarget = word.actorTarget || 'all';\n                            return word;\n                        });\n                }\n            }\n            else if (index_1.AppBskyActorDefs.isHiddenPostsPref(pref) &&\n                index_1.AppBskyActorDefs.validateHiddenPostsPref(pref).success) {\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const { $type, ...v } = pref;\n                prefs.moderationPrefs.hiddenPosts = v.items;\n            }\n            else if (index_1.AppBskyActorDefs.isBskyAppStatePref(pref) &&\n                index_1.AppBskyActorDefs.validateBskyAppStatePref(pref).success) {\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const { $type, ...v } = pref;\n                prefs.bskyAppState.queuedNudges = v.queuedNudges || [];\n                prefs.bskyAppState.activeProgressGuide = v.activeProgressGuide;\n                prefs.bskyAppState.nuxs = v.nuxs || [];\n            }\n            else if (index_1.AppBskyActorDefs.isPostInteractionSettingsPref(pref) &&\n                index_1.AppBskyActorDefs.validatePostInteractionSettingsPref(pref).success) {\n                prefs.postInteractionSettings.threadgateAllowRules =\n                    pref.threadgateAllowRules;\n                prefs.postInteractionSettings.postgateEmbeddingRules =\n                    pref.postgateEmbeddingRules;\n            }\n        }\n        /*\n         * If `prefs.savedFeeds` is undefined, no `savedFeedsPrefV2` exists, which\n         * means we want to try to migrate if needed.\n         *\n         * If v1 prefs exist, they will be migrated to v2.\n         *\n         * If no v1 prefs exist, the user is either new, or could be old and has\n         * never edited their feeds.\n         */\n        if (prefs.savedFeeds == null) {\n            const { saved, pinned } = prefs.feeds;\n            if (saved && pinned) {\n                const uniqueMigratedSavedFeeds = new Map();\n                // insert Following feed first\n                uniqueMigratedSavedFeeds.set('timeline', {\n                    id: common_web_1.TID.nextStr(),\n                    type: 'timeline',\n                    value: 'following',\n                    pinned: true,\n                });\n                // use pinned as source of truth for feed order\n                for (const uri of pinned) {\n                    const type = (0, util_1.getSavedFeedType)(uri);\n                    // only want supported types\n                    if (type === 'unknown')\n                        continue;\n                    uniqueMigratedSavedFeeds.set(uri, {\n                        id: common_web_1.TID.nextStr(),\n                        type,\n                        value: uri,\n                        pinned: true,\n                    });\n                }\n                for (const uri of saved) {\n                    if (!uniqueMigratedSavedFeeds.has(uri)) {\n                        const type = (0, util_1.getSavedFeedType)(uri);\n                        // only want supported types\n                        if (type === 'unknown')\n                            continue;\n                        uniqueMigratedSavedFeeds.set(uri, {\n                            id: common_web_1.TID.nextStr(),\n                            type,\n                            value: uri,\n                            pinned: false,\n                        });\n                    }\n                }\n                prefs.savedFeeds = Array.from(uniqueMigratedSavedFeeds.values());\n            }\n            else {\n                prefs.savedFeeds = [\n                    {\n                        id: common_web_1.TID.nextStr(),\n                        type: 'timeline',\n                        value: 'following',\n                        pinned: true,\n                    },\n                ];\n            }\n            // save to user preferences so this migration doesn't re-occur\n            await this.overwriteSavedFeeds(prefs.savedFeeds);\n        }\n        // apply the label prefs\n        for (const pref of labelPrefs) {\n            if (pref.labelerDid) {\n                const labeler = prefs.moderationPrefs.labelers.find((labeler) => labeler.did === pref.labelerDid);\n                if (!labeler)\n                    continue;\n                labeler.labels[pref.label] = pref.visibility;\n            }\n            else {\n                prefs.moderationPrefs.labels[pref.label] =\n                    pref.visibility;\n            }\n        }\n        prefs.moderationPrefs.labels = remapLegacyLabels(prefs.moderationPrefs.labels);\n        // automatically configure the client\n        this.configureLabelers(prefsArrayToLabelerDids(res.data.preferences));\n        return prefs;\n    }\n    async overwriteSavedFeeds(savedFeeds) {\n        savedFeeds.forEach(util_1.validateSavedFeed);\n        const uniqueSavedFeeds = new Map();\n        savedFeeds.forEach((feed) => {\n            // remove and re-insert to preserve order\n            if (uniqueSavedFeeds.has(feed.id)) {\n                uniqueSavedFeeds.delete(feed.id);\n            }\n            uniqueSavedFeeds.set(feed.id, feed);\n        });\n        return this.updateSavedFeedsV2Preferences(() => Array.from(uniqueSavedFeeds.values()));\n    }\n    async updateSavedFeeds(savedFeedsToUpdate) {\n        savedFeedsToUpdate.map(util_1.validateSavedFeed);\n        return this.updateSavedFeedsV2Preferences((savedFeeds) => {\n            return savedFeeds.map((savedFeed) => {\n                const updatedVersion = savedFeedsToUpdate.find((updated) => savedFeed.id === updated.id);\n                if (updatedVersion) {\n                    return {\n                        ...savedFeed,\n                        // only update pinned\n                        pinned: updatedVersion.pinned,\n                    };\n                }\n                return savedFeed;\n            });\n        });\n    }\n    async addSavedFeeds(savedFeeds) {\n        const toSave = savedFeeds.map((f) => ({\n            ...f,\n            id: common_web_1.TID.nextStr(),\n        }));\n        toSave.forEach(util_1.validateSavedFeed);\n        return this.updateSavedFeedsV2Preferences((savedFeeds) => [\n            ...savedFeeds,\n            ...toSave,\n        ]);\n    }\n    async removeSavedFeeds(ids) {\n        return this.updateSavedFeedsV2Preferences((savedFeeds) => [\n            ...savedFeeds.filter((feed) => !ids.find((id) => feed.id === id)),\n        ]);\n    }\n    /**\n     * @deprecated use `overwriteSavedFeeds`\n     */\n    async setSavedFeeds(saved, pinned) {\n        return this.updateFeedPreferences(() => ({\n            saved,\n            pinned,\n        }));\n    }\n    /**\n     * @deprecated use `addSavedFeeds`\n     */\n    async addSavedFeed(v) {\n        return this.updateFeedPreferences((saved, pinned) => ({\n            saved: [...saved.filter((uri) => uri !== v), v],\n            pinned,\n        }));\n    }\n    /**\n     * @deprecated use `removeSavedFeeds`\n     */\n    async removeSavedFeed(v) {\n        return this.updateFeedPreferences((saved, pinned) => ({\n            saved: saved.filter((uri) => uri !== v),\n            pinned: pinned.filter((uri) => uri !== v),\n        }));\n    }\n    /**\n     * @deprecated use `addSavedFeeds` or `updateSavedFeeds`\n     */\n    async addPinnedFeed(v) {\n        return this.updateFeedPreferences((saved, pinned) => ({\n            saved: [...saved.filter((uri) => uri !== v), v],\n            pinned: [...pinned.filter((uri) => uri !== v), v],\n        }));\n    }\n    /**\n     * @deprecated use `updateSavedFeeds` or `removeSavedFeeds`\n     */\n    async removePinnedFeed(v) {\n        return this.updateFeedPreferences((saved, pinned) => ({\n            saved,\n            pinned: pinned.filter((uri) => uri !== v),\n        }));\n    }\n    async setAdultContentEnabled(v) {\n        await this.updatePreferences((prefs) => {\n            let adultContentPref = prefs.findLast((pref) => index_1.AppBskyActorDefs.isAdultContentPref(pref) &&\n                index_1.AppBskyActorDefs.validateAdultContentPref(pref).success);\n            if (adultContentPref) {\n                adultContentPref.enabled = v;\n            }\n            else {\n                adultContentPref = {\n                    $type: 'app.bsky.actor.defs#adultContentPref',\n                    enabled: v,\n                };\n            }\n            return prefs\n                .filter((pref) => !index_1.AppBskyActorDefs.isAdultContentPref(pref))\n                .concat([adultContentPref]);\n        });\n    }\n    async setContentLabelPref(key, value, labelerDid) {\n        if (labelerDid) {\n            (0, syntax_1.ensureValidDid)(labelerDid);\n        }\n        await this.updatePreferences((prefs) => {\n            let labelPref = prefs.findLast((pref) => index_1.AppBskyActorDefs.isContentLabelPref(pref) &&\n                index_1.AppBskyActorDefs.validateContentLabelPref(pref).success &&\n                pref.label === key &&\n                pref.labelerDid === labelerDid);\n            let legacyLabelPref;\n            if (labelPref) {\n                labelPref.visibility = value;\n            }\n            else {\n                labelPref = {\n                    $type: 'app.bsky.actor.defs#contentLabelPref',\n                    label: key,\n                    labelerDid,\n                    visibility: value,\n                };\n            }\n            if (index_1.AppBskyActorDefs.isContentLabelPref(labelPref)) {\n                // is global\n                if (!labelPref.labelerDid) {\n                    const legacyLabelValue = {\n                        'graphic-media': 'gore',\n                        porn: 'nsfw',\n                        sexual: 'suggestive',\n                    }[labelPref.label];\n                    // if it's a legacy label, double-write the legacy label\n                    if (legacyLabelValue) {\n                        legacyLabelPref = prefs.findLast((pref) => index_1.AppBskyActorDefs.isContentLabelPref(pref) &&\n                            index_1.AppBskyActorDefs.validateContentLabelPref(pref).success &&\n                            pref.label === legacyLabelValue &&\n                            pref.labelerDid === undefined);\n                        if (legacyLabelPref) {\n                            legacyLabelPref.visibility = value;\n                        }\n                        else {\n                            legacyLabelPref = {\n                                $type: 'app.bsky.actor.defs#contentLabelPref',\n                                label: legacyLabelValue,\n                                labelerDid: undefined,\n                                visibility: value,\n                            };\n                        }\n                    }\n                }\n            }\n            return prefs\n                .filter((pref) => !index_1.AppBskyActorDefs.isContentLabelPref(pref) ||\n                !(pref.label === key && pref.labelerDid === labelerDid))\n                .concat([labelPref])\n                .filter((pref) => {\n                if (!legacyLabelPref)\n                    return true;\n                return (!index_1.AppBskyActorDefs.isContentLabelPref(pref) ||\n                    !(pref.label === legacyLabelPref.label &&\n                        pref.labelerDid === undefined));\n            })\n                .concat(legacyLabelPref ? [legacyLabelPref] : []);\n        });\n    }\n    async addLabeler(did) {\n        const prefs = await this.updatePreferences((prefs) => {\n            let labelersPref = prefs.findLast((pref) => index_1.AppBskyActorDefs.isLabelersPref(pref) &&\n                index_1.AppBskyActorDefs.validateLabelersPref(pref).success);\n            if (!labelersPref) {\n                labelersPref = {\n                    $type: 'app.bsky.actor.defs#labelersPref',\n                    labelers: [],\n                };\n            }\n            if (index_1.AppBskyActorDefs.isLabelersPref(labelersPref)) {\n                let labelerPrefItem = labelersPref.labelers.find((labeler) => labeler.did === did);\n                if (!labelerPrefItem) {\n                    labelerPrefItem = {\n                        did,\n                    };\n                    labelersPref.labelers.push(labelerPrefItem);\n                }\n            }\n            return prefs\n                .filter((pref) => !index_1.AppBskyActorDefs.isLabelersPref(pref))\n                .concat([labelersPref]);\n        });\n        // automatically configure the client\n        this.configureLabelers(prefsArrayToLabelerDids(prefs));\n    }\n    async removeLabeler(did) {\n        const prefs = await this.updatePreferences((prefs) => {\n            let labelersPref = prefs.findLast((pref) => index_1.AppBskyActorDefs.isLabelersPref(pref) &&\n                index_1.AppBskyActorDefs.validateLabelersPref(pref).success);\n            if (!labelersPref) {\n                labelersPref = {\n                    $type: 'app.bsky.actor.defs#labelersPref',\n                    labelers: [],\n                };\n            }\n            if (index_1.AppBskyActorDefs.isLabelersPref(labelersPref)) {\n                labelersPref.labelers = labelersPref.labelers.filter((labeler) => labeler.did !== did);\n            }\n            return prefs\n                .filter((pref) => !index_1.AppBskyActorDefs.isLabelersPref(pref))\n                .concat([labelersPref]);\n        });\n        // automatically configure the client\n        this.configureLabelers(prefsArrayToLabelerDids(prefs));\n    }\n    async setPersonalDetails({ birthDate, }) {\n        birthDate = birthDate instanceof Date ? birthDate.toISOString() : birthDate;\n        await this.updatePreferences((prefs) => {\n            let personalDetailsPref = prefs.findLast((pref) => index_1.AppBskyActorDefs.isPersonalDetailsPref(pref) &&\n                index_1.AppBskyActorDefs.validatePersonalDetailsPref(pref).success);\n            if (personalDetailsPref) {\n                personalDetailsPref.birthDate = birthDate;\n            }\n            else {\n                personalDetailsPref = {\n                    $type: 'app.bsky.actor.defs#personalDetailsPref',\n                    birthDate,\n                };\n            }\n            return prefs\n                .filter((pref) => !index_1.AppBskyActorDefs.isPersonalDetailsPref(pref))\n                .concat([personalDetailsPref]);\n        });\n    }\n    async setFeedViewPrefs(feed, pref) {\n        await this.updatePreferences((prefs) => {\n            const existing = prefs.findLast((pref) => index_1.AppBskyActorDefs.isFeedViewPref(pref) &&\n                index_1.AppBskyActorDefs.validateFeedViewPref(pref).success &&\n                pref.feed === feed);\n            if (existing) {\n                pref = { ...existing, ...pref };\n            }\n            return prefs\n                .filter((p) => !index_1.AppBskyActorDefs.isFeedViewPref(pref) || p.feed !== feed)\n                .concat([{ ...pref, $type: 'app.bsky.actor.defs#feedViewPref', feed }]);\n        });\n    }\n    async setThreadViewPrefs(pref) {\n        await this.updatePreferences((prefs) => {\n            const existing = prefs.findLast((pref) => index_1.AppBskyActorDefs.isThreadViewPref(pref) &&\n                index_1.AppBskyActorDefs.validateThreadViewPref(pref).success);\n            if (existing) {\n                pref = { ...existing, ...pref };\n            }\n            return prefs\n                .filter((p) => !index_1.AppBskyActorDefs.isThreadViewPref(p))\n                .concat([{ ...pref, $type: 'app.bsky.actor.defs#threadViewPref' }]);\n        });\n    }\n    async setInterestsPref(pref) {\n        await this.updatePreferences((prefs) => {\n            const existing = prefs.findLast((pref) => index_1.AppBskyActorDefs.isInterestsPref(pref) &&\n                index_1.AppBskyActorDefs.validateInterestsPref(pref).success);\n            if (existing) {\n                pref = { ...existing, ...pref };\n            }\n            return prefs\n                .filter((p) => !index_1.AppBskyActorDefs.isInterestsPref(p))\n                .concat([{ ...pref, $type: 'app.bsky.actor.defs#interestsPref' }]);\n        });\n    }\n    /**\n     * Add a muted word to user preferences.\n     */\n    async addMutedWord(mutedWord) {\n        const sanitizedValue = (0, util_1.sanitizeMutedWordValue)(mutedWord.value);\n        if (!sanitizedValue)\n            return;\n        await this.updatePreferences((prefs) => {\n            let mutedWordsPref = prefs.findLast((pref) => index_1.AppBskyActorDefs.isMutedWordsPref(pref) &&\n                index_1.AppBskyActorDefs.validateMutedWordsPref(pref).success);\n            const newMutedWord = {\n                id: common_web_1.TID.nextStr(),\n                value: sanitizedValue,\n                targets: mutedWord.targets || [],\n                actorTarget: mutedWord.actorTarget || 'all',\n                expiresAt: mutedWord.expiresAt || undefined,\n            };\n            if (mutedWordsPref && index_1.AppBskyActorDefs.isMutedWordsPref(mutedWordsPref)) {\n                mutedWordsPref.items.push(newMutedWord);\n                /**\n                 * Migrate any old muted words that don't have an id\n                 */\n                mutedWordsPref.items = migrateLegacyMutedWordsItems(mutedWordsPref.items);\n            }\n            else {\n                // if the pref doesn't exist, create it\n                mutedWordsPref = {\n                    items: [newMutedWord],\n                };\n            }\n            return prefs\n                .filter((p) => !index_1.AppBskyActorDefs.isMutedWordsPref(p))\n                .concat([\n                { ...mutedWordsPref, $type: 'app.bsky.actor.defs#mutedWordsPref' },\n            ]);\n        });\n    }\n    /**\n     * Convenience method to add muted words to user preferences\n     */\n    async addMutedWords(newMutedWords) {\n        await Promise.all(newMutedWords.map((word) => this.addMutedWord(word)));\n    }\n    /**\n     * @deprecated use `addMutedWords` or `addMutedWord` instead\n     */\n    async upsertMutedWords(mutedWords) {\n        await this.addMutedWords(mutedWords);\n    }\n    /**\n     * Update a muted word in user preferences.\n     */\n    async updateMutedWord(mutedWord) {\n        await this.updatePreferences((prefs) => {\n            const mutedWordsPref = prefs.findLast((pref) => index_1.AppBskyActorDefs.isMutedWordsPref(pref) &&\n                index_1.AppBskyActorDefs.validateMutedWordsPref(pref).success);\n            if (mutedWordsPref && index_1.AppBskyActorDefs.isMutedWordsPref(mutedWordsPref)) {\n                mutedWordsPref.items = mutedWordsPref.items.map((existingItem) => {\n                    const match = matchMutedWord(existingItem, mutedWord);\n                    if (match) {\n                        const updated = {\n                            ...existingItem,\n                            ...mutedWord,\n                        };\n                        return {\n                            id: existingItem.id || common_web_1.TID.nextStr(),\n                            value: (0, util_1.sanitizeMutedWordValue)(updated.value) || existingItem.value,\n                            targets: updated.targets || [],\n                            actorTarget: updated.actorTarget || 'all',\n                            expiresAt: updated.expiresAt || undefined,\n                        };\n                    }\n                    else {\n                        return existingItem;\n                    }\n                });\n                /**\n                 * Migrate any old muted words that don't have an id\n                 */\n                mutedWordsPref.items = migrateLegacyMutedWordsItems(mutedWordsPref.items);\n                return prefs\n                    .filter((p) => !index_1.AppBskyActorDefs.isMutedWordsPref(p))\n                    .concat([\n                    { ...mutedWordsPref, $type: 'app.bsky.actor.defs#mutedWordsPref' },\n                ]);\n            }\n            return prefs;\n        });\n    }\n    /**\n     * Remove a muted word from user preferences.\n     */\n    async removeMutedWord(mutedWord) {\n        await this.updatePreferences((prefs) => {\n            const mutedWordsPref = prefs.findLast((pref) => index_1.AppBskyActorDefs.isMutedWordsPref(pref) &&\n                index_1.AppBskyActorDefs.validateMutedWordsPref(pref).success);\n            if (mutedWordsPref && index_1.AppBskyActorDefs.isMutedWordsPref(mutedWordsPref)) {\n                for (let i = 0; i < mutedWordsPref.items.length; i++) {\n                    const match = matchMutedWord(mutedWordsPref.items[i], mutedWord);\n                    if (match) {\n                        mutedWordsPref.items.splice(i, 1);\n                        break;\n                    }\n                }\n                /**\n                 * Migrate any old muted words that don't have an id\n                 */\n                mutedWordsPref.items = migrateLegacyMutedWordsItems(mutedWordsPref.items);\n                return prefs\n                    .filter((p) => !index_1.AppBskyActorDefs.isMutedWordsPref(p))\n                    .concat([\n                    { ...mutedWordsPref, $type: 'app.bsky.actor.defs#mutedWordsPref' },\n                ]);\n            }\n            return prefs;\n        });\n    }\n    /**\n     * Convenience method to remove muted words from user preferences\n     */\n    async removeMutedWords(mutedWords) {\n        await Promise.all(mutedWords.map((word) => this.removeMutedWord(word)));\n    }\n    async hidePost(postUri) {\n        await this.updateHiddenPost(postUri, 'hide');\n    }\n    async unhidePost(postUri) {\n        await this.updateHiddenPost(postUri, 'unhide');\n    }\n    async bskyAppQueueNudges(nudges) {\n        await this.updatePreferences((prefs) => {\n            let bskyAppStatePref = prefs.findLast((pref) => index_1.AppBskyActorDefs.isBskyAppStatePref(pref) &&\n                index_1.AppBskyActorDefs.validateBskyAppStatePref(pref).success);\n            bskyAppStatePref = bskyAppStatePref || {};\n            nudges = Array.isArray(nudges) ? nudges : [nudges];\n            bskyAppStatePref.queuedNudges = (bskyAppStatePref.queuedNudges || []).concat(nudges);\n            return prefs\n                .filter((p) => !index_1.AppBskyActorDefs.isBskyAppStatePref(p))\n                .concat([\n                {\n                    ...bskyAppStatePref,\n                    $type: 'app.bsky.actor.defs#bskyAppStatePref',\n                },\n            ]);\n        });\n    }\n    async bskyAppDismissNudges(nudges) {\n        await this.updatePreferences((prefs) => {\n            let bskyAppStatePref = prefs.findLast((pref) => index_1.AppBskyActorDefs.isBskyAppStatePref(pref) &&\n                index_1.AppBskyActorDefs.validateBskyAppStatePref(pref).success);\n            bskyAppStatePref = bskyAppStatePref || {};\n            nudges = Array.isArray(nudges) ? nudges : [nudges];\n            bskyAppStatePref.queuedNudges = (bskyAppStatePref.queuedNudges || []).filter((nudge) => !nudges.includes(nudge));\n            return prefs\n                .filter((p) => !index_1.AppBskyActorDefs.isBskyAppStatePref(p))\n                .concat([\n                {\n                    ...bskyAppStatePref,\n                    $type: 'app.bsky.actor.defs#bskyAppStatePref',\n                },\n            ]);\n        });\n    }\n    async bskyAppSetActiveProgressGuide(guide) {\n        if (guide &&\n            !index_1.AppBskyActorDefs.validateBskyAppProgressGuide(guide).success) {\n            throw new Error('Invalid progress guide');\n        }\n        await this.updatePreferences((prefs) => {\n            let bskyAppStatePref = prefs.findLast((pref) => index_1.AppBskyActorDefs.isBskyAppStatePref(pref) &&\n                index_1.AppBskyActorDefs.validateBskyAppStatePref(pref).success);\n            bskyAppStatePref = bskyAppStatePref || {};\n            bskyAppStatePref.activeProgressGuide = guide;\n            return prefs\n                .filter((p) => !index_1.AppBskyActorDefs.isBskyAppStatePref(p))\n                .concat([\n                {\n                    ...bskyAppStatePref,\n                    $type: 'app.bsky.actor.defs#bskyAppStatePref',\n                },\n            ]);\n        });\n    }\n    /**\n     * Insert or update a NUX in user prefs\n     */\n    async bskyAppUpsertNux(nux) {\n        (0, util_1.validateNux)(nux);\n        await this.updatePreferences((prefs) => {\n            let bskyAppStatePref = prefs.findLast((pref) => index_1.AppBskyActorDefs.isBskyAppStatePref(pref) &&\n                index_1.AppBskyActorDefs.validateBskyAppStatePref(pref).success);\n            bskyAppStatePref = bskyAppStatePref || {};\n            bskyAppStatePref.nuxs = bskyAppStatePref.nuxs || [];\n            const existing = bskyAppStatePref.nuxs?.find((n) => {\n                return n.id === nux.id;\n            });\n            let next;\n            if (existing) {\n                next = {\n                    id: existing.id,\n                    completed: nux.completed,\n                    data: nux.data,\n                    expiresAt: nux.expiresAt,\n                };\n            }\n            else {\n                next = nux;\n            }\n            // remove duplicates and append\n            bskyAppStatePref.nuxs = bskyAppStatePref.nuxs\n                .filter((n) => n.id !== nux.id)\n                .concat(next);\n            return prefs\n                .filter((p) => !index_1.AppBskyActorDefs.isBskyAppStatePref(p))\n                .concat([\n                {\n                    ...bskyAppStatePref,\n                    $type: 'app.bsky.actor.defs#bskyAppStatePref',\n                },\n            ]);\n        });\n    }\n    /**\n     * Removes NUXs from user preferences.\n     */\n    async bskyAppRemoveNuxs(ids) {\n        await this.updatePreferences((prefs) => {\n            let bskyAppStatePref = prefs.findLast((pref) => index_1.AppBskyActorDefs.isBskyAppStatePref(pref) &&\n                index_1.AppBskyActorDefs.validateBskyAppStatePref(pref).success);\n            bskyAppStatePref = bskyAppStatePref || {};\n            bskyAppStatePref.nuxs = (bskyAppStatePref.nuxs || []).filter((nux) => {\n                return !ids.includes(nux.id);\n            });\n            return prefs\n                .filter((p) => !index_1.AppBskyActorDefs.isBskyAppStatePref(p))\n                .concat([\n                {\n                    ...bskyAppStatePref,\n                    $type: 'app.bsky.actor.defs#bskyAppStatePref',\n                },\n            ]);\n        });\n    }\n    async setPostInteractionSettings(settings) {\n        if (!index_1.AppBskyActorDefs.validatePostInteractionSettingsPref(settings).success) {\n            throw new Error('Invalid post interaction settings');\n        }\n        await this.updatePreferences((prefs) => {\n            let prev = prefs.findLast((pref) => index_1.AppBskyActorDefs.isPostInteractionSettingsPref(pref) &&\n                index_1.AppBskyActorDefs.validatePostInteractionSettingsPref(pref).success);\n            if (!prev) {\n                prev = {\n                    /**\n                     * Matches handling of `threadgate.allow` where `undefined` means \"everyone\"\n                     */\n                    threadgateAllowRules: undefined,\n                    postgateEmbeddingRules: undefined,\n                };\n            }\n            /**\n             * Matches handling of `threadgate.allow` where `undefined` means \"everyone\"\n             */\n            prev.threadgateAllowRules = settings.threadgateAllowRules;\n            prev.postgateEmbeddingRules = settings.postgateEmbeddingRules;\n            return prefs\n                .filter((p) => !index_1.AppBskyActorDefs.isPostInteractionSettingsPref(p))\n                .concat([\n                {\n                    ...prev,\n                    $type: 'app.bsky.actor.defs#postInteractionSettingsPref',\n                },\n            ]);\n        });\n    }\n    /**\n     * This function updates the preferences of a user and allows for a callback function to be executed\n     * before the update.\n     * @param cb - cb is a callback function that takes in a single parameter of type\n     * AppBskyActorDefs.Preferences and returns either a boolean or void. This callback function is used to\n     * update the preferences of the user. The function is called with the current preferences as an\n     * argument and if the callback returns false, the preferences are not updated.\n     */\n    async updatePreferences(cb) {\n        try {\n            await __classPrivateFieldGet(this, _Agent_prefsLock, \"f\").acquireAsync();\n            const res = await this.app.bsky.actor.getPreferences({});\n            const newPrefs = cb(res.data.preferences);\n            if (newPrefs === false) {\n                return res.data.preferences;\n            }\n            await this.app.bsky.actor.putPreferences({\n                preferences: newPrefs,\n            });\n            return newPrefs;\n        }\n        finally {\n            __classPrivateFieldGet(this, _Agent_prefsLock, \"f\").release();\n        }\n    }\n    async updateHiddenPost(postUri, action) {\n        await this.updatePreferences((prefs) => {\n            let pref = prefs.findLast((pref) => index_1.AppBskyActorDefs.isHiddenPostsPref(pref) &&\n                index_1.AppBskyActorDefs.validateHiddenPostsPref(pref).success);\n            if (pref && index_1.AppBskyActorDefs.isHiddenPostsPref(pref)) {\n                pref.items =\n                    action === 'hide'\n                        ? Array.from(new Set([...pref.items, postUri]))\n                        : pref.items.filter((uri) => uri !== postUri);\n            }\n            else {\n                if (action === 'hide') {\n                    pref = {\n                        $type: 'app.bsky.actor.defs#hiddenPostsPref',\n                        items: [postUri],\n                    };\n                }\n            }\n            return prefs\n                .filter((p) => !index_1.AppBskyActorDefs.isInterestsPref(p))\n                .concat([{ ...pref, $type: 'app.bsky.actor.defs#hiddenPostsPref' }]);\n        });\n    }\n    /**\n     * A helper specifically for updating feed preferences\n     */\n    async updateFeedPreferences(cb) {\n        let res;\n        await this.updatePreferences((prefs) => {\n            let feedsPref = prefs.findLast((pref) => index_1.AppBskyActorDefs.isSavedFeedsPref(pref) &&\n                index_1.AppBskyActorDefs.validateSavedFeedsPref(pref).success);\n            if (feedsPref) {\n                res = cb(feedsPref.saved, feedsPref.pinned);\n                feedsPref.saved = res.saved;\n                feedsPref.pinned = res.pinned;\n            }\n            else {\n                res = cb([], []);\n                feedsPref = {\n                    $type: 'app.bsky.actor.defs#savedFeedsPref',\n                    saved: res.saved,\n                    pinned: res.pinned,\n                };\n            }\n            return prefs\n                .filter((pref) => !index_1.AppBskyActorDefs.isSavedFeedsPref(pref))\n                .concat([feedsPref]);\n        });\n        return res;\n    }\n    async updateSavedFeedsV2Preferences(cb) {\n        let maybeMutatedSavedFeeds = [];\n        await this.updatePreferences((prefs) => {\n            let existingV2Pref = prefs.findLast((pref) => index_1.AppBskyActorDefs.isSavedFeedsPrefV2(pref) &&\n                index_1.AppBskyActorDefs.validateSavedFeedsPrefV2(pref).success);\n            let existingV1Pref = prefs.findLast((pref) => index_1.AppBskyActorDefs.isSavedFeedsPref(pref) &&\n                index_1.AppBskyActorDefs.validateSavedFeedsPref(pref).success);\n            if (existingV2Pref) {\n                maybeMutatedSavedFeeds = cb(existingV2Pref.items);\n                existingV2Pref = {\n                    ...existingV2Pref,\n                    items: maybeMutatedSavedFeeds,\n                };\n            }\n            else {\n                maybeMutatedSavedFeeds = cb([]);\n                existingV2Pref = {\n                    $type: 'app.bsky.actor.defs#savedFeedsPrefV2',\n                    items: maybeMutatedSavedFeeds,\n                };\n            }\n            // enforce ordering, pinned then saved\n            const pinned = existingV2Pref.items.filter((i) => i.pinned);\n            const saved = existingV2Pref.items.filter((i) => !i.pinned);\n            existingV2Pref.items = pinned.concat(saved);\n            let updatedPrefs = prefs\n                .filter((pref) => !index_1.AppBskyActorDefs.isSavedFeedsPrefV2(pref))\n                .concat(existingV2Pref);\n            /*\n             * If there's a v2 pref present, it means this account was migrated from v1\n             * to v2. During the transition period, we double write v2 prefs back to\n             * v1, but NOT the other way around.\n             */\n            if (existingV1Pref) {\n                const { saved, pinned } = existingV1Pref;\n                const v2Compat = (0, util_1.savedFeedsToUriArrays)(\n                // v1 only supports feeds and lists\n                existingV2Pref.items.filter((i) => ['feed', 'list'].includes(i.type)));\n                existingV1Pref = {\n                    ...existingV1Pref,\n                    saved: Array.from(new Set([...saved, ...v2Compat.saved])),\n                    pinned: Array.from(new Set([...pinned, ...v2Compat.pinned])),\n                };\n                updatedPrefs = updatedPrefs\n                    .filter((pref) => !index_1.AppBskyActorDefs.isSavedFeedsPref(pref))\n                    .concat(existingV1Pref);\n            }\n            return updatedPrefs;\n        });\n        return maybeMutatedSavedFeeds;\n    }\n}\nexports.Agent = Agent;\n_Agent_prefsLock = new WeakMap();\n//#region Static configuration\n/**\n * The labelers to be used across all requests with the takedown capability\n */\nObject.defineProperty(Agent, \"appLabelers\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: [const_1.BSKY_LABELER_DID]\n});\n/**\n * Helper to transform the legacy content preferences.\n */\nfunction adjustLegacyContentLabelPref(pref) {\n    let visibility = pref.visibility;\n    // adjust legacy values\n    if (visibility === 'show') {\n        visibility = 'ignore';\n    }\n    return { ...pref, visibility };\n}\n/**\n * Re-maps legacy labels to new labels on READ. Does not save these changes to\n * the user's preferences.\n */\nfunction remapLegacyLabels(labels) {\n    const _labels = { ...labels };\n    const legacyToNewMap = {\n        gore: 'graphic-media',\n        nsfw: 'porn',\n        suggestive: 'sexual',\n    };\n    for (const labelName in _labels) {\n        const newLabelName = legacyToNewMap[labelName];\n        if (newLabelName) {\n            _labels[newLabelName] = _labels[labelName];\n        }\n    }\n    return _labels;\n}\n/**\n * A helper to get the currently enabled labelers from the full preferences array\n */\nfunction prefsArrayToLabelerDids(prefs) {\n    const labelersPref = prefs.findLast((pref) => index_1.AppBskyActorDefs.isLabelersPref(pref) &&\n        index_1.AppBskyActorDefs.validateLabelersPref(pref).success);\n    let dids = [];\n    if (labelersPref) {\n        dids = labelersPref.labelers.map((labeler) => labeler.did);\n    }\n    return dids;\n}\nfunction isBskyPrefs(v) {\n    return (v &&\n        typeof v === 'object' &&\n        'moderationPrefs' in v &&\n        isModPrefs(v.moderationPrefs));\n}\nfunction isModPrefs(v) {\n    return v && typeof v === 'object' && 'labelers' in v;\n}\nfunction migrateLegacyMutedWordsItems(items) {\n    return items.map((item) => ({\n        ...item,\n        id: item.id || common_web_1.TID.nextStr(),\n    }));\n}\nfunction matchMutedWord(existingWord, newWord) {\n    // id is undefined in legacy implementation\n    const existingId = existingWord.id;\n    // prefer matching based on id\n    const matchById = existingId && existingId === newWord.id;\n    // handle legacy case where id is not set\n    const legacyMatchByValue = !existingId && existingWord.value === newWord.value;\n    return matchById || legacyMatchByValue;\n}\n//# sourceMappingURL=agent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/agent.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/atp-agent.js":
/*!*****************************************************!*\
  !*** ./node_modules/@atproto/api/dist/atp-agent.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CredentialSession = exports.AtpAgent = void 0;\nconst common_web_1 = __webpack_require__(/*! @atproto/common-web */ \"(ssr)/./node_modules/@atproto/common-web/dist/index.js\");\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nconst agent_1 = __webpack_require__(/*! ./agent */ \"(ssr)/./node_modules/@atproto/api/dist/agent.js\");\nconst client_1 = __webpack_require__(/*! ./client */ \"(ssr)/./node_modules/@atproto/api/dist/client/index.js\");\nconst lexicons_1 = __webpack_require__(/*! ./client/lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nconst ReadableStream = globalThis.ReadableStream;\n/**\n * A wrapper around the {@link Agent} class that uses credential based session\n * management. This class also exposes most of the session management methods\n * directly.\n *\n * This class will be deprecated in the near future. Use {@link Agent} directly\n * with a {@link CredentialSession} instead:\n *\n *  ```ts\n *  const session = new CredentialSession({\n *    service: new URL('https://example.com'),\n *  })\n *\n *  const agent = new Agent(session)\n *  ```\n */\nclass AtpAgent extends agent_1.Agent {\n    constructor(options) {\n        const sessionManager = options instanceof CredentialSession\n            ? options\n            : new CredentialSession(new URL(options.service), options.fetch, options.persistSession);\n        super(sessionManager);\n        Object.defineProperty(this, \"sessionManager\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // This assignment is already being done in the super constructor, but we\n        // need to do it here to make TypeScript happy.\n        this.sessionManager = sessionManager;\n        if (!(options instanceof CredentialSession) && options.headers) {\n            for (const [key, value] of options.headers) {\n                this.setHeader(key, value);\n            }\n        }\n    }\n    clone() {\n        return this.copyInto(new AtpAgent(this.sessionManager));\n    }\n    get session() {\n        return this.sessionManager.session;\n    }\n    get hasSession() {\n        return this.sessionManager.hasSession;\n    }\n    get did() {\n        return this.sessionManager.did;\n    }\n    get serviceUrl() {\n        return this.sessionManager.serviceUrl;\n    }\n    get pdsUrl() {\n        return this.sessionManager.pdsUrl;\n    }\n    get dispatchUrl() {\n        return this.sessionManager.dispatchUrl;\n    }\n    /** @deprecated use {@link serviceUrl} instead */\n    get service() {\n        return this.serviceUrl;\n    }\n    get persistSession() {\n        throw new Error('Cannot set persistSession directly. \"persistSession\" is defined through the constructor and will be invoked automatically when session data changes.');\n    }\n    set persistSession(v) {\n        throw new Error('Cannot set persistSession directly. \"persistSession\" must be defined in the constructor and can no longer be changed.');\n    }\n    /** @deprecated use {@link AtpAgent.serviceUrl} instead */\n    getServiceUrl() {\n        return this.serviceUrl;\n    }\n    async resumeSession(session) {\n        return this.sessionManager.resumeSession(session);\n    }\n    async createAccount(data, opts) {\n        return this.sessionManager.createAccount(data, opts);\n    }\n    async login(opts) {\n        return this.sessionManager.login(opts);\n    }\n    async logout() {\n        return this.sessionManager.logout();\n    }\n}\nexports.AtpAgent = AtpAgent;\n/**\n * Credentials (username / password) based session manager. Instances of this\n * class will typically be used as the session manager for an {@link AtpAgent}.\n * They can also be used with an {@link XrpcClient}, if you want to use you\n * own Lexicons.\n */\nclass CredentialSession {\n    constructor(serviceUrl, fetch = globalThis.fetch, persistSession) {\n        Object.defineProperty(this, \"serviceUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: serviceUrl\n        });\n        Object.defineProperty(this, \"fetch\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: fetch\n        });\n        Object.defineProperty(this, \"persistSession\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: persistSession\n        });\n        Object.defineProperty(this, \"pdsUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        }); // The PDS URL, driven by the did doc\n        Object.defineProperty(this, \"session\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"refreshSessionPromise\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Private {@link ComAtprotoServerNS} used to perform session management API\n         * calls on the service endpoint. Calls performed by this agent will not be\n         * authenticated using the user's session to allow proper manual configuration\n         * of the headers when performing session management operations.\n         */\n        Object.defineProperty(this, \"server\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new client_1.ComAtprotoServerNS(\n            // Note that the use of the codegen \"schemas\" (to instantiate `this.api`),\n            // as well as the use of `ComAtprotoServerNS` will cause this class to\n            // reference (way) more code than it actually needs. It is not possible,\n            // with the current state of the codegen, to generate a client that only\n            // includes the methods that are actually used by this class. This is a\n            // known limitation that should be addressed in a future version of the\n            // codegen.\n            new xrpc_1.XrpcClient((url, init) => {\n                return (0, this.fetch)(new URL(url, this.serviceUrl), init);\n            }, lexicons_1.schemas))\n        });\n    }\n    get did() {\n        return this.session?.did;\n    }\n    get dispatchUrl() {\n        return this.pdsUrl || this.serviceUrl;\n    }\n    get hasSession() {\n        return !!this.session;\n    }\n    /**\n     * Sets a WhatWG \"fetch()\" function to be used for making HTTP requests.\n     */\n    setFetch(fetch = globalThis.fetch) {\n        this.fetch = fetch;\n    }\n    async fetchHandler(url, init) {\n        // wait for any active session-refreshes to finish\n        await this.refreshSessionPromise;\n        const initialUri = new URL(url, this.dispatchUrl);\n        const initialReq = new Request(initialUri, init);\n        const initialToken = this.session?.accessJwt;\n        if (!initialToken || initialReq.headers.has('authorization')) {\n            return (0, this.fetch)(initialReq);\n        }\n        initialReq.headers.set('authorization', `Bearer ${initialToken}`);\n        const initialRes = await (0, this.fetch)(initialReq);\n        if (!this.session?.refreshJwt) {\n            return initialRes;\n        }\n        const isExpiredToken = await isErrorResponse(initialRes, [400], ['ExpiredToken']);\n        if (!isExpiredToken) {\n            return initialRes;\n        }\n        try {\n            await this.refreshSession();\n        }\n        catch {\n            return initialRes;\n        }\n        if (init?.signal?.aborted) {\n            return initialRes;\n        }\n        // The stream was already consumed. We cannot retry the request. A solution\n        // would be to tee() the input stream but that would bufferize the entire\n        // stream in memory which can lead to memory starvation. Instead, we will\n        // return the original response and let the calling code handle retries.\n        if (ReadableStream && init?.body instanceof ReadableStream) {\n            return initialRes;\n        }\n        // Return initial \"ExpiredToken\" response if the session was not refreshed.\n        const updatedToken = this.session?.accessJwt;\n        if (!updatedToken || updatedToken === initialToken) {\n            return initialRes;\n        }\n        // Make sure the initial request is cancelled to avoid leaking resources\n        // (NodeJS 👀): https://undici.nodejs.org/#/?id=garbage-collection\n        await initialRes.body?.cancel();\n        // We need to re-compute the URI in case the PDS endpoint has changed\n        const updatedUri = new URL(url, this.dispatchUrl);\n        const updatedReq = new Request(updatedUri, init);\n        updatedReq.headers.set('authorization', `Bearer ${updatedToken}`);\n        return await (0, this.fetch)(updatedReq);\n    }\n    /**\n     * Create a new account and hydrate its session in this agent.\n     */\n    async createAccount(data, opts) {\n        try {\n            const res = await this.server.createAccount(data, opts);\n            this.session = {\n                accessJwt: res.data.accessJwt,\n                refreshJwt: res.data.refreshJwt,\n                handle: res.data.handle,\n                did: res.data.did,\n                email: data.email,\n                emailConfirmed: false,\n                emailAuthFactor: false,\n                active: true,\n            };\n            this.persistSession?.('create', this.session);\n            this._updateApiEndpoint(res.data.didDoc);\n            return res;\n        }\n        catch (e) {\n            this.session = undefined;\n            this.persistSession?.('create-failed', undefined);\n            throw e;\n        }\n    }\n    /**\n     * Start a new session with this agent.\n     */\n    async login(opts) {\n        try {\n            const res = await this.server.createSession({\n                identifier: opts.identifier,\n                password: opts.password,\n                authFactorToken: opts.authFactorToken,\n                allowTakendown: opts.allowTakendown,\n            });\n            this.session = {\n                accessJwt: res.data.accessJwt,\n                refreshJwt: res.data.refreshJwt,\n                handle: res.data.handle,\n                did: res.data.did,\n                email: res.data.email,\n                emailConfirmed: res.data.emailConfirmed,\n                emailAuthFactor: res.data.emailAuthFactor,\n                active: res.data.active ?? true,\n                status: res.data.status,\n            };\n            this._updateApiEndpoint(res.data.didDoc);\n            this.persistSession?.('create', this.session);\n            return res;\n        }\n        catch (e) {\n            this.session = undefined;\n            this.persistSession?.('create-failed', undefined);\n            throw e;\n        }\n    }\n    async logout() {\n        if (this.session) {\n            try {\n                await this.server.deleteSession(undefined, {\n                    headers: {\n                        authorization: `Bearer ${this.session.accessJwt}`,\n                    },\n                });\n            }\n            catch {\n                // Ignore errors\n            }\n            finally {\n                this.session = undefined;\n                this.persistSession?.('expired', undefined);\n            }\n        }\n    }\n    /**\n     * Resume a pre-existing session with this agent.\n     */\n    async resumeSession(session) {\n        this.session = session;\n        try {\n            const res = await this.server\n                .getSession(undefined, {\n                headers: { authorization: `Bearer ${session.accessJwt}` },\n            })\n                .catch(async (err) => {\n                if (err instanceof xrpc_1.XRPCError &&\n                    ['ExpiredToken', 'InvalidToken'].includes(err.error) &&\n                    session.refreshJwt) {\n                    try {\n                        const res = await this.server.refreshSession(undefined, {\n                            headers: { authorization: `Bearer ${session.refreshJwt}` },\n                        });\n                        session.accessJwt = res.data.accessJwt;\n                        session.refreshJwt = res.data.refreshJwt;\n                        return this.server.getSession(undefined, {\n                            headers: { authorization: `Bearer ${session.accessJwt}` },\n                        });\n                    }\n                    catch {\n                        // Noop, we'll throw the original error\n                    }\n                }\n                throw err;\n            });\n            if (res.data.did !== session.did) {\n                throw new xrpc_1.XRPCError(xrpc_1.ResponseType.InvalidRequest, 'Invalid session', 'InvalidDID');\n            }\n            session.email = res.data.email;\n            session.handle = res.data.handle;\n            session.emailConfirmed = res.data.emailConfirmed;\n            session.emailAuthFactor = res.data.emailAuthFactor;\n            session.active = res.data.active ?? true;\n            session.status = res.data.status;\n            // protect against concurrent session updates\n            if (this.session === session) {\n                this._updateApiEndpoint(res.data.didDoc);\n                this.persistSession?.('update', session);\n            }\n            return res;\n        }\n        catch (err) {\n            // protect against concurrent session updates\n            if (this.session === session) {\n                this.session = undefined;\n                this.persistSession?.(err instanceof xrpc_1.XRPCError &&\n                    ['ExpiredToken', 'InvalidToken'].includes(err.error)\n                    ? 'expired'\n                    : 'network-error', undefined);\n            }\n            throw err;\n        }\n    }\n    /**\n     * Internal helper to refresh sessions\n     * - Wraps the actual implementation in a promise-guard to ensure only\n     *   one refresh is attempted at a time.\n     */\n    async refreshSession() {\n        return (this.refreshSessionPromise || (this.refreshSessionPromise = this._refreshSessionInner().finally(() => {\n            this.refreshSessionPromise = undefined;\n        })));\n    }\n    /**\n     * Internal helper to refresh sessions (actual behavior)\n     */\n    async _refreshSessionInner() {\n        if (!this.session?.refreshJwt) {\n            return;\n        }\n        try {\n            const res = await this.server.refreshSession(undefined, {\n                headers: { authorization: `Bearer ${this.session.refreshJwt}` },\n            });\n            // succeeded, update the session\n            this.session = {\n                ...this.session,\n                accessJwt: res.data.accessJwt,\n                refreshJwt: res.data.refreshJwt,\n                handle: res.data.handle,\n                did: res.data.did,\n            };\n            this._updateApiEndpoint(res.data.didDoc);\n            this.persistSession?.('update', this.session);\n        }\n        catch (err) {\n            if (err instanceof xrpc_1.XRPCError &&\n                err.error &&\n                ['ExpiredToken', 'InvalidToken'].includes(err.error)) {\n                // failed due to a bad refresh token\n                this.session = undefined;\n                this.persistSession?.('expired', undefined);\n            }\n            // else: other failures should be ignored - the issue will\n            // propagate in the _dispatch() second attempt to run\n            // the request\n        }\n    }\n    /**\n     * Helper to update the pds endpoint dynamically.\n     *\n     * The session methods (create, resume, refresh) may respond with the user's\n     * did document which contains the user's canonical PDS endpoint. That endpoint\n     * may differ from the endpoint used to contact the server. We capture that\n     * PDS endpoint and update the client to use that given endpoint for future\n     * requests. (This helps ensure smooth migrations between PDSes, especially\n     * when the PDSes are operated by a single org.)\n     */\n    _updateApiEndpoint(didDoc) {\n        if ((0, common_web_1.isValidDidDoc)(didDoc)) {\n            const endpoint = (0, common_web_1.getPdsEndpoint)(didDoc);\n            this.pdsUrl = endpoint ? new URL(endpoint) : undefined;\n        }\n        else {\n            // If the did doc is invalid, we clear the pdsUrl (should never happen)\n            this.pdsUrl = undefined;\n        }\n    }\n}\nexports.CredentialSession = CredentialSession;\nfunction isErrorObject(v) {\n    return xrpc_1.errorResponseBody.safeParse(v).success;\n}\nasync function isErrorResponse(response, status, errorNames) {\n    if (!status.includes(response.status))\n        return false;\n    // Some engines (react-native 👀) don't expose a response.body property...\n    // if (!response.body) return false\n    try {\n        const json = await peekJson(response, 10 * 1024);\n        return isErrorObject(json) && errorNames.includes(json.error);\n    }\n    catch (err) {\n        return false;\n    }\n}\nasync function peekJson(response, maxSize = Infinity) {\n    if (extractType(response) !== 'application/json')\n        throw new Error('Not JSON');\n    if (extractLength(response) > maxSize)\n        throw new Error('Response too large');\n    return response.clone().json();\n}\nfunction extractLength({ headers }) {\n    return headers.get('Content-Length')\n        ? Number(headers.get('Content-Length'))\n        : NaN;\n}\nfunction extractType({ headers }) {\n    return headers.get('Content-Type')?.split(';')[0]?.trim();\n}\n//# sourceMappingURL=atp-agent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/atp-agent.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/bsky-agent.js":
/*!******************************************************!*\
  !*** ./node_modules/@atproto/api/dist/bsky-agent.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BskyAgent = void 0;\nconst atp_agent_1 = __webpack_require__(/*! ./atp-agent */ \"(ssr)/./node_modules/@atproto/api/dist/atp-agent.js\");\n/** @deprecated use {@link AtpAgent} instead */\nclass BskyAgent extends atp_agent_1.AtpAgent {\n    clone() {\n        if (this.constructor === BskyAgent) {\n            const agent = new BskyAgent(this.sessionManager);\n            return this.copyInto(agent);\n        }\n        // sub-classes should override this method\n        throw new TypeError('Cannot clone a subclass of BskyAgent');\n    }\n}\nexports.BskyAgent = BskyAgent;\n//# sourceMappingURL=bsky-agent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvYnNreS1hZ2VudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUI7QUFDakIsb0JBQW9CLG1CQUFPLENBQUMsd0VBQWE7QUFDekMscUJBQXFCLGdCQUFnQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2Jza3ktYWdlbnQuanM/ZWM4MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQnNreUFnZW50ID0gdm9pZCAwO1xuY29uc3QgYXRwX2FnZW50XzEgPSByZXF1aXJlKFwiLi9hdHAtYWdlbnRcIik7XG4vKiogQGRlcHJlY2F0ZWQgdXNlIHtAbGluayBBdHBBZ2VudH0gaW5zdGVhZCAqL1xuY2xhc3MgQnNreUFnZW50IGV4dGVuZHMgYXRwX2FnZW50XzEuQXRwQWdlbnQge1xuICAgIGNsb25lKCkge1xuICAgICAgICBpZiAodGhpcy5jb25zdHJ1Y3RvciA9PT0gQnNreUFnZW50KSB7XG4gICAgICAgICAgICBjb25zdCBhZ2VudCA9IG5ldyBCc2t5QWdlbnQodGhpcy5zZXNzaW9uTWFuYWdlcik7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jb3B5SW50byhhZ2VudCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gc3ViLWNsYXNzZXMgc2hvdWxkIG92ZXJyaWRlIHRoaXMgbWV0aG9kXG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0Nhbm5vdCBjbG9uZSBhIHN1YmNsYXNzIG9mIEJza3lBZ2VudCcpO1xuICAgIH1cbn1cbmV4cG9ydHMuQnNreUFnZW50ID0gQnNreUFnZW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YnNreS1hZ2VudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/bsky-agent.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/index.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ComAtprotoServerDeleteAccount = exports.ComAtprotoServerDefs = exports.ComAtprotoServerDeactivateAccount = exports.ComAtprotoServerCreateSession = exports.ComAtprotoServerCreateInviteCodes = exports.ComAtprotoServerCreateInviteCode = exports.ComAtprotoServerCreateAppPassword = exports.ComAtprotoServerCreateAccount = exports.ComAtprotoServerConfirmEmail = exports.ComAtprotoServerCheckAccountStatus = exports.ComAtprotoServerActivateAccount = exports.ComAtprotoRepoUploadBlob = exports.ComAtprotoRepoStrongRef = exports.ComAtprotoRepoPutRecord = exports.ComAtprotoRepoListRecords = exports.ComAtprotoRepoListMissingBlobs = exports.ComAtprotoRepoImportRepo = exports.ComAtprotoRepoGetRecord = exports.ComAtprotoRepoDescribeRepo = exports.ComAtprotoRepoDeleteRecord = exports.ComAtprotoRepoDefs = exports.ComAtprotoRepoCreateRecord = exports.ComAtprotoRepoApplyWrites = exports.ComAtprotoModerationDefs = exports.ComAtprotoModerationCreateReport = exports.ComAtprotoLexiconSchema = exports.ComAtprotoLabelSubscribeLabels = exports.ComAtprotoLabelQueryLabels = exports.ComAtprotoLabelDefs = exports.ComAtprotoIdentityUpdateHandle = exports.ComAtprotoIdentitySubmitPlcOperation = exports.ComAtprotoIdentitySignPlcOperation = exports.ComAtprotoIdentityResolveHandle = exports.ComAtprotoIdentityRequestPlcOperationSignature = exports.ComAtprotoIdentityGetRecommendedDidCredentials = exports.ComAtprotoAdminUpdateSubjectStatus = exports.ComAtprotoAdminUpdateAccountPassword = exports.ComAtprotoAdminUpdateAccountHandle = exports.ComAtprotoAdminUpdateAccountEmail = exports.ComAtprotoAdminSendEmail = exports.ComAtprotoAdminSearchAccounts = exports.ComAtprotoAdminGetSubjectStatus = exports.ComAtprotoAdminGetInviteCodes = exports.ComAtprotoAdminGetAccountInfos = exports.ComAtprotoAdminGetAccountInfo = exports.ComAtprotoAdminEnableAccountInvites = exports.ComAtprotoAdminDisableInviteCodes = exports.ComAtprotoAdminDisableAccountInvites = exports.ComAtprotoAdminDeleteAccount = exports.ComAtprotoAdminDefs = void 0;\nexports.AppBskyFeedGenerator = exports.AppBskyFeedDescribeFeedGenerator = exports.AppBskyFeedDefs = exports.AppBskyEmbedVideo = exports.AppBskyEmbedRecordWithMedia = exports.AppBskyEmbedRecord = exports.AppBskyEmbedImages = exports.AppBskyEmbedExternal = exports.AppBskyEmbedDefs = exports.AppBskyActorSearchActorsTypeahead = exports.AppBskyActorSearchActors = exports.AppBskyActorPutPreferences = exports.AppBskyActorProfile = exports.AppBskyActorGetSuggestions = exports.AppBskyActorGetProfiles = exports.AppBskyActorGetProfile = exports.AppBskyActorGetPreferences = exports.AppBskyActorDefs = exports.ComAtprotoTempRequestPhoneVerification = exports.ComAtprotoTempFetchLabels = exports.ComAtprotoTempCheckSignupQueue = exports.ComAtprotoTempAddReservedHandle = exports.ComAtprotoSyncSubscribeRepos = exports.ComAtprotoSyncRequestCrawl = exports.ComAtprotoSyncNotifyOfUpdate = exports.ComAtprotoSyncListRepos = exports.ComAtprotoSyncListBlobs = exports.ComAtprotoSyncGetRepoStatus = exports.ComAtprotoSyncGetRepo = exports.ComAtprotoSyncGetRecord = exports.ComAtprotoSyncGetLatestCommit = exports.ComAtprotoSyncGetHead = exports.ComAtprotoSyncGetCheckout = exports.ComAtprotoSyncGetBlocks = exports.ComAtprotoSyncGetBlob = exports.ComAtprotoServerUpdateEmail = exports.ComAtprotoServerRevokeAppPassword = exports.ComAtprotoServerResetPassword = exports.ComAtprotoServerReserveSigningKey = exports.ComAtprotoServerRequestPasswordReset = exports.ComAtprotoServerRequestEmailUpdate = exports.ComAtprotoServerRequestEmailConfirmation = exports.ComAtprotoServerRequestAccountDelete = exports.ComAtprotoServerRefreshSession = exports.ComAtprotoServerListAppPasswords = exports.ComAtprotoServerGetSession = exports.ComAtprotoServerGetServiceAuth = exports.ComAtprotoServerGetAccountInviteCodes = exports.ComAtprotoServerDescribeServer = exports.ComAtprotoServerDeleteSession = void 0;\nexports.AppBskyGraphUnmuteThread = exports.AppBskyGraphUnmuteActorList = exports.AppBskyGraphUnmuteActor = exports.AppBskyGraphStarterpack = exports.AppBskyGraphSearchStarterPacks = exports.AppBskyGraphMuteThread = exports.AppBskyGraphMuteActorList = exports.AppBskyGraphMuteActor = exports.AppBskyGraphListitem = exports.AppBskyGraphListblock = exports.AppBskyGraphList = exports.AppBskyGraphGetSuggestedFollowsByActor = exports.AppBskyGraphGetStarterPacks = exports.AppBskyGraphGetStarterPack = exports.AppBskyGraphGetRelationships = exports.AppBskyGraphGetMutes = exports.AppBskyGraphGetLists = exports.AppBskyGraphGetListMutes = exports.AppBskyGraphGetListBlocks = exports.AppBskyGraphGetList = exports.AppBskyGraphGetKnownFollowers = exports.AppBskyGraphGetFollows = exports.AppBskyGraphGetFollowers = exports.AppBskyGraphGetBlocks = exports.AppBskyGraphGetActorStarterPacks = exports.AppBskyGraphFollow = exports.AppBskyGraphDefs = exports.AppBskyGraphBlock = exports.AppBskyFeedThreadgate = exports.AppBskyFeedSendInteractions = exports.AppBskyFeedSearchPosts = exports.AppBskyFeedRepost = exports.AppBskyFeedPostgate = exports.AppBskyFeedPost = exports.AppBskyFeedLike = exports.AppBskyFeedGetTimeline = exports.AppBskyFeedGetSuggestedFeeds = exports.AppBskyFeedGetRepostedBy = exports.AppBskyFeedGetQuotes = exports.AppBskyFeedGetPosts = exports.AppBskyFeedGetPostThread = exports.AppBskyFeedGetListFeed = exports.AppBskyFeedGetLikes = exports.AppBskyFeedGetFeedSkeleton = exports.AppBskyFeedGetFeedGenerators = exports.AppBskyFeedGetFeedGenerator = exports.AppBskyFeedGetFeed = exports.AppBskyFeedGetAuthorFeed = exports.AppBskyFeedGetActorLikes = exports.AppBskyFeedGetActorFeeds = void 0;\nexports.ToolsOzoneModerationGetEvent = exports.ToolsOzoneModerationEmitEvent = exports.ToolsOzoneModerationDefs = exports.ToolsOzoneCommunicationUpdateTemplate = exports.ToolsOzoneCommunicationListTemplates = exports.ToolsOzoneCommunicationDeleteTemplate = exports.ToolsOzoneCommunicationDefs = exports.ToolsOzoneCommunicationCreateTemplate = exports.ChatBskyModerationUpdateActorAccess = exports.ChatBskyModerationGetMessageContext = exports.ChatBskyModerationGetActorMetadata = exports.ChatBskyConvoUpdateRead = exports.ChatBskyConvoUnmuteConvo = exports.ChatBskyConvoSendMessageBatch = exports.ChatBskyConvoSendMessage = exports.ChatBskyConvoMuteConvo = exports.ChatBskyConvoListConvos = exports.ChatBskyConvoLeaveConvo = exports.ChatBskyConvoGetMessages = exports.ChatBskyConvoGetLog = exports.ChatBskyConvoGetConvoForMembers = exports.ChatBskyConvoGetConvo = exports.ChatBskyConvoDeleteMessageForSelf = exports.ChatBskyConvoDefs = exports.ChatBskyActorExportAccountData = exports.ChatBskyActorDeleteAccount = exports.ChatBskyActorDefs = exports.ChatBskyActorDeclaration = exports.AppBskyVideoUploadVideo = exports.AppBskyVideoGetUploadLimits = exports.AppBskyVideoGetJobStatus = exports.AppBskyVideoDefs = exports.AppBskyUnspeccedSearchStarterPacksSkeleton = exports.AppBskyUnspeccedSearchPostsSkeleton = exports.AppBskyUnspeccedSearchActorsSkeleton = exports.AppBskyUnspeccedGetTrendingTopics = exports.AppBskyUnspeccedGetTaggedSuggestions = exports.AppBskyUnspeccedGetSuggestionsSkeleton = exports.AppBskyUnspeccedGetPopularFeedGenerators = exports.AppBskyUnspeccedGetConfig = exports.AppBskyUnspeccedDefs = exports.AppBskyRichtextFacet = exports.AppBskyNotificationUpdateSeen = exports.AppBskyNotificationRegisterPush = exports.AppBskyNotificationPutPreferences = exports.AppBskyNotificationListNotifications = exports.AppBskyNotificationGetUnreadCount = exports.AppBskyLabelerService = exports.AppBskyLabelerGetServices = exports.AppBskyLabelerDefs = void 0;\nexports.ProfileRecord = exports.AppBskyActorNS = exports.AppBskyNS = exports.AppNS = exports.ComAtprotoTempNS = exports.ComAtprotoSyncNS = exports.ComAtprotoServerNS = exports.ComAtprotoRepoNS = exports.ComAtprotoModerationNS = exports.SchemaRecord = exports.ComAtprotoLexiconNS = exports.ComAtprotoLabelNS = exports.ComAtprotoIdentityNS = exports.ComAtprotoAdminNS = exports.ComAtprotoNS = exports.ComNS = exports.AtpBaseClient = exports.TOOLS_OZONE_TEAM = exports.TOOLS_OZONE_MODERATION = exports.APP_BSKY_GRAPH = exports.APP_BSKY_FEED = exports.COM_ATPROTO_MODERATION = exports.ToolsOzoneTeamUpdateMember = exports.ToolsOzoneTeamListMembers = exports.ToolsOzoneTeamDeleteMember = exports.ToolsOzoneTeamDefs = exports.ToolsOzoneTeamAddMember = exports.ToolsOzoneSignatureSearchAccounts = exports.ToolsOzoneSignatureFindRelatedAccounts = exports.ToolsOzoneSignatureFindCorrelation = exports.ToolsOzoneSignatureDefs = exports.ToolsOzoneSettingUpsertOption = exports.ToolsOzoneSettingRemoveOptions = exports.ToolsOzoneSettingListOptions = exports.ToolsOzoneSettingDefs = exports.ToolsOzoneSetUpsertSet = exports.ToolsOzoneSetQuerySets = exports.ToolsOzoneSetGetValues = exports.ToolsOzoneSetDeleteValues = exports.ToolsOzoneSetDeleteSet = exports.ToolsOzoneSetDefs = exports.ToolsOzoneSetAddValues = exports.ToolsOzoneServerGetConfig = exports.ToolsOzoneModerationSearchRepos = exports.ToolsOzoneModerationQueryStatuses = exports.ToolsOzoneModerationQueryEvents = exports.ToolsOzoneModerationGetRepos = exports.ToolsOzoneModerationGetRepo = exports.ToolsOzoneModerationGetRecords = exports.ToolsOzoneModerationGetRecord = void 0;\nexports.ToolsOzoneTeamNS = exports.ToolsOzoneSignatureNS = exports.ToolsOzoneSettingNS = exports.ToolsOzoneSetNS = exports.ToolsOzoneServerNS = exports.ToolsOzoneModerationNS = exports.ToolsOzoneCommunicationNS = exports.ToolsOzoneNS = exports.ToolsNS = exports.ChatBskyModerationNS = exports.ChatBskyConvoNS = exports.DeclarationRecord = exports.ChatBskyActorNS = exports.ChatBskyNS = exports.ChatNS = exports.AppBskyVideoNS = exports.AppBskyUnspeccedNS = exports.AppBskyRichtextNS = exports.AppBskyNotificationNS = exports.ServiceRecord = exports.AppBskyLabelerNS = exports.StarterpackRecord = exports.ListitemRecord = exports.ListblockRecord = exports.ListRecord = exports.FollowRecord = exports.BlockRecord = exports.AppBskyGraphNS = exports.ThreadgateRecord = exports.RepostRecord = exports.PostgateRecord = exports.PostRecord = exports.LikeRecord = exports.GeneratorRecord = exports.AppBskyFeedNS = exports.AppBskyEmbedNS = void 0;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nconst lexicons_1 = __webpack_require__(/*! ./lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nconst ComAtprotoRepoApplyWrites = __importStar(__webpack_require__(/*! ./types/com/atproto/repo/applyWrites */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/applyWrites.js\"));\nconst ComAtprotoRepoCreateRecord = __importStar(__webpack_require__(/*! ./types/com/atproto/repo/createRecord */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/createRecord.js\"));\nconst ComAtprotoRepoDeleteRecord = __importStar(__webpack_require__(/*! ./types/com/atproto/repo/deleteRecord */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/deleteRecord.js\"));\nconst ComAtprotoRepoGetRecord = __importStar(__webpack_require__(/*! ./types/com/atproto/repo/getRecord */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/getRecord.js\"));\nconst ComAtprotoRepoPutRecord = __importStar(__webpack_require__(/*! ./types/com/atproto/repo/putRecord */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/putRecord.js\"));\nconst ComAtprotoServerConfirmEmail = __importStar(__webpack_require__(/*! ./types/com/atproto/server/confirmEmail */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/confirmEmail.js\"));\nconst ComAtprotoServerCreateAccount = __importStar(__webpack_require__(/*! ./types/com/atproto/server/createAccount */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/createAccount.js\"));\nconst ComAtprotoServerCreateAppPassword = __importStar(__webpack_require__(/*! ./types/com/atproto/server/createAppPassword */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/createAppPassword.js\"));\nconst ComAtprotoServerCreateSession = __importStar(__webpack_require__(/*! ./types/com/atproto/server/createSession */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/createSession.js\"));\nconst ComAtprotoServerDeleteAccount = __importStar(__webpack_require__(/*! ./types/com/atproto/server/deleteAccount */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/deleteAccount.js\"));\nconst ComAtprotoServerGetAccountInviteCodes = __importStar(__webpack_require__(/*! ./types/com/atproto/server/getAccountInviteCodes */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/getAccountInviteCodes.js\"));\nconst ComAtprotoServerGetServiceAuth = __importStar(__webpack_require__(/*! ./types/com/atproto/server/getServiceAuth */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/getServiceAuth.js\"));\nconst ComAtprotoServerListAppPasswords = __importStar(__webpack_require__(/*! ./types/com/atproto/server/listAppPasswords */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/listAppPasswords.js\"));\nconst ComAtprotoServerRefreshSession = __importStar(__webpack_require__(/*! ./types/com/atproto/server/refreshSession */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/refreshSession.js\"));\nconst ComAtprotoServerResetPassword = __importStar(__webpack_require__(/*! ./types/com/atproto/server/resetPassword */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/resetPassword.js\"));\nconst ComAtprotoServerUpdateEmail = __importStar(__webpack_require__(/*! ./types/com/atproto/server/updateEmail */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/updateEmail.js\"));\nconst ComAtprotoSyncGetBlob = __importStar(__webpack_require__(/*! ./types/com/atproto/sync/getBlob */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getBlob.js\"));\nconst ComAtprotoSyncGetBlocks = __importStar(__webpack_require__(/*! ./types/com/atproto/sync/getBlocks */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getBlocks.js\"));\nconst ComAtprotoSyncGetHead = __importStar(__webpack_require__(/*! ./types/com/atproto/sync/getHead */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getHead.js\"));\nconst ComAtprotoSyncGetLatestCommit = __importStar(__webpack_require__(/*! ./types/com/atproto/sync/getLatestCommit */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getLatestCommit.js\"));\nconst ComAtprotoSyncGetRecord = __importStar(__webpack_require__(/*! ./types/com/atproto/sync/getRecord */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getRecord.js\"));\nconst ComAtprotoSyncGetRepo = __importStar(__webpack_require__(/*! ./types/com/atproto/sync/getRepo */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getRepo.js\"));\nconst ComAtprotoSyncGetRepoStatus = __importStar(__webpack_require__(/*! ./types/com/atproto/sync/getRepoStatus */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getRepoStatus.js\"));\nconst ComAtprotoSyncListBlobs = __importStar(__webpack_require__(/*! ./types/com/atproto/sync/listBlobs */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/listBlobs.js\"));\nconst AppBskyFeedGetActorLikes = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/getActorLikes */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getActorLikes.js\"));\nconst AppBskyFeedGetAuthorFeed = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/getAuthorFeed */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getAuthorFeed.js\"));\nconst AppBskyFeedGetFeed = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/getFeed */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getFeed.js\"));\nconst AppBskyFeedGetFeedSkeleton = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/getFeedSkeleton */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getFeedSkeleton.js\"));\nconst AppBskyFeedGetListFeed = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/getListFeed */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getListFeed.js\"));\nconst AppBskyFeedGetPostThread = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/getPostThread */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getPostThread.js\"));\nconst AppBskyFeedSearchPosts = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/searchPosts */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/searchPosts.js\"));\nconst AppBskyGraphGetRelationships = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/getRelationships */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getRelationships.js\"));\nconst AppBskyUnspeccedSearchActorsSkeleton = __importStar(__webpack_require__(/*! ./types/app/bsky/unspecced/searchActorsSkeleton */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/searchActorsSkeleton.js\"));\nconst AppBskyUnspeccedSearchPostsSkeleton = __importStar(__webpack_require__(/*! ./types/app/bsky/unspecced/searchPostsSkeleton */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/searchPostsSkeleton.js\"));\nconst AppBskyUnspeccedSearchStarterPacksSkeleton = __importStar(__webpack_require__(/*! ./types/app/bsky/unspecced/searchStarterPacksSkeleton */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/searchStarterPacksSkeleton.js\"));\nconst ToolsOzoneCommunicationCreateTemplate = __importStar(__webpack_require__(/*! ./types/tools/ozone/communication/createTemplate */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/communication/createTemplate.js\"));\nconst ToolsOzoneCommunicationUpdateTemplate = __importStar(__webpack_require__(/*! ./types/tools/ozone/communication/updateTemplate */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/communication/updateTemplate.js\"));\nconst ToolsOzoneModerationEmitEvent = __importStar(__webpack_require__(/*! ./types/tools/ozone/moderation/emitEvent */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/emitEvent.js\"));\nconst ToolsOzoneModerationGetRecord = __importStar(__webpack_require__(/*! ./types/tools/ozone/moderation/getRecord */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/getRecord.js\"));\nconst ToolsOzoneModerationGetRepo = __importStar(__webpack_require__(/*! ./types/tools/ozone/moderation/getRepo */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/getRepo.js\"));\nconst ToolsOzoneSetDeleteSet = __importStar(__webpack_require__(/*! ./types/tools/ozone/set/deleteSet */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/set/deleteSet.js\"));\nconst ToolsOzoneSetDeleteValues = __importStar(__webpack_require__(/*! ./types/tools/ozone/set/deleteValues */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/set/deleteValues.js\"));\nconst ToolsOzoneSetGetValues = __importStar(__webpack_require__(/*! ./types/tools/ozone/set/getValues */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/set/getValues.js\"));\nconst ToolsOzoneTeamAddMember = __importStar(__webpack_require__(/*! ./types/tools/ozone/team/addMember */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/team/addMember.js\"));\nconst ToolsOzoneTeamDeleteMember = __importStar(__webpack_require__(/*! ./types/tools/ozone/team/deleteMember */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/team/deleteMember.js\"));\nconst ToolsOzoneTeamUpdateMember = __importStar(__webpack_require__(/*! ./types/tools/ozone/team/updateMember */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/team/updateMember.js\"));\nexports.ComAtprotoAdminDefs = __importStar(__webpack_require__(/*! ./types/com/atproto/admin/defs */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/defs.js\"));\nexports.ComAtprotoAdminDeleteAccount = __importStar(__webpack_require__(/*! ./types/com/atproto/admin/deleteAccount */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/deleteAccount.js\"));\nexports.ComAtprotoAdminDisableAccountInvites = __importStar(__webpack_require__(/*! ./types/com/atproto/admin/disableAccountInvites */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/disableAccountInvites.js\"));\nexports.ComAtprotoAdminDisableInviteCodes = __importStar(__webpack_require__(/*! ./types/com/atproto/admin/disableInviteCodes */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/disableInviteCodes.js\"));\nexports.ComAtprotoAdminEnableAccountInvites = __importStar(__webpack_require__(/*! ./types/com/atproto/admin/enableAccountInvites */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/enableAccountInvites.js\"));\nexports.ComAtprotoAdminGetAccountInfo = __importStar(__webpack_require__(/*! ./types/com/atproto/admin/getAccountInfo */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/getAccountInfo.js\"));\nexports.ComAtprotoAdminGetAccountInfos = __importStar(__webpack_require__(/*! ./types/com/atproto/admin/getAccountInfos */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/getAccountInfos.js\"));\nexports.ComAtprotoAdminGetInviteCodes = __importStar(__webpack_require__(/*! ./types/com/atproto/admin/getInviteCodes */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/getInviteCodes.js\"));\nexports.ComAtprotoAdminGetSubjectStatus = __importStar(__webpack_require__(/*! ./types/com/atproto/admin/getSubjectStatus */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/getSubjectStatus.js\"));\nexports.ComAtprotoAdminSearchAccounts = __importStar(__webpack_require__(/*! ./types/com/atproto/admin/searchAccounts */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/searchAccounts.js\"));\nexports.ComAtprotoAdminSendEmail = __importStar(__webpack_require__(/*! ./types/com/atproto/admin/sendEmail */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/sendEmail.js\"));\nexports.ComAtprotoAdminUpdateAccountEmail = __importStar(__webpack_require__(/*! ./types/com/atproto/admin/updateAccountEmail */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/updateAccountEmail.js\"));\nexports.ComAtprotoAdminUpdateAccountHandle = __importStar(__webpack_require__(/*! ./types/com/atproto/admin/updateAccountHandle */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/updateAccountHandle.js\"));\nexports.ComAtprotoAdminUpdateAccountPassword = __importStar(__webpack_require__(/*! ./types/com/atproto/admin/updateAccountPassword */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/updateAccountPassword.js\"));\nexports.ComAtprotoAdminUpdateSubjectStatus = __importStar(__webpack_require__(/*! ./types/com/atproto/admin/updateSubjectStatus */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/updateSubjectStatus.js\"));\nexports.ComAtprotoIdentityGetRecommendedDidCredentials = __importStar(__webpack_require__(/*! ./types/com/atproto/identity/getRecommendedDidCredentials */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/identity/getRecommendedDidCredentials.js\"));\nexports.ComAtprotoIdentityRequestPlcOperationSignature = __importStar(__webpack_require__(/*! ./types/com/atproto/identity/requestPlcOperationSignature */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/identity/requestPlcOperationSignature.js\"));\nexports.ComAtprotoIdentityResolveHandle = __importStar(__webpack_require__(/*! ./types/com/atproto/identity/resolveHandle */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/identity/resolveHandle.js\"));\nexports.ComAtprotoIdentitySignPlcOperation = __importStar(__webpack_require__(/*! ./types/com/atproto/identity/signPlcOperation */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/identity/signPlcOperation.js\"));\nexports.ComAtprotoIdentitySubmitPlcOperation = __importStar(__webpack_require__(/*! ./types/com/atproto/identity/submitPlcOperation */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/identity/submitPlcOperation.js\"));\nexports.ComAtprotoIdentityUpdateHandle = __importStar(__webpack_require__(/*! ./types/com/atproto/identity/updateHandle */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/identity/updateHandle.js\"));\nexports.ComAtprotoLabelDefs = __importStar(__webpack_require__(/*! ./types/com/atproto/label/defs */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/label/defs.js\"));\nexports.ComAtprotoLabelQueryLabels = __importStar(__webpack_require__(/*! ./types/com/atproto/label/queryLabels */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/label/queryLabels.js\"));\nexports.ComAtprotoLabelSubscribeLabels = __importStar(__webpack_require__(/*! ./types/com/atproto/label/subscribeLabels */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/label/subscribeLabels.js\"));\nexports.ComAtprotoLexiconSchema = __importStar(__webpack_require__(/*! ./types/com/atproto/lexicon/schema */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/lexicon/schema.js\"));\nexports.ComAtprotoModerationCreateReport = __importStar(__webpack_require__(/*! ./types/com/atproto/moderation/createReport */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/moderation/createReport.js\"));\nexports.ComAtprotoModerationDefs = __importStar(__webpack_require__(/*! ./types/com/atproto/moderation/defs */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/moderation/defs.js\"));\nexports.ComAtprotoRepoApplyWrites = __importStar(__webpack_require__(/*! ./types/com/atproto/repo/applyWrites */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/applyWrites.js\"));\nexports.ComAtprotoRepoCreateRecord = __importStar(__webpack_require__(/*! ./types/com/atproto/repo/createRecord */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/createRecord.js\"));\nexports.ComAtprotoRepoDefs = __importStar(__webpack_require__(/*! ./types/com/atproto/repo/defs */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/defs.js\"));\nexports.ComAtprotoRepoDeleteRecord = __importStar(__webpack_require__(/*! ./types/com/atproto/repo/deleteRecord */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/deleteRecord.js\"));\nexports.ComAtprotoRepoDescribeRepo = __importStar(__webpack_require__(/*! ./types/com/atproto/repo/describeRepo */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/describeRepo.js\"));\nexports.ComAtprotoRepoGetRecord = __importStar(__webpack_require__(/*! ./types/com/atproto/repo/getRecord */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/getRecord.js\"));\nexports.ComAtprotoRepoImportRepo = __importStar(__webpack_require__(/*! ./types/com/atproto/repo/importRepo */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/importRepo.js\"));\nexports.ComAtprotoRepoListMissingBlobs = __importStar(__webpack_require__(/*! ./types/com/atproto/repo/listMissingBlobs */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/listMissingBlobs.js\"));\nexports.ComAtprotoRepoListRecords = __importStar(__webpack_require__(/*! ./types/com/atproto/repo/listRecords */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/listRecords.js\"));\nexports.ComAtprotoRepoPutRecord = __importStar(__webpack_require__(/*! ./types/com/atproto/repo/putRecord */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/putRecord.js\"));\nexports.ComAtprotoRepoStrongRef = __importStar(__webpack_require__(/*! ./types/com/atproto/repo/strongRef */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/strongRef.js\"));\nexports.ComAtprotoRepoUploadBlob = __importStar(__webpack_require__(/*! ./types/com/atproto/repo/uploadBlob */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/uploadBlob.js\"));\nexports.ComAtprotoServerActivateAccount = __importStar(__webpack_require__(/*! ./types/com/atproto/server/activateAccount */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/activateAccount.js\"));\nexports.ComAtprotoServerCheckAccountStatus = __importStar(__webpack_require__(/*! ./types/com/atproto/server/checkAccountStatus */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/checkAccountStatus.js\"));\nexports.ComAtprotoServerConfirmEmail = __importStar(__webpack_require__(/*! ./types/com/atproto/server/confirmEmail */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/confirmEmail.js\"));\nexports.ComAtprotoServerCreateAccount = __importStar(__webpack_require__(/*! ./types/com/atproto/server/createAccount */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/createAccount.js\"));\nexports.ComAtprotoServerCreateAppPassword = __importStar(__webpack_require__(/*! ./types/com/atproto/server/createAppPassword */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/createAppPassword.js\"));\nexports.ComAtprotoServerCreateInviteCode = __importStar(__webpack_require__(/*! ./types/com/atproto/server/createInviteCode */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/createInviteCode.js\"));\nexports.ComAtprotoServerCreateInviteCodes = __importStar(__webpack_require__(/*! ./types/com/atproto/server/createInviteCodes */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/createInviteCodes.js\"));\nexports.ComAtprotoServerCreateSession = __importStar(__webpack_require__(/*! ./types/com/atproto/server/createSession */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/createSession.js\"));\nexports.ComAtprotoServerDeactivateAccount = __importStar(__webpack_require__(/*! ./types/com/atproto/server/deactivateAccount */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/deactivateAccount.js\"));\nexports.ComAtprotoServerDefs = __importStar(__webpack_require__(/*! ./types/com/atproto/server/defs */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/defs.js\"));\nexports.ComAtprotoServerDeleteAccount = __importStar(__webpack_require__(/*! ./types/com/atproto/server/deleteAccount */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/deleteAccount.js\"));\nexports.ComAtprotoServerDeleteSession = __importStar(__webpack_require__(/*! ./types/com/atproto/server/deleteSession */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/deleteSession.js\"));\nexports.ComAtprotoServerDescribeServer = __importStar(__webpack_require__(/*! ./types/com/atproto/server/describeServer */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/describeServer.js\"));\nexports.ComAtprotoServerGetAccountInviteCodes = __importStar(__webpack_require__(/*! ./types/com/atproto/server/getAccountInviteCodes */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/getAccountInviteCodes.js\"));\nexports.ComAtprotoServerGetServiceAuth = __importStar(__webpack_require__(/*! ./types/com/atproto/server/getServiceAuth */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/getServiceAuth.js\"));\nexports.ComAtprotoServerGetSession = __importStar(__webpack_require__(/*! ./types/com/atproto/server/getSession */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/getSession.js\"));\nexports.ComAtprotoServerListAppPasswords = __importStar(__webpack_require__(/*! ./types/com/atproto/server/listAppPasswords */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/listAppPasswords.js\"));\nexports.ComAtprotoServerRefreshSession = __importStar(__webpack_require__(/*! ./types/com/atproto/server/refreshSession */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/refreshSession.js\"));\nexports.ComAtprotoServerRequestAccountDelete = __importStar(__webpack_require__(/*! ./types/com/atproto/server/requestAccountDelete */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/requestAccountDelete.js\"));\nexports.ComAtprotoServerRequestEmailConfirmation = __importStar(__webpack_require__(/*! ./types/com/atproto/server/requestEmailConfirmation */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/requestEmailConfirmation.js\"));\nexports.ComAtprotoServerRequestEmailUpdate = __importStar(__webpack_require__(/*! ./types/com/atproto/server/requestEmailUpdate */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/requestEmailUpdate.js\"));\nexports.ComAtprotoServerRequestPasswordReset = __importStar(__webpack_require__(/*! ./types/com/atproto/server/requestPasswordReset */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/requestPasswordReset.js\"));\nexports.ComAtprotoServerReserveSigningKey = __importStar(__webpack_require__(/*! ./types/com/atproto/server/reserveSigningKey */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/reserveSigningKey.js\"));\nexports.ComAtprotoServerResetPassword = __importStar(__webpack_require__(/*! ./types/com/atproto/server/resetPassword */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/resetPassword.js\"));\nexports.ComAtprotoServerRevokeAppPassword = __importStar(__webpack_require__(/*! ./types/com/atproto/server/revokeAppPassword */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/revokeAppPassword.js\"));\nexports.ComAtprotoServerUpdateEmail = __importStar(__webpack_require__(/*! ./types/com/atproto/server/updateEmail */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/updateEmail.js\"));\nexports.ComAtprotoSyncGetBlob = __importStar(__webpack_require__(/*! ./types/com/atproto/sync/getBlob */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getBlob.js\"));\nexports.ComAtprotoSyncGetBlocks = __importStar(__webpack_require__(/*! ./types/com/atproto/sync/getBlocks */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getBlocks.js\"));\nexports.ComAtprotoSyncGetCheckout = __importStar(__webpack_require__(/*! ./types/com/atproto/sync/getCheckout */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getCheckout.js\"));\nexports.ComAtprotoSyncGetHead = __importStar(__webpack_require__(/*! ./types/com/atproto/sync/getHead */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getHead.js\"));\nexports.ComAtprotoSyncGetLatestCommit = __importStar(__webpack_require__(/*! ./types/com/atproto/sync/getLatestCommit */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getLatestCommit.js\"));\nexports.ComAtprotoSyncGetRecord = __importStar(__webpack_require__(/*! ./types/com/atproto/sync/getRecord */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getRecord.js\"));\nexports.ComAtprotoSyncGetRepo = __importStar(__webpack_require__(/*! ./types/com/atproto/sync/getRepo */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getRepo.js\"));\nexports.ComAtprotoSyncGetRepoStatus = __importStar(__webpack_require__(/*! ./types/com/atproto/sync/getRepoStatus */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getRepoStatus.js\"));\nexports.ComAtprotoSyncListBlobs = __importStar(__webpack_require__(/*! ./types/com/atproto/sync/listBlobs */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/listBlobs.js\"));\nexports.ComAtprotoSyncListRepos = __importStar(__webpack_require__(/*! ./types/com/atproto/sync/listRepos */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/listRepos.js\"));\nexports.ComAtprotoSyncNotifyOfUpdate = __importStar(__webpack_require__(/*! ./types/com/atproto/sync/notifyOfUpdate */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/notifyOfUpdate.js\"));\nexports.ComAtprotoSyncRequestCrawl = __importStar(__webpack_require__(/*! ./types/com/atproto/sync/requestCrawl */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/requestCrawl.js\"));\nexports.ComAtprotoSyncSubscribeRepos = __importStar(__webpack_require__(/*! ./types/com/atproto/sync/subscribeRepos */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/subscribeRepos.js\"));\nexports.ComAtprotoTempAddReservedHandle = __importStar(__webpack_require__(/*! ./types/com/atproto/temp/addReservedHandle */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/temp/addReservedHandle.js\"));\nexports.ComAtprotoTempCheckSignupQueue = __importStar(__webpack_require__(/*! ./types/com/atproto/temp/checkSignupQueue */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/temp/checkSignupQueue.js\"));\nexports.ComAtprotoTempFetchLabels = __importStar(__webpack_require__(/*! ./types/com/atproto/temp/fetchLabels */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/temp/fetchLabels.js\"));\nexports.ComAtprotoTempRequestPhoneVerification = __importStar(__webpack_require__(/*! ./types/com/atproto/temp/requestPhoneVerification */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/temp/requestPhoneVerification.js\"));\nexports.AppBskyActorDefs = __importStar(__webpack_require__(/*! ./types/app/bsky/actor/defs */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/defs.js\"));\nexports.AppBskyActorGetPreferences = __importStar(__webpack_require__(/*! ./types/app/bsky/actor/getPreferences */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/getPreferences.js\"));\nexports.AppBskyActorGetProfile = __importStar(__webpack_require__(/*! ./types/app/bsky/actor/getProfile */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/getProfile.js\"));\nexports.AppBskyActorGetProfiles = __importStar(__webpack_require__(/*! ./types/app/bsky/actor/getProfiles */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/getProfiles.js\"));\nexports.AppBskyActorGetSuggestions = __importStar(__webpack_require__(/*! ./types/app/bsky/actor/getSuggestions */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/getSuggestions.js\"));\nexports.AppBskyActorProfile = __importStar(__webpack_require__(/*! ./types/app/bsky/actor/profile */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/profile.js\"));\nexports.AppBskyActorPutPreferences = __importStar(__webpack_require__(/*! ./types/app/bsky/actor/putPreferences */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/putPreferences.js\"));\nexports.AppBskyActorSearchActors = __importStar(__webpack_require__(/*! ./types/app/bsky/actor/searchActors */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/searchActors.js\"));\nexports.AppBskyActorSearchActorsTypeahead = __importStar(__webpack_require__(/*! ./types/app/bsky/actor/searchActorsTypeahead */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/searchActorsTypeahead.js\"));\nexports.AppBskyEmbedDefs = __importStar(__webpack_require__(/*! ./types/app/bsky/embed/defs */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/embed/defs.js\"));\nexports.AppBskyEmbedExternal = __importStar(__webpack_require__(/*! ./types/app/bsky/embed/external */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/embed/external.js\"));\nexports.AppBskyEmbedImages = __importStar(__webpack_require__(/*! ./types/app/bsky/embed/images */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/embed/images.js\"));\nexports.AppBskyEmbedRecord = __importStar(__webpack_require__(/*! ./types/app/bsky/embed/record */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/embed/record.js\"));\nexports.AppBskyEmbedRecordWithMedia = __importStar(__webpack_require__(/*! ./types/app/bsky/embed/recordWithMedia */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/embed/recordWithMedia.js\"));\nexports.AppBskyEmbedVideo = __importStar(__webpack_require__(/*! ./types/app/bsky/embed/video */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/embed/video.js\"));\nexports.AppBskyFeedDefs = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/defs */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/defs.js\"));\nexports.AppBskyFeedDescribeFeedGenerator = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/describeFeedGenerator */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/describeFeedGenerator.js\"));\nexports.AppBskyFeedGenerator = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/generator */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/generator.js\"));\nexports.AppBskyFeedGetActorFeeds = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/getActorFeeds */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getActorFeeds.js\"));\nexports.AppBskyFeedGetActorLikes = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/getActorLikes */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getActorLikes.js\"));\nexports.AppBskyFeedGetAuthorFeed = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/getAuthorFeed */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getAuthorFeed.js\"));\nexports.AppBskyFeedGetFeed = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/getFeed */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getFeed.js\"));\nexports.AppBskyFeedGetFeedGenerator = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/getFeedGenerator */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getFeedGenerator.js\"));\nexports.AppBskyFeedGetFeedGenerators = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/getFeedGenerators */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getFeedGenerators.js\"));\nexports.AppBskyFeedGetFeedSkeleton = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/getFeedSkeleton */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getFeedSkeleton.js\"));\nexports.AppBskyFeedGetLikes = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/getLikes */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getLikes.js\"));\nexports.AppBskyFeedGetListFeed = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/getListFeed */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getListFeed.js\"));\nexports.AppBskyFeedGetPostThread = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/getPostThread */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getPostThread.js\"));\nexports.AppBskyFeedGetPosts = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/getPosts */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getPosts.js\"));\nexports.AppBskyFeedGetQuotes = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/getQuotes */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getQuotes.js\"));\nexports.AppBskyFeedGetRepostedBy = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/getRepostedBy */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getRepostedBy.js\"));\nexports.AppBskyFeedGetSuggestedFeeds = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/getSuggestedFeeds */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getSuggestedFeeds.js\"));\nexports.AppBskyFeedGetTimeline = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/getTimeline */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getTimeline.js\"));\nexports.AppBskyFeedLike = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/like */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/like.js\"));\nexports.AppBskyFeedPost = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/post */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/post.js\"));\nexports.AppBskyFeedPostgate = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/postgate */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/postgate.js\"));\nexports.AppBskyFeedRepost = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/repost */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/repost.js\"));\nexports.AppBskyFeedSearchPosts = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/searchPosts */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/searchPosts.js\"));\nexports.AppBskyFeedSendInteractions = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/sendInteractions */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/sendInteractions.js\"));\nexports.AppBskyFeedThreadgate = __importStar(__webpack_require__(/*! ./types/app/bsky/feed/threadgate */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/threadgate.js\"));\nexports.AppBskyGraphBlock = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/block */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/block.js\"));\nexports.AppBskyGraphDefs = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/defs */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/defs.js\"));\nexports.AppBskyGraphFollow = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/follow */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/follow.js\"));\nexports.AppBskyGraphGetActorStarterPacks = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/getActorStarterPacks */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getActorStarterPacks.js\"));\nexports.AppBskyGraphGetBlocks = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/getBlocks */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getBlocks.js\"));\nexports.AppBskyGraphGetFollowers = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/getFollowers */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getFollowers.js\"));\nexports.AppBskyGraphGetFollows = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/getFollows */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getFollows.js\"));\nexports.AppBskyGraphGetKnownFollowers = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/getKnownFollowers */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getKnownFollowers.js\"));\nexports.AppBskyGraphGetList = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/getList */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getList.js\"));\nexports.AppBskyGraphGetListBlocks = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/getListBlocks */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getListBlocks.js\"));\nexports.AppBskyGraphGetListMutes = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/getListMutes */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getListMutes.js\"));\nexports.AppBskyGraphGetLists = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/getLists */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getLists.js\"));\nexports.AppBskyGraphGetMutes = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/getMutes */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getMutes.js\"));\nexports.AppBskyGraphGetRelationships = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/getRelationships */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getRelationships.js\"));\nexports.AppBskyGraphGetStarterPack = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/getStarterPack */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getStarterPack.js\"));\nexports.AppBskyGraphGetStarterPacks = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/getStarterPacks */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getStarterPacks.js\"));\nexports.AppBskyGraphGetSuggestedFollowsByActor = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/getSuggestedFollowsByActor */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getSuggestedFollowsByActor.js\"));\nexports.AppBskyGraphList = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/list */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/list.js\"));\nexports.AppBskyGraphListblock = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/listblock */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/listblock.js\"));\nexports.AppBskyGraphListitem = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/listitem */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/listitem.js\"));\nexports.AppBskyGraphMuteActor = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/muteActor */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/muteActor.js\"));\nexports.AppBskyGraphMuteActorList = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/muteActorList */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/muteActorList.js\"));\nexports.AppBskyGraphMuteThread = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/muteThread */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/muteThread.js\"));\nexports.AppBskyGraphSearchStarterPacks = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/searchStarterPacks */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/searchStarterPacks.js\"));\nexports.AppBskyGraphStarterpack = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/starterpack */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/starterpack.js\"));\nexports.AppBskyGraphUnmuteActor = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/unmuteActor */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/unmuteActor.js\"));\nexports.AppBskyGraphUnmuteActorList = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/unmuteActorList */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/unmuteActorList.js\"));\nexports.AppBskyGraphUnmuteThread = __importStar(__webpack_require__(/*! ./types/app/bsky/graph/unmuteThread */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/unmuteThread.js\"));\nexports.AppBskyLabelerDefs = __importStar(__webpack_require__(/*! ./types/app/bsky/labeler/defs */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/labeler/defs.js\"));\nexports.AppBskyLabelerGetServices = __importStar(__webpack_require__(/*! ./types/app/bsky/labeler/getServices */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/labeler/getServices.js\"));\nexports.AppBskyLabelerService = __importStar(__webpack_require__(/*! ./types/app/bsky/labeler/service */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/labeler/service.js\"));\nexports.AppBskyNotificationGetUnreadCount = __importStar(__webpack_require__(/*! ./types/app/bsky/notification/getUnreadCount */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/notification/getUnreadCount.js\"));\nexports.AppBskyNotificationListNotifications = __importStar(__webpack_require__(/*! ./types/app/bsky/notification/listNotifications */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/notification/listNotifications.js\"));\nexports.AppBskyNotificationPutPreferences = __importStar(__webpack_require__(/*! ./types/app/bsky/notification/putPreferences */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/notification/putPreferences.js\"));\nexports.AppBskyNotificationRegisterPush = __importStar(__webpack_require__(/*! ./types/app/bsky/notification/registerPush */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/notification/registerPush.js\"));\nexports.AppBskyNotificationUpdateSeen = __importStar(__webpack_require__(/*! ./types/app/bsky/notification/updateSeen */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/notification/updateSeen.js\"));\nexports.AppBskyRichtextFacet = __importStar(__webpack_require__(/*! ./types/app/bsky/richtext/facet */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/richtext/facet.js\"));\nexports.AppBskyUnspeccedDefs = __importStar(__webpack_require__(/*! ./types/app/bsky/unspecced/defs */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/defs.js\"));\nexports.AppBskyUnspeccedGetConfig = __importStar(__webpack_require__(/*! ./types/app/bsky/unspecced/getConfig */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/getConfig.js\"));\nexports.AppBskyUnspeccedGetPopularFeedGenerators = __importStar(__webpack_require__(/*! ./types/app/bsky/unspecced/getPopularFeedGenerators */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/getPopularFeedGenerators.js\"));\nexports.AppBskyUnspeccedGetSuggestionsSkeleton = __importStar(__webpack_require__(/*! ./types/app/bsky/unspecced/getSuggestionsSkeleton */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/getSuggestionsSkeleton.js\"));\nexports.AppBskyUnspeccedGetTaggedSuggestions = __importStar(__webpack_require__(/*! ./types/app/bsky/unspecced/getTaggedSuggestions */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/getTaggedSuggestions.js\"));\nexports.AppBskyUnspeccedGetTrendingTopics = __importStar(__webpack_require__(/*! ./types/app/bsky/unspecced/getTrendingTopics */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/getTrendingTopics.js\"));\nexports.AppBskyUnspeccedSearchActorsSkeleton = __importStar(__webpack_require__(/*! ./types/app/bsky/unspecced/searchActorsSkeleton */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/searchActorsSkeleton.js\"));\nexports.AppBskyUnspeccedSearchPostsSkeleton = __importStar(__webpack_require__(/*! ./types/app/bsky/unspecced/searchPostsSkeleton */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/searchPostsSkeleton.js\"));\nexports.AppBskyUnspeccedSearchStarterPacksSkeleton = __importStar(__webpack_require__(/*! ./types/app/bsky/unspecced/searchStarterPacksSkeleton */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/searchStarterPacksSkeleton.js\"));\nexports.AppBskyVideoDefs = __importStar(__webpack_require__(/*! ./types/app/bsky/video/defs */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/video/defs.js\"));\nexports.AppBskyVideoGetJobStatus = __importStar(__webpack_require__(/*! ./types/app/bsky/video/getJobStatus */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/video/getJobStatus.js\"));\nexports.AppBskyVideoGetUploadLimits = __importStar(__webpack_require__(/*! ./types/app/bsky/video/getUploadLimits */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/video/getUploadLimits.js\"));\nexports.AppBskyVideoUploadVideo = __importStar(__webpack_require__(/*! ./types/app/bsky/video/uploadVideo */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/video/uploadVideo.js\"));\nexports.ChatBskyActorDeclaration = __importStar(__webpack_require__(/*! ./types/chat/bsky/actor/declaration */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/actor/declaration.js\"));\nexports.ChatBskyActorDefs = __importStar(__webpack_require__(/*! ./types/chat/bsky/actor/defs */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/actor/defs.js\"));\nexports.ChatBskyActorDeleteAccount = __importStar(__webpack_require__(/*! ./types/chat/bsky/actor/deleteAccount */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/actor/deleteAccount.js\"));\nexports.ChatBskyActorExportAccountData = __importStar(__webpack_require__(/*! ./types/chat/bsky/actor/exportAccountData */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/actor/exportAccountData.js\"));\nexports.ChatBskyConvoDefs = __importStar(__webpack_require__(/*! ./types/chat/bsky/convo/defs */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/defs.js\"));\nexports.ChatBskyConvoDeleteMessageForSelf = __importStar(__webpack_require__(/*! ./types/chat/bsky/convo/deleteMessageForSelf */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/deleteMessageForSelf.js\"));\nexports.ChatBskyConvoGetConvo = __importStar(__webpack_require__(/*! ./types/chat/bsky/convo/getConvo */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/getConvo.js\"));\nexports.ChatBskyConvoGetConvoForMembers = __importStar(__webpack_require__(/*! ./types/chat/bsky/convo/getConvoForMembers */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/getConvoForMembers.js\"));\nexports.ChatBskyConvoGetLog = __importStar(__webpack_require__(/*! ./types/chat/bsky/convo/getLog */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/getLog.js\"));\nexports.ChatBskyConvoGetMessages = __importStar(__webpack_require__(/*! ./types/chat/bsky/convo/getMessages */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/getMessages.js\"));\nexports.ChatBskyConvoLeaveConvo = __importStar(__webpack_require__(/*! ./types/chat/bsky/convo/leaveConvo */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/leaveConvo.js\"));\nexports.ChatBskyConvoListConvos = __importStar(__webpack_require__(/*! ./types/chat/bsky/convo/listConvos */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/listConvos.js\"));\nexports.ChatBskyConvoMuteConvo = __importStar(__webpack_require__(/*! ./types/chat/bsky/convo/muteConvo */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/muteConvo.js\"));\nexports.ChatBskyConvoSendMessage = __importStar(__webpack_require__(/*! ./types/chat/bsky/convo/sendMessage */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/sendMessage.js\"));\nexports.ChatBskyConvoSendMessageBatch = __importStar(__webpack_require__(/*! ./types/chat/bsky/convo/sendMessageBatch */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/sendMessageBatch.js\"));\nexports.ChatBskyConvoUnmuteConvo = __importStar(__webpack_require__(/*! ./types/chat/bsky/convo/unmuteConvo */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/unmuteConvo.js\"));\nexports.ChatBskyConvoUpdateRead = __importStar(__webpack_require__(/*! ./types/chat/bsky/convo/updateRead */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/updateRead.js\"));\nexports.ChatBskyModerationGetActorMetadata = __importStar(__webpack_require__(/*! ./types/chat/bsky/moderation/getActorMetadata */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/moderation/getActorMetadata.js\"));\nexports.ChatBskyModerationGetMessageContext = __importStar(__webpack_require__(/*! ./types/chat/bsky/moderation/getMessageContext */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/moderation/getMessageContext.js\"));\nexports.ChatBskyModerationUpdateActorAccess = __importStar(__webpack_require__(/*! ./types/chat/bsky/moderation/updateActorAccess */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/moderation/updateActorAccess.js\"));\nexports.ToolsOzoneCommunicationCreateTemplate = __importStar(__webpack_require__(/*! ./types/tools/ozone/communication/createTemplate */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/communication/createTemplate.js\"));\nexports.ToolsOzoneCommunicationDefs = __importStar(__webpack_require__(/*! ./types/tools/ozone/communication/defs */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/communication/defs.js\"));\nexports.ToolsOzoneCommunicationDeleteTemplate = __importStar(__webpack_require__(/*! ./types/tools/ozone/communication/deleteTemplate */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/communication/deleteTemplate.js\"));\nexports.ToolsOzoneCommunicationListTemplates = __importStar(__webpack_require__(/*! ./types/tools/ozone/communication/listTemplates */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/communication/listTemplates.js\"));\nexports.ToolsOzoneCommunicationUpdateTemplate = __importStar(__webpack_require__(/*! ./types/tools/ozone/communication/updateTemplate */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/communication/updateTemplate.js\"));\nexports.ToolsOzoneModerationDefs = __importStar(__webpack_require__(/*! ./types/tools/ozone/moderation/defs */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/defs.js\"));\nexports.ToolsOzoneModerationEmitEvent = __importStar(__webpack_require__(/*! ./types/tools/ozone/moderation/emitEvent */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/emitEvent.js\"));\nexports.ToolsOzoneModerationGetEvent = __importStar(__webpack_require__(/*! ./types/tools/ozone/moderation/getEvent */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/getEvent.js\"));\nexports.ToolsOzoneModerationGetRecord = __importStar(__webpack_require__(/*! ./types/tools/ozone/moderation/getRecord */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/getRecord.js\"));\nexports.ToolsOzoneModerationGetRecords = __importStar(__webpack_require__(/*! ./types/tools/ozone/moderation/getRecords */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/getRecords.js\"));\nexports.ToolsOzoneModerationGetRepo = __importStar(__webpack_require__(/*! ./types/tools/ozone/moderation/getRepo */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/getRepo.js\"));\nexports.ToolsOzoneModerationGetRepos = __importStar(__webpack_require__(/*! ./types/tools/ozone/moderation/getRepos */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/getRepos.js\"));\nexports.ToolsOzoneModerationQueryEvents = __importStar(__webpack_require__(/*! ./types/tools/ozone/moderation/queryEvents */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/queryEvents.js\"));\nexports.ToolsOzoneModerationQueryStatuses = __importStar(__webpack_require__(/*! ./types/tools/ozone/moderation/queryStatuses */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/queryStatuses.js\"));\nexports.ToolsOzoneModerationSearchRepos = __importStar(__webpack_require__(/*! ./types/tools/ozone/moderation/searchRepos */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/searchRepos.js\"));\nexports.ToolsOzoneServerGetConfig = __importStar(__webpack_require__(/*! ./types/tools/ozone/server/getConfig */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/server/getConfig.js\"));\nexports.ToolsOzoneSetAddValues = __importStar(__webpack_require__(/*! ./types/tools/ozone/set/addValues */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/set/addValues.js\"));\nexports.ToolsOzoneSetDefs = __importStar(__webpack_require__(/*! ./types/tools/ozone/set/defs */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/set/defs.js\"));\nexports.ToolsOzoneSetDeleteSet = __importStar(__webpack_require__(/*! ./types/tools/ozone/set/deleteSet */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/set/deleteSet.js\"));\nexports.ToolsOzoneSetDeleteValues = __importStar(__webpack_require__(/*! ./types/tools/ozone/set/deleteValues */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/set/deleteValues.js\"));\nexports.ToolsOzoneSetGetValues = __importStar(__webpack_require__(/*! ./types/tools/ozone/set/getValues */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/set/getValues.js\"));\nexports.ToolsOzoneSetQuerySets = __importStar(__webpack_require__(/*! ./types/tools/ozone/set/querySets */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/set/querySets.js\"));\nexports.ToolsOzoneSetUpsertSet = __importStar(__webpack_require__(/*! ./types/tools/ozone/set/upsertSet */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/set/upsertSet.js\"));\nexports.ToolsOzoneSettingDefs = __importStar(__webpack_require__(/*! ./types/tools/ozone/setting/defs */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/setting/defs.js\"));\nexports.ToolsOzoneSettingListOptions = __importStar(__webpack_require__(/*! ./types/tools/ozone/setting/listOptions */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/setting/listOptions.js\"));\nexports.ToolsOzoneSettingRemoveOptions = __importStar(__webpack_require__(/*! ./types/tools/ozone/setting/removeOptions */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/setting/removeOptions.js\"));\nexports.ToolsOzoneSettingUpsertOption = __importStar(__webpack_require__(/*! ./types/tools/ozone/setting/upsertOption */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/setting/upsertOption.js\"));\nexports.ToolsOzoneSignatureDefs = __importStar(__webpack_require__(/*! ./types/tools/ozone/signature/defs */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/signature/defs.js\"));\nexports.ToolsOzoneSignatureFindCorrelation = __importStar(__webpack_require__(/*! ./types/tools/ozone/signature/findCorrelation */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/signature/findCorrelation.js\"));\nexports.ToolsOzoneSignatureFindRelatedAccounts = __importStar(__webpack_require__(/*! ./types/tools/ozone/signature/findRelatedAccounts */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/signature/findRelatedAccounts.js\"));\nexports.ToolsOzoneSignatureSearchAccounts = __importStar(__webpack_require__(/*! ./types/tools/ozone/signature/searchAccounts */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/signature/searchAccounts.js\"));\nexports.ToolsOzoneTeamAddMember = __importStar(__webpack_require__(/*! ./types/tools/ozone/team/addMember */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/team/addMember.js\"));\nexports.ToolsOzoneTeamDefs = __importStar(__webpack_require__(/*! ./types/tools/ozone/team/defs */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/team/defs.js\"));\nexports.ToolsOzoneTeamDeleteMember = __importStar(__webpack_require__(/*! ./types/tools/ozone/team/deleteMember */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/team/deleteMember.js\"));\nexports.ToolsOzoneTeamListMembers = __importStar(__webpack_require__(/*! ./types/tools/ozone/team/listMembers */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/team/listMembers.js\"));\nexports.ToolsOzoneTeamUpdateMember = __importStar(__webpack_require__(/*! ./types/tools/ozone/team/updateMember */ \"(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/team/updateMember.js\"));\nexports.COM_ATPROTO_MODERATION = {\n    DefsReasonSpam: 'com.atproto.moderation.defs#reasonSpam',\n    DefsReasonViolation: 'com.atproto.moderation.defs#reasonViolation',\n    DefsReasonMisleading: 'com.atproto.moderation.defs#reasonMisleading',\n    DefsReasonSexual: 'com.atproto.moderation.defs#reasonSexual',\n    DefsReasonRude: 'com.atproto.moderation.defs#reasonRude',\n    DefsReasonOther: 'com.atproto.moderation.defs#reasonOther',\n    DefsReasonAppeal: 'com.atproto.moderation.defs#reasonAppeal',\n};\nexports.APP_BSKY_FEED = {\n    DefsRequestLess: 'app.bsky.feed.defs#requestLess',\n    DefsRequestMore: 'app.bsky.feed.defs#requestMore',\n    DefsClickthroughItem: 'app.bsky.feed.defs#clickthroughItem',\n    DefsClickthroughAuthor: 'app.bsky.feed.defs#clickthroughAuthor',\n    DefsClickthroughReposter: 'app.bsky.feed.defs#clickthroughReposter',\n    DefsClickthroughEmbed: 'app.bsky.feed.defs#clickthroughEmbed',\n    DefsContentModeUnspecified: 'app.bsky.feed.defs#contentModeUnspecified',\n    DefsContentModeVideo: 'app.bsky.feed.defs#contentModeVideo',\n    DefsInteractionSeen: 'app.bsky.feed.defs#interactionSeen',\n    DefsInteractionLike: 'app.bsky.feed.defs#interactionLike',\n    DefsInteractionRepost: 'app.bsky.feed.defs#interactionRepost',\n    DefsInteractionReply: 'app.bsky.feed.defs#interactionReply',\n    DefsInteractionQuote: 'app.bsky.feed.defs#interactionQuote',\n    DefsInteractionShare: 'app.bsky.feed.defs#interactionShare',\n};\nexports.APP_BSKY_GRAPH = {\n    DefsModlist: 'app.bsky.graph.defs#modlist',\n    DefsCuratelist: 'app.bsky.graph.defs#curatelist',\n    DefsReferencelist: 'app.bsky.graph.defs#referencelist',\n};\nexports.TOOLS_OZONE_MODERATION = {\n    DefsReviewOpen: 'tools.ozone.moderation.defs#reviewOpen',\n    DefsReviewEscalated: 'tools.ozone.moderation.defs#reviewEscalated',\n    DefsReviewClosed: 'tools.ozone.moderation.defs#reviewClosed',\n    DefsReviewNone: 'tools.ozone.moderation.defs#reviewNone',\n};\nexports.TOOLS_OZONE_TEAM = {\n    DefsRoleAdmin: 'tools.ozone.team.defs#roleAdmin',\n    DefsRoleModerator: 'tools.ozone.team.defs#roleModerator',\n    DefsRoleTriage: 'tools.ozone.team.defs#roleTriage',\n};\nclass AtpBaseClient extends xrpc_1.XrpcClient {\n    constructor(options) {\n        super(options, lexicons_1.schemas);\n        Object.defineProperty(this, \"com\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"app\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"chat\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.com = new ComNS(this);\n        this.app = new AppNS(this);\n        this.chat = new ChatNS(this);\n        this.tools = new ToolsNS(this);\n    }\n    /** @deprecated use `this` instead */\n    get xrpc() {\n        return this;\n    }\n}\nexports.AtpBaseClient = AtpBaseClient;\nclass ComNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"atproto\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n        this.atproto = new ComAtprotoNS(client);\n    }\n}\nexports.ComNS = ComNS;\nclass ComAtprotoNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"admin\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"identity\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"label\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"lexicon\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"moderation\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"repo\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"server\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"sync\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"temp\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n        this.admin = new ComAtprotoAdminNS(client);\n        this.identity = new ComAtprotoIdentityNS(client);\n        this.label = new ComAtprotoLabelNS(client);\n        this.lexicon = new ComAtprotoLexiconNS(client);\n        this.moderation = new ComAtprotoModerationNS(client);\n        this.repo = new ComAtprotoRepoNS(client);\n        this.server = new ComAtprotoServerNS(client);\n        this.sync = new ComAtprotoSyncNS(client);\n        this.temp = new ComAtprotoTempNS(client);\n    }\n}\nexports.ComAtprotoNS = ComAtprotoNS;\nclass ComAtprotoAdminNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    deleteAccount(data, opts) {\n        return this._client.call('com.atproto.admin.deleteAccount', opts?.qp, data, opts);\n    }\n    disableAccountInvites(data, opts) {\n        return this._client.call('com.atproto.admin.disableAccountInvites', opts?.qp, data, opts);\n    }\n    disableInviteCodes(data, opts) {\n        return this._client.call('com.atproto.admin.disableInviteCodes', opts?.qp, data, opts);\n    }\n    enableAccountInvites(data, opts) {\n        return this._client.call('com.atproto.admin.enableAccountInvites', opts?.qp, data, opts);\n    }\n    getAccountInfo(params, opts) {\n        return this._client.call('com.atproto.admin.getAccountInfo', params, undefined, opts);\n    }\n    getAccountInfos(params, opts) {\n        return this._client.call('com.atproto.admin.getAccountInfos', params, undefined, opts);\n    }\n    getInviteCodes(params, opts) {\n        return this._client.call('com.atproto.admin.getInviteCodes', params, undefined, opts);\n    }\n    getSubjectStatus(params, opts) {\n        return this._client.call('com.atproto.admin.getSubjectStatus', params, undefined, opts);\n    }\n    searchAccounts(params, opts) {\n        return this._client.call('com.atproto.admin.searchAccounts', params, undefined, opts);\n    }\n    sendEmail(data, opts) {\n        return this._client.call('com.atproto.admin.sendEmail', opts?.qp, data, opts);\n    }\n    updateAccountEmail(data, opts) {\n        return this._client.call('com.atproto.admin.updateAccountEmail', opts?.qp, data, opts);\n    }\n    updateAccountHandle(data, opts) {\n        return this._client.call('com.atproto.admin.updateAccountHandle', opts?.qp, data, opts);\n    }\n    updateAccountPassword(data, opts) {\n        return this._client.call('com.atproto.admin.updateAccountPassword', opts?.qp, data, opts);\n    }\n    updateSubjectStatus(data, opts) {\n        return this._client.call('com.atproto.admin.updateSubjectStatus', opts?.qp, data, opts);\n    }\n}\nexports.ComAtprotoAdminNS = ComAtprotoAdminNS;\nclass ComAtprotoIdentityNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    getRecommendedDidCredentials(params, opts) {\n        return this._client.call('com.atproto.identity.getRecommendedDidCredentials', params, undefined, opts);\n    }\n    requestPlcOperationSignature(data, opts) {\n        return this._client.call('com.atproto.identity.requestPlcOperationSignature', opts?.qp, data, opts);\n    }\n    resolveHandle(params, opts) {\n        return this._client.call('com.atproto.identity.resolveHandle', params, undefined, opts);\n    }\n    signPlcOperation(data, opts) {\n        return this._client.call('com.atproto.identity.signPlcOperation', opts?.qp, data, opts);\n    }\n    submitPlcOperation(data, opts) {\n        return this._client.call('com.atproto.identity.submitPlcOperation', opts?.qp, data, opts);\n    }\n    updateHandle(data, opts) {\n        return this._client.call('com.atproto.identity.updateHandle', opts?.qp, data, opts);\n    }\n}\nexports.ComAtprotoIdentityNS = ComAtprotoIdentityNS;\nclass ComAtprotoLabelNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    queryLabels(params, opts) {\n        return this._client.call('com.atproto.label.queryLabels', params, undefined, opts);\n    }\n}\nexports.ComAtprotoLabelNS = ComAtprotoLabelNS;\nclass ComAtprotoLexiconNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n        this.schema = new SchemaRecord(client);\n    }\n}\nexports.ComAtprotoLexiconNS = ComAtprotoLexiconNS;\nclass SchemaRecord {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    async list(params) {\n        const res = await this._client.call('com.atproto.repo.listRecords', {\n            collection: 'com.atproto.lexicon.schema',\n            ...params,\n        });\n        return res.data;\n    }\n    async get(params) {\n        const res = await this._client.call('com.atproto.repo.getRecord', {\n            collection: 'com.atproto.lexicon.schema',\n            ...params,\n        });\n        return res.data;\n    }\n    async create(params, record, headers) {\n        record.$type = 'com.atproto.lexicon.schema';\n        const res = await this._client.call('com.atproto.repo.createRecord', undefined, { collection: 'com.atproto.lexicon.schema', ...params, record }, { encoding: 'application/json', headers });\n        return res.data;\n    }\n    async delete(params, headers) {\n        await this._client.call('com.atproto.repo.deleteRecord', undefined, { collection: 'com.atproto.lexicon.schema', ...params }, { headers });\n    }\n}\nexports.SchemaRecord = SchemaRecord;\nclass ComAtprotoModerationNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    createReport(data, opts) {\n        return this._client.call('com.atproto.moderation.createReport', opts?.qp, data, opts);\n    }\n}\nexports.ComAtprotoModerationNS = ComAtprotoModerationNS;\nclass ComAtprotoRepoNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    applyWrites(data, opts) {\n        return this._client\n            .call('com.atproto.repo.applyWrites', opts?.qp, data, opts)\n            .catch((e) => {\n            throw ComAtprotoRepoApplyWrites.toKnownErr(e);\n        });\n    }\n    createRecord(data, opts) {\n        return this._client\n            .call('com.atproto.repo.createRecord', opts?.qp, data, opts)\n            .catch((e) => {\n            throw ComAtprotoRepoCreateRecord.toKnownErr(e);\n        });\n    }\n    deleteRecord(data, opts) {\n        return this._client\n            .call('com.atproto.repo.deleteRecord', opts?.qp, data, opts)\n            .catch((e) => {\n            throw ComAtprotoRepoDeleteRecord.toKnownErr(e);\n        });\n    }\n    describeRepo(params, opts) {\n        return this._client.call('com.atproto.repo.describeRepo', params, undefined, opts);\n    }\n    getRecord(params, opts) {\n        return this._client\n            .call('com.atproto.repo.getRecord', params, undefined, opts)\n            .catch((e) => {\n            throw ComAtprotoRepoGetRecord.toKnownErr(e);\n        });\n    }\n    importRepo(data, opts) {\n        return this._client.call('com.atproto.repo.importRepo', opts?.qp, data, opts);\n    }\n    listMissingBlobs(params, opts) {\n        return this._client.call('com.atproto.repo.listMissingBlobs', params, undefined, opts);\n    }\n    listRecords(params, opts) {\n        return this._client.call('com.atproto.repo.listRecords', params, undefined, opts);\n    }\n    putRecord(data, opts) {\n        return this._client\n            .call('com.atproto.repo.putRecord', opts?.qp, data, opts)\n            .catch((e) => {\n            throw ComAtprotoRepoPutRecord.toKnownErr(e);\n        });\n    }\n    uploadBlob(data, opts) {\n        return this._client.call('com.atproto.repo.uploadBlob', opts?.qp, data, opts);\n    }\n}\nexports.ComAtprotoRepoNS = ComAtprotoRepoNS;\nclass ComAtprotoServerNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    activateAccount(data, opts) {\n        return this._client.call('com.atproto.server.activateAccount', opts?.qp, data, opts);\n    }\n    checkAccountStatus(params, opts) {\n        return this._client.call('com.atproto.server.checkAccountStatus', params, undefined, opts);\n    }\n    confirmEmail(data, opts) {\n        return this._client\n            .call('com.atproto.server.confirmEmail', opts?.qp, data, opts)\n            .catch((e) => {\n            throw ComAtprotoServerConfirmEmail.toKnownErr(e);\n        });\n    }\n    createAccount(data, opts) {\n        return this._client\n            .call('com.atproto.server.createAccount', opts?.qp, data, opts)\n            .catch((e) => {\n            throw ComAtprotoServerCreateAccount.toKnownErr(e);\n        });\n    }\n    createAppPassword(data, opts) {\n        return this._client\n            .call('com.atproto.server.createAppPassword', opts?.qp, data, opts)\n            .catch((e) => {\n            throw ComAtprotoServerCreateAppPassword.toKnownErr(e);\n        });\n    }\n    createInviteCode(data, opts) {\n        return this._client.call('com.atproto.server.createInviteCode', opts?.qp, data, opts);\n    }\n    createInviteCodes(data, opts) {\n        return this._client.call('com.atproto.server.createInviteCodes', opts?.qp, data, opts);\n    }\n    createSession(data, opts) {\n        return this._client\n            .call('com.atproto.server.createSession', opts?.qp, data, opts)\n            .catch((e) => {\n            throw ComAtprotoServerCreateSession.toKnownErr(e);\n        });\n    }\n    deactivateAccount(data, opts) {\n        return this._client.call('com.atproto.server.deactivateAccount', opts?.qp, data, opts);\n    }\n    deleteAccount(data, opts) {\n        return this._client\n            .call('com.atproto.server.deleteAccount', opts?.qp, data, opts)\n            .catch((e) => {\n            throw ComAtprotoServerDeleteAccount.toKnownErr(e);\n        });\n    }\n    deleteSession(data, opts) {\n        return this._client.call('com.atproto.server.deleteSession', opts?.qp, data, opts);\n    }\n    describeServer(params, opts) {\n        return this._client.call('com.atproto.server.describeServer', params, undefined, opts);\n    }\n    getAccountInviteCodes(params, opts) {\n        return this._client\n            .call('com.atproto.server.getAccountInviteCodes', params, undefined, opts)\n            .catch((e) => {\n            throw ComAtprotoServerGetAccountInviteCodes.toKnownErr(e);\n        });\n    }\n    getServiceAuth(params, opts) {\n        return this._client\n            .call('com.atproto.server.getServiceAuth', params, undefined, opts)\n            .catch((e) => {\n            throw ComAtprotoServerGetServiceAuth.toKnownErr(e);\n        });\n    }\n    getSession(params, opts) {\n        return this._client.call('com.atproto.server.getSession', params, undefined, opts);\n    }\n    listAppPasswords(params, opts) {\n        return this._client\n            .call('com.atproto.server.listAppPasswords', params, undefined, opts)\n            .catch((e) => {\n            throw ComAtprotoServerListAppPasswords.toKnownErr(e);\n        });\n    }\n    refreshSession(data, opts) {\n        return this._client\n            .call('com.atproto.server.refreshSession', opts?.qp, data, opts)\n            .catch((e) => {\n            throw ComAtprotoServerRefreshSession.toKnownErr(e);\n        });\n    }\n    requestAccountDelete(data, opts) {\n        return this._client.call('com.atproto.server.requestAccountDelete', opts?.qp, data, opts);\n    }\n    requestEmailConfirmation(data, opts) {\n        return this._client.call('com.atproto.server.requestEmailConfirmation', opts?.qp, data, opts);\n    }\n    requestEmailUpdate(data, opts) {\n        return this._client.call('com.atproto.server.requestEmailUpdate', opts?.qp, data, opts);\n    }\n    requestPasswordReset(data, opts) {\n        return this._client.call('com.atproto.server.requestPasswordReset', opts?.qp, data, opts);\n    }\n    reserveSigningKey(data, opts) {\n        return this._client.call('com.atproto.server.reserveSigningKey', opts?.qp, data, opts);\n    }\n    resetPassword(data, opts) {\n        return this._client\n            .call('com.atproto.server.resetPassword', opts?.qp, data, opts)\n            .catch((e) => {\n            throw ComAtprotoServerResetPassword.toKnownErr(e);\n        });\n    }\n    revokeAppPassword(data, opts) {\n        return this._client.call('com.atproto.server.revokeAppPassword', opts?.qp, data, opts);\n    }\n    updateEmail(data, opts) {\n        return this._client\n            .call('com.atproto.server.updateEmail', opts?.qp, data, opts)\n            .catch((e) => {\n            throw ComAtprotoServerUpdateEmail.toKnownErr(e);\n        });\n    }\n}\nexports.ComAtprotoServerNS = ComAtprotoServerNS;\nclass ComAtprotoSyncNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    getBlob(params, opts) {\n        return this._client\n            .call('com.atproto.sync.getBlob', params, undefined, opts)\n            .catch((e) => {\n            throw ComAtprotoSyncGetBlob.toKnownErr(e);\n        });\n    }\n    getBlocks(params, opts) {\n        return this._client\n            .call('com.atproto.sync.getBlocks', params, undefined, opts)\n            .catch((e) => {\n            throw ComAtprotoSyncGetBlocks.toKnownErr(e);\n        });\n    }\n    getCheckout(params, opts) {\n        return this._client.call('com.atproto.sync.getCheckout', params, undefined, opts);\n    }\n    getHead(params, opts) {\n        return this._client\n            .call('com.atproto.sync.getHead', params, undefined, opts)\n            .catch((e) => {\n            throw ComAtprotoSyncGetHead.toKnownErr(e);\n        });\n    }\n    getLatestCommit(params, opts) {\n        return this._client\n            .call('com.atproto.sync.getLatestCommit', params, undefined, opts)\n            .catch((e) => {\n            throw ComAtprotoSyncGetLatestCommit.toKnownErr(e);\n        });\n    }\n    getRecord(params, opts) {\n        return this._client\n            .call('com.atproto.sync.getRecord', params, undefined, opts)\n            .catch((e) => {\n            throw ComAtprotoSyncGetRecord.toKnownErr(e);\n        });\n    }\n    getRepo(params, opts) {\n        return this._client\n            .call('com.atproto.sync.getRepo', params, undefined, opts)\n            .catch((e) => {\n            throw ComAtprotoSyncGetRepo.toKnownErr(e);\n        });\n    }\n    getRepoStatus(params, opts) {\n        return this._client\n            .call('com.atproto.sync.getRepoStatus', params, undefined, opts)\n            .catch((e) => {\n            throw ComAtprotoSyncGetRepoStatus.toKnownErr(e);\n        });\n    }\n    listBlobs(params, opts) {\n        return this._client\n            .call('com.atproto.sync.listBlobs', params, undefined, opts)\n            .catch((e) => {\n            throw ComAtprotoSyncListBlobs.toKnownErr(e);\n        });\n    }\n    listRepos(params, opts) {\n        return this._client.call('com.atproto.sync.listRepos', params, undefined, opts);\n    }\n    notifyOfUpdate(data, opts) {\n        return this._client.call('com.atproto.sync.notifyOfUpdate', opts?.qp, data, opts);\n    }\n    requestCrawl(data, opts) {\n        return this._client.call('com.atproto.sync.requestCrawl', opts?.qp, data, opts);\n    }\n}\nexports.ComAtprotoSyncNS = ComAtprotoSyncNS;\nclass ComAtprotoTempNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    addReservedHandle(data, opts) {\n        return this._client.call('com.atproto.temp.addReservedHandle', opts?.qp, data, opts);\n    }\n    checkSignupQueue(params, opts) {\n        return this._client.call('com.atproto.temp.checkSignupQueue', params, undefined, opts);\n    }\n    fetchLabels(params, opts) {\n        return this._client.call('com.atproto.temp.fetchLabels', params, undefined, opts);\n    }\n    requestPhoneVerification(data, opts) {\n        return this._client.call('com.atproto.temp.requestPhoneVerification', opts?.qp, data, opts);\n    }\n}\nexports.ComAtprotoTempNS = ComAtprotoTempNS;\nclass AppNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"bsky\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n        this.bsky = new AppBskyNS(client);\n    }\n}\nexports.AppNS = AppNS;\nclass AppBskyNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"actor\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"embed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"feed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"graph\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"labeler\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"notification\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"richtext\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"unspecced\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"video\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n        this.actor = new AppBskyActorNS(client);\n        this.embed = new AppBskyEmbedNS(client);\n        this.feed = new AppBskyFeedNS(client);\n        this.graph = new AppBskyGraphNS(client);\n        this.labeler = new AppBskyLabelerNS(client);\n        this.notification = new AppBskyNotificationNS(client);\n        this.richtext = new AppBskyRichtextNS(client);\n        this.unspecced = new AppBskyUnspeccedNS(client);\n        this.video = new AppBskyVideoNS(client);\n    }\n}\nexports.AppBskyNS = AppBskyNS;\nclass AppBskyActorNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"profile\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n        this.profile = new ProfileRecord(client);\n    }\n    getPreferences(params, opts) {\n        return this._client.call('app.bsky.actor.getPreferences', params, undefined, opts);\n    }\n    getProfile(params, opts) {\n        return this._client.call('app.bsky.actor.getProfile', params, undefined, opts);\n    }\n    getProfiles(params, opts) {\n        return this._client.call('app.bsky.actor.getProfiles', params, undefined, opts);\n    }\n    getSuggestions(params, opts) {\n        return this._client.call('app.bsky.actor.getSuggestions', params, undefined, opts);\n    }\n    putPreferences(data, opts) {\n        return this._client.call('app.bsky.actor.putPreferences', opts?.qp, data, opts);\n    }\n    searchActors(params, opts) {\n        return this._client.call('app.bsky.actor.searchActors', params, undefined, opts);\n    }\n    searchActorsTypeahead(params, opts) {\n        return this._client.call('app.bsky.actor.searchActorsTypeahead', params, undefined, opts);\n    }\n}\nexports.AppBskyActorNS = AppBskyActorNS;\nclass ProfileRecord {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    async list(params) {\n        const res = await this._client.call('com.atproto.repo.listRecords', {\n            collection: 'app.bsky.actor.profile',\n            ...params,\n        });\n        return res.data;\n    }\n    async get(params) {\n        const res = await this._client.call('com.atproto.repo.getRecord', {\n            collection: 'app.bsky.actor.profile',\n            ...params,\n        });\n        return res.data;\n    }\n    async create(params, record, headers) {\n        record.$type = 'app.bsky.actor.profile';\n        const res = await this._client.call('com.atproto.repo.createRecord', undefined, { collection: 'app.bsky.actor.profile', rkey: 'self', ...params, record }, { encoding: 'application/json', headers });\n        return res.data;\n    }\n    async delete(params, headers) {\n        await this._client.call('com.atproto.repo.deleteRecord', undefined, { collection: 'app.bsky.actor.profile', ...params }, { headers });\n    }\n}\nexports.ProfileRecord = ProfileRecord;\nclass AppBskyEmbedNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n}\nexports.AppBskyEmbedNS = AppBskyEmbedNS;\nclass AppBskyFeedNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"generator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"like\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"post\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"postgate\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"repost\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"threadgate\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n        this.generator = new GeneratorRecord(client);\n        this.like = new LikeRecord(client);\n        this.post = new PostRecord(client);\n        this.postgate = new PostgateRecord(client);\n        this.repost = new RepostRecord(client);\n        this.threadgate = new ThreadgateRecord(client);\n    }\n    describeFeedGenerator(params, opts) {\n        return this._client.call('app.bsky.feed.describeFeedGenerator', params, undefined, opts);\n    }\n    getActorFeeds(params, opts) {\n        return this._client.call('app.bsky.feed.getActorFeeds', params, undefined, opts);\n    }\n    getActorLikes(params, opts) {\n        return this._client\n            .call('app.bsky.feed.getActorLikes', params, undefined, opts)\n            .catch((e) => {\n            throw AppBskyFeedGetActorLikes.toKnownErr(e);\n        });\n    }\n    getAuthorFeed(params, opts) {\n        return this._client\n            .call('app.bsky.feed.getAuthorFeed', params, undefined, opts)\n            .catch((e) => {\n            throw AppBskyFeedGetAuthorFeed.toKnownErr(e);\n        });\n    }\n    getFeed(params, opts) {\n        return this._client\n            .call('app.bsky.feed.getFeed', params, undefined, opts)\n            .catch((e) => {\n            throw AppBskyFeedGetFeed.toKnownErr(e);\n        });\n    }\n    getFeedGenerator(params, opts) {\n        return this._client.call('app.bsky.feed.getFeedGenerator', params, undefined, opts);\n    }\n    getFeedGenerators(params, opts) {\n        return this._client.call('app.bsky.feed.getFeedGenerators', params, undefined, opts);\n    }\n    getFeedSkeleton(params, opts) {\n        return this._client\n            .call('app.bsky.feed.getFeedSkeleton', params, undefined, opts)\n            .catch((e) => {\n            throw AppBskyFeedGetFeedSkeleton.toKnownErr(e);\n        });\n    }\n    getLikes(params, opts) {\n        return this._client.call('app.bsky.feed.getLikes', params, undefined, opts);\n    }\n    getListFeed(params, opts) {\n        return this._client\n            .call('app.bsky.feed.getListFeed', params, undefined, opts)\n            .catch((e) => {\n            throw AppBskyFeedGetListFeed.toKnownErr(e);\n        });\n    }\n    getPostThread(params, opts) {\n        return this._client\n            .call('app.bsky.feed.getPostThread', params, undefined, opts)\n            .catch((e) => {\n            throw AppBskyFeedGetPostThread.toKnownErr(e);\n        });\n    }\n    getPosts(params, opts) {\n        return this._client.call('app.bsky.feed.getPosts', params, undefined, opts);\n    }\n    getQuotes(params, opts) {\n        return this._client.call('app.bsky.feed.getQuotes', params, undefined, opts);\n    }\n    getRepostedBy(params, opts) {\n        return this._client.call('app.bsky.feed.getRepostedBy', params, undefined, opts);\n    }\n    getSuggestedFeeds(params, opts) {\n        return this._client.call('app.bsky.feed.getSuggestedFeeds', params, undefined, opts);\n    }\n    getTimeline(params, opts) {\n        return this._client.call('app.bsky.feed.getTimeline', params, undefined, opts);\n    }\n    searchPosts(params, opts) {\n        return this._client\n            .call('app.bsky.feed.searchPosts', params, undefined, opts)\n            .catch((e) => {\n            throw AppBskyFeedSearchPosts.toKnownErr(e);\n        });\n    }\n    sendInteractions(data, opts) {\n        return this._client.call('app.bsky.feed.sendInteractions', opts?.qp, data, opts);\n    }\n}\nexports.AppBskyFeedNS = AppBskyFeedNS;\nclass GeneratorRecord {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    async list(params) {\n        const res = await this._client.call('com.atproto.repo.listRecords', {\n            collection: 'app.bsky.feed.generator',\n            ...params,\n        });\n        return res.data;\n    }\n    async get(params) {\n        const res = await this._client.call('com.atproto.repo.getRecord', {\n            collection: 'app.bsky.feed.generator',\n            ...params,\n        });\n        return res.data;\n    }\n    async create(params, record, headers) {\n        record.$type = 'app.bsky.feed.generator';\n        const res = await this._client.call('com.atproto.repo.createRecord', undefined, { collection: 'app.bsky.feed.generator', ...params, record }, { encoding: 'application/json', headers });\n        return res.data;\n    }\n    async delete(params, headers) {\n        await this._client.call('com.atproto.repo.deleteRecord', undefined, { collection: 'app.bsky.feed.generator', ...params }, { headers });\n    }\n}\nexports.GeneratorRecord = GeneratorRecord;\nclass LikeRecord {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    async list(params) {\n        const res = await this._client.call('com.atproto.repo.listRecords', {\n            collection: 'app.bsky.feed.like',\n            ...params,\n        });\n        return res.data;\n    }\n    async get(params) {\n        const res = await this._client.call('com.atproto.repo.getRecord', {\n            collection: 'app.bsky.feed.like',\n            ...params,\n        });\n        return res.data;\n    }\n    async create(params, record, headers) {\n        record.$type = 'app.bsky.feed.like';\n        const res = await this._client.call('com.atproto.repo.createRecord', undefined, { collection: 'app.bsky.feed.like', ...params, record }, { encoding: 'application/json', headers });\n        return res.data;\n    }\n    async delete(params, headers) {\n        await this._client.call('com.atproto.repo.deleteRecord', undefined, { collection: 'app.bsky.feed.like', ...params }, { headers });\n    }\n}\nexports.LikeRecord = LikeRecord;\nclass PostRecord {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    async list(params) {\n        const res = await this._client.call('com.atproto.repo.listRecords', {\n            collection: 'app.bsky.feed.post',\n            ...params,\n        });\n        return res.data;\n    }\n    async get(params) {\n        const res = await this._client.call('com.atproto.repo.getRecord', {\n            collection: 'app.bsky.feed.post',\n            ...params,\n        });\n        return res.data;\n    }\n    async create(params, record, headers) {\n        record.$type = 'app.bsky.feed.post';\n        const res = await this._client.call('com.atproto.repo.createRecord', undefined, { collection: 'app.bsky.feed.post', ...params, record }, { encoding: 'application/json', headers });\n        return res.data;\n    }\n    async delete(params, headers) {\n        await this._client.call('com.atproto.repo.deleteRecord', undefined, { collection: 'app.bsky.feed.post', ...params }, { headers });\n    }\n}\nexports.PostRecord = PostRecord;\nclass PostgateRecord {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    async list(params) {\n        const res = await this._client.call('com.atproto.repo.listRecords', {\n            collection: 'app.bsky.feed.postgate',\n            ...params,\n        });\n        return res.data;\n    }\n    async get(params) {\n        const res = await this._client.call('com.atproto.repo.getRecord', {\n            collection: 'app.bsky.feed.postgate',\n            ...params,\n        });\n        return res.data;\n    }\n    async create(params, record, headers) {\n        record.$type = 'app.bsky.feed.postgate';\n        const res = await this._client.call('com.atproto.repo.createRecord', undefined, { collection: 'app.bsky.feed.postgate', ...params, record }, { encoding: 'application/json', headers });\n        return res.data;\n    }\n    async delete(params, headers) {\n        await this._client.call('com.atproto.repo.deleteRecord', undefined, { collection: 'app.bsky.feed.postgate', ...params }, { headers });\n    }\n}\nexports.PostgateRecord = PostgateRecord;\nclass RepostRecord {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    async list(params) {\n        const res = await this._client.call('com.atproto.repo.listRecords', {\n            collection: 'app.bsky.feed.repost',\n            ...params,\n        });\n        return res.data;\n    }\n    async get(params) {\n        const res = await this._client.call('com.atproto.repo.getRecord', {\n            collection: 'app.bsky.feed.repost',\n            ...params,\n        });\n        return res.data;\n    }\n    async create(params, record, headers) {\n        record.$type = 'app.bsky.feed.repost';\n        const res = await this._client.call('com.atproto.repo.createRecord', undefined, { collection: 'app.bsky.feed.repost', ...params, record }, { encoding: 'application/json', headers });\n        return res.data;\n    }\n    async delete(params, headers) {\n        await this._client.call('com.atproto.repo.deleteRecord', undefined, { collection: 'app.bsky.feed.repost', ...params }, { headers });\n    }\n}\nexports.RepostRecord = RepostRecord;\nclass ThreadgateRecord {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    async list(params) {\n        const res = await this._client.call('com.atproto.repo.listRecords', {\n            collection: 'app.bsky.feed.threadgate',\n            ...params,\n        });\n        return res.data;\n    }\n    async get(params) {\n        const res = await this._client.call('com.atproto.repo.getRecord', {\n            collection: 'app.bsky.feed.threadgate',\n            ...params,\n        });\n        return res.data;\n    }\n    async create(params, record, headers) {\n        record.$type = 'app.bsky.feed.threadgate';\n        const res = await this._client.call('com.atproto.repo.createRecord', undefined, { collection: 'app.bsky.feed.threadgate', ...params, record }, { encoding: 'application/json', headers });\n        return res.data;\n    }\n    async delete(params, headers) {\n        await this._client.call('com.atproto.repo.deleteRecord', undefined, { collection: 'app.bsky.feed.threadgate', ...params }, { headers });\n    }\n}\nexports.ThreadgateRecord = ThreadgateRecord;\nclass AppBskyGraphNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"block\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"follow\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"list\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"listblock\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"listitem\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"starterpack\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n        this.block = new BlockRecord(client);\n        this.follow = new FollowRecord(client);\n        this.list = new ListRecord(client);\n        this.listblock = new ListblockRecord(client);\n        this.listitem = new ListitemRecord(client);\n        this.starterpack = new StarterpackRecord(client);\n    }\n    getActorStarterPacks(params, opts) {\n        return this._client.call('app.bsky.graph.getActorStarterPacks', params, undefined, opts);\n    }\n    getBlocks(params, opts) {\n        return this._client.call('app.bsky.graph.getBlocks', params, undefined, opts);\n    }\n    getFollowers(params, opts) {\n        return this._client.call('app.bsky.graph.getFollowers', params, undefined, opts);\n    }\n    getFollows(params, opts) {\n        return this._client.call('app.bsky.graph.getFollows', params, undefined, opts);\n    }\n    getKnownFollowers(params, opts) {\n        return this._client.call('app.bsky.graph.getKnownFollowers', params, undefined, opts);\n    }\n    getList(params, opts) {\n        return this._client.call('app.bsky.graph.getList', params, undefined, opts);\n    }\n    getListBlocks(params, opts) {\n        return this._client.call('app.bsky.graph.getListBlocks', params, undefined, opts);\n    }\n    getListMutes(params, opts) {\n        return this._client.call('app.bsky.graph.getListMutes', params, undefined, opts);\n    }\n    getLists(params, opts) {\n        return this._client.call('app.bsky.graph.getLists', params, undefined, opts);\n    }\n    getMutes(params, opts) {\n        return this._client.call('app.bsky.graph.getMutes', params, undefined, opts);\n    }\n    getRelationships(params, opts) {\n        return this._client\n            .call('app.bsky.graph.getRelationships', params, undefined, opts)\n            .catch((e) => {\n            throw AppBskyGraphGetRelationships.toKnownErr(e);\n        });\n    }\n    getStarterPack(params, opts) {\n        return this._client.call('app.bsky.graph.getStarterPack', params, undefined, opts);\n    }\n    getStarterPacks(params, opts) {\n        return this._client.call('app.bsky.graph.getStarterPacks', params, undefined, opts);\n    }\n    getSuggestedFollowsByActor(params, opts) {\n        return this._client.call('app.bsky.graph.getSuggestedFollowsByActor', params, undefined, opts);\n    }\n    muteActor(data, opts) {\n        return this._client.call('app.bsky.graph.muteActor', opts?.qp, data, opts);\n    }\n    muteActorList(data, opts) {\n        return this._client.call('app.bsky.graph.muteActorList', opts?.qp, data, opts);\n    }\n    muteThread(data, opts) {\n        return this._client.call('app.bsky.graph.muteThread', opts?.qp, data, opts);\n    }\n    searchStarterPacks(params, opts) {\n        return this._client.call('app.bsky.graph.searchStarterPacks', params, undefined, opts);\n    }\n    unmuteActor(data, opts) {\n        return this._client.call('app.bsky.graph.unmuteActor', opts?.qp, data, opts);\n    }\n    unmuteActorList(data, opts) {\n        return this._client.call('app.bsky.graph.unmuteActorList', opts?.qp, data, opts);\n    }\n    unmuteThread(data, opts) {\n        return this._client.call('app.bsky.graph.unmuteThread', opts?.qp, data, opts);\n    }\n}\nexports.AppBskyGraphNS = AppBskyGraphNS;\nclass BlockRecord {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    async list(params) {\n        const res = await this._client.call('com.atproto.repo.listRecords', {\n            collection: 'app.bsky.graph.block',\n            ...params,\n        });\n        return res.data;\n    }\n    async get(params) {\n        const res = await this._client.call('com.atproto.repo.getRecord', {\n            collection: 'app.bsky.graph.block',\n            ...params,\n        });\n        return res.data;\n    }\n    async create(params, record, headers) {\n        record.$type = 'app.bsky.graph.block';\n        const res = await this._client.call('com.atproto.repo.createRecord', undefined, { collection: 'app.bsky.graph.block', ...params, record }, { encoding: 'application/json', headers });\n        return res.data;\n    }\n    async delete(params, headers) {\n        await this._client.call('com.atproto.repo.deleteRecord', undefined, { collection: 'app.bsky.graph.block', ...params }, { headers });\n    }\n}\nexports.BlockRecord = BlockRecord;\nclass FollowRecord {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    async list(params) {\n        const res = await this._client.call('com.atproto.repo.listRecords', {\n            collection: 'app.bsky.graph.follow',\n            ...params,\n        });\n        return res.data;\n    }\n    async get(params) {\n        const res = await this._client.call('com.atproto.repo.getRecord', {\n            collection: 'app.bsky.graph.follow',\n            ...params,\n        });\n        return res.data;\n    }\n    async create(params, record, headers) {\n        record.$type = 'app.bsky.graph.follow';\n        const res = await this._client.call('com.atproto.repo.createRecord', undefined, { collection: 'app.bsky.graph.follow', ...params, record }, { encoding: 'application/json', headers });\n        return res.data;\n    }\n    async delete(params, headers) {\n        await this._client.call('com.atproto.repo.deleteRecord', undefined, { collection: 'app.bsky.graph.follow', ...params }, { headers });\n    }\n}\nexports.FollowRecord = FollowRecord;\nclass ListRecord {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    async list(params) {\n        const res = await this._client.call('com.atproto.repo.listRecords', {\n            collection: 'app.bsky.graph.list',\n            ...params,\n        });\n        return res.data;\n    }\n    async get(params) {\n        const res = await this._client.call('com.atproto.repo.getRecord', {\n            collection: 'app.bsky.graph.list',\n            ...params,\n        });\n        return res.data;\n    }\n    async create(params, record, headers) {\n        record.$type = 'app.bsky.graph.list';\n        const res = await this._client.call('com.atproto.repo.createRecord', undefined, { collection: 'app.bsky.graph.list', ...params, record }, { encoding: 'application/json', headers });\n        return res.data;\n    }\n    async delete(params, headers) {\n        await this._client.call('com.atproto.repo.deleteRecord', undefined, { collection: 'app.bsky.graph.list', ...params }, { headers });\n    }\n}\nexports.ListRecord = ListRecord;\nclass ListblockRecord {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    async list(params) {\n        const res = await this._client.call('com.atproto.repo.listRecords', {\n            collection: 'app.bsky.graph.listblock',\n            ...params,\n        });\n        return res.data;\n    }\n    async get(params) {\n        const res = await this._client.call('com.atproto.repo.getRecord', {\n            collection: 'app.bsky.graph.listblock',\n            ...params,\n        });\n        return res.data;\n    }\n    async create(params, record, headers) {\n        record.$type = 'app.bsky.graph.listblock';\n        const res = await this._client.call('com.atproto.repo.createRecord', undefined, { collection: 'app.bsky.graph.listblock', ...params, record }, { encoding: 'application/json', headers });\n        return res.data;\n    }\n    async delete(params, headers) {\n        await this._client.call('com.atproto.repo.deleteRecord', undefined, { collection: 'app.bsky.graph.listblock', ...params }, { headers });\n    }\n}\nexports.ListblockRecord = ListblockRecord;\nclass ListitemRecord {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    async list(params) {\n        const res = await this._client.call('com.atproto.repo.listRecords', {\n            collection: 'app.bsky.graph.listitem',\n            ...params,\n        });\n        return res.data;\n    }\n    async get(params) {\n        const res = await this._client.call('com.atproto.repo.getRecord', {\n            collection: 'app.bsky.graph.listitem',\n            ...params,\n        });\n        return res.data;\n    }\n    async create(params, record, headers) {\n        record.$type = 'app.bsky.graph.listitem';\n        const res = await this._client.call('com.atproto.repo.createRecord', undefined, { collection: 'app.bsky.graph.listitem', ...params, record }, { encoding: 'application/json', headers });\n        return res.data;\n    }\n    async delete(params, headers) {\n        await this._client.call('com.atproto.repo.deleteRecord', undefined, { collection: 'app.bsky.graph.listitem', ...params }, { headers });\n    }\n}\nexports.ListitemRecord = ListitemRecord;\nclass StarterpackRecord {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    async list(params) {\n        const res = await this._client.call('com.atproto.repo.listRecords', {\n            collection: 'app.bsky.graph.starterpack',\n            ...params,\n        });\n        return res.data;\n    }\n    async get(params) {\n        const res = await this._client.call('com.atproto.repo.getRecord', {\n            collection: 'app.bsky.graph.starterpack',\n            ...params,\n        });\n        return res.data;\n    }\n    async create(params, record, headers) {\n        record.$type = 'app.bsky.graph.starterpack';\n        const res = await this._client.call('com.atproto.repo.createRecord', undefined, { collection: 'app.bsky.graph.starterpack', ...params, record }, { encoding: 'application/json', headers });\n        return res.data;\n    }\n    async delete(params, headers) {\n        await this._client.call('com.atproto.repo.deleteRecord', undefined, { collection: 'app.bsky.graph.starterpack', ...params }, { headers });\n    }\n}\nexports.StarterpackRecord = StarterpackRecord;\nclass AppBskyLabelerNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"service\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n        this.service = new ServiceRecord(client);\n    }\n    getServices(params, opts) {\n        return this._client.call('app.bsky.labeler.getServices', params, undefined, opts);\n    }\n}\nexports.AppBskyLabelerNS = AppBskyLabelerNS;\nclass ServiceRecord {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    async list(params) {\n        const res = await this._client.call('com.atproto.repo.listRecords', {\n            collection: 'app.bsky.labeler.service',\n            ...params,\n        });\n        return res.data;\n    }\n    async get(params) {\n        const res = await this._client.call('com.atproto.repo.getRecord', {\n            collection: 'app.bsky.labeler.service',\n            ...params,\n        });\n        return res.data;\n    }\n    async create(params, record, headers) {\n        record.$type = 'app.bsky.labeler.service';\n        const res = await this._client.call('com.atproto.repo.createRecord', undefined, {\n            collection: 'app.bsky.labeler.service',\n            rkey: 'self',\n            ...params,\n            record,\n        }, { encoding: 'application/json', headers });\n        return res.data;\n    }\n    async delete(params, headers) {\n        await this._client.call('com.atproto.repo.deleteRecord', undefined, { collection: 'app.bsky.labeler.service', ...params }, { headers });\n    }\n}\nexports.ServiceRecord = ServiceRecord;\nclass AppBskyNotificationNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    getUnreadCount(params, opts) {\n        return this._client.call('app.bsky.notification.getUnreadCount', params, undefined, opts);\n    }\n    listNotifications(params, opts) {\n        return this._client.call('app.bsky.notification.listNotifications', params, undefined, opts);\n    }\n    putPreferences(data, opts) {\n        return this._client.call('app.bsky.notification.putPreferences', opts?.qp, data, opts);\n    }\n    registerPush(data, opts) {\n        return this._client.call('app.bsky.notification.registerPush', opts?.qp, data, opts);\n    }\n    updateSeen(data, opts) {\n        return this._client.call('app.bsky.notification.updateSeen', opts?.qp, data, opts);\n    }\n}\nexports.AppBskyNotificationNS = AppBskyNotificationNS;\nclass AppBskyRichtextNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n}\nexports.AppBskyRichtextNS = AppBskyRichtextNS;\nclass AppBskyUnspeccedNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    getConfig(params, opts) {\n        return this._client.call('app.bsky.unspecced.getConfig', params, undefined, opts);\n    }\n    getPopularFeedGenerators(params, opts) {\n        return this._client.call('app.bsky.unspecced.getPopularFeedGenerators', params, undefined, opts);\n    }\n    getSuggestionsSkeleton(params, opts) {\n        return this._client.call('app.bsky.unspecced.getSuggestionsSkeleton', params, undefined, opts);\n    }\n    getTaggedSuggestions(params, opts) {\n        return this._client.call('app.bsky.unspecced.getTaggedSuggestions', params, undefined, opts);\n    }\n    getTrendingTopics(params, opts) {\n        return this._client.call('app.bsky.unspecced.getTrendingTopics', params, undefined, opts);\n    }\n    searchActorsSkeleton(params, opts) {\n        return this._client\n            .call('app.bsky.unspecced.searchActorsSkeleton', params, undefined, opts)\n            .catch((e) => {\n            throw AppBskyUnspeccedSearchActorsSkeleton.toKnownErr(e);\n        });\n    }\n    searchPostsSkeleton(params, opts) {\n        return this._client\n            .call('app.bsky.unspecced.searchPostsSkeleton', params, undefined, opts)\n            .catch((e) => {\n            throw AppBskyUnspeccedSearchPostsSkeleton.toKnownErr(e);\n        });\n    }\n    searchStarterPacksSkeleton(params, opts) {\n        return this._client\n            .call('app.bsky.unspecced.searchStarterPacksSkeleton', params, undefined, opts)\n            .catch((e) => {\n            throw AppBskyUnspeccedSearchStarterPacksSkeleton.toKnownErr(e);\n        });\n    }\n}\nexports.AppBskyUnspeccedNS = AppBskyUnspeccedNS;\nclass AppBskyVideoNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    getJobStatus(params, opts) {\n        return this._client.call('app.bsky.video.getJobStatus', params, undefined, opts);\n    }\n    getUploadLimits(params, opts) {\n        return this._client.call('app.bsky.video.getUploadLimits', params, undefined, opts);\n    }\n    uploadVideo(data, opts) {\n        return this._client.call('app.bsky.video.uploadVideo', opts?.qp, data, opts);\n    }\n}\nexports.AppBskyVideoNS = AppBskyVideoNS;\nclass ChatNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"bsky\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n        this.bsky = new ChatBskyNS(client);\n    }\n}\nexports.ChatNS = ChatNS;\nclass ChatBskyNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"actor\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"convo\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"moderation\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n        this.actor = new ChatBskyActorNS(client);\n        this.convo = new ChatBskyConvoNS(client);\n        this.moderation = new ChatBskyModerationNS(client);\n    }\n}\nexports.ChatBskyNS = ChatBskyNS;\nclass ChatBskyActorNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"declaration\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n        this.declaration = new DeclarationRecord(client);\n    }\n    deleteAccount(data, opts) {\n        return this._client.call('chat.bsky.actor.deleteAccount', opts?.qp, data, opts);\n    }\n    exportAccountData(params, opts) {\n        return this._client.call('chat.bsky.actor.exportAccountData', params, undefined, opts);\n    }\n}\nexports.ChatBskyActorNS = ChatBskyActorNS;\nclass DeclarationRecord {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    async list(params) {\n        const res = await this._client.call('com.atproto.repo.listRecords', {\n            collection: 'chat.bsky.actor.declaration',\n            ...params,\n        });\n        return res.data;\n    }\n    async get(params) {\n        const res = await this._client.call('com.atproto.repo.getRecord', {\n            collection: 'chat.bsky.actor.declaration',\n            ...params,\n        });\n        return res.data;\n    }\n    async create(params, record, headers) {\n        record.$type = 'chat.bsky.actor.declaration';\n        const res = await this._client.call('com.atproto.repo.createRecord', undefined, {\n            collection: 'chat.bsky.actor.declaration',\n            rkey: 'self',\n            ...params,\n            record,\n        }, { encoding: 'application/json', headers });\n        return res.data;\n    }\n    async delete(params, headers) {\n        await this._client.call('com.atproto.repo.deleteRecord', undefined, { collection: 'chat.bsky.actor.declaration', ...params }, { headers });\n    }\n}\nexports.DeclarationRecord = DeclarationRecord;\nclass ChatBskyConvoNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    deleteMessageForSelf(data, opts) {\n        return this._client.call('chat.bsky.convo.deleteMessageForSelf', opts?.qp, data, opts);\n    }\n    getConvo(params, opts) {\n        return this._client.call('chat.bsky.convo.getConvo', params, undefined, opts);\n    }\n    getConvoForMembers(params, opts) {\n        return this._client.call('chat.bsky.convo.getConvoForMembers', params, undefined, opts);\n    }\n    getLog(params, opts) {\n        return this._client.call('chat.bsky.convo.getLog', params, undefined, opts);\n    }\n    getMessages(params, opts) {\n        return this._client.call('chat.bsky.convo.getMessages', params, undefined, opts);\n    }\n    leaveConvo(data, opts) {\n        return this._client.call('chat.bsky.convo.leaveConvo', opts?.qp, data, opts);\n    }\n    listConvos(params, opts) {\n        return this._client.call('chat.bsky.convo.listConvos', params, undefined, opts);\n    }\n    muteConvo(data, opts) {\n        return this._client.call('chat.bsky.convo.muteConvo', opts?.qp, data, opts);\n    }\n    sendMessage(data, opts) {\n        return this._client.call('chat.bsky.convo.sendMessage', opts?.qp, data, opts);\n    }\n    sendMessageBatch(data, opts) {\n        return this._client.call('chat.bsky.convo.sendMessageBatch', opts?.qp, data, opts);\n    }\n    unmuteConvo(data, opts) {\n        return this._client.call('chat.bsky.convo.unmuteConvo', opts?.qp, data, opts);\n    }\n    updateRead(data, opts) {\n        return this._client.call('chat.bsky.convo.updateRead', opts?.qp, data, opts);\n    }\n}\nexports.ChatBskyConvoNS = ChatBskyConvoNS;\nclass ChatBskyModerationNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    getActorMetadata(params, opts) {\n        return this._client.call('chat.bsky.moderation.getActorMetadata', params, undefined, opts);\n    }\n    getMessageContext(params, opts) {\n        return this._client.call('chat.bsky.moderation.getMessageContext', params, undefined, opts);\n    }\n    updateActorAccess(data, opts) {\n        return this._client.call('chat.bsky.moderation.updateActorAccess', opts?.qp, data, opts);\n    }\n}\nexports.ChatBskyModerationNS = ChatBskyModerationNS;\nclass ToolsNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ozone\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n        this.ozone = new ToolsOzoneNS(client);\n    }\n}\nexports.ToolsNS = ToolsNS;\nclass ToolsOzoneNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"communication\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"moderation\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"server\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"set\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"setting\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"signature\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"team\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n        this.communication = new ToolsOzoneCommunicationNS(client);\n        this.moderation = new ToolsOzoneModerationNS(client);\n        this.server = new ToolsOzoneServerNS(client);\n        this.set = new ToolsOzoneSetNS(client);\n        this.setting = new ToolsOzoneSettingNS(client);\n        this.signature = new ToolsOzoneSignatureNS(client);\n        this.team = new ToolsOzoneTeamNS(client);\n    }\n}\nexports.ToolsOzoneNS = ToolsOzoneNS;\nclass ToolsOzoneCommunicationNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    createTemplate(data, opts) {\n        return this._client\n            .call('tools.ozone.communication.createTemplate', opts?.qp, data, opts)\n            .catch((e) => {\n            throw ToolsOzoneCommunicationCreateTemplate.toKnownErr(e);\n        });\n    }\n    deleteTemplate(data, opts) {\n        return this._client.call('tools.ozone.communication.deleteTemplate', opts?.qp, data, opts);\n    }\n    listTemplates(params, opts) {\n        return this._client.call('tools.ozone.communication.listTemplates', params, undefined, opts);\n    }\n    updateTemplate(data, opts) {\n        return this._client\n            .call('tools.ozone.communication.updateTemplate', opts?.qp, data, opts)\n            .catch((e) => {\n            throw ToolsOzoneCommunicationUpdateTemplate.toKnownErr(e);\n        });\n    }\n}\nexports.ToolsOzoneCommunicationNS = ToolsOzoneCommunicationNS;\nclass ToolsOzoneModerationNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    emitEvent(data, opts) {\n        return this._client\n            .call('tools.ozone.moderation.emitEvent', opts?.qp, data, opts)\n            .catch((e) => {\n            throw ToolsOzoneModerationEmitEvent.toKnownErr(e);\n        });\n    }\n    getEvent(params, opts) {\n        return this._client.call('tools.ozone.moderation.getEvent', params, undefined, opts);\n    }\n    getRecord(params, opts) {\n        return this._client\n            .call('tools.ozone.moderation.getRecord', params, undefined, opts)\n            .catch((e) => {\n            throw ToolsOzoneModerationGetRecord.toKnownErr(e);\n        });\n    }\n    getRecords(params, opts) {\n        return this._client.call('tools.ozone.moderation.getRecords', params, undefined, opts);\n    }\n    getRepo(params, opts) {\n        return this._client\n            .call('tools.ozone.moderation.getRepo', params, undefined, opts)\n            .catch((e) => {\n            throw ToolsOzoneModerationGetRepo.toKnownErr(e);\n        });\n    }\n    getRepos(params, opts) {\n        return this._client.call('tools.ozone.moderation.getRepos', params, undefined, opts);\n    }\n    queryEvents(params, opts) {\n        return this._client.call('tools.ozone.moderation.queryEvents', params, undefined, opts);\n    }\n    queryStatuses(params, opts) {\n        return this._client.call('tools.ozone.moderation.queryStatuses', params, undefined, opts);\n    }\n    searchRepos(params, opts) {\n        return this._client.call('tools.ozone.moderation.searchRepos', params, undefined, opts);\n    }\n}\nexports.ToolsOzoneModerationNS = ToolsOzoneModerationNS;\nclass ToolsOzoneServerNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    getConfig(params, opts) {\n        return this._client.call('tools.ozone.server.getConfig', params, undefined, opts);\n    }\n}\nexports.ToolsOzoneServerNS = ToolsOzoneServerNS;\nclass ToolsOzoneSetNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    addValues(data, opts) {\n        return this._client.call('tools.ozone.set.addValues', opts?.qp, data, opts);\n    }\n    deleteSet(data, opts) {\n        return this._client\n            .call('tools.ozone.set.deleteSet', opts?.qp, data, opts)\n            .catch((e) => {\n            throw ToolsOzoneSetDeleteSet.toKnownErr(e);\n        });\n    }\n    deleteValues(data, opts) {\n        return this._client\n            .call('tools.ozone.set.deleteValues', opts?.qp, data, opts)\n            .catch((e) => {\n            throw ToolsOzoneSetDeleteValues.toKnownErr(e);\n        });\n    }\n    getValues(params, opts) {\n        return this._client\n            .call('tools.ozone.set.getValues', params, undefined, opts)\n            .catch((e) => {\n            throw ToolsOzoneSetGetValues.toKnownErr(e);\n        });\n    }\n    querySets(params, opts) {\n        return this._client.call('tools.ozone.set.querySets', params, undefined, opts);\n    }\n    upsertSet(data, opts) {\n        return this._client.call('tools.ozone.set.upsertSet', opts?.qp, data, opts);\n    }\n}\nexports.ToolsOzoneSetNS = ToolsOzoneSetNS;\nclass ToolsOzoneSettingNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    listOptions(params, opts) {\n        return this._client.call('tools.ozone.setting.listOptions', params, undefined, opts);\n    }\n    removeOptions(data, opts) {\n        return this._client.call('tools.ozone.setting.removeOptions', opts?.qp, data, opts);\n    }\n    upsertOption(data, opts) {\n        return this._client.call('tools.ozone.setting.upsertOption', opts?.qp, data, opts);\n    }\n}\nexports.ToolsOzoneSettingNS = ToolsOzoneSettingNS;\nclass ToolsOzoneSignatureNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    findCorrelation(params, opts) {\n        return this._client.call('tools.ozone.signature.findCorrelation', params, undefined, opts);\n    }\n    findRelatedAccounts(params, opts) {\n        return this._client.call('tools.ozone.signature.findRelatedAccounts', params, undefined, opts);\n    }\n    searchAccounts(params, opts) {\n        return this._client.call('tools.ozone.signature.searchAccounts', params, undefined, opts);\n    }\n}\nexports.ToolsOzoneSignatureNS = ToolsOzoneSignatureNS;\nclass ToolsOzoneTeamNS {\n    constructor(client) {\n        Object.defineProperty(this, \"_client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._client = client;\n    }\n    addMember(data, opts) {\n        return this._client\n            .call('tools.ozone.team.addMember', opts?.qp, data, opts)\n            .catch((e) => {\n            throw ToolsOzoneTeamAddMember.toKnownErr(e);\n        });\n    }\n    deleteMember(data, opts) {\n        return this._client\n            .call('tools.ozone.team.deleteMember', opts?.qp, data, opts)\n            .catch((e) => {\n            throw ToolsOzoneTeamDeleteMember.toKnownErr(e);\n        });\n    }\n    listMembers(params, opts) {\n        return this._client.call('tools.ozone.team.listMembers', params, undefined, opts);\n    }\n    updateMember(data, opts) {\n        return this._client\n            .call('tools.ozone.team.updateMember', opts?.qp, data, opts)\n            .catch((e) => {\n            throw ToolsOzoneTeamUpdateMember.toKnownErr(e);\n        });\n    }\n}\nexports.ToolsOzoneTeamNS = ToolsOzoneTeamNS;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js":
/*!***********************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/lexicons.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ids = exports.lexicons = exports.schemas = exports.schemaDict = void 0;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst lexicon_1 = __webpack_require__(/*! @atproto/lexicon */ \"(ssr)/./node_modules/@atproto/lexicon/dist/index.js\");\nexports.schemaDict = {\n    ComAtprotoAdminDefs: {\n        lexicon: 1,\n        id: 'com.atproto.admin.defs',\n        defs: {\n            statusAttr: {\n                type: 'object',\n                required: ['applied'],\n                properties: {\n                    applied: {\n                        type: 'boolean',\n                    },\n                    ref: {\n                        type: 'string',\n                    },\n                },\n            },\n            accountView: {\n                type: 'object',\n                required: ['did', 'handle', 'indexedAt'],\n                properties: {\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                    handle: {\n                        type: 'string',\n                        format: 'handle',\n                    },\n                    email: {\n                        type: 'string',\n                    },\n                    relatedRecords: {\n                        type: 'array',\n                        items: {\n                            type: 'unknown',\n                        },\n                    },\n                    indexedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    invitedBy: {\n                        type: 'ref',\n                        ref: 'lex:com.atproto.server.defs#inviteCode',\n                    },\n                    invites: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.server.defs#inviteCode',\n                        },\n                    },\n                    invitesDisabled: {\n                        type: 'boolean',\n                    },\n                    emailConfirmedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    inviteNote: {\n                        type: 'string',\n                    },\n                    deactivatedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    threatSignatures: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.admin.defs#threatSignature',\n                        },\n                    },\n                },\n            },\n            repoRef: {\n                type: 'object',\n                required: ['did'],\n                properties: {\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                },\n            },\n            repoBlobRef: {\n                type: 'object',\n                required: ['did', 'cid'],\n                properties: {\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                    cid: {\n                        type: 'string',\n                        format: 'cid',\n                    },\n                    recordUri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                },\n            },\n            threatSignature: {\n                type: 'object',\n                required: ['property', 'value'],\n                properties: {\n                    property: {\n                        type: 'string',\n                    },\n                    value: {\n                        type: 'string',\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoAdminDeleteAccount: {\n        lexicon: 1,\n        id: 'com.atproto.admin.deleteAccount',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Delete a user account as an administrator.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['did'],\n                        properties: {\n                            did: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoAdminDisableAccountInvites: {\n        lexicon: 1,\n        id: 'com.atproto.admin.disableAccountInvites',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Disable an account from receiving new invite codes, but does not invalidate existing codes.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['account'],\n                        properties: {\n                            account: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                            note: {\n                                type: 'string',\n                                description: 'Optional reason for disabled invites.',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoAdminDisableInviteCodes: {\n        lexicon: 1,\n        id: 'com.atproto.admin.disableInviteCodes',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Disable some set of codes and/or all codes associated with a set of users.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        properties: {\n                            codes: {\n                                type: 'array',\n                                items: {\n                                    type: 'string',\n                                },\n                            },\n                            accounts: {\n                                type: 'array',\n                                items: {\n                                    type: 'string',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoAdminEnableAccountInvites: {\n        lexicon: 1,\n        id: 'com.atproto.admin.enableAccountInvites',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: \"Re-enable an account's ability to receive invite codes.\",\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['account'],\n                        properties: {\n                            account: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                            note: {\n                                type: 'string',\n                                description: 'Optional reason for enabled invites.',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoAdminGetAccountInfo: {\n        lexicon: 1,\n        id: 'com.atproto.admin.getAccountInfo',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get details about an account.',\n                parameters: {\n                    type: 'params',\n                    required: ['did'],\n                    properties: {\n                        did: {\n                            type: 'string',\n                            format: 'did',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'ref',\n                        ref: 'lex:com.atproto.admin.defs#accountView',\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoAdminGetAccountInfos: {\n        lexicon: 1,\n        id: 'com.atproto.admin.getAccountInfos',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get details about some accounts.',\n                parameters: {\n                    type: 'params',\n                    required: ['dids'],\n                    properties: {\n                        dids: {\n                            type: 'array',\n                            items: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['infos'],\n                        properties: {\n                            infos: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:com.atproto.admin.defs#accountView',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoAdminGetInviteCodes: {\n        lexicon: 1,\n        id: 'com.atproto.admin.getInviteCodes',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get an admin view of invite codes.',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        sort: {\n                            type: 'string',\n                            knownValues: ['recent', 'usage'],\n                            default: 'recent',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 500,\n                            default: 100,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['codes'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            codes: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:com.atproto.server.defs#inviteCode',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoAdminGetSubjectStatus: {\n        lexicon: 1,\n        id: 'com.atproto.admin.getSubjectStatus',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get the service-specific admin status of a subject (account, record, or blob).',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        did: {\n                            type: 'string',\n                            format: 'did',\n                        },\n                        uri: {\n                            type: 'string',\n                            format: 'at-uri',\n                        },\n                        blob: {\n                            type: 'string',\n                            format: 'cid',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['subject'],\n                        properties: {\n                            subject: {\n                                type: 'union',\n                                refs: [\n                                    'lex:com.atproto.admin.defs#repoRef',\n                                    'lex:com.atproto.repo.strongRef',\n                                    'lex:com.atproto.admin.defs#repoBlobRef',\n                                ],\n                            },\n                            takedown: {\n                                type: 'ref',\n                                ref: 'lex:com.atproto.admin.defs#statusAttr',\n                            },\n                            deactivated: {\n                                type: 'ref',\n                                ref: 'lex:com.atproto.admin.defs#statusAttr',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoAdminSearchAccounts: {\n        lexicon: 1,\n        id: 'com.atproto.admin.searchAccounts',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get list of accounts that matches your search query.',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        email: {\n                            type: 'string',\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['accounts'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            accounts: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:com.atproto.admin.defs#accountView',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoAdminSendEmail: {\n        lexicon: 1,\n        id: 'com.atproto.admin.sendEmail',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: \"Send email to a user's account email address.\",\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['recipientDid', 'content', 'senderDid'],\n                        properties: {\n                            recipientDid: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                            content: {\n                                type: 'string',\n                            },\n                            subject: {\n                                type: 'string',\n                            },\n                            senderDid: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                            comment: {\n                                type: 'string',\n                                description: \"Additional comment by the sender that won't be used in the email itself but helpful to provide more context for moderators/reviewers\",\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['sent'],\n                        properties: {\n                            sent: {\n                                type: 'boolean',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoAdminUpdateAccountEmail: {\n        lexicon: 1,\n        id: 'com.atproto.admin.updateAccountEmail',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: \"Administrative action to update an account's email.\",\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['account', 'email'],\n                        properties: {\n                            account: {\n                                type: 'string',\n                                format: 'at-identifier',\n                                description: 'The handle or DID of the repo.',\n                            },\n                            email: {\n                                type: 'string',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoAdminUpdateAccountHandle: {\n        lexicon: 1,\n        id: 'com.atproto.admin.updateAccountHandle',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: \"Administrative action to update an account's handle.\",\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['did', 'handle'],\n                        properties: {\n                            did: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                            handle: {\n                                type: 'string',\n                                format: 'handle',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoAdminUpdateAccountPassword: {\n        lexicon: 1,\n        id: 'com.atproto.admin.updateAccountPassword',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Update the password for a user account as an administrator.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['did', 'password'],\n                        properties: {\n                            did: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                            password: {\n                                type: 'string',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoAdminUpdateSubjectStatus: {\n        lexicon: 1,\n        id: 'com.atproto.admin.updateSubjectStatus',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Update the service-specific admin status of a subject (account, record, or blob).',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['subject'],\n                        properties: {\n                            subject: {\n                                type: 'union',\n                                refs: [\n                                    'lex:com.atproto.admin.defs#repoRef',\n                                    'lex:com.atproto.repo.strongRef',\n                                    'lex:com.atproto.admin.defs#repoBlobRef',\n                                ],\n                            },\n                            takedown: {\n                                type: 'ref',\n                                ref: 'lex:com.atproto.admin.defs#statusAttr',\n                            },\n                            deactivated: {\n                                type: 'ref',\n                                ref: 'lex:com.atproto.admin.defs#statusAttr',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['subject'],\n                        properties: {\n                            subject: {\n                                type: 'union',\n                                refs: [\n                                    'lex:com.atproto.admin.defs#repoRef',\n                                    'lex:com.atproto.repo.strongRef',\n                                    'lex:com.atproto.admin.defs#repoBlobRef',\n                                ],\n                            },\n                            takedown: {\n                                type: 'ref',\n                                ref: 'lex:com.atproto.admin.defs#statusAttr',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoIdentityGetRecommendedDidCredentials: {\n        lexicon: 1,\n        id: 'com.atproto.identity.getRecommendedDidCredentials',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Describe the credentials that should be included in the DID doc of an account that is migrating to this service.',\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        properties: {\n                            rotationKeys: {\n                                description: 'Recommended rotation keys for PLC dids. Should be undefined (or ignored) for did:webs.',\n                                type: 'array',\n                                items: {\n                                    type: 'string',\n                                },\n                            },\n                            alsoKnownAs: {\n                                type: 'array',\n                                items: {\n                                    type: 'string',\n                                },\n                            },\n                            verificationMethods: {\n                                type: 'unknown',\n                            },\n                            services: {\n                                type: 'unknown',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoIdentityRequestPlcOperationSignature: {\n        lexicon: 1,\n        id: 'com.atproto.identity.requestPlcOperationSignature',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Request an email with a code to in order to request a signed PLC operation. Requires Auth.',\n            },\n        },\n    },\n    ComAtprotoIdentityResolveHandle: {\n        lexicon: 1,\n        id: 'com.atproto.identity.resolveHandle',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Resolves a handle (domain name) to a DID.',\n                parameters: {\n                    type: 'params',\n                    required: ['handle'],\n                    properties: {\n                        handle: {\n                            type: 'string',\n                            format: 'handle',\n                            description: 'The handle to resolve.',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['did'],\n                        properties: {\n                            did: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoIdentitySignPlcOperation: {\n        lexicon: 1,\n        id: 'com.atproto.identity.signPlcOperation',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: \"Signs a PLC operation to update some value(s) in the requesting DID's document.\",\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        properties: {\n                            token: {\n                                description: 'A token received through com.atproto.identity.requestPlcOperationSignature',\n                                type: 'string',\n                            },\n                            rotationKeys: {\n                                type: 'array',\n                                items: {\n                                    type: 'string',\n                                },\n                            },\n                            alsoKnownAs: {\n                                type: 'array',\n                                items: {\n                                    type: 'string',\n                                },\n                            },\n                            verificationMethods: {\n                                type: 'unknown',\n                            },\n                            services: {\n                                type: 'unknown',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['operation'],\n                        properties: {\n                            operation: {\n                                type: 'unknown',\n                                description: 'A signed DID PLC operation.',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoIdentitySubmitPlcOperation: {\n        lexicon: 1,\n        id: 'com.atproto.identity.submitPlcOperation',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: \"Validates a PLC operation to ensure that it doesn't violate a service's constraints or get the identity into a bad state, then submits it to the PLC registry\",\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['operation'],\n                        properties: {\n                            operation: {\n                                type: 'unknown',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoIdentityUpdateHandle: {\n        lexicon: 1,\n        id: 'com.atproto.identity.updateHandle',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: \"Updates the current account's handle. Verifies handle validity, and updates did:plc document if necessary. Implemented by PDS, and requires auth.\",\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['handle'],\n                        properties: {\n                            handle: {\n                                type: 'string',\n                                format: 'handle',\n                                description: 'The new handle.',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoLabelDefs: {\n        lexicon: 1,\n        id: 'com.atproto.label.defs',\n        defs: {\n            label: {\n                type: 'object',\n                description: 'Metadata tag on an atproto resource (eg, repo or record).',\n                required: ['src', 'uri', 'val', 'cts'],\n                properties: {\n                    ver: {\n                        type: 'integer',\n                        description: 'The AT Protocol version of the label object.',\n                    },\n                    src: {\n                        type: 'string',\n                        format: 'did',\n                        description: 'DID of the actor who created this label.',\n                    },\n                    uri: {\n                        type: 'string',\n                        format: 'uri',\n                        description: 'AT URI of the record, repository (account), or other resource that this label applies to.',\n                    },\n                    cid: {\n                        type: 'string',\n                        format: 'cid',\n                        description: \"Optionally, CID specifying the specific version of 'uri' resource this label applies to.\",\n                    },\n                    val: {\n                        type: 'string',\n                        maxLength: 128,\n                        description: 'The short string name of the value or type of this label.',\n                    },\n                    neg: {\n                        type: 'boolean',\n                        description: 'If true, this is a negation label, overwriting a previous label.',\n                    },\n                    cts: {\n                        type: 'string',\n                        format: 'datetime',\n                        description: 'Timestamp when this label was created.',\n                    },\n                    exp: {\n                        type: 'string',\n                        format: 'datetime',\n                        description: 'Timestamp at which this label expires (no longer applies).',\n                    },\n                    sig: {\n                        type: 'bytes',\n                        description: 'Signature of dag-cbor encoded label.',\n                    },\n                },\n            },\n            selfLabels: {\n                type: 'object',\n                description: 'Metadata tags on an atproto record, published by the author within the record.',\n                required: ['values'],\n                properties: {\n                    values: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.label.defs#selfLabel',\n                        },\n                        maxLength: 10,\n                    },\n                },\n            },\n            selfLabel: {\n                type: 'object',\n                description: 'Metadata tag on an atproto record, published by the author within the record. Note that schemas should use #selfLabels, not #selfLabel.',\n                required: ['val'],\n                properties: {\n                    val: {\n                        type: 'string',\n                        maxLength: 128,\n                        description: 'The short string name of the value or type of this label.',\n                    },\n                },\n            },\n            labelValueDefinition: {\n                type: 'object',\n                description: 'Declares a label value and its expected interpretations and behaviors.',\n                required: ['identifier', 'severity', 'blurs', 'locales'],\n                properties: {\n                    identifier: {\n                        type: 'string',\n                        description: \"The value of the label being defined. Must only include lowercase ascii and the '-' character ([a-z-]+).\",\n                        maxLength: 100,\n                        maxGraphemes: 100,\n                    },\n                    severity: {\n                        type: 'string',\n                        description: \"How should a client visually convey this label? 'inform' means neutral and informational; 'alert' means negative and warning; 'none' means show nothing.\",\n                        knownValues: ['inform', 'alert', 'none'],\n                    },\n                    blurs: {\n                        type: 'string',\n                        description: \"What should this label hide in the UI, if applied? 'content' hides all of the target; 'media' hides the images/video/audio; 'none' hides nothing.\",\n                        knownValues: ['content', 'media', 'none'],\n                    },\n                    defaultSetting: {\n                        type: 'string',\n                        description: 'The default setting for this label.',\n                        knownValues: ['ignore', 'warn', 'hide'],\n                        default: 'warn',\n                    },\n                    adultOnly: {\n                        type: 'boolean',\n                        description: 'Does the user need to have adult content enabled in order to configure this label?',\n                    },\n                    locales: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.label.defs#labelValueDefinitionStrings',\n                        },\n                    },\n                },\n            },\n            labelValueDefinitionStrings: {\n                type: 'object',\n                description: 'Strings which describe the label in the UI, localized into a specific language.',\n                required: ['lang', 'name', 'description'],\n                properties: {\n                    lang: {\n                        type: 'string',\n                        description: 'The code of the language these strings are written in.',\n                        format: 'language',\n                    },\n                    name: {\n                        type: 'string',\n                        description: 'A short human-readable name for the label.',\n                        maxGraphemes: 64,\n                        maxLength: 640,\n                    },\n                    description: {\n                        type: 'string',\n                        description: 'A longer description of what the label means and why it might be applied.',\n                        maxGraphemes: 10000,\n                        maxLength: 100000,\n                    },\n                },\n            },\n            labelValue: {\n                type: 'string',\n                knownValues: [\n                    '!hide',\n                    '!no-promote',\n                    '!warn',\n                    '!no-unauthenticated',\n                    'dmca-violation',\n                    'doxxing',\n                    'porn',\n                    'sexual',\n                    'nudity',\n                    'nsfl',\n                    'gore',\n                ],\n            },\n        },\n    },\n    ComAtprotoLabelQueryLabels: {\n        lexicon: 1,\n        id: 'com.atproto.label.queryLabels',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Find labels relevant to the provided AT-URI patterns. Public endpoint for moderation services, though may return different or additional results with auth.',\n                parameters: {\n                    type: 'params',\n                    required: ['uriPatterns'],\n                    properties: {\n                        uriPatterns: {\n                            type: 'array',\n                            items: {\n                                type: 'string',\n                            },\n                            description: \"List of AT URI patterns to match (boolean 'OR'). Each may be a prefix (ending with '*'; will match inclusive of the string leading to '*'), or a full URI.\",\n                        },\n                        sources: {\n                            type: 'array',\n                            items: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                            description: 'Optional list of label sources (DIDs) to filter on.',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 250,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['labels'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            labels: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:com.atproto.label.defs#label',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoLabelSubscribeLabels: {\n        lexicon: 1,\n        id: 'com.atproto.label.subscribeLabels',\n        defs: {\n            main: {\n                type: 'subscription',\n                description: 'Subscribe to stream of labels (and negations). Public endpoint implemented by mod services. Uses same sequencing scheme as repo event stream.',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        cursor: {\n                            type: 'integer',\n                            description: 'The last known event seq number to backfill from.',\n                        },\n                    },\n                },\n                message: {\n                    schema: {\n                        type: 'union',\n                        refs: [\n                            'lex:com.atproto.label.subscribeLabels#labels',\n                            'lex:com.atproto.label.subscribeLabels#info',\n                        ],\n                    },\n                },\n                errors: [\n                    {\n                        name: 'FutureCursor',\n                    },\n                ],\n            },\n            labels: {\n                type: 'object',\n                required: ['seq', 'labels'],\n                properties: {\n                    seq: {\n                        type: 'integer',\n                    },\n                    labels: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.label.defs#label',\n                        },\n                    },\n                },\n            },\n            info: {\n                type: 'object',\n                required: ['name'],\n                properties: {\n                    name: {\n                        type: 'string',\n                        knownValues: ['OutdatedCursor'],\n                    },\n                    message: {\n                        type: 'string',\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoLexiconSchema: {\n        lexicon: 1,\n        id: 'com.atproto.lexicon.schema',\n        defs: {\n            main: {\n                type: 'record',\n                description: \"Representation of Lexicon schemas themselves, when published as atproto records. Note that the schema language is not defined in Lexicon; this meta schema currently only includes a single version field ('lexicon'). See the atproto specifications for description of the other expected top-level fields ('id', 'defs', etc).\",\n                key: 'nsid',\n                record: {\n                    type: 'object',\n                    required: ['lexicon'],\n                    properties: {\n                        lexicon: {\n                            type: 'integer',\n                            description: \"Indicates the 'version' of the Lexicon language. Must be '1' for the current atproto/Lexicon schema system.\",\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoModerationCreateReport: {\n        lexicon: 1,\n        id: 'com.atproto.moderation.createReport',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Submit a moderation report regarding an atproto account or record. Implemented by moderation services (with PDS proxying), and requires auth.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['reasonType', 'subject'],\n                        properties: {\n                            reasonType: {\n                                type: 'ref',\n                                description: 'Indicates the broad category of violation the report is for.',\n                                ref: 'lex:com.atproto.moderation.defs#reasonType',\n                            },\n                            reason: {\n                                type: 'string',\n                                maxGraphemes: 2000,\n                                maxLength: 20000,\n                                description: 'Additional context about the content and violation.',\n                            },\n                            subject: {\n                                type: 'union',\n                                refs: [\n                                    'lex:com.atproto.admin.defs#repoRef',\n                                    'lex:com.atproto.repo.strongRef',\n                                ],\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: [\n                            'id',\n                            'reasonType',\n                            'subject',\n                            'reportedBy',\n                            'createdAt',\n                        ],\n                        properties: {\n                            id: {\n                                type: 'integer',\n                            },\n                            reasonType: {\n                                type: 'ref',\n                                ref: 'lex:com.atproto.moderation.defs#reasonType',\n                            },\n                            reason: {\n                                type: 'string',\n                                maxGraphemes: 2000,\n                                maxLength: 20000,\n                            },\n                            subject: {\n                                type: 'union',\n                                refs: [\n                                    'lex:com.atproto.admin.defs#repoRef',\n                                    'lex:com.atproto.repo.strongRef',\n                                ],\n                            },\n                            reportedBy: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                            createdAt: {\n                                type: 'string',\n                                format: 'datetime',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoModerationDefs: {\n        lexicon: 1,\n        id: 'com.atproto.moderation.defs',\n        defs: {\n            reasonType: {\n                type: 'string',\n                knownValues: [\n                    'com.atproto.moderation.defs#reasonSpam',\n                    'com.atproto.moderation.defs#reasonViolation',\n                    'com.atproto.moderation.defs#reasonMisleading',\n                    'com.atproto.moderation.defs#reasonSexual',\n                    'com.atproto.moderation.defs#reasonRude',\n                    'com.atproto.moderation.defs#reasonOther',\n                    'com.atproto.moderation.defs#reasonAppeal',\n                ],\n            },\n            reasonSpam: {\n                type: 'token',\n                description: 'Spam: frequent unwanted promotion, replies, mentions',\n            },\n            reasonViolation: {\n                type: 'token',\n                description: 'Direct violation of server rules, laws, terms of service',\n            },\n            reasonMisleading: {\n                type: 'token',\n                description: 'Misleading identity, affiliation, or content',\n            },\n            reasonSexual: {\n                type: 'token',\n                description: 'Unwanted or mislabeled sexual content',\n            },\n            reasonRude: {\n                type: 'token',\n                description: 'Rude, harassing, explicit, or otherwise unwelcoming behavior',\n            },\n            reasonOther: {\n                type: 'token',\n                description: 'Other: reports not falling under another report category',\n            },\n            reasonAppeal: {\n                type: 'token',\n                description: 'Appeal: appeal a previously taken moderation action',\n            },\n        },\n    },\n    ComAtprotoRepoApplyWrites: {\n        lexicon: 1,\n        id: 'com.atproto.repo.applyWrites',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Apply a batch transaction of repository creates, updates, and deletes. Requires auth, implemented by PDS.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['repo', 'writes'],\n                        properties: {\n                            repo: {\n                                type: 'string',\n                                format: 'at-identifier',\n                                description: 'The handle or DID of the repo (aka, current account).',\n                            },\n                            validate: {\n                                type: 'boolean',\n                                description: \"Can be set to 'false' to skip Lexicon schema validation of record data across all operations, 'true' to require it, or leave unset to validate only for known Lexicons.\",\n                            },\n                            writes: {\n                                type: 'array',\n                                items: {\n                                    type: 'union',\n                                    refs: [\n                                        'lex:com.atproto.repo.applyWrites#create',\n                                        'lex:com.atproto.repo.applyWrites#update',\n                                        'lex:com.atproto.repo.applyWrites#delete',\n                                    ],\n                                    closed: true,\n                                },\n                            },\n                            swapCommit: {\n                                type: 'string',\n                                description: 'If provided, the entire operation will fail if the current repo commit CID does not match this value. Used to prevent conflicting repo mutations.',\n                                format: 'cid',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: [],\n                        properties: {\n                            commit: {\n                                type: 'ref',\n                                ref: 'lex:com.atproto.repo.defs#commitMeta',\n                            },\n                            results: {\n                                type: 'array',\n                                items: {\n                                    type: 'union',\n                                    refs: [\n                                        'lex:com.atproto.repo.applyWrites#createResult',\n                                        'lex:com.atproto.repo.applyWrites#updateResult',\n                                        'lex:com.atproto.repo.applyWrites#deleteResult',\n                                    ],\n                                    closed: true,\n                                },\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'InvalidSwap',\n                        description: \"Indicates that the 'swapCommit' parameter did not match current commit.\",\n                    },\n                ],\n            },\n            create: {\n                type: 'object',\n                description: 'Operation which creates a new record.',\n                required: ['collection', 'value'],\n                properties: {\n                    collection: {\n                        type: 'string',\n                        format: 'nsid',\n                    },\n                    rkey: {\n                        type: 'string',\n                        maxLength: 512,\n                    },\n                    value: {\n                        type: 'unknown',\n                    },\n                },\n            },\n            update: {\n                type: 'object',\n                description: 'Operation which updates an existing record.',\n                required: ['collection', 'rkey', 'value'],\n                properties: {\n                    collection: {\n                        type: 'string',\n                        format: 'nsid',\n                    },\n                    rkey: {\n                        type: 'string',\n                    },\n                    value: {\n                        type: 'unknown',\n                    },\n                },\n            },\n            delete: {\n                type: 'object',\n                description: 'Operation which deletes an existing record.',\n                required: ['collection', 'rkey'],\n                properties: {\n                    collection: {\n                        type: 'string',\n                        format: 'nsid',\n                    },\n                    rkey: {\n                        type: 'string',\n                    },\n                },\n            },\n            createResult: {\n                type: 'object',\n                required: ['uri', 'cid'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    cid: {\n                        type: 'string',\n                        format: 'cid',\n                    },\n                    validationStatus: {\n                        type: 'string',\n                        knownValues: ['valid', 'unknown'],\n                    },\n                },\n            },\n            updateResult: {\n                type: 'object',\n                required: ['uri', 'cid'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    cid: {\n                        type: 'string',\n                        format: 'cid',\n                    },\n                    validationStatus: {\n                        type: 'string',\n                        knownValues: ['valid', 'unknown'],\n                    },\n                },\n            },\n            deleteResult: {\n                type: 'object',\n                required: [],\n                properties: {},\n            },\n        },\n    },\n    ComAtprotoRepoCreateRecord: {\n        lexicon: 1,\n        id: 'com.atproto.repo.createRecord',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Create a single new repository record. Requires auth, implemented by PDS.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['repo', 'collection', 'record'],\n                        properties: {\n                            repo: {\n                                type: 'string',\n                                format: 'at-identifier',\n                                description: 'The handle or DID of the repo (aka, current account).',\n                            },\n                            collection: {\n                                type: 'string',\n                                format: 'nsid',\n                                description: 'The NSID of the record collection.',\n                            },\n                            rkey: {\n                                type: 'string',\n                                description: 'The Record Key.',\n                                maxLength: 512,\n                            },\n                            validate: {\n                                type: 'boolean',\n                                description: \"Can be set to 'false' to skip Lexicon schema validation of record data, 'true' to require it, or leave unset to validate only for known Lexicons.\",\n                            },\n                            record: {\n                                type: 'unknown',\n                                description: 'The record itself. Must contain a $type field.',\n                            },\n                            swapCommit: {\n                                type: 'string',\n                                format: 'cid',\n                                description: 'Compare and swap with the previous commit by CID.',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['uri', 'cid'],\n                        properties: {\n                            uri: {\n                                type: 'string',\n                                format: 'at-uri',\n                            },\n                            cid: {\n                                type: 'string',\n                                format: 'cid',\n                            },\n                            commit: {\n                                type: 'ref',\n                                ref: 'lex:com.atproto.repo.defs#commitMeta',\n                            },\n                            validationStatus: {\n                                type: 'string',\n                                knownValues: ['valid', 'unknown'],\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'InvalidSwap',\n                        description: \"Indicates that 'swapCommit' didn't match current repo commit.\",\n                    },\n                ],\n            },\n        },\n    },\n    ComAtprotoRepoDefs: {\n        lexicon: 1,\n        id: 'com.atproto.repo.defs',\n        defs: {\n            commitMeta: {\n                type: 'object',\n                required: ['cid', 'rev'],\n                properties: {\n                    cid: {\n                        type: 'string',\n                        format: 'cid',\n                    },\n                    rev: {\n                        type: 'string',\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoRepoDeleteRecord: {\n        lexicon: 1,\n        id: 'com.atproto.repo.deleteRecord',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: \"Delete a repository record, or ensure it doesn't exist. Requires auth, implemented by PDS.\",\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['repo', 'collection', 'rkey'],\n                        properties: {\n                            repo: {\n                                type: 'string',\n                                format: 'at-identifier',\n                                description: 'The handle or DID of the repo (aka, current account).',\n                            },\n                            collection: {\n                                type: 'string',\n                                format: 'nsid',\n                                description: 'The NSID of the record collection.',\n                            },\n                            rkey: {\n                                type: 'string',\n                                description: 'The Record Key.',\n                            },\n                            swapRecord: {\n                                type: 'string',\n                                format: 'cid',\n                                description: 'Compare and swap with the previous record by CID.',\n                            },\n                            swapCommit: {\n                                type: 'string',\n                                format: 'cid',\n                                description: 'Compare and swap with the previous commit by CID.',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        properties: {\n                            commit: {\n                                type: 'ref',\n                                ref: 'lex:com.atproto.repo.defs#commitMeta',\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'InvalidSwap',\n                    },\n                ],\n            },\n        },\n    },\n    ComAtprotoRepoDescribeRepo: {\n        lexicon: 1,\n        id: 'com.atproto.repo.describeRepo',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get information about an account and repository, including the list of collections. Does not require auth.',\n                parameters: {\n                    type: 'params',\n                    required: ['repo'],\n                    properties: {\n                        repo: {\n                            type: 'string',\n                            format: 'at-identifier',\n                            description: 'The handle or DID of the repo.',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: [\n                            'handle',\n                            'did',\n                            'didDoc',\n                            'collections',\n                            'handleIsCorrect',\n                        ],\n                        properties: {\n                            handle: {\n                                type: 'string',\n                                format: 'handle',\n                            },\n                            did: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                            didDoc: {\n                                type: 'unknown',\n                                description: 'The complete DID document for this account.',\n                            },\n                            collections: {\n                                type: 'array',\n                                description: 'List of all the collections (NSIDs) for which this repo contains at least one record.',\n                                items: {\n                                    type: 'string',\n                                    format: 'nsid',\n                                },\n                            },\n                            handleIsCorrect: {\n                                type: 'boolean',\n                                description: 'Indicates if handle is currently valid (resolves bi-directionally)',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoRepoGetRecord: {\n        lexicon: 1,\n        id: 'com.atproto.repo.getRecord',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get a single record from a repository. Does not require auth.',\n                parameters: {\n                    type: 'params',\n                    required: ['repo', 'collection', 'rkey'],\n                    properties: {\n                        repo: {\n                            type: 'string',\n                            format: 'at-identifier',\n                            description: 'The handle or DID of the repo.',\n                        },\n                        collection: {\n                            type: 'string',\n                            format: 'nsid',\n                            description: 'The NSID of the record collection.',\n                        },\n                        rkey: {\n                            type: 'string',\n                            description: 'The Record Key.',\n                        },\n                        cid: {\n                            type: 'string',\n                            format: 'cid',\n                            description: 'The CID of the version of the record. If not specified, then return the most recent version.',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['uri', 'value'],\n                        properties: {\n                            uri: {\n                                type: 'string',\n                                format: 'at-uri',\n                            },\n                            cid: {\n                                type: 'string',\n                                format: 'cid',\n                            },\n                            value: {\n                                type: 'unknown',\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'RecordNotFound',\n                    },\n                ],\n            },\n        },\n    },\n    ComAtprotoRepoImportRepo: {\n        lexicon: 1,\n        id: 'com.atproto.repo.importRepo',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Import a repo in the form of a CAR file. Requires Content-Length HTTP header to be set.',\n                input: {\n                    encoding: 'application/vnd.ipld.car',\n                },\n            },\n        },\n    },\n    ComAtprotoRepoListMissingBlobs: {\n        lexicon: 1,\n        id: 'com.atproto.repo.listMissingBlobs',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Returns a list of missing blobs for the requesting account. Intended to be used in the account migration flow.',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 1000,\n                            default: 500,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['blobs'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            blobs: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:com.atproto.repo.listMissingBlobs#recordBlob',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n            recordBlob: {\n                type: 'object',\n                required: ['cid', 'recordUri'],\n                properties: {\n                    cid: {\n                        type: 'string',\n                        format: 'cid',\n                    },\n                    recordUri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoRepoListRecords: {\n        lexicon: 1,\n        id: 'com.atproto.repo.listRecords',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'List a range of records in a repository, matching a specific collection. Does not require auth.',\n                parameters: {\n                    type: 'params',\n                    required: ['repo', 'collection'],\n                    properties: {\n                        repo: {\n                            type: 'string',\n                            format: 'at-identifier',\n                            description: 'The handle or DID of the repo.',\n                        },\n                        collection: {\n                            type: 'string',\n                            format: 'nsid',\n                            description: 'The NSID of the record type.',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                            description: 'The number of records to return.',\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                        rkeyStart: {\n                            type: 'string',\n                            description: 'DEPRECATED: The lowest sort-ordered rkey to start from (exclusive)',\n                        },\n                        rkeyEnd: {\n                            type: 'string',\n                            description: 'DEPRECATED: The highest sort-ordered rkey to stop at (exclusive)',\n                        },\n                        reverse: {\n                            type: 'boolean',\n                            description: 'Flag to reverse the order of the returned records.',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['records'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            records: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:com.atproto.repo.listRecords#record',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n            record: {\n                type: 'object',\n                required: ['uri', 'cid', 'value'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    cid: {\n                        type: 'string',\n                        format: 'cid',\n                    },\n                    value: {\n                        type: 'unknown',\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoRepoPutRecord: {\n        lexicon: 1,\n        id: 'com.atproto.repo.putRecord',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Write a repository record, creating or updating it as needed. Requires auth, implemented by PDS.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['repo', 'collection', 'rkey', 'record'],\n                        nullable: ['swapRecord'],\n                        properties: {\n                            repo: {\n                                type: 'string',\n                                format: 'at-identifier',\n                                description: 'The handle or DID of the repo (aka, current account).',\n                            },\n                            collection: {\n                                type: 'string',\n                                format: 'nsid',\n                                description: 'The NSID of the record collection.',\n                            },\n                            rkey: {\n                                type: 'string',\n                                description: 'The Record Key.',\n                                maxLength: 512,\n                            },\n                            validate: {\n                                type: 'boolean',\n                                description: \"Can be set to 'false' to skip Lexicon schema validation of record data, 'true' to require it, or leave unset to validate only for known Lexicons.\",\n                            },\n                            record: {\n                                type: 'unknown',\n                                description: 'The record to write.',\n                            },\n                            swapRecord: {\n                                type: 'string',\n                                format: 'cid',\n                                description: 'Compare and swap with the previous record by CID. WARNING: nullable and optional field; may cause problems with golang implementation',\n                            },\n                            swapCommit: {\n                                type: 'string',\n                                format: 'cid',\n                                description: 'Compare and swap with the previous commit by CID.',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['uri', 'cid'],\n                        properties: {\n                            uri: {\n                                type: 'string',\n                                format: 'at-uri',\n                            },\n                            cid: {\n                                type: 'string',\n                                format: 'cid',\n                            },\n                            commit: {\n                                type: 'ref',\n                                ref: 'lex:com.atproto.repo.defs#commitMeta',\n                            },\n                            validationStatus: {\n                                type: 'string',\n                                knownValues: ['valid', 'unknown'],\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'InvalidSwap',\n                    },\n                ],\n            },\n        },\n    },\n    ComAtprotoRepoStrongRef: {\n        lexicon: 1,\n        id: 'com.atproto.repo.strongRef',\n        description: 'A URI with a content-hash fingerprint.',\n        defs: {\n            main: {\n                type: 'object',\n                required: ['uri', 'cid'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    cid: {\n                        type: 'string',\n                        format: 'cid',\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoRepoUploadBlob: {\n        lexicon: 1,\n        id: 'com.atproto.repo.uploadBlob',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Upload a new blob, to be referenced from a repository record. The blob will be deleted if it is not referenced within a time window (eg, minutes). Blob restrictions (mimetype, size, etc) are enforced when the reference is created. Requires auth, implemented by PDS.',\n                input: {\n                    encoding: '*/*',\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['blob'],\n                        properties: {\n                            blob: {\n                                type: 'blob',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoServerActivateAccount: {\n        lexicon: 1,\n        id: 'com.atproto.server.activateAccount',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: \"Activates a currently deactivated account. Used to finalize account migration after the account's repo is imported and identity is setup.\",\n            },\n        },\n    },\n    ComAtprotoServerCheckAccountStatus: {\n        lexicon: 1,\n        id: 'com.atproto.server.checkAccountStatus',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Returns the status of an account, especially as pertaining to import or recovery. Can be called many times over the course of an account migration. Requires auth and can only be called pertaining to oneself.',\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: [\n                            'activated',\n                            'validDid',\n                            'repoCommit',\n                            'repoRev',\n                            'repoBlocks',\n                            'indexedRecords',\n                            'privateStateValues',\n                            'expectedBlobs',\n                            'importedBlobs',\n                        ],\n                        properties: {\n                            activated: {\n                                type: 'boolean',\n                            },\n                            validDid: {\n                                type: 'boolean',\n                            },\n                            repoCommit: {\n                                type: 'string',\n                                format: 'cid',\n                            },\n                            repoRev: {\n                                type: 'string',\n                            },\n                            repoBlocks: {\n                                type: 'integer',\n                            },\n                            indexedRecords: {\n                                type: 'integer',\n                            },\n                            privateStateValues: {\n                                type: 'integer',\n                            },\n                            expectedBlobs: {\n                                type: 'integer',\n                            },\n                            importedBlobs: {\n                                type: 'integer',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoServerConfirmEmail: {\n        lexicon: 1,\n        id: 'com.atproto.server.confirmEmail',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Confirm an email using a token from com.atproto.server.requestEmailConfirmation.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['email', 'token'],\n                        properties: {\n                            email: {\n                                type: 'string',\n                            },\n                            token: {\n                                type: 'string',\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'AccountNotFound',\n                    },\n                    {\n                        name: 'ExpiredToken',\n                    },\n                    {\n                        name: 'InvalidToken',\n                    },\n                    {\n                        name: 'InvalidEmail',\n                    },\n                ],\n            },\n        },\n    },\n    ComAtprotoServerCreateAccount: {\n        lexicon: 1,\n        id: 'com.atproto.server.createAccount',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Create an account. Implemented by PDS.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['handle'],\n                        properties: {\n                            email: {\n                                type: 'string',\n                            },\n                            handle: {\n                                type: 'string',\n                                format: 'handle',\n                                description: 'Requested handle for the account.',\n                            },\n                            did: {\n                                type: 'string',\n                                format: 'did',\n                                description: 'Pre-existing atproto DID, being imported to a new account.',\n                            },\n                            inviteCode: {\n                                type: 'string',\n                            },\n                            verificationCode: {\n                                type: 'string',\n                            },\n                            verificationPhone: {\n                                type: 'string',\n                            },\n                            password: {\n                                type: 'string',\n                                description: 'Initial account password. May need to meet instance-specific password strength requirements.',\n                            },\n                            recoveryKey: {\n                                type: 'string',\n                                description: 'DID PLC rotation key (aka, recovery key) to be included in PLC creation operation.',\n                            },\n                            plcOp: {\n                                type: 'unknown',\n                                description: 'A signed DID PLC operation to be submitted as part of importing an existing account to this instance. NOTE: this optional field may be updated when full account migration is implemented.',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        description: 'Account login session returned on successful account creation.',\n                        required: ['accessJwt', 'refreshJwt', 'handle', 'did'],\n                        properties: {\n                            accessJwt: {\n                                type: 'string',\n                            },\n                            refreshJwt: {\n                                type: 'string',\n                            },\n                            handle: {\n                                type: 'string',\n                                format: 'handle',\n                            },\n                            did: {\n                                type: 'string',\n                                format: 'did',\n                                description: 'The DID of the new account.',\n                            },\n                            didDoc: {\n                                type: 'unknown',\n                                description: 'Complete DID document.',\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'InvalidHandle',\n                    },\n                    {\n                        name: 'InvalidPassword',\n                    },\n                    {\n                        name: 'InvalidInviteCode',\n                    },\n                    {\n                        name: 'HandleNotAvailable',\n                    },\n                    {\n                        name: 'UnsupportedDomain',\n                    },\n                    {\n                        name: 'UnresolvableDid',\n                    },\n                    {\n                        name: 'IncompatibleDidDoc',\n                    },\n                ],\n            },\n        },\n    },\n    ComAtprotoServerCreateAppPassword: {\n        lexicon: 1,\n        id: 'com.atproto.server.createAppPassword',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Create an App Password.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['name'],\n                        properties: {\n                            name: {\n                                type: 'string',\n                                description: 'A short name for the App Password, to help distinguish them.',\n                            },\n                            privileged: {\n                                type: 'boolean',\n                                description: \"If an app password has 'privileged' access to possibly sensitive account state. Meant for use with trusted clients.\",\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'ref',\n                        ref: 'lex:com.atproto.server.createAppPassword#appPassword',\n                    },\n                },\n                errors: [\n                    {\n                        name: 'AccountTakedown',\n                    },\n                ],\n            },\n            appPassword: {\n                type: 'object',\n                required: ['name', 'password', 'createdAt'],\n                properties: {\n                    name: {\n                        type: 'string',\n                    },\n                    password: {\n                        type: 'string',\n                    },\n                    createdAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    privileged: {\n                        type: 'boolean',\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoServerCreateInviteCode: {\n        lexicon: 1,\n        id: 'com.atproto.server.createInviteCode',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Create an invite code.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['useCount'],\n                        properties: {\n                            useCount: {\n                                type: 'integer',\n                            },\n                            forAccount: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['code'],\n                        properties: {\n                            code: {\n                                type: 'string',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoServerCreateInviteCodes: {\n        lexicon: 1,\n        id: 'com.atproto.server.createInviteCodes',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Create invite codes.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['codeCount', 'useCount'],\n                        properties: {\n                            codeCount: {\n                                type: 'integer',\n                                default: 1,\n                            },\n                            useCount: {\n                                type: 'integer',\n                            },\n                            forAccounts: {\n                                type: 'array',\n                                items: {\n                                    type: 'string',\n                                    format: 'did',\n                                },\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['codes'],\n                        properties: {\n                            codes: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:com.atproto.server.createInviteCodes#accountCodes',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n            accountCodes: {\n                type: 'object',\n                required: ['account', 'codes'],\n                properties: {\n                    account: {\n                        type: 'string',\n                    },\n                    codes: {\n                        type: 'array',\n                        items: {\n                            type: 'string',\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoServerCreateSession: {\n        lexicon: 1,\n        id: 'com.atproto.server.createSession',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Create an authentication session.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['identifier', 'password'],\n                        properties: {\n                            identifier: {\n                                type: 'string',\n                                description: 'Handle or other identifier supported by the server for the authenticating user.',\n                            },\n                            password: {\n                                type: 'string',\n                            },\n                            authFactorToken: {\n                                type: 'string',\n                            },\n                            allowTakendown: {\n                                type: 'boolean',\n                                description: 'When true, instead of throwing error for takendown accounts, a valid response with a narrow scoped token will be returned',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['accessJwt', 'refreshJwt', 'handle', 'did'],\n                        properties: {\n                            accessJwt: {\n                                type: 'string',\n                            },\n                            refreshJwt: {\n                                type: 'string',\n                            },\n                            handle: {\n                                type: 'string',\n                                format: 'handle',\n                            },\n                            did: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                            didDoc: {\n                                type: 'unknown',\n                            },\n                            email: {\n                                type: 'string',\n                            },\n                            emailConfirmed: {\n                                type: 'boolean',\n                            },\n                            emailAuthFactor: {\n                                type: 'boolean',\n                            },\n                            active: {\n                                type: 'boolean',\n                            },\n                            status: {\n                                type: 'string',\n                                description: 'If active=false, this optional field indicates a possible reason for why the account is not active. If active=false and no status is supplied, then the host makes no claim for why the repository is no longer being hosted.',\n                                knownValues: ['takendown', 'suspended', 'deactivated'],\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'AccountTakedown',\n                    },\n                    {\n                        name: 'AuthFactorTokenRequired',\n                    },\n                ],\n            },\n        },\n    },\n    ComAtprotoServerDeactivateAccount: {\n        lexicon: 1,\n        id: 'com.atproto.server.deactivateAccount',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Deactivates a currently active account. Stops serving of repo, and future writes to repo until reactivated. Used to finalize account migration with the old host after the account has been activated on the new host.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        properties: {\n                            deleteAfter: {\n                                type: 'string',\n                                format: 'datetime',\n                                description: 'A recommendation to server as to how long they should hold onto the deactivated account before deleting.',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoServerDefs: {\n        lexicon: 1,\n        id: 'com.atproto.server.defs',\n        defs: {\n            inviteCode: {\n                type: 'object',\n                required: [\n                    'code',\n                    'available',\n                    'disabled',\n                    'forAccount',\n                    'createdBy',\n                    'createdAt',\n                    'uses',\n                ],\n                properties: {\n                    code: {\n                        type: 'string',\n                    },\n                    available: {\n                        type: 'integer',\n                    },\n                    disabled: {\n                        type: 'boolean',\n                    },\n                    forAccount: {\n                        type: 'string',\n                    },\n                    createdBy: {\n                        type: 'string',\n                    },\n                    createdAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    uses: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.server.defs#inviteCodeUse',\n                        },\n                    },\n                },\n            },\n            inviteCodeUse: {\n                type: 'object',\n                required: ['usedBy', 'usedAt'],\n                properties: {\n                    usedBy: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                    usedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoServerDeleteAccount: {\n        lexicon: 1,\n        id: 'com.atproto.server.deleteAccount',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: \"Delete an actor's account with a token and password. Can only be called after requesting a deletion token. Requires auth.\",\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['did', 'password', 'token'],\n                        properties: {\n                            did: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                            password: {\n                                type: 'string',\n                            },\n                            token: {\n                                type: 'string',\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'ExpiredToken',\n                    },\n                    {\n                        name: 'InvalidToken',\n                    },\n                ],\n            },\n        },\n    },\n    ComAtprotoServerDeleteSession: {\n        lexicon: 1,\n        id: 'com.atproto.server.deleteSession',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Delete the current session. Requires auth.',\n            },\n        },\n    },\n    ComAtprotoServerDescribeServer: {\n        lexicon: 1,\n        id: 'com.atproto.server.describeServer',\n        defs: {\n            main: {\n                type: 'query',\n                description: \"Describes the server's account creation requirements and capabilities. Implemented by PDS.\",\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['did', 'availableUserDomains'],\n                        properties: {\n                            inviteCodeRequired: {\n                                type: 'boolean',\n                                description: 'If true, an invite code must be supplied to create an account on this instance.',\n                            },\n                            phoneVerificationRequired: {\n                                type: 'boolean',\n                                description: 'If true, a phone verification token must be supplied to create an account on this instance.',\n                            },\n                            availableUserDomains: {\n                                type: 'array',\n                                description: 'List of domain suffixes that can be used in account handles.',\n                                items: {\n                                    type: 'string',\n                                },\n                            },\n                            links: {\n                                type: 'ref',\n                                description: 'URLs of service policy documents.',\n                                ref: 'lex:com.atproto.server.describeServer#links',\n                            },\n                            contact: {\n                                type: 'ref',\n                                description: 'Contact information',\n                                ref: 'lex:com.atproto.server.describeServer#contact',\n                            },\n                            did: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                        },\n                    },\n                },\n            },\n            links: {\n                type: 'object',\n                properties: {\n                    privacyPolicy: {\n                        type: 'string',\n                        format: 'uri',\n                    },\n                    termsOfService: {\n                        type: 'string',\n                        format: 'uri',\n                    },\n                },\n            },\n            contact: {\n                type: 'object',\n                properties: {\n                    email: {\n                        type: 'string',\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoServerGetAccountInviteCodes: {\n        lexicon: 1,\n        id: 'com.atproto.server.getAccountInviteCodes',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get all invite codes for the current account. Requires auth.',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        includeUsed: {\n                            type: 'boolean',\n                            default: true,\n                        },\n                        createAvailable: {\n                            type: 'boolean',\n                            default: true,\n                            description: \"Controls whether any new 'earned' but not 'created' invites should be created.\",\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['codes'],\n                        properties: {\n                            codes: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:com.atproto.server.defs#inviteCode',\n                                },\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'DuplicateCreate',\n                    },\n                ],\n            },\n        },\n    },\n    ComAtprotoServerGetServiceAuth: {\n        lexicon: 1,\n        id: 'com.atproto.server.getServiceAuth',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get a signed token on behalf of the requesting DID for the requested service.',\n                parameters: {\n                    type: 'params',\n                    required: ['aud'],\n                    properties: {\n                        aud: {\n                            type: 'string',\n                            format: 'did',\n                            description: 'The DID of the service that the token will be used to authenticate with',\n                        },\n                        exp: {\n                            type: 'integer',\n                            description: 'The time in Unix Epoch seconds that the JWT expires. Defaults to 60 seconds in the future. The service may enforce certain time bounds on tokens depending on the requested scope.',\n                        },\n                        lxm: {\n                            type: 'string',\n                            format: 'nsid',\n                            description: 'Lexicon (XRPC) method to bind the requested token to',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['token'],\n                        properties: {\n                            token: {\n                                type: 'string',\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'BadExpiration',\n                        description: 'Indicates that the requested expiration date is not a valid. May be in the past or may be reliant on the requested scopes.',\n                    },\n                ],\n            },\n        },\n    },\n    ComAtprotoServerGetSession: {\n        lexicon: 1,\n        id: 'com.atproto.server.getSession',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get information about the current auth session. Requires auth.',\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['handle', 'did'],\n                        properties: {\n                            handle: {\n                                type: 'string',\n                                format: 'handle',\n                            },\n                            did: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                            email: {\n                                type: 'string',\n                            },\n                            emailConfirmed: {\n                                type: 'boolean',\n                            },\n                            emailAuthFactor: {\n                                type: 'boolean',\n                            },\n                            didDoc: {\n                                type: 'unknown',\n                            },\n                            active: {\n                                type: 'boolean',\n                            },\n                            status: {\n                                type: 'string',\n                                description: 'If active=false, this optional field indicates a possible reason for why the account is not active. If active=false and no status is supplied, then the host makes no claim for why the repository is no longer being hosted.',\n                                knownValues: ['takendown', 'suspended', 'deactivated'],\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoServerListAppPasswords: {\n        lexicon: 1,\n        id: 'com.atproto.server.listAppPasswords',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'List all App Passwords.',\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['passwords'],\n                        properties: {\n                            passwords: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:com.atproto.server.listAppPasswords#appPassword',\n                                },\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'AccountTakedown',\n                    },\n                ],\n            },\n            appPassword: {\n                type: 'object',\n                required: ['name', 'createdAt'],\n                properties: {\n                    name: {\n                        type: 'string',\n                    },\n                    createdAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    privileged: {\n                        type: 'boolean',\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoServerRefreshSession: {\n        lexicon: 1,\n        id: 'com.atproto.server.refreshSession',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: \"Refresh an authentication session. Requires auth using the 'refreshJwt' (not the 'accessJwt').\",\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['accessJwt', 'refreshJwt', 'handle', 'did'],\n                        properties: {\n                            accessJwt: {\n                                type: 'string',\n                            },\n                            refreshJwt: {\n                                type: 'string',\n                            },\n                            handle: {\n                                type: 'string',\n                                format: 'handle',\n                            },\n                            did: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                            didDoc: {\n                                type: 'unknown',\n                            },\n                            active: {\n                                type: 'boolean',\n                            },\n                            status: {\n                                type: 'string',\n                                description: \"Hosting status of the account. If not specified, then assume 'active'.\",\n                                knownValues: ['takendown', 'suspended', 'deactivated'],\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'AccountTakedown',\n                    },\n                ],\n            },\n        },\n    },\n    ComAtprotoServerRequestAccountDelete: {\n        lexicon: 1,\n        id: 'com.atproto.server.requestAccountDelete',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Initiate a user account deletion via email.',\n            },\n        },\n    },\n    ComAtprotoServerRequestEmailConfirmation: {\n        lexicon: 1,\n        id: 'com.atproto.server.requestEmailConfirmation',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Request an email with a code to confirm ownership of email.',\n            },\n        },\n    },\n    ComAtprotoServerRequestEmailUpdate: {\n        lexicon: 1,\n        id: 'com.atproto.server.requestEmailUpdate',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Request a token in order to update email.',\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['tokenRequired'],\n                        properties: {\n                            tokenRequired: {\n                                type: 'boolean',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoServerRequestPasswordReset: {\n        lexicon: 1,\n        id: 'com.atproto.server.requestPasswordReset',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Initiate a user account password reset via email.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['email'],\n                        properties: {\n                            email: {\n                                type: 'string',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoServerReserveSigningKey: {\n        lexicon: 1,\n        id: 'com.atproto.server.reserveSigningKey',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Reserve a repo signing key, for use with account creation. Necessary so that a DID PLC update operation can be constructed during an account migraiton. Public and does not require auth; implemented by PDS. NOTE: this endpoint may change when full account migration is implemented.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        properties: {\n                            did: {\n                                type: 'string',\n                                format: 'did',\n                                description: 'The DID to reserve a key for.',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['signingKey'],\n                        properties: {\n                            signingKey: {\n                                type: 'string',\n                                description: 'The public key for the reserved signing key, in did:key serialization.',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoServerResetPassword: {\n        lexicon: 1,\n        id: 'com.atproto.server.resetPassword',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Reset a user account password using a token.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['token', 'password'],\n                        properties: {\n                            token: {\n                                type: 'string',\n                            },\n                            password: {\n                                type: 'string',\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'ExpiredToken',\n                    },\n                    {\n                        name: 'InvalidToken',\n                    },\n                ],\n            },\n        },\n    },\n    ComAtprotoServerRevokeAppPassword: {\n        lexicon: 1,\n        id: 'com.atproto.server.revokeAppPassword',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Revoke an App Password by name.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['name'],\n                        properties: {\n                            name: {\n                                type: 'string',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoServerUpdateEmail: {\n        lexicon: 1,\n        id: 'com.atproto.server.updateEmail',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: \"Update an account's email.\",\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['email'],\n                        properties: {\n                            email: {\n                                type: 'string',\n                            },\n                            emailAuthFactor: {\n                                type: 'boolean',\n                            },\n                            token: {\n                                type: 'string',\n                                description: \"Requires a token from com.atproto.sever.requestEmailUpdate if the account's email has been confirmed.\",\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'ExpiredToken',\n                    },\n                    {\n                        name: 'InvalidToken',\n                    },\n                    {\n                        name: 'TokenRequired',\n                    },\n                ],\n            },\n        },\n    },\n    ComAtprotoSyncGetBlob: {\n        lexicon: 1,\n        id: 'com.atproto.sync.getBlob',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get a blob associated with a given account. Returns the full blob as originally uploaded. Does not require auth; implemented by PDS.',\n                parameters: {\n                    type: 'params',\n                    required: ['did', 'cid'],\n                    properties: {\n                        did: {\n                            type: 'string',\n                            format: 'did',\n                            description: 'The DID of the account.',\n                        },\n                        cid: {\n                            type: 'string',\n                            format: 'cid',\n                            description: 'The CID of the blob to fetch',\n                        },\n                    },\n                },\n                output: {\n                    encoding: '*/*',\n                },\n                errors: [\n                    {\n                        name: 'BlobNotFound',\n                    },\n                    {\n                        name: 'RepoNotFound',\n                    },\n                    {\n                        name: 'RepoTakendown',\n                    },\n                    {\n                        name: 'RepoSuspended',\n                    },\n                    {\n                        name: 'RepoDeactivated',\n                    },\n                ],\n            },\n        },\n    },\n    ComAtprotoSyncGetBlocks: {\n        lexicon: 1,\n        id: 'com.atproto.sync.getBlocks',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get data blocks from a given repo, by CID. For example, intermediate MST nodes, or records. Does not require auth; implemented by PDS.',\n                parameters: {\n                    type: 'params',\n                    required: ['did', 'cids'],\n                    properties: {\n                        did: {\n                            type: 'string',\n                            format: 'did',\n                            description: 'The DID of the repo.',\n                        },\n                        cids: {\n                            type: 'array',\n                            items: {\n                                type: 'string',\n                                format: 'cid',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/vnd.ipld.car',\n                },\n                errors: [\n                    {\n                        name: 'BlockNotFound',\n                    },\n                    {\n                        name: 'RepoNotFound',\n                    },\n                    {\n                        name: 'RepoTakendown',\n                    },\n                    {\n                        name: 'RepoSuspended',\n                    },\n                    {\n                        name: 'RepoDeactivated',\n                    },\n                ],\n            },\n        },\n    },\n    ComAtprotoSyncGetCheckout: {\n        lexicon: 1,\n        id: 'com.atproto.sync.getCheckout',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'DEPRECATED - please use com.atproto.sync.getRepo instead',\n                parameters: {\n                    type: 'params',\n                    required: ['did'],\n                    properties: {\n                        did: {\n                            type: 'string',\n                            format: 'did',\n                            description: 'The DID of the repo.',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/vnd.ipld.car',\n                },\n            },\n        },\n    },\n    ComAtprotoSyncGetHead: {\n        lexicon: 1,\n        id: 'com.atproto.sync.getHead',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'DEPRECATED - please use com.atproto.sync.getLatestCommit instead',\n                parameters: {\n                    type: 'params',\n                    required: ['did'],\n                    properties: {\n                        did: {\n                            type: 'string',\n                            format: 'did',\n                            description: 'The DID of the repo.',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['root'],\n                        properties: {\n                            root: {\n                                type: 'string',\n                                format: 'cid',\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'HeadNotFound',\n                    },\n                ],\n            },\n        },\n    },\n    ComAtprotoSyncGetLatestCommit: {\n        lexicon: 1,\n        id: 'com.atproto.sync.getLatestCommit',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get the current commit CID & revision of the specified repo. Does not require auth.',\n                parameters: {\n                    type: 'params',\n                    required: ['did'],\n                    properties: {\n                        did: {\n                            type: 'string',\n                            format: 'did',\n                            description: 'The DID of the repo.',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['cid', 'rev'],\n                        properties: {\n                            cid: {\n                                type: 'string',\n                                format: 'cid',\n                            },\n                            rev: {\n                                type: 'string',\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'RepoNotFound',\n                    },\n                    {\n                        name: 'RepoTakendown',\n                    },\n                    {\n                        name: 'RepoSuspended',\n                    },\n                    {\n                        name: 'RepoDeactivated',\n                    },\n                ],\n            },\n        },\n    },\n    ComAtprotoSyncGetRecord: {\n        lexicon: 1,\n        id: 'com.atproto.sync.getRecord',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get data blocks needed to prove the existence or non-existence of record in the current version of repo. Does not require auth.',\n                parameters: {\n                    type: 'params',\n                    required: ['did', 'collection', 'rkey'],\n                    properties: {\n                        did: {\n                            type: 'string',\n                            format: 'did',\n                            description: 'The DID of the repo.',\n                        },\n                        collection: {\n                            type: 'string',\n                            format: 'nsid',\n                        },\n                        rkey: {\n                            type: 'string',\n                            description: 'Record Key',\n                        },\n                        commit: {\n                            type: 'string',\n                            format: 'cid',\n                            description: 'DEPRECATED: referenced a repo commit by CID, and retrieved record as of that commit',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/vnd.ipld.car',\n                },\n                errors: [\n                    {\n                        name: 'RecordNotFound',\n                    },\n                    {\n                        name: 'RepoNotFound',\n                    },\n                    {\n                        name: 'RepoTakendown',\n                    },\n                    {\n                        name: 'RepoSuspended',\n                    },\n                    {\n                        name: 'RepoDeactivated',\n                    },\n                ],\n            },\n        },\n    },\n    ComAtprotoSyncGetRepo: {\n        lexicon: 1,\n        id: 'com.atproto.sync.getRepo',\n        defs: {\n            main: {\n                type: 'query',\n                description: \"Download a repository export as CAR file. Optionally only a 'diff' since a previous revision. Does not require auth; implemented by PDS.\",\n                parameters: {\n                    type: 'params',\n                    required: ['did'],\n                    properties: {\n                        did: {\n                            type: 'string',\n                            format: 'did',\n                            description: 'The DID of the repo.',\n                        },\n                        since: {\n                            type: 'string',\n                            description: \"The revision ('rev') of the repo to create a diff from.\",\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/vnd.ipld.car',\n                },\n                errors: [\n                    {\n                        name: 'RepoNotFound',\n                    },\n                    {\n                        name: 'RepoTakendown',\n                    },\n                    {\n                        name: 'RepoSuspended',\n                    },\n                    {\n                        name: 'RepoDeactivated',\n                    },\n                ],\n            },\n        },\n    },\n    ComAtprotoSyncGetRepoStatus: {\n        lexicon: 1,\n        id: 'com.atproto.sync.getRepoStatus',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get the hosting status for a repository, on this server. Expected to be implemented by PDS and Relay.',\n                parameters: {\n                    type: 'params',\n                    required: ['did'],\n                    properties: {\n                        did: {\n                            type: 'string',\n                            format: 'did',\n                            description: 'The DID of the repo.',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['did', 'active'],\n                        properties: {\n                            did: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                            active: {\n                                type: 'boolean',\n                            },\n                            status: {\n                                type: 'string',\n                                description: 'If active=false, this optional field indicates a possible reason for why the account is not active. If active=false and no status is supplied, then the host makes no claim for why the repository is no longer being hosted.',\n                                knownValues: ['takendown', 'suspended', 'deactivated'],\n                            },\n                            rev: {\n                                type: 'string',\n                                description: 'Optional field, the current rev of the repo, if active=true',\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'RepoNotFound',\n                    },\n                ],\n            },\n        },\n    },\n    ComAtprotoSyncListBlobs: {\n        lexicon: 1,\n        id: 'com.atproto.sync.listBlobs',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'List blob CIDs for an account, since some repo revision. Does not require auth; implemented by PDS.',\n                parameters: {\n                    type: 'params',\n                    required: ['did'],\n                    properties: {\n                        did: {\n                            type: 'string',\n                            format: 'did',\n                            description: 'The DID of the repo.',\n                        },\n                        since: {\n                            type: 'string',\n                            description: 'Optional revision of the repo to list blobs since.',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 1000,\n                            default: 500,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['cids'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            cids: {\n                                type: 'array',\n                                items: {\n                                    type: 'string',\n                                    format: 'cid',\n                                },\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'RepoNotFound',\n                    },\n                    {\n                        name: 'RepoTakendown',\n                    },\n                    {\n                        name: 'RepoSuspended',\n                    },\n                    {\n                        name: 'RepoDeactivated',\n                    },\n                ],\n            },\n        },\n    },\n    ComAtprotoSyncListRepos: {\n        lexicon: 1,\n        id: 'com.atproto.sync.listRepos',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Enumerates all the DID, rev, and commit CID for all repos hosted by this service. Does not require auth; implemented by PDS and Relay.',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 1000,\n                            default: 500,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['repos'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            repos: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:com.atproto.sync.listRepos#repo',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n            repo: {\n                type: 'object',\n                required: ['did', 'head', 'rev'],\n                properties: {\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                    head: {\n                        type: 'string',\n                        format: 'cid',\n                        description: 'Current repo commit CID',\n                    },\n                    rev: {\n                        type: 'string',\n                    },\n                    active: {\n                        type: 'boolean',\n                    },\n                    status: {\n                        type: 'string',\n                        description: 'If active=false, this optional field indicates a possible reason for why the account is not active. If active=false and no status is supplied, then the host makes no claim for why the repository is no longer being hosted.',\n                        knownValues: ['takendown', 'suspended', 'deactivated'],\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoSyncNotifyOfUpdate: {\n        lexicon: 1,\n        id: 'com.atproto.sync.notifyOfUpdate',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Notify a crawling service of a recent update, and that crawling should resume. Intended use is after a gap between repo stream events caused the crawling service to disconnect. Does not require auth; implemented by Relay.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['hostname'],\n                        properties: {\n                            hostname: {\n                                type: 'string',\n                                description: 'Hostname of the current service (usually a PDS) that is notifying of update.',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoSyncRequestCrawl: {\n        lexicon: 1,\n        id: 'com.atproto.sync.requestCrawl',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Request a service to persistently crawl hosted repos. Expected use is new PDS instances declaring their existence to Relays. Does not require auth.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['hostname'],\n                        properties: {\n                            hostname: {\n                                type: 'string',\n                                description: 'Hostname of the current service (eg, PDS) that is requesting to be crawled.',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoSyncSubscribeRepos: {\n        lexicon: 1,\n        id: 'com.atproto.sync.subscribeRepos',\n        defs: {\n            main: {\n                type: 'subscription',\n                description: 'Repository event stream, aka Firehose endpoint. Outputs repo commits with diff data, and identity update events, for all repositories on the current server. See the atproto specifications for details around stream sequencing, repo versioning, CAR diff format, and more. Public and does not require auth; implemented by PDS and Relay.',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        cursor: {\n                            type: 'integer',\n                            description: 'The last known event seq number to backfill from.',\n                        },\n                    },\n                },\n                message: {\n                    schema: {\n                        type: 'union',\n                        refs: [\n                            'lex:com.atproto.sync.subscribeRepos#commit',\n                            'lex:com.atproto.sync.subscribeRepos#identity',\n                            'lex:com.atproto.sync.subscribeRepos#account',\n                            'lex:com.atproto.sync.subscribeRepos#handle',\n                            'lex:com.atproto.sync.subscribeRepos#migrate',\n                            'lex:com.atproto.sync.subscribeRepos#tombstone',\n                            'lex:com.atproto.sync.subscribeRepos#info',\n                        ],\n                    },\n                },\n                errors: [\n                    {\n                        name: 'FutureCursor',\n                    },\n                    {\n                        name: 'ConsumerTooSlow',\n                        description: 'If the consumer of the stream can not keep up with events, and a backlog gets too large, the server will drop the connection.',\n                    },\n                ],\n            },\n            commit: {\n                type: 'object',\n                description: 'Represents an update of repository state. Note that empty commits are allowed, which include no repo data changes, but an update to rev and signature.',\n                required: [\n                    'seq',\n                    'rebase',\n                    'tooBig',\n                    'repo',\n                    'commit',\n                    'rev',\n                    'since',\n                    'blocks',\n                    'ops',\n                    'blobs',\n                    'time',\n                ],\n                nullable: ['prev', 'since'],\n                properties: {\n                    seq: {\n                        type: 'integer',\n                        description: 'The stream sequence number of this message.',\n                    },\n                    rebase: {\n                        type: 'boolean',\n                        description: 'DEPRECATED -- unused',\n                    },\n                    tooBig: {\n                        type: 'boolean',\n                        description: 'Indicates that this commit contained too many ops, or data size was too large. Consumers will need to make a separate request to get missing data.',\n                    },\n                    repo: {\n                        type: 'string',\n                        format: 'did',\n                        description: 'The repo this event comes from.',\n                    },\n                    commit: {\n                        type: 'cid-link',\n                        description: 'Repo commit object CID.',\n                    },\n                    prev: {\n                        type: 'cid-link',\n                        description: 'DEPRECATED -- unused. WARNING -- nullable and optional; stick with optional to ensure golang interoperability.',\n                    },\n                    rev: {\n                        type: 'string',\n                        description: 'The rev of the emitted commit. Note that this information is also in the commit object included in blocks, unless this is a tooBig event.',\n                    },\n                    since: {\n                        type: 'string',\n                        description: 'The rev of the last emitted commit from this repo (if any).',\n                    },\n                    blocks: {\n                        type: 'bytes',\n                        description: 'CAR file containing relevant blocks, as a diff since the previous repo state.',\n                        maxLength: 1000000,\n                    },\n                    ops: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.sync.subscribeRepos#repoOp',\n                            description: 'List of repo mutation operations in this commit (eg, records created, updated, or deleted).',\n                        },\n                        maxLength: 200,\n                    },\n                    blobs: {\n                        type: 'array',\n                        items: {\n                            type: 'cid-link',\n                            description: 'List of new blobs (by CID) referenced by records in this commit.',\n                        },\n                    },\n                    time: {\n                        type: 'string',\n                        format: 'datetime',\n                        description: 'Timestamp of when this message was originally broadcast.',\n                    },\n                },\n            },\n            identity: {\n                type: 'object',\n                description: \"Represents a change to an account's identity. Could be an updated handle, signing key, or pds hosting endpoint. Serves as a prod to all downstream services to refresh their identity cache.\",\n                required: ['seq', 'did', 'time'],\n                properties: {\n                    seq: {\n                        type: 'integer',\n                    },\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                    time: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    handle: {\n                        type: 'string',\n                        format: 'handle',\n                        description: \"The current handle for the account, or 'handle.invalid' if validation fails. This field is optional, might have been validated or passed-through from an upstream source. Semantics and behaviors for PDS vs Relay may evolve in the future; see atproto specs for more details.\",\n                    },\n                },\n            },\n            account: {\n                type: 'object',\n                description: \"Represents a change to an account's status on a host (eg, PDS or Relay). The semantics of this event are that the status is at the host which emitted the event, not necessarily that at the currently active PDS. Eg, a Relay takedown would emit a takedown with active=false, even if the PDS is still active.\",\n                required: ['seq', 'did', 'time', 'active'],\n                properties: {\n                    seq: {\n                        type: 'integer',\n                    },\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                    time: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    active: {\n                        type: 'boolean',\n                        description: 'Indicates that the account has a repository which can be fetched from the host that emitted this event.',\n                    },\n                    status: {\n                        type: 'string',\n                        description: 'If active=false, this optional field indicates a reason for why the account is not active.',\n                        knownValues: ['takendown', 'suspended', 'deleted', 'deactivated'],\n                    },\n                },\n            },\n            handle: {\n                type: 'object',\n                description: 'DEPRECATED -- Use #identity event instead',\n                required: ['seq', 'did', 'handle', 'time'],\n                properties: {\n                    seq: {\n                        type: 'integer',\n                    },\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                    handle: {\n                        type: 'string',\n                        format: 'handle',\n                    },\n                    time: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                },\n            },\n            migrate: {\n                type: 'object',\n                description: 'DEPRECATED -- Use #account event instead',\n                required: ['seq', 'did', 'migrateTo', 'time'],\n                nullable: ['migrateTo'],\n                properties: {\n                    seq: {\n                        type: 'integer',\n                    },\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                    migrateTo: {\n                        type: 'string',\n                    },\n                    time: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                },\n            },\n            tombstone: {\n                type: 'object',\n                description: 'DEPRECATED -- Use #account event instead',\n                required: ['seq', 'did', 'time'],\n                properties: {\n                    seq: {\n                        type: 'integer',\n                    },\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                    time: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                },\n            },\n            info: {\n                type: 'object',\n                required: ['name'],\n                properties: {\n                    name: {\n                        type: 'string',\n                        knownValues: ['OutdatedCursor'],\n                    },\n                    message: {\n                        type: 'string',\n                    },\n                },\n            },\n            repoOp: {\n                type: 'object',\n                description: 'A repo operation, ie a mutation of a single record.',\n                required: ['action', 'path', 'cid'],\n                nullable: ['cid'],\n                properties: {\n                    action: {\n                        type: 'string',\n                        knownValues: ['create', 'update', 'delete'],\n                    },\n                    path: {\n                        type: 'string',\n                    },\n                    cid: {\n                        type: 'cid-link',\n                        description: 'For creates and updates, the new record CID. For deletions, null.',\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoTempAddReservedHandle: {\n        lexicon: 1,\n        id: 'com.atproto.temp.addReservedHandle',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Add a handle to the set of reserved handles.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['handle'],\n                        properties: {\n                            handle: {\n                                type: 'string',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        properties: {},\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoTempCheckSignupQueue: {\n        lexicon: 1,\n        id: 'com.atproto.temp.checkSignupQueue',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Check accounts location in signup queue.',\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['activated'],\n                        properties: {\n                            activated: {\n                                type: 'boolean',\n                            },\n                            placeInQueue: {\n                                type: 'integer',\n                            },\n                            estimatedTimeMs: {\n                                type: 'integer',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoTempFetchLabels: {\n        lexicon: 1,\n        id: 'com.atproto.temp.fetchLabels',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'DEPRECATED: use queryLabels or subscribeLabels instead -- Fetch all labels from a labeler created after a certain date.',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        since: {\n                            type: 'integer',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 250,\n                            default: 50,\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['labels'],\n                        properties: {\n                            labels: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:com.atproto.label.defs#label',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ComAtprotoTempRequestPhoneVerification: {\n        lexicon: 1,\n        id: 'com.atproto.temp.requestPhoneVerification',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Request a verification code to be sent to the supplied phone number',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['phoneNumber'],\n                        properties: {\n                            phoneNumber: {\n                                type: 'string',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyActorDefs: {\n        lexicon: 1,\n        id: 'app.bsky.actor.defs',\n        defs: {\n            profileViewBasic: {\n                type: 'object',\n                required: ['did', 'handle'],\n                properties: {\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                    handle: {\n                        type: 'string',\n                        format: 'handle',\n                    },\n                    displayName: {\n                        type: 'string',\n                        maxGraphemes: 64,\n                        maxLength: 640,\n                    },\n                    avatar: {\n                        type: 'string',\n                        format: 'uri',\n                    },\n                    associated: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#profileAssociated',\n                    },\n                    viewer: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#viewerState',\n                    },\n                    labels: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.label.defs#label',\n                        },\n                    },\n                    createdAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                },\n            },\n            profileView: {\n                type: 'object',\n                required: ['did', 'handle'],\n                properties: {\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                    handle: {\n                        type: 'string',\n                        format: 'handle',\n                    },\n                    displayName: {\n                        type: 'string',\n                        maxGraphemes: 64,\n                        maxLength: 640,\n                    },\n                    description: {\n                        type: 'string',\n                        maxGraphemes: 256,\n                        maxLength: 2560,\n                    },\n                    avatar: {\n                        type: 'string',\n                        format: 'uri',\n                    },\n                    associated: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#profileAssociated',\n                    },\n                    indexedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    createdAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    viewer: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#viewerState',\n                    },\n                    labels: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.label.defs#label',\n                        },\n                    },\n                },\n            },\n            profileViewDetailed: {\n                type: 'object',\n                required: ['did', 'handle'],\n                properties: {\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                    handle: {\n                        type: 'string',\n                        format: 'handle',\n                    },\n                    displayName: {\n                        type: 'string',\n                        maxGraphemes: 64,\n                        maxLength: 640,\n                    },\n                    description: {\n                        type: 'string',\n                        maxGraphemes: 256,\n                        maxLength: 2560,\n                    },\n                    avatar: {\n                        type: 'string',\n                        format: 'uri',\n                    },\n                    banner: {\n                        type: 'string',\n                        format: 'uri',\n                    },\n                    followersCount: {\n                        type: 'integer',\n                    },\n                    followsCount: {\n                        type: 'integer',\n                    },\n                    postsCount: {\n                        type: 'integer',\n                    },\n                    associated: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#profileAssociated',\n                    },\n                    joinedViaStarterPack: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.graph.defs#starterPackViewBasic',\n                    },\n                    indexedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    createdAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    viewer: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#viewerState',\n                    },\n                    labels: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.label.defs#label',\n                        },\n                    },\n                    pinnedPost: {\n                        type: 'ref',\n                        ref: 'lex:com.atproto.repo.strongRef',\n                    },\n                },\n            },\n            profileAssociated: {\n                type: 'object',\n                properties: {\n                    lists: {\n                        type: 'integer',\n                    },\n                    feedgens: {\n                        type: 'integer',\n                    },\n                    starterPacks: {\n                        type: 'integer',\n                    },\n                    labeler: {\n                        type: 'boolean',\n                    },\n                    chat: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#profileAssociatedChat',\n                    },\n                },\n            },\n            profileAssociatedChat: {\n                type: 'object',\n                required: ['allowIncoming'],\n                properties: {\n                    allowIncoming: {\n                        type: 'string',\n                        knownValues: ['all', 'none', 'following'],\n                    },\n                },\n            },\n            viewerState: {\n                type: 'object',\n                description: \"Metadata about the requesting account's relationship with the subject account. Only has meaningful content for authed requests.\",\n                properties: {\n                    muted: {\n                        type: 'boolean',\n                    },\n                    mutedByList: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.graph.defs#listViewBasic',\n                    },\n                    blockedBy: {\n                        type: 'boolean',\n                    },\n                    blocking: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    blockingByList: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.graph.defs#listViewBasic',\n                    },\n                    following: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    followedBy: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    knownFollowers: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#knownFollowers',\n                    },\n                },\n            },\n            knownFollowers: {\n                type: 'object',\n                description: \"The subject's followers whom you also follow\",\n                required: ['count', 'followers'],\n                properties: {\n                    count: {\n                        type: 'integer',\n                    },\n                    followers: {\n                        type: 'array',\n                        minLength: 0,\n                        maxLength: 5,\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n                        },\n                    },\n                },\n            },\n            preferences: {\n                type: 'array',\n                items: {\n                    type: 'union',\n                    refs: [\n                        'lex:app.bsky.actor.defs#adultContentPref',\n                        'lex:app.bsky.actor.defs#contentLabelPref',\n                        'lex:app.bsky.actor.defs#savedFeedsPref',\n                        'lex:app.bsky.actor.defs#savedFeedsPrefV2',\n                        'lex:app.bsky.actor.defs#personalDetailsPref',\n                        'lex:app.bsky.actor.defs#feedViewPref',\n                        'lex:app.bsky.actor.defs#threadViewPref',\n                        'lex:app.bsky.actor.defs#interestsPref',\n                        'lex:app.bsky.actor.defs#mutedWordsPref',\n                        'lex:app.bsky.actor.defs#hiddenPostsPref',\n                        'lex:app.bsky.actor.defs#bskyAppStatePref',\n                        'lex:app.bsky.actor.defs#labelersPref',\n                        'lex:app.bsky.actor.defs#postInteractionSettingsPref',\n                    ],\n                },\n            },\n            adultContentPref: {\n                type: 'object',\n                required: ['enabled'],\n                properties: {\n                    enabled: {\n                        type: 'boolean',\n                        default: false,\n                    },\n                },\n            },\n            contentLabelPref: {\n                type: 'object',\n                required: ['label', 'visibility'],\n                properties: {\n                    labelerDid: {\n                        type: 'string',\n                        description: 'Which labeler does this preference apply to? If undefined, applies globally.',\n                        format: 'did',\n                    },\n                    label: {\n                        type: 'string',\n                    },\n                    visibility: {\n                        type: 'string',\n                        knownValues: ['ignore', 'show', 'warn', 'hide'],\n                    },\n                },\n            },\n            savedFeed: {\n                type: 'object',\n                required: ['id', 'type', 'value', 'pinned'],\n                properties: {\n                    id: {\n                        type: 'string',\n                    },\n                    type: {\n                        type: 'string',\n                        knownValues: ['feed', 'list', 'timeline'],\n                    },\n                    value: {\n                        type: 'string',\n                    },\n                    pinned: {\n                        type: 'boolean',\n                    },\n                },\n            },\n            savedFeedsPrefV2: {\n                type: 'object',\n                required: ['items'],\n                properties: {\n                    items: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:app.bsky.actor.defs#savedFeed',\n                        },\n                    },\n                },\n            },\n            savedFeedsPref: {\n                type: 'object',\n                required: ['pinned', 'saved'],\n                properties: {\n                    pinned: {\n                        type: 'array',\n                        items: {\n                            type: 'string',\n                            format: 'at-uri',\n                        },\n                    },\n                    saved: {\n                        type: 'array',\n                        items: {\n                            type: 'string',\n                            format: 'at-uri',\n                        },\n                    },\n                    timelineIndex: {\n                        type: 'integer',\n                    },\n                },\n            },\n            personalDetailsPref: {\n                type: 'object',\n                properties: {\n                    birthDate: {\n                        type: 'string',\n                        format: 'datetime',\n                        description: 'The birth date of account owner.',\n                    },\n                },\n            },\n            feedViewPref: {\n                type: 'object',\n                required: ['feed'],\n                properties: {\n                    feed: {\n                        type: 'string',\n                        description: 'The URI of the feed, or an identifier which describes the feed.',\n                    },\n                    hideReplies: {\n                        type: 'boolean',\n                        description: 'Hide replies in the feed.',\n                    },\n                    hideRepliesByUnfollowed: {\n                        type: 'boolean',\n                        description: 'Hide replies in the feed if they are not by followed users.',\n                        default: true,\n                    },\n                    hideRepliesByLikeCount: {\n                        type: 'integer',\n                        description: 'Hide replies in the feed if they do not have this number of likes.',\n                    },\n                    hideReposts: {\n                        type: 'boolean',\n                        description: 'Hide reposts in the feed.',\n                    },\n                    hideQuotePosts: {\n                        type: 'boolean',\n                        description: 'Hide quote posts in the feed.',\n                    },\n                },\n            },\n            threadViewPref: {\n                type: 'object',\n                properties: {\n                    sort: {\n                        type: 'string',\n                        description: 'Sorting mode for threads.',\n                        knownValues: [\n                            'oldest',\n                            'newest',\n                            'most-likes',\n                            'random',\n                            'hotness',\n                        ],\n                    },\n                    prioritizeFollowedUsers: {\n                        type: 'boolean',\n                        description: 'Show followed users at the top of all replies.',\n                    },\n                },\n            },\n            interestsPref: {\n                type: 'object',\n                required: ['tags'],\n                properties: {\n                    tags: {\n                        type: 'array',\n                        maxLength: 100,\n                        items: {\n                            type: 'string',\n                            maxLength: 640,\n                            maxGraphemes: 64,\n                        },\n                        description: \"A list of tags which describe the account owner's interests gathered during onboarding.\",\n                    },\n                },\n            },\n            mutedWordTarget: {\n                type: 'string',\n                knownValues: ['content', 'tag'],\n                maxLength: 640,\n                maxGraphemes: 64,\n            },\n            mutedWord: {\n                type: 'object',\n                description: 'A word that the account owner has muted.',\n                required: ['value', 'targets'],\n                properties: {\n                    id: {\n                        type: 'string',\n                    },\n                    value: {\n                        type: 'string',\n                        description: 'The muted word itself.',\n                        maxLength: 10000,\n                        maxGraphemes: 1000,\n                    },\n                    targets: {\n                        type: 'array',\n                        description: 'The intended targets of the muted word.',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:app.bsky.actor.defs#mutedWordTarget',\n                        },\n                    },\n                    actorTarget: {\n                        type: 'string',\n                        description: 'Groups of users to apply the muted word to. If undefined, applies to all users.',\n                        knownValues: ['all', 'exclude-following'],\n                        default: 'all',\n                    },\n                    expiresAt: {\n                        type: 'string',\n                        format: 'datetime',\n                        description: 'The date and time at which the muted word will expire and no longer be applied.',\n                    },\n                },\n            },\n            mutedWordsPref: {\n                type: 'object',\n                required: ['items'],\n                properties: {\n                    items: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:app.bsky.actor.defs#mutedWord',\n                        },\n                        description: 'A list of words the account owner has muted.',\n                    },\n                },\n            },\n            hiddenPostsPref: {\n                type: 'object',\n                required: ['items'],\n                properties: {\n                    items: {\n                        type: 'array',\n                        items: {\n                            type: 'string',\n                            format: 'at-uri',\n                        },\n                        description: 'A list of URIs of posts the account owner has hidden.',\n                    },\n                },\n            },\n            labelersPref: {\n                type: 'object',\n                required: ['labelers'],\n                properties: {\n                    labelers: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:app.bsky.actor.defs#labelerPrefItem',\n                        },\n                    },\n                },\n            },\n            labelerPrefItem: {\n                type: 'object',\n                required: ['did'],\n                properties: {\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                },\n            },\n            bskyAppStatePref: {\n                description: \"A grab bag of state that's specific to the bsky.app program. Third-party apps shouldn't use this.\",\n                type: 'object',\n                properties: {\n                    activeProgressGuide: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#bskyAppProgressGuide',\n                    },\n                    queuedNudges: {\n                        description: 'An array of tokens which identify nudges (modals, popups, tours, highlight dots) that should be shown to the user.',\n                        type: 'array',\n                        maxLength: 1000,\n                        items: {\n                            type: 'string',\n                            maxLength: 100,\n                        },\n                    },\n                    nuxs: {\n                        description: 'Storage for NUXs the user has encountered.',\n                        type: 'array',\n                        maxLength: 100,\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:app.bsky.actor.defs#nux',\n                        },\n                    },\n                },\n            },\n            bskyAppProgressGuide: {\n                description: 'If set, an active progress guide. Once completed, can be set to undefined. Should have unspecced fields tracking progress.',\n                type: 'object',\n                required: ['guide'],\n                properties: {\n                    guide: {\n                        type: 'string',\n                        maxLength: 100,\n                    },\n                },\n            },\n            nux: {\n                type: 'object',\n                description: 'A new user experiences (NUX) storage object',\n                required: ['id', 'completed'],\n                properties: {\n                    id: {\n                        type: 'string',\n                        maxLength: 100,\n                    },\n                    completed: {\n                        type: 'boolean',\n                        default: false,\n                    },\n                    data: {\n                        description: 'Arbitrary data for the NUX. The structure is defined by the NUX itself. Limited to 300 characters.',\n                        type: 'string',\n                        maxLength: 3000,\n                        maxGraphemes: 300,\n                    },\n                    expiresAt: {\n                        type: 'string',\n                        format: 'datetime',\n                        description: 'The date and time at which the NUX will expire and should be considered completed.',\n                    },\n                },\n            },\n            postInteractionSettingsPref: {\n                type: 'object',\n                description: 'Default post interaction settings for the account. These values should be applied as default values when creating new posts. These refs should mirror the threadgate and postgate records exactly.',\n                required: [],\n                properties: {\n                    threadgateAllowRules: {\n                        description: 'Matches threadgate record. List of rules defining who can reply to this users posts. If value is an empty array, no one can reply. If value is undefined, anyone can reply.',\n                        type: 'array',\n                        maxLength: 5,\n                        items: {\n                            type: 'union',\n                            refs: [\n                                'lex:app.bsky.feed.threadgate#mentionRule',\n                                'lex:app.bsky.feed.threadgate#followerRule',\n                                'lex:app.bsky.feed.threadgate#followingRule',\n                                'lex:app.bsky.feed.threadgate#listRule',\n                            ],\n                        },\n                    },\n                    postgateEmbeddingRules: {\n                        description: 'Matches postgate record. List of rules defining who can embed this users posts. If value is an empty array or is undefined, no particular rules apply and anyone can embed.',\n                        type: 'array',\n                        maxLength: 5,\n                        items: {\n                            type: 'union',\n                            refs: ['lex:app.bsky.feed.postgate#disableRule'],\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyActorGetPreferences: {\n        lexicon: 1,\n        id: 'app.bsky.actor.getPreferences',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get private preferences attached to the current account. Expected use is synchronization between multiple devices, and import/export during account migration. Requires auth.',\n                parameters: {\n                    type: 'params',\n                    properties: {},\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['preferences'],\n                        properties: {\n                            preferences: {\n                                type: 'ref',\n                                ref: 'lex:app.bsky.actor.defs#preferences',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyActorGetProfile: {\n        lexicon: 1,\n        id: 'app.bsky.actor.getProfile',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get detailed profile view of an actor. Does not require auth, but contains relevant metadata with auth.',\n                parameters: {\n                    type: 'params',\n                    required: ['actor'],\n                    properties: {\n                        actor: {\n                            type: 'string',\n                            format: 'at-identifier',\n                            description: 'Handle or DID of account to fetch profile of.',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#profileViewDetailed',\n                    },\n                },\n            },\n        },\n    },\n    AppBskyActorGetProfiles: {\n        lexicon: 1,\n        id: 'app.bsky.actor.getProfiles',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get detailed profile views of multiple actors.',\n                parameters: {\n                    type: 'params',\n                    required: ['actors'],\n                    properties: {\n                        actors: {\n                            type: 'array',\n                            items: {\n                                type: 'string',\n                                format: 'at-identifier',\n                            },\n                            maxLength: 25,\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['profiles'],\n                        properties: {\n                            profiles: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.actor.defs#profileViewDetailed',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyActorGetSuggestions: {\n        lexicon: 1,\n        id: 'app.bsky.actor.getSuggestions',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get a list of suggested actors. Expected use is discovery of accounts to follow during new account onboarding.',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['actors'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            actors: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.actor.defs#profileView',\n                                },\n                            },\n                            recId: {\n                                type: 'integer',\n                                description: 'Snowflake for this recommendation, use when submitting recommendation events.',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyActorProfile: {\n        lexicon: 1,\n        id: 'app.bsky.actor.profile',\n        defs: {\n            main: {\n                type: 'record',\n                description: 'A declaration of a Bluesky account profile.',\n                key: 'literal:self',\n                record: {\n                    type: 'object',\n                    properties: {\n                        displayName: {\n                            type: 'string',\n                            maxGraphemes: 64,\n                            maxLength: 640,\n                        },\n                        description: {\n                            type: 'string',\n                            description: 'Free-form profile description text.',\n                            maxGraphemes: 256,\n                            maxLength: 2560,\n                        },\n                        avatar: {\n                            type: 'blob',\n                            description: \"Small image to be displayed next to posts from account. AKA, 'profile picture'\",\n                            accept: ['image/png', 'image/jpeg'],\n                            maxSize: 1000000,\n                        },\n                        banner: {\n                            type: 'blob',\n                            description: 'Larger horizontal image to display behind profile view.',\n                            accept: ['image/png', 'image/jpeg'],\n                            maxSize: 1000000,\n                        },\n                        labels: {\n                            type: 'union',\n                            description: 'Self-label values, specific to the Bluesky application, on the overall account.',\n                            refs: ['lex:com.atproto.label.defs#selfLabels'],\n                        },\n                        joinedViaStarterPack: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.repo.strongRef',\n                        },\n                        pinnedPost: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.repo.strongRef',\n                        },\n                        createdAt: {\n                            type: 'string',\n                            format: 'datetime',\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyActorPutPreferences: {\n        lexicon: 1,\n        id: 'app.bsky.actor.putPreferences',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Set the private preferences attached to the account.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['preferences'],\n                        properties: {\n                            preferences: {\n                                type: 'ref',\n                                ref: 'lex:app.bsky.actor.defs#preferences',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyActorSearchActors: {\n        lexicon: 1,\n        id: 'app.bsky.actor.searchActors',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Find actors (profiles) matching search criteria. Does not require auth.',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        term: {\n                            type: 'string',\n                            description: \"DEPRECATED: use 'q' instead.\",\n                        },\n                        q: {\n                            type: 'string',\n                            description: 'Search query string. Syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 25,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['actors'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            actors: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.actor.defs#profileView',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyActorSearchActorsTypeahead: {\n        lexicon: 1,\n        id: 'app.bsky.actor.searchActorsTypeahead',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Find actor suggestions for a prefix search term. Expected use is for auto-completion during text field entry. Does not require auth.',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        term: {\n                            type: 'string',\n                            description: \"DEPRECATED: use 'q' instead.\",\n                        },\n                        q: {\n                            type: 'string',\n                            description: 'Search query prefix; not a full query string.',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 10,\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['actors'],\n                        properties: {\n                            actors: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyEmbedDefs: {\n        lexicon: 1,\n        id: 'app.bsky.embed.defs',\n        defs: {\n            aspectRatio: {\n                type: 'object',\n                description: 'width:height represents an aspect ratio. It may be approximate, and may not correspond to absolute dimensions in any given unit.',\n                required: ['width', 'height'],\n                properties: {\n                    width: {\n                        type: 'integer',\n                        minimum: 1,\n                    },\n                    height: {\n                        type: 'integer',\n                        minimum: 1,\n                    },\n                },\n            },\n        },\n    },\n    AppBskyEmbedExternal: {\n        lexicon: 1,\n        id: 'app.bsky.embed.external',\n        defs: {\n            main: {\n                type: 'object',\n                description: \"A representation of some externally linked content (eg, a URL and 'card'), embedded in a Bluesky record (eg, a post).\",\n                required: ['external'],\n                properties: {\n                    external: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.embed.external#external',\n                    },\n                },\n            },\n            external: {\n                type: 'object',\n                required: ['uri', 'title', 'description'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'uri',\n                    },\n                    title: {\n                        type: 'string',\n                    },\n                    description: {\n                        type: 'string',\n                    },\n                    thumb: {\n                        type: 'blob',\n                        accept: ['image/*'],\n                        maxSize: 1000000,\n                    },\n                },\n            },\n            view: {\n                type: 'object',\n                required: ['external'],\n                properties: {\n                    external: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.embed.external#viewExternal',\n                    },\n                },\n            },\n            viewExternal: {\n                type: 'object',\n                required: ['uri', 'title', 'description'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'uri',\n                    },\n                    title: {\n                        type: 'string',\n                    },\n                    description: {\n                        type: 'string',\n                    },\n                    thumb: {\n                        type: 'string',\n                        format: 'uri',\n                    },\n                },\n            },\n        },\n    },\n    AppBskyEmbedImages: {\n        lexicon: 1,\n        id: 'app.bsky.embed.images',\n        description: 'A set of images embedded in a Bluesky record (eg, a post).',\n        defs: {\n            main: {\n                type: 'object',\n                required: ['images'],\n                properties: {\n                    images: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:app.bsky.embed.images#image',\n                        },\n                        maxLength: 4,\n                    },\n                },\n            },\n            image: {\n                type: 'object',\n                required: ['image', 'alt'],\n                properties: {\n                    image: {\n                        type: 'blob',\n                        accept: ['image/*'],\n                        maxSize: 1000000,\n                    },\n                    alt: {\n                        type: 'string',\n                        description: 'Alt text description of the image, for accessibility.',\n                    },\n                    aspectRatio: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.embed.defs#aspectRatio',\n                    },\n                },\n            },\n            view: {\n                type: 'object',\n                required: ['images'],\n                properties: {\n                    images: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:app.bsky.embed.images#viewImage',\n                        },\n                        maxLength: 4,\n                    },\n                },\n            },\n            viewImage: {\n                type: 'object',\n                required: ['thumb', 'fullsize', 'alt'],\n                properties: {\n                    thumb: {\n                        type: 'string',\n                        format: 'uri',\n                        description: 'Fully-qualified URL where a thumbnail of the image can be fetched. For example, CDN location provided by the App View.',\n                    },\n                    fullsize: {\n                        type: 'string',\n                        format: 'uri',\n                        description: 'Fully-qualified URL where a large version of the image can be fetched. May or may not be the exact original blob. For example, CDN location provided by the App View.',\n                    },\n                    alt: {\n                        type: 'string',\n                        description: 'Alt text description of the image, for accessibility.',\n                    },\n                    aspectRatio: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.embed.defs#aspectRatio',\n                    },\n                },\n            },\n        },\n    },\n    AppBskyEmbedRecord: {\n        lexicon: 1,\n        id: 'app.bsky.embed.record',\n        description: 'A representation of a record embedded in a Bluesky record (eg, a post). For example, a quote-post, or sharing a feed generator record.',\n        defs: {\n            main: {\n                type: 'object',\n                required: ['record'],\n                properties: {\n                    record: {\n                        type: 'ref',\n                        ref: 'lex:com.atproto.repo.strongRef',\n                    },\n                },\n            },\n            view: {\n                type: 'object',\n                required: ['record'],\n                properties: {\n                    record: {\n                        type: 'union',\n                        refs: [\n                            'lex:app.bsky.embed.record#viewRecord',\n                            'lex:app.bsky.embed.record#viewNotFound',\n                            'lex:app.bsky.embed.record#viewBlocked',\n                            'lex:app.bsky.embed.record#viewDetached',\n                            'lex:app.bsky.feed.defs#generatorView',\n                            'lex:app.bsky.graph.defs#listView',\n                            'lex:app.bsky.labeler.defs#labelerView',\n                            'lex:app.bsky.graph.defs#starterPackViewBasic',\n                        ],\n                    },\n                },\n            },\n            viewRecord: {\n                type: 'object',\n                required: ['uri', 'cid', 'author', 'value', 'indexedAt'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    cid: {\n                        type: 'string',\n                        format: 'cid',\n                    },\n                    author: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n                    },\n                    value: {\n                        type: 'unknown',\n                        description: 'The record data itself.',\n                    },\n                    labels: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.label.defs#label',\n                        },\n                    },\n                    replyCount: {\n                        type: 'integer',\n                    },\n                    repostCount: {\n                        type: 'integer',\n                    },\n                    likeCount: {\n                        type: 'integer',\n                    },\n                    quoteCount: {\n                        type: 'integer',\n                    },\n                    embeds: {\n                        type: 'array',\n                        items: {\n                            type: 'union',\n                            refs: [\n                                'lex:app.bsky.embed.images#view',\n                                'lex:app.bsky.embed.video#view',\n                                'lex:app.bsky.embed.external#view',\n                                'lex:app.bsky.embed.record#view',\n                                'lex:app.bsky.embed.recordWithMedia#view',\n                            ],\n                        },\n                    },\n                    indexedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                },\n            },\n            viewNotFound: {\n                type: 'object',\n                required: ['uri', 'notFound'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    notFound: {\n                        type: 'boolean',\n                        const: true,\n                    },\n                },\n            },\n            viewBlocked: {\n                type: 'object',\n                required: ['uri', 'blocked', 'author'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    blocked: {\n                        type: 'boolean',\n                        const: true,\n                    },\n                    author: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.feed.defs#blockedAuthor',\n                    },\n                },\n            },\n            viewDetached: {\n                type: 'object',\n                required: ['uri', 'detached'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    detached: {\n                        type: 'boolean',\n                        const: true,\n                    },\n                },\n            },\n        },\n    },\n    AppBskyEmbedRecordWithMedia: {\n        lexicon: 1,\n        id: 'app.bsky.embed.recordWithMedia',\n        description: 'A representation of a record embedded in a Bluesky record (eg, a post), alongside other compatible embeds. For example, a quote post and image, or a quote post and external URL card.',\n        defs: {\n            main: {\n                type: 'object',\n                required: ['record', 'media'],\n                properties: {\n                    record: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.embed.record',\n                    },\n                    media: {\n                        type: 'union',\n                        refs: [\n                            'lex:app.bsky.embed.images',\n                            'lex:app.bsky.embed.video',\n                            'lex:app.bsky.embed.external',\n                        ],\n                    },\n                },\n            },\n            view: {\n                type: 'object',\n                required: ['record', 'media'],\n                properties: {\n                    record: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.embed.record#view',\n                    },\n                    media: {\n                        type: 'union',\n                        refs: [\n                            'lex:app.bsky.embed.images#view',\n                            'lex:app.bsky.embed.video#view',\n                            'lex:app.bsky.embed.external#view',\n                        ],\n                    },\n                },\n            },\n        },\n    },\n    AppBskyEmbedVideo: {\n        lexicon: 1,\n        id: 'app.bsky.embed.video',\n        description: 'A video embedded in a Bluesky record (eg, a post).',\n        defs: {\n            main: {\n                type: 'object',\n                required: ['video'],\n                properties: {\n                    video: {\n                        type: 'blob',\n                        accept: ['video/mp4'],\n                        maxSize: 50000000,\n                    },\n                    captions: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:app.bsky.embed.video#caption',\n                        },\n                        maxLength: 20,\n                    },\n                    alt: {\n                        type: 'string',\n                        description: 'Alt text description of the video, for accessibility.',\n                        maxGraphemes: 1000,\n                        maxLength: 10000,\n                    },\n                    aspectRatio: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.embed.defs#aspectRatio',\n                    },\n                },\n            },\n            caption: {\n                type: 'object',\n                required: ['lang', 'file'],\n                properties: {\n                    lang: {\n                        type: 'string',\n                        format: 'language',\n                    },\n                    file: {\n                        type: 'blob',\n                        accept: ['text/vtt'],\n                        maxSize: 20000,\n                    },\n                },\n            },\n            view: {\n                type: 'object',\n                required: ['cid', 'playlist'],\n                properties: {\n                    cid: {\n                        type: 'string',\n                        format: 'cid',\n                    },\n                    playlist: {\n                        type: 'string',\n                        format: 'uri',\n                    },\n                    thumbnail: {\n                        type: 'string',\n                        format: 'uri',\n                    },\n                    alt: {\n                        type: 'string',\n                        maxGraphemes: 1000,\n                        maxLength: 10000,\n                    },\n                    aspectRatio: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.embed.defs#aspectRatio',\n                    },\n                },\n            },\n        },\n    },\n    AppBskyFeedDefs: {\n        lexicon: 1,\n        id: 'app.bsky.feed.defs',\n        defs: {\n            postView: {\n                type: 'object',\n                required: ['uri', 'cid', 'author', 'record', 'indexedAt'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    cid: {\n                        type: 'string',\n                        format: 'cid',\n                    },\n                    author: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n                    },\n                    record: {\n                        type: 'unknown',\n                    },\n                    embed: {\n                        type: 'union',\n                        refs: [\n                            'lex:app.bsky.embed.images#view',\n                            'lex:app.bsky.embed.video#view',\n                            'lex:app.bsky.embed.external#view',\n                            'lex:app.bsky.embed.record#view',\n                            'lex:app.bsky.embed.recordWithMedia#view',\n                        ],\n                    },\n                    replyCount: {\n                        type: 'integer',\n                    },\n                    repostCount: {\n                        type: 'integer',\n                    },\n                    likeCount: {\n                        type: 'integer',\n                    },\n                    quoteCount: {\n                        type: 'integer',\n                    },\n                    indexedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    viewer: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.feed.defs#viewerState',\n                    },\n                    labels: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.label.defs#label',\n                        },\n                    },\n                    threadgate: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.feed.defs#threadgateView',\n                    },\n                },\n            },\n            viewerState: {\n                type: 'object',\n                description: \"Metadata about the requesting account's relationship with the subject content. Only has meaningful content for authed requests.\",\n                properties: {\n                    repost: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    like: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    threadMuted: {\n                        type: 'boolean',\n                    },\n                    replyDisabled: {\n                        type: 'boolean',\n                    },\n                    embeddingDisabled: {\n                        type: 'boolean',\n                    },\n                    pinned: {\n                        type: 'boolean',\n                    },\n                },\n            },\n            threadContext: {\n                type: 'object',\n                description: 'Metadata about this post within the context of the thread it is in.',\n                properties: {\n                    rootAuthorLike: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                },\n            },\n            feedViewPost: {\n                type: 'object',\n                required: ['post'],\n                properties: {\n                    post: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.feed.defs#postView',\n                    },\n                    reply: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.feed.defs#replyRef',\n                    },\n                    reason: {\n                        type: 'union',\n                        refs: [\n                            'lex:app.bsky.feed.defs#reasonRepost',\n                            'lex:app.bsky.feed.defs#reasonPin',\n                        ],\n                    },\n                    feedContext: {\n                        type: 'string',\n                        description: 'Context provided by feed generator that may be passed back alongside interactions.',\n                        maxLength: 2000,\n                    },\n                },\n            },\n            replyRef: {\n                type: 'object',\n                required: ['root', 'parent'],\n                properties: {\n                    root: {\n                        type: 'union',\n                        refs: [\n                            'lex:app.bsky.feed.defs#postView',\n                            'lex:app.bsky.feed.defs#notFoundPost',\n                            'lex:app.bsky.feed.defs#blockedPost',\n                        ],\n                    },\n                    parent: {\n                        type: 'union',\n                        refs: [\n                            'lex:app.bsky.feed.defs#postView',\n                            'lex:app.bsky.feed.defs#notFoundPost',\n                            'lex:app.bsky.feed.defs#blockedPost',\n                        ],\n                    },\n                    grandparentAuthor: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n                        description: 'When parent is a reply to another post, this is the author of that post.',\n                    },\n                },\n            },\n            reasonRepost: {\n                type: 'object',\n                required: ['by', 'indexedAt'],\n                properties: {\n                    by: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n                    },\n                    indexedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                },\n            },\n            reasonPin: {\n                type: 'object',\n                properties: {},\n            },\n            threadViewPost: {\n                type: 'object',\n                required: ['post'],\n                properties: {\n                    post: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.feed.defs#postView',\n                    },\n                    parent: {\n                        type: 'union',\n                        refs: [\n                            'lex:app.bsky.feed.defs#threadViewPost',\n                            'lex:app.bsky.feed.defs#notFoundPost',\n                            'lex:app.bsky.feed.defs#blockedPost',\n                        ],\n                    },\n                    replies: {\n                        type: 'array',\n                        items: {\n                            type: 'union',\n                            refs: [\n                                'lex:app.bsky.feed.defs#threadViewPost',\n                                'lex:app.bsky.feed.defs#notFoundPost',\n                                'lex:app.bsky.feed.defs#blockedPost',\n                            ],\n                        },\n                    },\n                    threadContext: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.feed.defs#threadContext',\n                    },\n                },\n            },\n            notFoundPost: {\n                type: 'object',\n                required: ['uri', 'notFound'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    notFound: {\n                        type: 'boolean',\n                        const: true,\n                    },\n                },\n            },\n            blockedPost: {\n                type: 'object',\n                required: ['uri', 'blocked', 'author'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    blocked: {\n                        type: 'boolean',\n                        const: true,\n                    },\n                    author: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.feed.defs#blockedAuthor',\n                    },\n                },\n            },\n            blockedAuthor: {\n                type: 'object',\n                required: ['did'],\n                properties: {\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                    viewer: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#viewerState',\n                    },\n                },\n            },\n            generatorView: {\n                type: 'object',\n                required: ['uri', 'cid', 'did', 'creator', 'displayName', 'indexedAt'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    cid: {\n                        type: 'string',\n                        format: 'cid',\n                    },\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                    creator: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#profileView',\n                    },\n                    displayName: {\n                        type: 'string',\n                    },\n                    description: {\n                        type: 'string',\n                        maxGraphemes: 300,\n                        maxLength: 3000,\n                    },\n                    descriptionFacets: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:app.bsky.richtext.facet',\n                        },\n                    },\n                    avatar: {\n                        type: 'string',\n                        format: 'uri',\n                    },\n                    likeCount: {\n                        type: 'integer',\n                        minimum: 0,\n                    },\n                    acceptsInteractions: {\n                        type: 'boolean',\n                    },\n                    labels: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.label.defs#label',\n                        },\n                    },\n                    viewer: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.feed.defs#generatorViewerState',\n                    },\n                    contentMode: {\n                        type: 'string',\n                        knownValues: [\n                            'app.bsky.feed.defs#contentModeUnspecified',\n                            'app.bsky.feed.defs#contentModeVideo',\n                        ],\n                    },\n                    indexedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                },\n            },\n            generatorViewerState: {\n                type: 'object',\n                properties: {\n                    like: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                },\n            },\n            skeletonFeedPost: {\n                type: 'object',\n                required: ['post'],\n                properties: {\n                    post: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    reason: {\n                        type: 'union',\n                        refs: [\n                            'lex:app.bsky.feed.defs#skeletonReasonRepost',\n                            'lex:app.bsky.feed.defs#skeletonReasonPin',\n                        ],\n                    },\n                    feedContext: {\n                        type: 'string',\n                        description: 'Context that will be passed through to client and may be passed to feed generator back alongside interactions.',\n                        maxLength: 2000,\n                    },\n                },\n            },\n            skeletonReasonRepost: {\n                type: 'object',\n                required: ['repost'],\n                properties: {\n                    repost: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                },\n            },\n            skeletonReasonPin: {\n                type: 'object',\n                properties: {},\n            },\n            threadgateView: {\n                type: 'object',\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    cid: {\n                        type: 'string',\n                        format: 'cid',\n                    },\n                    record: {\n                        type: 'unknown',\n                    },\n                    lists: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:app.bsky.graph.defs#listViewBasic',\n                        },\n                    },\n                },\n            },\n            interaction: {\n                type: 'object',\n                properties: {\n                    item: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    event: {\n                        type: 'string',\n                        knownValues: [\n                            'app.bsky.feed.defs#requestLess',\n                            'app.bsky.feed.defs#requestMore',\n                            'app.bsky.feed.defs#clickthroughItem',\n                            'app.bsky.feed.defs#clickthroughAuthor',\n                            'app.bsky.feed.defs#clickthroughReposter',\n                            'app.bsky.feed.defs#clickthroughEmbed',\n                            'app.bsky.feed.defs#interactionSeen',\n                            'app.bsky.feed.defs#interactionLike',\n                            'app.bsky.feed.defs#interactionRepost',\n                            'app.bsky.feed.defs#interactionReply',\n                            'app.bsky.feed.defs#interactionQuote',\n                            'app.bsky.feed.defs#interactionShare',\n                        ],\n                    },\n                    feedContext: {\n                        type: 'string',\n                        description: 'Context on a feed item that was originally supplied by the feed generator on getFeedSkeleton.',\n                        maxLength: 2000,\n                    },\n                },\n            },\n            requestLess: {\n                type: 'token',\n                description: 'Request that less content like the given feed item be shown in the feed',\n            },\n            requestMore: {\n                type: 'token',\n                description: 'Request that more content like the given feed item be shown in the feed',\n            },\n            clickthroughItem: {\n                type: 'token',\n                description: 'User clicked through to the feed item',\n            },\n            clickthroughAuthor: {\n                type: 'token',\n                description: 'User clicked through to the author of the feed item',\n            },\n            clickthroughReposter: {\n                type: 'token',\n                description: 'User clicked through to the reposter of the feed item',\n            },\n            clickthroughEmbed: {\n                type: 'token',\n                description: 'User clicked through to the embedded content of the feed item',\n            },\n            contentModeUnspecified: {\n                type: 'token',\n                description: 'Declares the feed generator returns any types of posts.',\n            },\n            contentModeVideo: {\n                type: 'token',\n                description: 'Declares the feed generator returns posts containing app.bsky.embed.video embeds.',\n            },\n            interactionSeen: {\n                type: 'token',\n                description: 'Feed item was seen by user',\n            },\n            interactionLike: {\n                type: 'token',\n                description: 'User liked the feed item',\n            },\n            interactionRepost: {\n                type: 'token',\n                description: 'User reposted the feed item',\n            },\n            interactionReply: {\n                type: 'token',\n                description: 'User replied to the feed item',\n            },\n            interactionQuote: {\n                type: 'token',\n                description: 'User quoted the feed item',\n            },\n            interactionShare: {\n                type: 'token',\n                description: 'User shared the feed item',\n            },\n        },\n    },\n    AppBskyFeedDescribeFeedGenerator: {\n        lexicon: 1,\n        id: 'app.bsky.feed.describeFeedGenerator',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get information about a feed generator, including policies and offered feed URIs. Does not require auth; implemented by Feed Generator services (not App View).',\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['did', 'feeds'],\n                        properties: {\n                            did: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                            feeds: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.feed.describeFeedGenerator#feed',\n                                },\n                            },\n                            links: {\n                                type: 'ref',\n                                ref: 'lex:app.bsky.feed.describeFeedGenerator#links',\n                            },\n                        },\n                    },\n                },\n            },\n            feed: {\n                type: 'object',\n                required: ['uri'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                },\n            },\n            links: {\n                type: 'object',\n                properties: {\n                    privacyPolicy: {\n                        type: 'string',\n                    },\n                    termsOfService: {\n                        type: 'string',\n                    },\n                },\n            },\n        },\n    },\n    AppBskyFeedGenerator: {\n        lexicon: 1,\n        id: 'app.bsky.feed.generator',\n        defs: {\n            main: {\n                type: 'record',\n                description: 'Record declaring of the existence of a feed generator, and containing metadata about it. The record can exist in any repository.',\n                key: 'any',\n                record: {\n                    type: 'object',\n                    required: ['did', 'displayName', 'createdAt'],\n                    properties: {\n                        did: {\n                            type: 'string',\n                            format: 'did',\n                        },\n                        displayName: {\n                            type: 'string',\n                            maxGraphemes: 24,\n                            maxLength: 240,\n                        },\n                        description: {\n                            type: 'string',\n                            maxGraphemes: 300,\n                            maxLength: 3000,\n                        },\n                        descriptionFacets: {\n                            type: 'array',\n                            items: {\n                                type: 'ref',\n                                ref: 'lex:app.bsky.richtext.facet',\n                            },\n                        },\n                        avatar: {\n                            type: 'blob',\n                            accept: ['image/png', 'image/jpeg'],\n                            maxSize: 1000000,\n                        },\n                        acceptsInteractions: {\n                            type: 'boolean',\n                            description: 'Declaration that a feed accepts feedback interactions from a client through app.bsky.feed.sendInteractions',\n                        },\n                        labels: {\n                            type: 'union',\n                            description: 'Self-label values',\n                            refs: ['lex:com.atproto.label.defs#selfLabels'],\n                        },\n                        contentMode: {\n                            type: 'string',\n                            knownValues: [\n                                'app.bsky.feed.defs#contentModeUnspecified',\n                                'app.bsky.feed.defs#contentModeVideo',\n                            ],\n                        },\n                        createdAt: {\n                            type: 'string',\n                            format: 'datetime',\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyFeedGetActorFeeds: {\n        lexicon: 1,\n        id: 'app.bsky.feed.getActorFeeds',\n        defs: {\n            main: {\n                type: 'query',\n                description: \"Get a list of feeds (feed generator records) created by the actor (in the actor's repo).\",\n                parameters: {\n                    type: 'params',\n                    required: ['actor'],\n                    properties: {\n                        actor: {\n                            type: 'string',\n                            format: 'at-identifier',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['feeds'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            feeds: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.feed.defs#generatorView',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyFeedGetActorLikes: {\n        lexicon: 1,\n        id: 'app.bsky.feed.getActorLikes',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get a list of posts liked by an actor. Requires auth, actor must be the requesting account.',\n                parameters: {\n                    type: 'params',\n                    required: ['actor'],\n                    properties: {\n                        actor: {\n                            type: 'string',\n                            format: 'at-identifier',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['feed'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            feed: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                                },\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'BlockedActor',\n                    },\n                    {\n                        name: 'BlockedByActor',\n                    },\n                ],\n            },\n        },\n    },\n    AppBskyFeedGetAuthorFeed: {\n        lexicon: 1,\n        id: 'app.bsky.feed.getAuthorFeed',\n        defs: {\n            main: {\n                type: 'query',\n                description: \"Get a view of an actor's 'author feed' (post and reposts by the author). Does not require auth.\",\n                parameters: {\n                    type: 'params',\n                    required: ['actor'],\n                    properties: {\n                        actor: {\n                            type: 'string',\n                            format: 'at-identifier',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                        filter: {\n                            type: 'string',\n                            description: 'Combinations of post/repost types to include in response.',\n                            knownValues: [\n                                'posts_with_replies',\n                                'posts_no_replies',\n                                'posts_with_media',\n                                'posts_and_author_threads',\n                                'posts_with_video',\n                            ],\n                            default: 'posts_with_replies',\n                        },\n                        includePins: {\n                            type: 'boolean',\n                            default: false,\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['feed'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            feed: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                                },\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'BlockedActor',\n                    },\n                    {\n                        name: 'BlockedByActor',\n                    },\n                ],\n            },\n        },\n    },\n    AppBskyFeedGetFeed: {\n        lexicon: 1,\n        id: 'app.bsky.feed.getFeed',\n        defs: {\n            main: {\n                type: 'query',\n                description: \"Get a hydrated feed from an actor's selected feed generator. Implemented by App View.\",\n                parameters: {\n                    type: 'params',\n                    required: ['feed'],\n                    properties: {\n                        feed: {\n                            type: 'string',\n                            format: 'at-uri',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['feed'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            feed: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                                },\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'UnknownFeed',\n                    },\n                ],\n            },\n        },\n    },\n    AppBskyFeedGetFeedGenerator: {\n        lexicon: 1,\n        id: 'app.bsky.feed.getFeedGenerator',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get information about a feed generator. Implemented by AppView.',\n                parameters: {\n                    type: 'params',\n                    required: ['feed'],\n                    properties: {\n                        feed: {\n                            type: 'string',\n                            format: 'at-uri',\n                            description: 'AT-URI of the feed generator record.',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['view', 'isOnline', 'isValid'],\n                        properties: {\n                            view: {\n                                type: 'ref',\n                                ref: 'lex:app.bsky.feed.defs#generatorView',\n                            },\n                            isOnline: {\n                                type: 'boolean',\n                                description: 'Indicates whether the feed generator service has been online recently, or else seems to be inactive.',\n                            },\n                            isValid: {\n                                type: 'boolean',\n                                description: 'Indicates whether the feed generator service is compatible with the record declaration.',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyFeedGetFeedGenerators: {\n        lexicon: 1,\n        id: 'app.bsky.feed.getFeedGenerators',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get information about a list of feed generators.',\n                parameters: {\n                    type: 'params',\n                    required: ['feeds'],\n                    properties: {\n                        feeds: {\n                            type: 'array',\n                            items: {\n                                type: 'string',\n                                format: 'at-uri',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['feeds'],\n                        properties: {\n                            feeds: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.feed.defs#generatorView',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyFeedGetFeedSkeleton: {\n        lexicon: 1,\n        id: 'app.bsky.feed.getFeedSkeleton',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get a skeleton of a feed provided by a feed generator. Auth is optional, depending on provider requirements, and provides the DID of the requester. Implemented by Feed Generator Service.',\n                parameters: {\n                    type: 'params',\n                    required: ['feed'],\n                    properties: {\n                        feed: {\n                            type: 'string',\n                            format: 'at-uri',\n                            description: 'Reference to feed generator record describing the specific feed being requested.',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['feed'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            feed: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.feed.defs#skeletonFeedPost',\n                                },\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'UnknownFeed',\n                    },\n                ],\n            },\n        },\n    },\n    AppBskyFeedGetLikes: {\n        lexicon: 1,\n        id: 'app.bsky.feed.getLikes',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get like records which reference a subject (by AT-URI and CID).',\n                parameters: {\n                    type: 'params',\n                    required: ['uri'],\n                    properties: {\n                        uri: {\n                            type: 'string',\n                            format: 'at-uri',\n                            description: 'AT-URI of the subject (eg, a post record).',\n                        },\n                        cid: {\n                            type: 'string',\n                            format: 'cid',\n                            description: 'CID of the subject record (aka, specific version of record), to filter likes.',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['uri', 'likes'],\n                        properties: {\n                            uri: {\n                                type: 'string',\n                                format: 'at-uri',\n                            },\n                            cid: {\n                                type: 'string',\n                                format: 'cid',\n                            },\n                            cursor: {\n                                type: 'string',\n                            },\n                            likes: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.feed.getLikes#like',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n            like: {\n                type: 'object',\n                required: ['indexedAt', 'createdAt', 'actor'],\n                properties: {\n                    indexedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    createdAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    actor: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#profileView',\n                    },\n                },\n            },\n        },\n    },\n    AppBskyFeedGetListFeed: {\n        lexicon: 1,\n        id: 'app.bsky.feed.getListFeed',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get a feed of recent posts from a list (posts and reposts from any actors on the list). Does not require auth.',\n                parameters: {\n                    type: 'params',\n                    required: ['list'],\n                    properties: {\n                        list: {\n                            type: 'string',\n                            format: 'at-uri',\n                            description: 'Reference (AT-URI) to the list record.',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['feed'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            feed: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                                },\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'UnknownList',\n                    },\n                ],\n            },\n        },\n    },\n    AppBskyFeedGetPostThread: {\n        lexicon: 1,\n        id: 'app.bsky.feed.getPostThread',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get posts in a thread. Does not require auth, but additional metadata and filtering will be applied for authed requests.',\n                parameters: {\n                    type: 'params',\n                    required: ['uri'],\n                    properties: {\n                        uri: {\n                            type: 'string',\n                            format: 'at-uri',\n                            description: 'Reference (AT-URI) to post record.',\n                        },\n                        depth: {\n                            type: 'integer',\n                            description: 'How many levels of reply depth should be included in response.',\n                            default: 6,\n                            minimum: 0,\n                            maximum: 1000,\n                        },\n                        parentHeight: {\n                            type: 'integer',\n                            description: 'How many levels of parent (and grandparent, etc) post to include.',\n                            default: 80,\n                            minimum: 0,\n                            maximum: 1000,\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['thread'],\n                        properties: {\n                            thread: {\n                                type: 'union',\n                                refs: [\n                                    'lex:app.bsky.feed.defs#threadViewPost',\n                                    'lex:app.bsky.feed.defs#notFoundPost',\n                                    'lex:app.bsky.feed.defs#blockedPost',\n                                ],\n                            },\n                            threadgate: {\n                                type: 'ref',\n                                ref: 'lex:app.bsky.feed.defs#threadgateView',\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'NotFound',\n                    },\n                ],\n            },\n        },\n    },\n    AppBskyFeedGetPosts: {\n        lexicon: 1,\n        id: 'app.bsky.feed.getPosts',\n        defs: {\n            main: {\n                type: 'query',\n                description: \"Gets post views for a specified list of posts (by AT-URI). This is sometimes referred to as 'hydrating' a 'feed skeleton'.\",\n                parameters: {\n                    type: 'params',\n                    required: ['uris'],\n                    properties: {\n                        uris: {\n                            type: 'array',\n                            description: 'List of post AT-URIs to return hydrated views for.',\n                            items: {\n                                type: 'string',\n                                format: 'at-uri',\n                            },\n                            maxLength: 25,\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['posts'],\n                        properties: {\n                            posts: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.feed.defs#postView',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyFeedGetQuotes: {\n        lexicon: 1,\n        id: 'app.bsky.feed.getQuotes',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get a list of quotes for a given post.',\n                parameters: {\n                    type: 'params',\n                    required: ['uri'],\n                    properties: {\n                        uri: {\n                            type: 'string',\n                            format: 'at-uri',\n                            description: 'Reference (AT-URI) of post record',\n                        },\n                        cid: {\n                            type: 'string',\n                            format: 'cid',\n                            description: 'If supplied, filters to quotes of specific version (by CID) of the post record.',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['uri', 'posts'],\n                        properties: {\n                            uri: {\n                                type: 'string',\n                                format: 'at-uri',\n                            },\n                            cid: {\n                                type: 'string',\n                                format: 'cid',\n                            },\n                            cursor: {\n                                type: 'string',\n                            },\n                            posts: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.feed.defs#postView',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyFeedGetRepostedBy: {\n        lexicon: 1,\n        id: 'app.bsky.feed.getRepostedBy',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get a list of reposts for a given post.',\n                parameters: {\n                    type: 'params',\n                    required: ['uri'],\n                    properties: {\n                        uri: {\n                            type: 'string',\n                            format: 'at-uri',\n                            description: 'Reference (AT-URI) of post record',\n                        },\n                        cid: {\n                            type: 'string',\n                            format: 'cid',\n                            description: 'If supplied, filters to reposts of specific version (by CID) of the post record.',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['uri', 'repostedBy'],\n                        properties: {\n                            uri: {\n                                type: 'string',\n                                format: 'at-uri',\n                            },\n                            cid: {\n                                type: 'string',\n                                format: 'cid',\n                            },\n                            cursor: {\n                                type: 'string',\n                            },\n                            repostedBy: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.actor.defs#profileView',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyFeedGetSuggestedFeeds: {\n        lexicon: 1,\n        id: 'app.bsky.feed.getSuggestedFeeds',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get a list of suggested feeds (feed generators) for the requesting account.',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['feeds'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            feeds: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.feed.defs#generatorView',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyFeedGetTimeline: {\n        lexicon: 1,\n        id: 'app.bsky.feed.getTimeline',\n        defs: {\n            main: {\n                type: 'query',\n                description: \"Get a view of the requesting account's home timeline. This is expected to be some form of reverse-chronological feed.\",\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        algorithm: {\n                            type: 'string',\n                            description: \"Variant 'algorithm' for timeline. Implementation-specific. NOTE: most feed flexibility has been moved to feed generator mechanism.\",\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['feed'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            feed: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyFeedLike: {\n        lexicon: 1,\n        id: 'app.bsky.feed.like',\n        defs: {\n            main: {\n                type: 'record',\n                description: \"Record declaring a 'like' of a piece of subject content.\",\n                key: 'tid',\n                record: {\n                    type: 'object',\n                    required: ['subject', 'createdAt'],\n                    properties: {\n                        subject: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.repo.strongRef',\n                        },\n                        createdAt: {\n                            type: 'string',\n                            format: 'datetime',\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyFeedPost: {\n        lexicon: 1,\n        id: 'app.bsky.feed.post',\n        defs: {\n            main: {\n                type: 'record',\n                description: 'Record containing a Bluesky post.',\n                key: 'tid',\n                record: {\n                    type: 'object',\n                    required: ['text', 'createdAt'],\n                    properties: {\n                        text: {\n                            type: 'string',\n                            maxLength: 3000,\n                            maxGraphemes: 300,\n                            description: 'The primary post content. May be an empty string, if there are embeds.',\n                        },\n                        entities: {\n                            type: 'array',\n                            description: 'DEPRECATED: replaced by app.bsky.richtext.facet.',\n                            items: {\n                                type: 'ref',\n                                ref: 'lex:app.bsky.feed.post#entity',\n                            },\n                        },\n                        facets: {\n                            type: 'array',\n                            description: 'Annotations of text (mentions, URLs, hashtags, etc)',\n                            items: {\n                                type: 'ref',\n                                ref: 'lex:app.bsky.richtext.facet',\n                            },\n                        },\n                        reply: {\n                            type: 'ref',\n                            ref: 'lex:app.bsky.feed.post#replyRef',\n                        },\n                        embed: {\n                            type: 'union',\n                            refs: [\n                                'lex:app.bsky.embed.images',\n                                'lex:app.bsky.embed.video',\n                                'lex:app.bsky.embed.external',\n                                'lex:app.bsky.embed.record',\n                                'lex:app.bsky.embed.recordWithMedia',\n                            ],\n                        },\n                        langs: {\n                            type: 'array',\n                            description: 'Indicates human language of post primary text content.',\n                            maxLength: 3,\n                            items: {\n                                type: 'string',\n                                format: 'language',\n                            },\n                        },\n                        labels: {\n                            type: 'union',\n                            description: 'Self-label values for this post. Effectively content warnings.',\n                            refs: ['lex:com.atproto.label.defs#selfLabels'],\n                        },\n                        tags: {\n                            type: 'array',\n                            description: 'Additional hashtags, in addition to any included in post text and facets.',\n                            maxLength: 8,\n                            items: {\n                                type: 'string',\n                                maxLength: 640,\n                                maxGraphemes: 64,\n                            },\n                        },\n                        createdAt: {\n                            type: 'string',\n                            format: 'datetime',\n                            description: 'Client-declared timestamp when this post was originally created.',\n                        },\n                    },\n                },\n            },\n            replyRef: {\n                type: 'object',\n                required: ['root', 'parent'],\n                properties: {\n                    root: {\n                        type: 'ref',\n                        ref: 'lex:com.atproto.repo.strongRef',\n                    },\n                    parent: {\n                        type: 'ref',\n                        ref: 'lex:com.atproto.repo.strongRef',\n                    },\n                },\n            },\n            entity: {\n                type: 'object',\n                description: 'Deprecated: use facets instead.',\n                required: ['index', 'type', 'value'],\n                properties: {\n                    index: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.feed.post#textSlice',\n                    },\n                    type: {\n                        type: 'string',\n                        description: \"Expected values are 'mention' and 'link'.\",\n                    },\n                    value: {\n                        type: 'string',\n                    },\n                },\n            },\n            textSlice: {\n                type: 'object',\n                description: 'Deprecated. Use app.bsky.richtext instead -- A text segment. Start is inclusive, end is exclusive. Indices are for utf16-encoded strings.',\n                required: ['start', 'end'],\n                properties: {\n                    start: {\n                        type: 'integer',\n                        minimum: 0,\n                    },\n                    end: {\n                        type: 'integer',\n                        minimum: 0,\n                    },\n                },\n            },\n        },\n    },\n    AppBskyFeedPostgate: {\n        lexicon: 1,\n        id: 'app.bsky.feed.postgate',\n        defs: {\n            main: {\n                type: 'record',\n                key: 'tid',\n                description: 'Record defining interaction rules for a post. The record key (rkey) of the postgate record must match the record key of the post, and that record must be in the same repository.',\n                record: {\n                    type: 'object',\n                    required: ['post', 'createdAt'],\n                    properties: {\n                        createdAt: {\n                            type: 'string',\n                            format: 'datetime',\n                        },\n                        post: {\n                            type: 'string',\n                            format: 'at-uri',\n                            description: 'Reference (AT-URI) to the post record.',\n                        },\n                        detachedEmbeddingUris: {\n                            type: 'array',\n                            maxLength: 50,\n                            items: {\n                                type: 'string',\n                                format: 'at-uri',\n                            },\n                            description: 'List of AT-URIs embedding this post that the author has detached from.',\n                        },\n                        embeddingRules: {\n                            description: 'List of rules defining who can embed this post. If value is an empty array or is undefined, no particular rules apply and anyone can embed.',\n                            type: 'array',\n                            maxLength: 5,\n                            items: {\n                                type: 'union',\n                                refs: ['lex:app.bsky.feed.postgate#disableRule'],\n                            },\n                        },\n                    },\n                },\n            },\n            disableRule: {\n                type: 'object',\n                description: 'Disables embedding of this post.',\n                properties: {},\n            },\n        },\n    },\n    AppBskyFeedRepost: {\n        lexicon: 1,\n        id: 'app.bsky.feed.repost',\n        defs: {\n            main: {\n                description: \"Record representing a 'repost' of an existing Bluesky post.\",\n                type: 'record',\n                key: 'tid',\n                record: {\n                    type: 'object',\n                    required: ['subject', 'createdAt'],\n                    properties: {\n                        subject: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.repo.strongRef',\n                        },\n                        createdAt: {\n                            type: 'string',\n                            format: 'datetime',\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyFeedSearchPosts: {\n        lexicon: 1,\n        id: 'app.bsky.feed.searchPosts',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Find posts matching search criteria, returning views of those posts.',\n                parameters: {\n                    type: 'params',\n                    required: ['q'],\n                    properties: {\n                        q: {\n                            type: 'string',\n                            description: 'Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.',\n                        },\n                        sort: {\n                            type: 'string',\n                            knownValues: ['top', 'latest'],\n                            default: 'latest',\n                            description: 'Specifies the ranking order of results.',\n                        },\n                        since: {\n                            type: 'string',\n                            description: \"Filter results for posts after the indicated datetime (inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYYY-MM-DD).\",\n                        },\n                        until: {\n                            type: 'string',\n                            description: \"Filter results for posts before the indicated datetime (not inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYY-MM-DD).\",\n                        },\n                        mentions: {\n                            type: 'string',\n                            format: 'at-identifier',\n                            description: 'Filter to posts which mention the given account. Handles are resolved to DID before query-time. Only matches rich-text facet mentions.',\n                        },\n                        author: {\n                            type: 'string',\n                            format: 'at-identifier',\n                            description: 'Filter to posts by the given account. Handles are resolved to DID before query-time.',\n                        },\n                        lang: {\n                            type: 'string',\n                            format: 'language',\n                            description: 'Filter to posts in the given language. Expected to be based on post language field, though server may override language detection.',\n                        },\n                        domain: {\n                            type: 'string',\n                            description: 'Filter to posts with URLs (facet links or embeds) linking to the given domain (hostname). Server may apply hostname normalization.',\n                        },\n                        url: {\n                            type: 'string',\n                            format: 'uri',\n                            description: 'Filter to posts with links (facet links or embeds) pointing to this URL. Server may apply URL normalization or fuzzy matching.',\n                        },\n                        tag: {\n                            type: 'array',\n                            items: {\n                                type: 'string',\n                                maxLength: 640,\n                                maxGraphemes: 64,\n                            },\n                            description: \"Filter to posts with the given tag (hashtag), based on rich-text facet or tag field. Do not include the hash (#) prefix. Multiple tags can be specified, with 'AND' matching.\",\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 25,\n                        },\n                        cursor: {\n                            type: 'string',\n                            description: 'Optional pagination mechanism; may not necessarily allow scrolling through entire result set.',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['posts'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            hitsTotal: {\n                                type: 'integer',\n                                description: 'Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits.',\n                            },\n                            posts: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.feed.defs#postView',\n                                },\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'BadQueryString',\n                    },\n                ],\n            },\n        },\n    },\n    AppBskyFeedSendInteractions: {\n        lexicon: 1,\n        id: 'app.bsky.feed.sendInteractions',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Send information about interactions with feed items back to the feed generator that served them.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['interactions'],\n                        properties: {\n                            interactions: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.feed.defs#interaction',\n                                },\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        properties: {},\n                    },\n                },\n            },\n        },\n    },\n    AppBskyFeedThreadgate: {\n        lexicon: 1,\n        id: 'app.bsky.feed.threadgate',\n        defs: {\n            main: {\n                type: 'record',\n                key: 'tid',\n                description: \"Record defining interaction gating rules for a thread (aka, reply controls). The record key (rkey) of the threadgate record must match the record key of the thread's root post, and that record must be in the same repository.\",\n                record: {\n                    type: 'object',\n                    required: ['post', 'createdAt'],\n                    properties: {\n                        post: {\n                            type: 'string',\n                            format: 'at-uri',\n                            description: 'Reference (AT-URI) to the post record.',\n                        },\n                        allow: {\n                            description: 'List of rules defining who can reply to this post. If value is an empty array, no one can reply. If value is undefined, anyone can reply.',\n                            type: 'array',\n                            maxLength: 5,\n                            items: {\n                                type: 'union',\n                                refs: [\n                                    'lex:app.bsky.feed.threadgate#mentionRule',\n                                    'lex:app.bsky.feed.threadgate#followerRule',\n                                    'lex:app.bsky.feed.threadgate#followingRule',\n                                    'lex:app.bsky.feed.threadgate#listRule',\n                                ],\n                            },\n                        },\n                        createdAt: {\n                            type: 'string',\n                            format: 'datetime',\n                        },\n                        hiddenReplies: {\n                            type: 'array',\n                            maxLength: 50,\n                            items: {\n                                type: 'string',\n                                format: 'at-uri',\n                            },\n                            description: 'List of hidden reply URIs.',\n                        },\n                    },\n                },\n            },\n            mentionRule: {\n                type: 'object',\n                description: 'Allow replies from actors mentioned in your post.',\n                properties: {},\n            },\n            followerRule: {\n                type: 'object',\n                description: 'Allow replies from actors who follow you.',\n                properties: {},\n            },\n            followingRule: {\n                type: 'object',\n                description: 'Allow replies from actors you follow.',\n                properties: {},\n            },\n            listRule: {\n                type: 'object',\n                description: 'Allow replies from actors on a list.',\n                required: ['list'],\n                properties: {\n                    list: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphBlock: {\n        lexicon: 1,\n        id: 'app.bsky.graph.block',\n        defs: {\n            main: {\n                type: 'record',\n                description: \"Record declaring a 'block' relationship against another account. NOTE: blocks are public in Bluesky; see blog posts for details.\",\n                key: 'tid',\n                record: {\n                    type: 'object',\n                    required: ['subject', 'createdAt'],\n                    properties: {\n                        subject: {\n                            type: 'string',\n                            format: 'did',\n                            description: 'DID of the account to be blocked.',\n                        },\n                        createdAt: {\n                            type: 'string',\n                            format: 'datetime',\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphDefs: {\n        lexicon: 1,\n        id: 'app.bsky.graph.defs',\n        defs: {\n            listViewBasic: {\n                type: 'object',\n                required: ['uri', 'cid', 'name', 'purpose'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    cid: {\n                        type: 'string',\n                        format: 'cid',\n                    },\n                    name: {\n                        type: 'string',\n                        maxLength: 64,\n                        minLength: 1,\n                    },\n                    purpose: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.graph.defs#listPurpose',\n                    },\n                    avatar: {\n                        type: 'string',\n                        format: 'uri',\n                    },\n                    listItemCount: {\n                        type: 'integer',\n                        minimum: 0,\n                    },\n                    labels: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.label.defs#label',\n                        },\n                    },\n                    viewer: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.graph.defs#listViewerState',\n                    },\n                    indexedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                },\n            },\n            listView: {\n                type: 'object',\n                required: ['uri', 'cid', 'creator', 'name', 'purpose', 'indexedAt'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    cid: {\n                        type: 'string',\n                        format: 'cid',\n                    },\n                    creator: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#profileView',\n                    },\n                    name: {\n                        type: 'string',\n                        maxLength: 64,\n                        minLength: 1,\n                    },\n                    purpose: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.graph.defs#listPurpose',\n                    },\n                    description: {\n                        type: 'string',\n                        maxGraphemes: 300,\n                        maxLength: 3000,\n                    },\n                    descriptionFacets: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:app.bsky.richtext.facet',\n                        },\n                    },\n                    avatar: {\n                        type: 'string',\n                        format: 'uri',\n                    },\n                    listItemCount: {\n                        type: 'integer',\n                        minimum: 0,\n                    },\n                    labels: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.label.defs#label',\n                        },\n                    },\n                    viewer: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.graph.defs#listViewerState',\n                    },\n                    indexedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                },\n            },\n            listItemView: {\n                type: 'object',\n                required: ['uri', 'subject'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    subject: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#profileView',\n                    },\n                },\n            },\n            starterPackView: {\n                type: 'object',\n                required: ['uri', 'cid', 'record', 'creator', 'indexedAt'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    cid: {\n                        type: 'string',\n                        format: 'cid',\n                    },\n                    record: {\n                        type: 'unknown',\n                    },\n                    creator: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n                    },\n                    list: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.graph.defs#listViewBasic',\n                    },\n                    listItemsSample: {\n                        type: 'array',\n                        maxLength: 12,\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:app.bsky.graph.defs#listItemView',\n                        },\n                    },\n                    feeds: {\n                        type: 'array',\n                        maxLength: 3,\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:app.bsky.feed.defs#generatorView',\n                        },\n                    },\n                    joinedWeekCount: {\n                        type: 'integer',\n                        minimum: 0,\n                    },\n                    joinedAllTimeCount: {\n                        type: 'integer',\n                        minimum: 0,\n                    },\n                    labels: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.label.defs#label',\n                        },\n                    },\n                    indexedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                },\n            },\n            starterPackViewBasic: {\n                type: 'object',\n                required: ['uri', 'cid', 'record', 'creator', 'indexedAt'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    cid: {\n                        type: 'string',\n                        format: 'cid',\n                    },\n                    record: {\n                        type: 'unknown',\n                    },\n                    creator: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n                    },\n                    listItemCount: {\n                        type: 'integer',\n                        minimum: 0,\n                    },\n                    joinedWeekCount: {\n                        type: 'integer',\n                        minimum: 0,\n                    },\n                    joinedAllTimeCount: {\n                        type: 'integer',\n                        minimum: 0,\n                    },\n                    labels: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.label.defs#label',\n                        },\n                    },\n                    indexedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                },\n            },\n            listPurpose: {\n                type: 'string',\n                knownValues: [\n                    'app.bsky.graph.defs#modlist',\n                    'app.bsky.graph.defs#curatelist',\n                    'app.bsky.graph.defs#referencelist',\n                ],\n            },\n            modlist: {\n                type: 'token',\n                description: 'A list of actors to apply an aggregate moderation action (mute/block) on.',\n            },\n            curatelist: {\n                type: 'token',\n                description: 'A list of actors used for curation purposes such as list feeds or interaction gating.',\n            },\n            referencelist: {\n                type: 'token',\n                description: 'A list of actors used for only for reference purposes such as within a starter pack.',\n            },\n            listViewerState: {\n                type: 'object',\n                properties: {\n                    muted: {\n                        type: 'boolean',\n                    },\n                    blocked: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                },\n            },\n            notFoundActor: {\n                type: 'object',\n                description: 'indicates that a handle or DID could not be resolved',\n                required: ['actor', 'notFound'],\n                properties: {\n                    actor: {\n                        type: 'string',\n                        format: 'at-identifier',\n                    },\n                    notFound: {\n                        type: 'boolean',\n                        const: true,\n                    },\n                },\n            },\n            relationship: {\n                type: 'object',\n                description: 'lists the bi-directional graph relationships between one actor (not indicated in the object), and the target actors (the DID included in the object)',\n                required: ['did'],\n                properties: {\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                    following: {\n                        type: 'string',\n                        format: 'at-uri',\n                        description: 'if the actor follows this DID, this is the AT-URI of the follow record',\n                    },\n                    followedBy: {\n                        type: 'string',\n                        format: 'at-uri',\n                        description: 'if the actor is followed by this DID, contains the AT-URI of the follow record',\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphFollow: {\n        lexicon: 1,\n        id: 'app.bsky.graph.follow',\n        defs: {\n            main: {\n                type: 'record',\n                description: \"Record declaring a social 'follow' relationship of another account. Duplicate follows will be ignored by the AppView.\",\n                key: 'tid',\n                record: {\n                    type: 'object',\n                    required: ['subject', 'createdAt'],\n                    properties: {\n                        subject: {\n                            type: 'string',\n                            format: 'did',\n                        },\n                        createdAt: {\n                            type: 'string',\n                            format: 'datetime',\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphGetActorStarterPacks: {\n        lexicon: 1,\n        id: 'app.bsky.graph.getActorStarterPacks',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get a list of starter packs created by the actor.',\n                parameters: {\n                    type: 'params',\n                    required: ['actor'],\n                    properties: {\n                        actor: {\n                            type: 'string',\n                            format: 'at-identifier',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['starterPacks'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            starterPacks: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.graph.defs#starterPackViewBasic',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphGetBlocks: {\n        lexicon: 1,\n        id: 'app.bsky.graph.getBlocks',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Enumerates which accounts the requesting account is currently blocking. Requires auth.',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['blocks'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            blocks: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.actor.defs#profileView',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphGetFollowers: {\n        lexicon: 1,\n        id: 'app.bsky.graph.getFollowers',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Enumerates accounts which follow a specified account (actor).',\n                parameters: {\n                    type: 'params',\n                    required: ['actor'],\n                    properties: {\n                        actor: {\n                            type: 'string',\n                            format: 'at-identifier',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['subject', 'followers'],\n                        properties: {\n                            subject: {\n                                type: 'ref',\n                                ref: 'lex:app.bsky.actor.defs#profileView',\n                            },\n                            cursor: {\n                                type: 'string',\n                            },\n                            followers: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.actor.defs#profileView',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphGetFollows: {\n        lexicon: 1,\n        id: 'app.bsky.graph.getFollows',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Enumerates accounts which a specified account (actor) follows.',\n                parameters: {\n                    type: 'params',\n                    required: ['actor'],\n                    properties: {\n                        actor: {\n                            type: 'string',\n                            format: 'at-identifier',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['subject', 'follows'],\n                        properties: {\n                            subject: {\n                                type: 'ref',\n                                ref: 'lex:app.bsky.actor.defs#profileView',\n                            },\n                            cursor: {\n                                type: 'string',\n                            },\n                            follows: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.actor.defs#profileView',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphGetKnownFollowers: {\n        lexicon: 1,\n        id: 'app.bsky.graph.getKnownFollowers',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Enumerates accounts which follow a specified account (actor) and are followed by the viewer.',\n                parameters: {\n                    type: 'params',\n                    required: ['actor'],\n                    properties: {\n                        actor: {\n                            type: 'string',\n                            format: 'at-identifier',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['subject', 'followers'],\n                        properties: {\n                            subject: {\n                                type: 'ref',\n                                ref: 'lex:app.bsky.actor.defs#profileView',\n                            },\n                            cursor: {\n                                type: 'string',\n                            },\n                            followers: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.actor.defs#profileView',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphGetList: {\n        lexicon: 1,\n        id: 'app.bsky.graph.getList',\n        defs: {\n            main: {\n                type: 'query',\n                description: \"Gets a 'view' (with additional context) of a specified list.\",\n                parameters: {\n                    type: 'params',\n                    required: ['list'],\n                    properties: {\n                        list: {\n                            type: 'string',\n                            format: 'at-uri',\n                            description: 'Reference (AT-URI) of the list record to hydrate.',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['list', 'items'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            list: {\n                                type: 'ref',\n                                ref: 'lex:app.bsky.graph.defs#listView',\n                            },\n                            items: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.graph.defs#listItemView',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphGetListBlocks: {\n        lexicon: 1,\n        id: 'app.bsky.graph.getListBlocks',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get mod lists that the requesting account (actor) is blocking. Requires auth.',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['lists'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            lists: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.graph.defs#listView',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphGetListMutes: {\n        lexicon: 1,\n        id: 'app.bsky.graph.getListMutes',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Enumerates mod lists that the requesting account (actor) currently has muted. Requires auth.',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['lists'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            lists: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.graph.defs#listView',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphGetLists: {\n        lexicon: 1,\n        id: 'app.bsky.graph.getLists',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Enumerates the lists created by a specified account (actor).',\n                parameters: {\n                    type: 'params',\n                    required: ['actor'],\n                    properties: {\n                        actor: {\n                            type: 'string',\n                            format: 'at-identifier',\n                            description: 'The account (actor) to enumerate lists from.',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['lists'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            lists: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.graph.defs#listView',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphGetMutes: {\n        lexicon: 1,\n        id: 'app.bsky.graph.getMutes',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Enumerates accounts that the requesting account (actor) currently has muted. Requires auth.',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['mutes'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            mutes: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.actor.defs#profileView',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphGetRelationships: {\n        lexicon: 1,\n        id: 'app.bsky.graph.getRelationships',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Enumerates public relationships between one account, and a list of other accounts. Does not require auth.',\n                parameters: {\n                    type: 'params',\n                    required: ['actor'],\n                    properties: {\n                        actor: {\n                            type: 'string',\n                            format: 'at-identifier',\n                            description: 'Primary account requesting relationships for.',\n                        },\n                        others: {\n                            type: 'array',\n                            description: \"List of 'other' accounts to be related back to the primary.\",\n                            maxLength: 30,\n                            items: {\n                                type: 'string',\n                                format: 'at-identifier',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['relationships'],\n                        properties: {\n                            actor: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                            relationships: {\n                                type: 'array',\n                                items: {\n                                    type: 'union',\n                                    refs: [\n                                        'lex:app.bsky.graph.defs#relationship',\n                                        'lex:app.bsky.graph.defs#notFoundActor',\n                                    ],\n                                },\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'ActorNotFound',\n                        description: 'the primary actor at-identifier could not be resolved',\n                    },\n                ],\n            },\n        },\n    },\n    AppBskyGraphGetStarterPack: {\n        lexicon: 1,\n        id: 'app.bsky.graph.getStarterPack',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Gets a view of a starter pack.',\n                parameters: {\n                    type: 'params',\n                    required: ['starterPack'],\n                    properties: {\n                        starterPack: {\n                            type: 'string',\n                            format: 'at-uri',\n                            description: 'Reference (AT-URI) of the starter pack record.',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['starterPack'],\n                        properties: {\n                            starterPack: {\n                                type: 'ref',\n                                ref: 'lex:app.bsky.graph.defs#starterPackView',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphGetStarterPacks: {\n        lexicon: 1,\n        id: 'app.bsky.graph.getStarterPacks',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get views for a list of starter packs.',\n                parameters: {\n                    type: 'params',\n                    required: ['uris'],\n                    properties: {\n                        uris: {\n                            type: 'array',\n                            items: {\n                                type: 'string',\n                                format: 'at-uri',\n                            },\n                            maxLength: 25,\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['starterPacks'],\n                        properties: {\n                            starterPacks: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.graph.defs#starterPackViewBasic',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphGetSuggestedFollowsByActor: {\n        lexicon: 1,\n        id: 'app.bsky.graph.getSuggestedFollowsByActor',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Enumerates follows similar to a given account (actor). Expected use is to recommend additional accounts immediately after following one account.',\n                parameters: {\n                    type: 'params',\n                    required: ['actor'],\n                    properties: {\n                        actor: {\n                            type: 'string',\n                            format: 'at-identifier',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['suggestions'],\n                        properties: {\n                            suggestions: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.actor.defs#profileView',\n                                },\n                            },\n                            isFallback: {\n                                type: 'boolean',\n                                description: 'If true, response has fallen-back to generic results, and is not scoped using relativeToDid',\n                                default: false,\n                            },\n                            recId: {\n                                type: 'integer',\n                                description: 'Snowflake for this recommendation, use when submitting recommendation events.',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphList: {\n        lexicon: 1,\n        id: 'app.bsky.graph.list',\n        defs: {\n            main: {\n                type: 'record',\n                description: 'Record representing a list of accounts (actors). Scope includes both moderation-oriented lists and curration-oriented lists.',\n                key: 'tid',\n                record: {\n                    type: 'object',\n                    required: ['name', 'purpose', 'createdAt'],\n                    properties: {\n                        purpose: {\n                            type: 'ref',\n                            description: 'Defines the purpose of the list (aka, moderation-oriented or curration-oriented)',\n                            ref: 'lex:app.bsky.graph.defs#listPurpose',\n                        },\n                        name: {\n                            type: 'string',\n                            maxLength: 64,\n                            minLength: 1,\n                            description: 'Display name for list; can not be empty.',\n                        },\n                        description: {\n                            type: 'string',\n                            maxGraphemes: 300,\n                            maxLength: 3000,\n                        },\n                        descriptionFacets: {\n                            type: 'array',\n                            items: {\n                                type: 'ref',\n                                ref: 'lex:app.bsky.richtext.facet',\n                            },\n                        },\n                        avatar: {\n                            type: 'blob',\n                            accept: ['image/png', 'image/jpeg'],\n                            maxSize: 1000000,\n                        },\n                        labels: {\n                            type: 'union',\n                            refs: ['lex:com.atproto.label.defs#selfLabels'],\n                        },\n                        createdAt: {\n                            type: 'string',\n                            format: 'datetime',\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphListblock: {\n        lexicon: 1,\n        id: 'app.bsky.graph.listblock',\n        defs: {\n            main: {\n                type: 'record',\n                description: 'Record representing a block relationship against an entire an entire list of accounts (actors).',\n                key: 'tid',\n                record: {\n                    type: 'object',\n                    required: ['subject', 'createdAt'],\n                    properties: {\n                        subject: {\n                            type: 'string',\n                            format: 'at-uri',\n                            description: 'Reference (AT-URI) to the mod list record.',\n                        },\n                        createdAt: {\n                            type: 'string',\n                            format: 'datetime',\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphListitem: {\n        lexicon: 1,\n        id: 'app.bsky.graph.listitem',\n        defs: {\n            main: {\n                type: 'record',\n                description: \"Record representing an account's inclusion on a specific list. The AppView will ignore duplicate listitem records.\",\n                key: 'tid',\n                record: {\n                    type: 'object',\n                    required: ['subject', 'list', 'createdAt'],\n                    properties: {\n                        subject: {\n                            type: 'string',\n                            format: 'did',\n                            description: 'The account which is included on the list.',\n                        },\n                        list: {\n                            type: 'string',\n                            format: 'at-uri',\n                            description: 'Reference (AT-URI) to the list record (app.bsky.graph.list).',\n                        },\n                        createdAt: {\n                            type: 'string',\n                            format: 'datetime',\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphMuteActor: {\n        lexicon: 1,\n        id: 'app.bsky.graph.muteActor',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Creates a mute relationship for the specified account. Mutes are private in Bluesky. Requires auth.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['actor'],\n                        properties: {\n                            actor: {\n                                type: 'string',\n                                format: 'at-identifier',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphMuteActorList: {\n        lexicon: 1,\n        id: 'app.bsky.graph.muteActorList',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Creates a mute relationship for the specified list of accounts. Mutes are private in Bluesky. Requires auth.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['list'],\n                        properties: {\n                            list: {\n                                type: 'string',\n                                format: 'at-uri',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphMuteThread: {\n        lexicon: 1,\n        id: 'app.bsky.graph.muteThread',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Mutes a thread preventing notifications from the thread and any of its children. Mutes are private in Bluesky. Requires auth.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['root'],\n                        properties: {\n                            root: {\n                                type: 'string',\n                                format: 'at-uri',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphSearchStarterPacks: {\n        lexicon: 1,\n        id: 'app.bsky.graph.searchStarterPacks',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Find starter packs matching search criteria. Does not require auth.',\n                parameters: {\n                    type: 'params',\n                    required: ['q'],\n                    properties: {\n                        q: {\n                            type: 'string',\n                            description: 'Search query string. Syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 25,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['starterPacks'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            starterPacks: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.graph.defs#starterPackViewBasic',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphStarterpack: {\n        lexicon: 1,\n        id: 'app.bsky.graph.starterpack',\n        defs: {\n            main: {\n                type: 'record',\n                description: 'Record defining a starter pack of actors and feeds for new users.',\n                key: 'tid',\n                record: {\n                    type: 'object',\n                    required: ['name', 'list', 'createdAt'],\n                    properties: {\n                        name: {\n                            type: 'string',\n                            maxGraphemes: 50,\n                            maxLength: 500,\n                            minLength: 1,\n                            description: 'Display name for starter pack; can not be empty.',\n                        },\n                        description: {\n                            type: 'string',\n                            maxGraphemes: 300,\n                            maxLength: 3000,\n                        },\n                        descriptionFacets: {\n                            type: 'array',\n                            items: {\n                                type: 'ref',\n                                ref: 'lex:app.bsky.richtext.facet',\n                            },\n                        },\n                        list: {\n                            type: 'string',\n                            format: 'at-uri',\n                            description: 'Reference (AT-URI) to the list record.',\n                        },\n                        feeds: {\n                            type: 'array',\n                            maxLength: 3,\n                            items: {\n                                type: 'ref',\n                                ref: 'lex:app.bsky.graph.starterpack#feedItem',\n                            },\n                        },\n                        createdAt: {\n                            type: 'string',\n                            format: 'datetime',\n                        },\n                    },\n                },\n            },\n            feedItem: {\n                type: 'object',\n                required: ['uri'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphUnmuteActor: {\n        lexicon: 1,\n        id: 'app.bsky.graph.unmuteActor',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Unmutes the specified account. Requires auth.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['actor'],\n                        properties: {\n                            actor: {\n                                type: 'string',\n                                format: 'at-identifier',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphUnmuteActorList: {\n        lexicon: 1,\n        id: 'app.bsky.graph.unmuteActorList',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Unmutes the specified list of accounts. Requires auth.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['list'],\n                        properties: {\n                            list: {\n                                type: 'string',\n                                format: 'at-uri',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyGraphUnmuteThread: {\n        lexicon: 1,\n        id: 'app.bsky.graph.unmuteThread',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Unmutes the specified thread. Requires auth.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['root'],\n                        properties: {\n                            root: {\n                                type: 'string',\n                                format: 'at-uri',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyLabelerDefs: {\n        lexicon: 1,\n        id: 'app.bsky.labeler.defs',\n        defs: {\n            labelerView: {\n                type: 'object',\n                required: ['uri', 'cid', 'creator', 'indexedAt'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    cid: {\n                        type: 'string',\n                        format: 'cid',\n                    },\n                    creator: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#profileView',\n                    },\n                    likeCount: {\n                        type: 'integer',\n                        minimum: 0,\n                    },\n                    viewer: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.labeler.defs#labelerViewerState',\n                    },\n                    indexedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    labels: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.label.defs#label',\n                        },\n                    },\n                },\n            },\n            labelerViewDetailed: {\n                type: 'object',\n                required: ['uri', 'cid', 'creator', 'policies', 'indexedAt'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    cid: {\n                        type: 'string',\n                        format: 'cid',\n                    },\n                    creator: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#profileView',\n                    },\n                    policies: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.labeler.defs#labelerPolicies',\n                    },\n                    likeCount: {\n                        type: 'integer',\n                        minimum: 0,\n                    },\n                    viewer: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.labeler.defs#labelerViewerState',\n                    },\n                    indexedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    labels: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.label.defs#label',\n                        },\n                    },\n                },\n            },\n            labelerViewerState: {\n                type: 'object',\n                properties: {\n                    like: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                },\n            },\n            labelerPolicies: {\n                type: 'object',\n                required: ['labelValues'],\n                properties: {\n                    labelValues: {\n                        type: 'array',\n                        description: 'The label values which this labeler publishes. May include global or custom labels.',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.label.defs#labelValue',\n                        },\n                    },\n                    labelValueDefinitions: {\n                        type: 'array',\n                        description: 'Label values created by this labeler and scoped exclusively to it. Labels defined here will override global label definitions for this labeler.',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.label.defs#labelValueDefinition',\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyLabelerGetServices: {\n        lexicon: 1,\n        id: 'app.bsky.labeler.getServices',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get information about a list of labeler services.',\n                parameters: {\n                    type: 'params',\n                    required: ['dids'],\n                    properties: {\n                        dids: {\n                            type: 'array',\n                            items: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                        },\n                        detailed: {\n                            type: 'boolean',\n                            default: false,\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['views'],\n                        properties: {\n                            views: {\n                                type: 'array',\n                                items: {\n                                    type: 'union',\n                                    refs: [\n                                        'lex:app.bsky.labeler.defs#labelerView',\n                                        'lex:app.bsky.labeler.defs#labelerViewDetailed',\n                                    ],\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyLabelerService: {\n        lexicon: 1,\n        id: 'app.bsky.labeler.service',\n        defs: {\n            main: {\n                type: 'record',\n                description: 'A declaration of the existence of labeler service.',\n                key: 'literal:self',\n                record: {\n                    type: 'object',\n                    required: ['policies', 'createdAt'],\n                    properties: {\n                        policies: {\n                            type: 'ref',\n                            ref: 'lex:app.bsky.labeler.defs#labelerPolicies',\n                        },\n                        labels: {\n                            type: 'union',\n                            refs: ['lex:com.atproto.label.defs#selfLabels'],\n                        },\n                        createdAt: {\n                            type: 'string',\n                            format: 'datetime',\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyNotificationGetUnreadCount: {\n        lexicon: 1,\n        id: 'app.bsky.notification.getUnreadCount',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Count the number of unread notifications for the requesting account. Requires auth.',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        priority: {\n                            type: 'boolean',\n                        },\n                        seenAt: {\n                            type: 'string',\n                            format: 'datetime',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['count'],\n                        properties: {\n                            count: {\n                                type: 'integer',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyNotificationListNotifications: {\n        lexicon: 1,\n        id: 'app.bsky.notification.listNotifications',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Enumerate notifications for the requesting account. Requires auth.',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        reasons: {\n                            description: 'Notification reasons to include in response.',\n                            type: 'array',\n                            items: {\n                                type: 'string',\n                                description: 'A reason that matches the reason property of #notification.',\n                            },\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        priority: {\n                            type: 'boolean',\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                        seenAt: {\n                            type: 'string',\n                            format: 'datetime',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['notifications'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            notifications: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.notification.listNotifications#notification',\n                                },\n                            },\n                            priority: {\n                                type: 'boolean',\n                            },\n                            seenAt: {\n                                type: 'string',\n                                format: 'datetime',\n                            },\n                        },\n                    },\n                },\n            },\n            notification: {\n                type: 'object',\n                required: [\n                    'uri',\n                    'cid',\n                    'author',\n                    'reason',\n                    'record',\n                    'isRead',\n                    'indexedAt',\n                ],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    cid: {\n                        type: 'string',\n                        format: 'cid',\n                    },\n                    author: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#profileView',\n                    },\n                    reason: {\n                        type: 'string',\n                        description: \"Expected values are 'like', 'repost', 'follow', 'mention', 'reply', 'quote', and 'starterpack-joined'.\",\n                        knownValues: [\n                            'like',\n                            'repost',\n                            'follow',\n                            'mention',\n                            'reply',\n                            'quote',\n                            'starterpack-joined',\n                        ],\n                    },\n                    reasonSubject: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    record: {\n                        type: 'unknown',\n                    },\n                    isRead: {\n                        type: 'boolean',\n                    },\n                    indexedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    labels: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.label.defs#label',\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyNotificationPutPreferences: {\n        lexicon: 1,\n        id: 'app.bsky.notification.putPreferences',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Set notification-related preferences for an account. Requires auth.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['priority'],\n                        properties: {\n                            priority: {\n                                type: 'boolean',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyNotificationRegisterPush: {\n        lexicon: 1,\n        id: 'app.bsky.notification.registerPush',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Register to receive push notifications, via a specified service, for the requesting account. Requires auth.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['serviceDid', 'token', 'platform', 'appId'],\n                        properties: {\n                            serviceDid: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                            token: {\n                                type: 'string',\n                            },\n                            platform: {\n                                type: 'string',\n                                knownValues: ['ios', 'android', 'web'],\n                            },\n                            appId: {\n                                type: 'string',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyNotificationUpdateSeen: {\n        lexicon: 1,\n        id: 'app.bsky.notification.updateSeen',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Notify server that the requesting account has seen notifications. Requires auth.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['seenAt'],\n                        properties: {\n                            seenAt: {\n                                type: 'string',\n                                format: 'datetime',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyRichtextFacet: {\n        lexicon: 1,\n        id: 'app.bsky.richtext.facet',\n        defs: {\n            main: {\n                type: 'object',\n                description: 'Annotation of a sub-string within rich text.',\n                required: ['index', 'features'],\n                properties: {\n                    index: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.richtext.facet#byteSlice',\n                    },\n                    features: {\n                        type: 'array',\n                        items: {\n                            type: 'union',\n                            refs: [\n                                'lex:app.bsky.richtext.facet#mention',\n                                'lex:app.bsky.richtext.facet#link',\n                                'lex:app.bsky.richtext.facet#tag',\n                            ],\n                        },\n                    },\n                },\n            },\n            mention: {\n                type: 'object',\n                description: \"Facet feature for mention of another account. The text is usually a handle, including a '@' prefix, but the facet reference is a DID.\",\n                required: ['did'],\n                properties: {\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                },\n            },\n            link: {\n                type: 'object',\n                description: 'Facet feature for a URL. The text URL may have been simplified or truncated, but the facet reference should be a complete URL.',\n                required: ['uri'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'uri',\n                    },\n                },\n            },\n            tag: {\n                type: 'object',\n                description: \"Facet feature for a hashtag. The text usually includes a '#' prefix, but the facet reference should not (except in the case of 'double hash tags').\",\n                required: ['tag'],\n                properties: {\n                    tag: {\n                        type: 'string',\n                        maxLength: 640,\n                        maxGraphemes: 64,\n                    },\n                },\n            },\n            byteSlice: {\n                type: 'object',\n                description: 'Specifies the sub-string range a facet feature applies to. Start index is inclusive, end index is exclusive. Indices are zero-indexed, counting bytes of the UTF-8 encoded text. NOTE: some languages, like Javascript, use UTF-16 or Unicode codepoints for string slice indexing; in these languages, convert to byte arrays before working with facets.',\n                required: ['byteStart', 'byteEnd'],\n                properties: {\n                    byteStart: {\n                        type: 'integer',\n                        minimum: 0,\n                    },\n                    byteEnd: {\n                        type: 'integer',\n                        minimum: 0,\n                    },\n                },\n            },\n        },\n    },\n    AppBskyUnspeccedDefs: {\n        lexicon: 1,\n        id: 'app.bsky.unspecced.defs',\n        defs: {\n            skeletonSearchPost: {\n                type: 'object',\n                required: ['uri'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                },\n            },\n            skeletonSearchActor: {\n                type: 'object',\n                required: ['did'],\n                properties: {\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                },\n            },\n            skeletonSearchStarterPack: {\n                type: 'object',\n                required: ['uri'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                },\n            },\n            trendingTopic: {\n                type: 'object',\n                required: ['topic', 'link'],\n                properties: {\n                    topic: {\n                        type: 'string',\n                    },\n                    displayName: {\n                        type: 'string',\n                    },\n                    description: {\n                        type: 'string',\n                    },\n                    link: {\n                        type: 'string',\n                    },\n                },\n            },\n        },\n    },\n    AppBskyUnspeccedGetConfig: {\n        lexicon: 1,\n        id: 'app.bsky.unspecced.getConfig',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get miscellaneous runtime configuration.',\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: [],\n                        properties: {\n                            checkEmailConfirmed: {\n                                type: 'boolean',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyUnspeccedGetPopularFeedGenerators: {\n        lexicon: 1,\n        id: 'app.bsky.unspecced.getPopularFeedGenerators',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'An unspecced view of globally popular feed generators.',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                        query: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['feeds'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            feeds: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.feed.defs#generatorView',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyUnspeccedGetSuggestionsSkeleton: {\n        lexicon: 1,\n        id: 'app.bsky.unspecced.getSuggestionsSkeleton',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get a skeleton of suggested actors. Intended to be called and then hydrated through app.bsky.actor.getSuggestions',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        viewer: {\n                            type: 'string',\n                            format: 'did',\n                            description: 'DID of the account making the request (not included for public/unauthenticated queries). Used to boost followed accounts in ranking.',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                        relativeToDid: {\n                            type: 'string',\n                            format: 'did',\n                            description: 'DID of the account to get suggestions relative to. If not provided, suggestions will be based on the viewer.',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['actors'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            actors: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.unspecced.defs#skeletonSearchActor',\n                                },\n                            },\n                            relativeToDid: {\n                                type: 'string',\n                                format: 'did',\n                                description: 'DID of the account these suggestions are relative to. If this is returned undefined, suggestions are based on the viewer.',\n                            },\n                            recId: {\n                                type: 'integer',\n                                description: 'Snowflake for this recommendation, use when submitting recommendation events.',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyUnspeccedGetTaggedSuggestions: {\n        lexicon: 1,\n        id: 'app.bsky.unspecced.getTaggedSuggestions',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get a list of suggestions (feeds and users) tagged with categories',\n                parameters: {\n                    type: 'params',\n                    properties: {},\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['suggestions'],\n                        properties: {\n                            suggestions: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.unspecced.getTaggedSuggestions#suggestion',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n            suggestion: {\n                type: 'object',\n                required: ['tag', 'subjectType', 'subject'],\n                properties: {\n                    tag: {\n                        type: 'string',\n                    },\n                    subjectType: {\n                        type: 'string',\n                        knownValues: ['actor', 'feed'],\n                    },\n                    subject: {\n                        type: 'string',\n                        format: 'uri',\n                    },\n                },\n            },\n        },\n    },\n    AppBskyUnspeccedGetTrendingTopics: {\n        lexicon: 1,\n        id: 'app.bsky.unspecced.getTrendingTopics',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get a list of trending topics',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        viewer: {\n                            type: 'string',\n                            format: 'did',\n                            description: 'DID of the account making the request (not included for public/unauthenticated queries). Used to boost followed accounts in ranking.',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 25,\n                            default: 10,\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['topics', 'suggested'],\n                        properties: {\n                            topics: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.unspecced.defs#trendingTopic',\n                                },\n                            },\n                            suggested: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.unspecced.defs#trendingTopic',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyUnspeccedSearchActorsSkeleton: {\n        lexicon: 1,\n        id: 'app.bsky.unspecced.searchActorsSkeleton',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Backend Actors (profile) search, returns only skeleton.',\n                parameters: {\n                    type: 'params',\n                    required: ['q'],\n                    properties: {\n                        q: {\n                            type: 'string',\n                            description: 'Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. For typeahead search, only simple term match is supported, not full syntax.',\n                        },\n                        viewer: {\n                            type: 'string',\n                            format: 'did',\n                            description: 'DID of the account making the request (not included for public/unauthenticated queries). Used to boost followed accounts in ranking.',\n                        },\n                        typeahead: {\n                            type: 'boolean',\n                            description: \"If true, acts as fast/simple 'typeahead' query.\",\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 25,\n                        },\n                        cursor: {\n                            type: 'string',\n                            description: 'Optional pagination mechanism; may not necessarily allow scrolling through entire result set.',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['actors'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            hitsTotal: {\n                                type: 'integer',\n                                description: 'Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits.',\n                            },\n                            actors: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.unspecced.defs#skeletonSearchActor',\n                                },\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'BadQueryString',\n                    },\n                ],\n            },\n        },\n    },\n    AppBskyUnspeccedSearchPostsSkeleton: {\n        lexicon: 1,\n        id: 'app.bsky.unspecced.searchPostsSkeleton',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Backend Posts search, returns only skeleton',\n                parameters: {\n                    type: 'params',\n                    required: ['q'],\n                    properties: {\n                        q: {\n                            type: 'string',\n                            description: 'Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.',\n                        },\n                        sort: {\n                            type: 'string',\n                            knownValues: ['top', 'latest'],\n                            default: 'latest',\n                            description: 'Specifies the ranking order of results.',\n                        },\n                        since: {\n                            type: 'string',\n                            description: \"Filter results for posts after the indicated datetime (inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYYY-MM-DD).\",\n                        },\n                        until: {\n                            type: 'string',\n                            description: \"Filter results for posts before the indicated datetime (not inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYY-MM-DD).\",\n                        },\n                        mentions: {\n                            type: 'string',\n                            format: 'at-identifier',\n                            description: 'Filter to posts which mention the given account. Handles are resolved to DID before query-time. Only matches rich-text facet mentions.',\n                        },\n                        author: {\n                            type: 'string',\n                            format: 'at-identifier',\n                            description: 'Filter to posts by the given account. Handles are resolved to DID before query-time.',\n                        },\n                        lang: {\n                            type: 'string',\n                            format: 'language',\n                            description: 'Filter to posts in the given language. Expected to be based on post language field, though server may override language detection.',\n                        },\n                        domain: {\n                            type: 'string',\n                            description: 'Filter to posts with URLs (facet links or embeds) linking to the given domain (hostname). Server may apply hostname normalization.',\n                        },\n                        url: {\n                            type: 'string',\n                            format: 'uri',\n                            description: 'Filter to posts with links (facet links or embeds) pointing to this URL. Server may apply URL normalization or fuzzy matching.',\n                        },\n                        tag: {\n                            type: 'array',\n                            items: {\n                                type: 'string',\n                                maxLength: 640,\n                                maxGraphemes: 64,\n                            },\n                            description: \"Filter to posts with the given tag (hashtag), based on rich-text facet or tag field. Do not include the hash (#) prefix. Multiple tags can be specified, with 'AND' matching.\",\n                        },\n                        viewer: {\n                            type: 'string',\n                            format: 'did',\n                            description: \"DID of the account making the request (not included for public/unauthenticated queries). Used for 'from:me' queries.\",\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 25,\n                        },\n                        cursor: {\n                            type: 'string',\n                            description: 'Optional pagination mechanism; may not necessarily allow scrolling through entire result set.',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['posts'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            hitsTotal: {\n                                type: 'integer',\n                                description: 'Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits.',\n                            },\n                            posts: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.unspecced.defs#skeletonSearchPost',\n                                },\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'BadQueryString',\n                    },\n                ],\n            },\n        },\n    },\n    AppBskyUnspeccedSearchStarterPacksSkeleton: {\n        lexicon: 1,\n        id: 'app.bsky.unspecced.searchStarterPacksSkeleton',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Backend Starter Pack search, returns only skeleton.',\n                parameters: {\n                    type: 'params',\n                    required: ['q'],\n                    properties: {\n                        q: {\n                            type: 'string',\n                            description: 'Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.',\n                        },\n                        viewer: {\n                            type: 'string',\n                            format: 'did',\n                            description: 'DID of the account making the request (not included for public/unauthenticated queries).',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 25,\n                        },\n                        cursor: {\n                            type: 'string',\n                            description: 'Optional pagination mechanism; may not necessarily allow scrolling through entire result set.',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['starterPacks'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            hitsTotal: {\n                                type: 'integer',\n                                description: 'Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits.',\n                            },\n                            starterPacks: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:app.bsky.unspecced.defs#skeletonSearchStarterPack',\n                                },\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'BadQueryString',\n                    },\n                ],\n            },\n        },\n    },\n    AppBskyVideoDefs: {\n        lexicon: 1,\n        id: 'app.bsky.video.defs',\n        defs: {\n            jobStatus: {\n                type: 'object',\n                required: ['jobId', 'did', 'state'],\n                properties: {\n                    jobId: {\n                        type: 'string',\n                    },\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                    state: {\n                        type: 'string',\n                        description: 'The state of the video processing job. All values not listed as a known value indicate that the job is in process.',\n                        knownValues: ['JOB_STATE_COMPLETED', 'JOB_STATE_FAILED'],\n                    },\n                    progress: {\n                        type: 'integer',\n                        minimum: 0,\n                        maximum: 100,\n                        description: 'Progress within the current processing state.',\n                    },\n                    blob: {\n                        type: 'blob',\n                    },\n                    error: {\n                        type: 'string',\n                    },\n                    message: {\n                        type: 'string',\n                    },\n                },\n            },\n        },\n    },\n    AppBskyVideoGetJobStatus: {\n        lexicon: 1,\n        id: 'app.bsky.video.getJobStatus',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get status details for a video processing job.',\n                parameters: {\n                    type: 'params',\n                    required: ['jobId'],\n                    properties: {\n                        jobId: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['jobStatus'],\n                        properties: {\n                            jobStatus: {\n                                type: 'ref',\n                                ref: 'lex:app.bsky.video.defs#jobStatus',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyVideoGetUploadLimits: {\n        lexicon: 1,\n        id: 'app.bsky.video.getUploadLimits',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get video upload limits for the authenticated user.',\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['canUpload'],\n                        properties: {\n                            canUpload: {\n                                type: 'boolean',\n                            },\n                            remainingDailyVideos: {\n                                type: 'integer',\n                            },\n                            remainingDailyBytes: {\n                                type: 'integer',\n                            },\n                            message: {\n                                type: 'string',\n                            },\n                            error: {\n                                type: 'string',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    AppBskyVideoUploadVideo: {\n        lexicon: 1,\n        id: 'app.bsky.video.uploadVideo',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Upload a video to be processed then stored on the PDS.',\n                input: {\n                    encoding: 'video/mp4',\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['jobStatus'],\n                        properties: {\n                            jobStatus: {\n                                type: 'ref',\n                                ref: 'lex:app.bsky.video.defs#jobStatus',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ChatBskyActorDeclaration: {\n        lexicon: 1,\n        id: 'chat.bsky.actor.declaration',\n        defs: {\n            main: {\n                type: 'record',\n                description: 'A declaration of a Bluesky chat account.',\n                key: 'literal:self',\n                record: {\n                    type: 'object',\n                    required: ['allowIncoming'],\n                    properties: {\n                        allowIncoming: {\n                            type: 'string',\n                            knownValues: ['all', 'none', 'following'],\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ChatBskyActorDefs: {\n        lexicon: 1,\n        id: 'chat.bsky.actor.defs',\n        defs: {\n            profileViewBasic: {\n                type: 'object',\n                required: ['did', 'handle'],\n                properties: {\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                    handle: {\n                        type: 'string',\n                        format: 'handle',\n                    },\n                    displayName: {\n                        type: 'string',\n                        maxGraphemes: 64,\n                        maxLength: 640,\n                    },\n                    avatar: {\n                        type: 'string',\n                        format: 'uri',\n                    },\n                    associated: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#profileAssociated',\n                    },\n                    viewer: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#viewerState',\n                    },\n                    labels: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.label.defs#label',\n                        },\n                    },\n                    chatDisabled: {\n                        type: 'boolean',\n                        description: 'Set to true when the actor cannot actively participate in converations',\n                    },\n                },\n            },\n        },\n    },\n    ChatBskyActorDeleteAccount: {\n        lexicon: 1,\n        id: 'chat.bsky.actor.deleteAccount',\n        defs: {\n            main: {\n                type: 'procedure',\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        properties: {},\n                    },\n                },\n            },\n        },\n    },\n    ChatBskyActorExportAccountData: {\n        lexicon: 1,\n        id: 'chat.bsky.actor.exportAccountData',\n        defs: {\n            main: {\n                type: 'query',\n                output: {\n                    encoding: 'application/jsonl',\n                },\n            },\n        },\n    },\n    ChatBskyConvoDefs: {\n        lexicon: 1,\n        id: 'chat.bsky.convo.defs',\n        defs: {\n            messageRef: {\n                type: 'object',\n                required: ['did', 'messageId', 'convoId'],\n                properties: {\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                    convoId: {\n                        type: 'string',\n                    },\n                    messageId: {\n                        type: 'string',\n                    },\n                },\n            },\n            messageInput: {\n                type: 'object',\n                required: ['text'],\n                properties: {\n                    text: {\n                        type: 'string',\n                        maxLength: 10000,\n                        maxGraphemes: 1000,\n                    },\n                    facets: {\n                        type: 'array',\n                        description: 'Annotations of text (mentions, URLs, hashtags, etc)',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:app.bsky.richtext.facet',\n                        },\n                    },\n                    embed: {\n                        type: 'union',\n                        refs: ['lex:app.bsky.embed.record'],\n                    },\n                },\n            },\n            messageView: {\n                type: 'object',\n                required: ['id', 'rev', 'text', 'sender', 'sentAt'],\n                properties: {\n                    id: {\n                        type: 'string',\n                    },\n                    rev: {\n                        type: 'string',\n                    },\n                    text: {\n                        type: 'string',\n                        maxLength: 10000,\n                        maxGraphemes: 1000,\n                    },\n                    facets: {\n                        type: 'array',\n                        description: 'Annotations of text (mentions, URLs, hashtags, etc)',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:app.bsky.richtext.facet',\n                        },\n                    },\n                    embed: {\n                        type: 'union',\n                        refs: ['lex:app.bsky.embed.record#view'],\n                    },\n                    sender: {\n                        type: 'ref',\n                        ref: 'lex:chat.bsky.convo.defs#messageViewSender',\n                    },\n                    sentAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                },\n            },\n            deletedMessageView: {\n                type: 'object',\n                required: ['id', 'rev', 'sender', 'sentAt'],\n                properties: {\n                    id: {\n                        type: 'string',\n                    },\n                    rev: {\n                        type: 'string',\n                    },\n                    sender: {\n                        type: 'ref',\n                        ref: 'lex:chat.bsky.convo.defs#messageViewSender',\n                    },\n                    sentAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                },\n            },\n            messageViewSender: {\n                type: 'object',\n                required: ['did'],\n                properties: {\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                },\n            },\n            convoView: {\n                type: 'object',\n                required: ['id', 'rev', 'members', 'muted', 'unreadCount'],\n                properties: {\n                    id: {\n                        type: 'string',\n                    },\n                    rev: {\n                        type: 'string',\n                    },\n                    members: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:chat.bsky.actor.defs#profileViewBasic',\n                        },\n                    },\n                    lastMessage: {\n                        type: 'union',\n                        refs: [\n                            'lex:chat.bsky.convo.defs#messageView',\n                            'lex:chat.bsky.convo.defs#deletedMessageView',\n                        ],\n                    },\n                    muted: {\n                        type: 'boolean',\n                    },\n                    opened: {\n                        type: 'boolean',\n                    },\n                    unreadCount: {\n                        type: 'integer',\n                    },\n                },\n            },\n            logBeginConvo: {\n                type: 'object',\n                required: ['rev', 'convoId'],\n                properties: {\n                    rev: {\n                        type: 'string',\n                    },\n                    convoId: {\n                        type: 'string',\n                    },\n                },\n            },\n            logLeaveConvo: {\n                type: 'object',\n                required: ['rev', 'convoId'],\n                properties: {\n                    rev: {\n                        type: 'string',\n                    },\n                    convoId: {\n                        type: 'string',\n                    },\n                },\n            },\n            logCreateMessage: {\n                type: 'object',\n                required: ['rev', 'convoId', 'message'],\n                properties: {\n                    rev: {\n                        type: 'string',\n                    },\n                    convoId: {\n                        type: 'string',\n                    },\n                    message: {\n                        type: 'union',\n                        refs: [\n                            'lex:chat.bsky.convo.defs#messageView',\n                            'lex:chat.bsky.convo.defs#deletedMessageView',\n                        ],\n                    },\n                },\n            },\n            logDeleteMessage: {\n                type: 'object',\n                required: ['rev', 'convoId', 'message'],\n                properties: {\n                    rev: {\n                        type: 'string',\n                    },\n                    convoId: {\n                        type: 'string',\n                    },\n                    message: {\n                        type: 'union',\n                        refs: [\n                            'lex:chat.bsky.convo.defs#messageView',\n                            'lex:chat.bsky.convo.defs#deletedMessageView',\n                        ],\n                    },\n                },\n            },\n        },\n    },\n    ChatBskyConvoDeleteMessageForSelf: {\n        lexicon: 1,\n        id: 'chat.bsky.convo.deleteMessageForSelf',\n        defs: {\n            main: {\n                type: 'procedure',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['convoId', 'messageId'],\n                        properties: {\n                            convoId: {\n                                type: 'string',\n                            },\n                            messageId: {\n                                type: 'string',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'ref',\n                        ref: 'lex:chat.bsky.convo.defs#deletedMessageView',\n                    },\n                },\n            },\n        },\n    },\n    ChatBskyConvoGetConvo: {\n        lexicon: 1,\n        id: 'chat.bsky.convo.getConvo',\n        defs: {\n            main: {\n                type: 'query',\n                parameters: {\n                    type: 'params',\n                    required: ['convoId'],\n                    properties: {\n                        convoId: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['convo'],\n                        properties: {\n                            convo: {\n                                type: 'ref',\n                                ref: 'lex:chat.bsky.convo.defs#convoView',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ChatBskyConvoGetConvoForMembers: {\n        lexicon: 1,\n        id: 'chat.bsky.convo.getConvoForMembers',\n        defs: {\n            main: {\n                type: 'query',\n                parameters: {\n                    type: 'params',\n                    required: ['members'],\n                    properties: {\n                        members: {\n                            type: 'array',\n                            minLength: 1,\n                            maxLength: 10,\n                            items: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['convo'],\n                        properties: {\n                            convo: {\n                                type: 'ref',\n                                ref: 'lex:chat.bsky.convo.defs#convoView',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ChatBskyConvoGetLog: {\n        lexicon: 1,\n        id: 'chat.bsky.convo.getLog',\n        defs: {\n            main: {\n                type: 'query',\n                parameters: {\n                    type: 'params',\n                    required: [],\n                    properties: {\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['logs'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            logs: {\n                                type: 'array',\n                                items: {\n                                    type: 'union',\n                                    refs: [\n                                        'lex:chat.bsky.convo.defs#logBeginConvo',\n                                        'lex:chat.bsky.convo.defs#logLeaveConvo',\n                                        'lex:chat.bsky.convo.defs#logCreateMessage',\n                                        'lex:chat.bsky.convo.defs#logDeleteMessage',\n                                    ],\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ChatBskyConvoGetMessages: {\n        lexicon: 1,\n        id: 'chat.bsky.convo.getMessages',\n        defs: {\n            main: {\n                type: 'query',\n                parameters: {\n                    type: 'params',\n                    required: ['convoId'],\n                    properties: {\n                        convoId: {\n                            type: 'string',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['messages'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            messages: {\n                                type: 'array',\n                                items: {\n                                    type: 'union',\n                                    refs: [\n                                        'lex:chat.bsky.convo.defs#messageView',\n                                        'lex:chat.bsky.convo.defs#deletedMessageView',\n                                    ],\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ChatBskyConvoLeaveConvo: {\n        lexicon: 1,\n        id: 'chat.bsky.convo.leaveConvo',\n        defs: {\n            main: {\n                type: 'procedure',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['convoId'],\n                        properties: {\n                            convoId: {\n                                type: 'string',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['convoId', 'rev'],\n                        properties: {\n                            convoId: {\n                                type: 'string',\n                            },\n                            rev: {\n                                type: 'string',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ChatBskyConvoListConvos: {\n        lexicon: 1,\n        id: 'chat.bsky.convo.listConvos',\n        defs: {\n            main: {\n                type: 'query',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['convos'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            convos: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:chat.bsky.convo.defs#convoView',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ChatBskyConvoMuteConvo: {\n        lexicon: 1,\n        id: 'chat.bsky.convo.muteConvo',\n        defs: {\n            main: {\n                type: 'procedure',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['convoId'],\n                        properties: {\n                            convoId: {\n                                type: 'string',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['convo'],\n                        properties: {\n                            convo: {\n                                type: 'ref',\n                                ref: 'lex:chat.bsky.convo.defs#convoView',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ChatBskyConvoSendMessage: {\n        lexicon: 1,\n        id: 'chat.bsky.convo.sendMessage',\n        defs: {\n            main: {\n                type: 'procedure',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['convoId', 'message'],\n                        properties: {\n                            convoId: {\n                                type: 'string',\n                            },\n                            message: {\n                                type: 'ref',\n                                ref: 'lex:chat.bsky.convo.defs#messageInput',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'ref',\n                        ref: 'lex:chat.bsky.convo.defs#messageView',\n                    },\n                },\n            },\n        },\n    },\n    ChatBskyConvoSendMessageBatch: {\n        lexicon: 1,\n        id: 'chat.bsky.convo.sendMessageBatch',\n        defs: {\n            main: {\n                type: 'procedure',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['items'],\n                        properties: {\n                            items: {\n                                type: 'array',\n                                maxLength: 100,\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:chat.bsky.convo.sendMessageBatch#batchItem',\n                                },\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['items'],\n                        properties: {\n                            items: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:chat.bsky.convo.defs#messageView',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n            batchItem: {\n                type: 'object',\n                required: ['convoId', 'message'],\n                properties: {\n                    convoId: {\n                        type: 'string',\n                    },\n                    message: {\n                        type: 'ref',\n                        ref: 'lex:chat.bsky.convo.defs#messageInput',\n                    },\n                },\n            },\n        },\n    },\n    ChatBskyConvoUnmuteConvo: {\n        lexicon: 1,\n        id: 'chat.bsky.convo.unmuteConvo',\n        defs: {\n            main: {\n                type: 'procedure',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['convoId'],\n                        properties: {\n                            convoId: {\n                                type: 'string',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['convo'],\n                        properties: {\n                            convo: {\n                                type: 'ref',\n                                ref: 'lex:chat.bsky.convo.defs#convoView',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ChatBskyConvoUpdateRead: {\n        lexicon: 1,\n        id: 'chat.bsky.convo.updateRead',\n        defs: {\n            main: {\n                type: 'procedure',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['convoId'],\n                        properties: {\n                            convoId: {\n                                type: 'string',\n                            },\n                            messageId: {\n                                type: 'string',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['convo'],\n                        properties: {\n                            convo: {\n                                type: 'ref',\n                                ref: 'lex:chat.bsky.convo.defs#convoView',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ChatBskyModerationGetActorMetadata: {\n        lexicon: 1,\n        id: 'chat.bsky.moderation.getActorMetadata',\n        defs: {\n            main: {\n                type: 'query',\n                parameters: {\n                    type: 'params',\n                    required: ['actor'],\n                    properties: {\n                        actor: {\n                            type: 'string',\n                            format: 'did',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['day', 'month', 'all'],\n                        properties: {\n                            day: {\n                                type: 'ref',\n                                ref: 'lex:chat.bsky.moderation.getActorMetadata#metadata',\n                            },\n                            month: {\n                                type: 'ref',\n                                ref: 'lex:chat.bsky.moderation.getActorMetadata#metadata',\n                            },\n                            all: {\n                                type: 'ref',\n                                ref: 'lex:chat.bsky.moderation.getActorMetadata#metadata',\n                            },\n                        },\n                    },\n                },\n            },\n            metadata: {\n                type: 'object',\n                required: [\n                    'messagesSent',\n                    'messagesReceived',\n                    'convos',\n                    'convosStarted',\n                ],\n                properties: {\n                    messagesSent: {\n                        type: 'integer',\n                    },\n                    messagesReceived: {\n                        type: 'integer',\n                    },\n                    convos: {\n                        type: 'integer',\n                    },\n                    convosStarted: {\n                        type: 'integer',\n                    },\n                },\n            },\n        },\n    },\n    ChatBskyModerationGetMessageContext: {\n        lexicon: 1,\n        id: 'chat.bsky.moderation.getMessageContext',\n        defs: {\n            main: {\n                type: 'query',\n                parameters: {\n                    type: 'params',\n                    required: ['messageId'],\n                    properties: {\n                        convoId: {\n                            type: 'string',\n                            description: 'Conversation that the message is from. NOTE: this field will eventually be required.',\n                        },\n                        messageId: {\n                            type: 'string',\n                        },\n                        before: {\n                            type: 'integer',\n                            default: 5,\n                        },\n                        after: {\n                            type: 'integer',\n                            default: 5,\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['messages'],\n                        properties: {\n                            messages: {\n                                type: 'array',\n                                items: {\n                                    type: 'union',\n                                    refs: [\n                                        'lex:chat.bsky.convo.defs#messageView',\n                                        'lex:chat.bsky.convo.defs#deletedMessageView',\n                                    ],\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ChatBskyModerationUpdateActorAccess: {\n        lexicon: 1,\n        id: 'chat.bsky.moderation.updateActorAccess',\n        defs: {\n            main: {\n                type: 'procedure',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['actor', 'allowAccess'],\n                        properties: {\n                            actor: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                            allowAccess: {\n                                type: 'boolean',\n                            },\n                            ref: {\n                                type: 'string',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ToolsOzoneCommunicationCreateTemplate: {\n        lexicon: 1,\n        id: 'tools.ozone.communication.createTemplate',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Administrative action to create a new, re-usable communication (email for now) template.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['subject', 'contentMarkdown', 'name'],\n                        properties: {\n                            name: {\n                                type: 'string',\n                                description: 'Name of the template.',\n                            },\n                            contentMarkdown: {\n                                type: 'string',\n                                description: 'Content of the template, markdown supported, can contain variable placeholders.',\n                            },\n                            subject: {\n                                type: 'string',\n                                description: 'Subject of the message, used in emails.',\n                            },\n                            lang: {\n                                type: 'string',\n                                format: 'language',\n                                description: 'Message language.',\n                            },\n                            createdBy: {\n                                type: 'string',\n                                format: 'did',\n                                description: 'DID of the user who is creating the template.',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'ref',\n                        ref: 'lex:tools.ozone.communication.defs#templateView',\n                    },\n                },\n                errors: [\n                    {\n                        name: 'DuplicateTemplateName',\n                    },\n                ],\n            },\n        },\n    },\n    ToolsOzoneCommunicationDefs: {\n        lexicon: 1,\n        id: 'tools.ozone.communication.defs',\n        defs: {\n            templateView: {\n                type: 'object',\n                required: [\n                    'id',\n                    'name',\n                    'contentMarkdown',\n                    'disabled',\n                    'lastUpdatedBy',\n                    'createdAt',\n                    'updatedAt',\n                ],\n                properties: {\n                    id: {\n                        type: 'string',\n                    },\n                    name: {\n                        type: 'string',\n                        description: 'Name of the template.',\n                    },\n                    subject: {\n                        type: 'string',\n                        description: 'Content of the template, can contain markdown and variable placeholders.',\n                    },\n                    contentMarkdown: {\n                        type: 'string',\n                        description: 'Subject of the message, used in emails.',\n                    },\n                    disabled: {\n                        type: 'boolean',\n                    },\n                    lang: {\n                        type: 'string',\n                        format: 'language',\n                        description: 'Message language.',\n                    },\n                    lastUpdatedBy: {\n                        type: 'string',\n                        format: 'did',\n                        description: 'DID of the user who last updated the template.',\n                    },\n                    createdAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    updatedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                },\n            },\n        },\n    },\n    ToolsOzoneCommunicationDeleteTemplate: {\n        lexicon: 1,\n        id: 'tools.ozone.communication.deleteTemplate',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Delete a communication template.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['id'],\n                        properties: {\n                            id: {\n                                type: 'string',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ToolsOzoneCommunicationListTemplates: {\n        lexicon: 1,\n        id: 'tools.ozone.communication.listTemplates',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get list of all communication templates.',\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['communicationTemplates'],\n                        properties: {\n                            communicationTemplates: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:tools.ozone.communication.defs#templateView',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ToolsOzoneCommunicationUpdateTemplate: {\n        lexicon: 1,\n        id: 'tools.ozone.communication.updateTemplate',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Administrative action to update an existing communication template. Allows passing partial fields to patch specific fields only.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['id'],\n                        properties: {\n                            id: {\n                                type: 'string',\n                                description: 'ID of the template to be updated.',\n                            },\n                            name: {\n                                type: 'string',\n                                description: 'Name of the template.',\n                            },\n                            lang: {\n                                type: 'string',\n                                format: 'language',\n                                description: 'Message language.',\n                            },\n                            contentMarkdown: {\n                                type: 'string',\n                                description: 'Content of the template, markdown supported, can contain variable placeholders.',\n                            },\n                            subject: {\n                                type: 'string',\n                                description: 'Subject of the message, used in emails.',\n                            },\n                            updatedBy: {\n                                type: 'string',\n                                format: 'did',\n                                description: 'DID of the user who is updating the template.',\n                            },\n                            disabled: {\n                                type: 'boolean',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'ref',\n                        ref: 'lex:tools.ozone.communication.defs#templateView',\n                    },\n                },\n                errors: [\n                    {\n                        name: 'DuplicateTemplateName',\n                    },\n                ],\n            },\n        },\n    },\n    ToolsOzoneModerationDefs: {\n        lexicon: 1,\n        id: 'tools.ozone.moderation.defs',\n        defs: {\n            modEventView: {\n                type: 'object',\n                required: [\n                    'id',\n                    'event',\n                    'subject',\n                    'subjectBlobCids',\n                    'createdBy',\n                    'createdAt',\n                ],\n                properties: {\n                    id: {\n                        type: 'integer',\n                    },\n                    event: {\n                        type: 'union',\n                        refs: [\n                            'lex:tools.ozone.moderation.defs#modEventTakedown',\n                            'lex:tools.ozone.moderation.defs#modEventReverseTakedown',\n                            'lex:tools.ozone.moderation.defs#modEventComment',\n                            'lex:tools.ozone.moderation.defs#modEventReport',\n                            'lex:tools.ozone.moderation.defs#modEventLabel',\n                            'lex:tools.ozone.moderation.defs#modEventAcknowledge',\n                            'lex:tools.ozone.moderation.defs#modEventEscalate',\n                            'lex:tools.ozone.moderation.defs#modEventMute',\n                            'lex:tools.ozone.moderation.defs#modEventUnmute',\n                            'lex:tools.ozone.moderation.defs#modEventMuteReporter',\n                            'lex:tools.ozone.moderation.defs#modEventUnmuteReporter',\n                            'lex:tools.ozone.moderation.defs#modEventEmail',\n                            'lex:tools.ozone.moderation.defs#modEventResolveAppeal',\n                            'lex:tools.ozone.moderation.defs#modEventDivert',\n                            'lex:tools.ozone.moderation.defs#modEventTag',\n                            'lex:tools.ozone.moderation.defs#accountEvent',\n                            'lex:tools.ozone.moderation.defs#identityEvent',\n                            'lex:tools.ozone.moderation.defs#recordEvent',\n                            'lex:tools.ozone.moderation.defs#modEventPriorityScore',\n                        ],\n                    },\n                    subject: {\n                        type: 'union',\n                        refs: [\n                            'lex:com.atproto.admin.defs#repoRef',\n                            'lex:com.atproto.repo.strongRef',\n                            'lex:chat.bsky.convo.defs#messageRef',\n                        ],\n                    },\n                    subjectBlobCids: {\n                        type: 'array',\n                        items: {\n                            type: 'string',\n                        },\n                    },\n                    createdBy: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                    createdAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    creatorHandle: {\n                        type: 'string',\n                    },\n                    subjectHandle: {\n                        type: 'string',\n                    },\n                },\n            },\n            modEventViewDetail: {\n                type: 'object',\n                required: [\n                    'id',\n                    'event',\n                    'subject',\n                    'subjectBlobs',\n                    'createdBy',\n                    'createdAt',\n                ],\n                properties: {\n                    id: {\n                        type: 'integer',\n                    },\n                    event: {\n                        type: 'union',\n                        refs: [\n                            'lex:tools.ozone.moderation.defs#modEventTakedown',\n                            'lex:tools.ozone.moderation.defs#modEventReverseTakedown',\n                            'lex:tools.ozone.moderation.defs#modEventComment',\n                            'lex:tools.ozone.moderation.defs#modEventReport',\n                            'lex:tools.ozone.moderation.defs#modEventLabel',\n                            'lex:tools.ozone.moderation.defs#modEventAcknowledge',\n                            'lex:tools.ozone.moderation.defs#modEventEscalate',\n                            'lex:tools.ozone.moderation.defs#modEventMute',\n                            'lex:tools.ozone.moderation.defs#modEventUnmute',\n                            'lex:tools.ozone.moderation.defs#modEventMuteReporter',\n                            'lex:tools.ozone.moderation.defs#modEventUnmuteReporter',\n                            'lex:tools.ozone.moderation.defs#modEventEmail',\n                            'lex:tools.ozone.moderation.defs#modEventResolveAppeal',\n                            'lex:tools.ozone.moderation.defs#modEventDivert',\n                            'lex:tools.ozone.moderation.defs#modEventTag',\n                            'lex:tools.ozone.moderation.defs#accountEvent',\n                            'lex:tools.ozone.moderation.defs#identityEvent',\n                            'lex:tools.ozone.moderation.defs#recordEvent',\n                            'lex:tools.ozone.moderation.defs#modEventPriorityScore',\n                        ],\n                    },\n                    subject: {\n                        type: 'union',\n                        refs: [\n                            'lex:tools.ozone.moderation.defs#repoView',\n                            'lex:tools.ozone.moderation.defs#repoViewNotFound',\n                            'lex:tools.ozone.moderation.defs#recordView',\n                            'lex:tools.ozone.moderation.defs#recordViewNotFound',\n                        ],\n                    },\n                    subjectBlobs: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:tools.ozone.moderation.defs#blobView',\n                        },\n                    },\n                    createdBy: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                    createdAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                },\n            },\n            subjectStatusView: {\n                type: 'object',\n                required: ['id', 'subject', 'createdAt', 'updatedAt', 'reviewState'],\n                properties: {\n                    id: {\n                        type: 'integer',\n                    },\n                    subject: {\n                        type: 'union',\n                        refs: [\n                            'lex:com.atproto.admin.defs#repoRef',\n                            'lex:com.atproto.repo.strongRef',\n                        ],\n                    },\n                    hosting: {\n                        type: 'union',\n                        refs: [\n                            'lex:tools.ozone.moderation.defs#accountHosting',\n                            'lex:tools.ozone.moderation.defs#recordHosting',\n                        ],\n                    },\n                    subjectBlobCids: {\n                        type: 'array',\n                        items: {\n                            type: 'string',\n                            format: 'cid',\n                        },\n                    },\n                    subjectRepoHandle: {\n                        type: 'string',\n                    },\n                    updatedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                        description: 'Timestamp referencing when the last update was made to the moderation status of the subject',\n                    },\n                    createdAt: {\n                        type: 'string',\n                        format: 'datetime',\n                        description: 'Timestamp referencing the first moderation status impacting event was emitted on the subject',\n                    },\n                    reviewState: {\n                        type: 'ref',\n                        ref: 'lex:tools.ozone.moderation.defs#subjectReviewState',\n                    },\n                    comment: {\n                        type: 'string',\n                        description: 'Sticky comment on the subject.',\n                    },\n                    priorityScore: {\n                        type: 'integer',\n                        description: 'Numeric value representing the level of priority. Higher score means higher priority.',\n                        minimum: 0,\n                        maximum: 100,\n                    },\n                    muteUntil: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    muteReportingUntil: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    lastReviewedBy: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                    lastReviewedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    lastReportedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    lastAppealedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                        description: 'Timestamp referencing when the author of the subject appealed a moderation action',\n                    },\n                    takendown: {\n                        type: 'boolean',\n                    },\n                    appealed: {\n                        type: 'boolean',\n                        description: 'True indicates that the a previously taken moderator action was appealed against, by the author of the content. False indicates last appeal was resolved by moderators.',\n                    },\n                    suspendUntil: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    tags: {\n                        type: 'array',\n                        items: {\n                            type: 'string',\n                        },\n                    },\n                    accountStats: {\n                        description: 'Statistics related to the account subject',\n                        type: 'ref',\n                        ref: 'lex:tools.ozone.moderation.defs#accountStats',\n                    },\n                    recordsStats: {\n                        description: \"Statistics related to the record subjects authored by the subject's account\",\n                        type: 'ref',\n                        ref: 'lex:tools.ozone.moderation.defs#recordsStats',\n                    },\n                },\n            },\n            accountStats: {\n                description: 'Statistics about a particular account subject',\n                type: 'object',\n                properties: {\n                    reportCount: {\n                        description: 'Total number of reports on the account',\n                        type: 'integer',\n                    },\n                    appealCount: {\n                        description: 'Total number of appeals against a moderation action on the account',\n                        type: 'integer',\n                    },\n                    suspendCount: {\n                        description: 'Number of times the account was suspended',\n                        type: 'integer',\n                    },\n                    escalateCount: {\n                        description: 'Number of times the account was escalated',\n                        type: 'integer',\n                    },\n                    takedownCount: {\n                        description: 'Number of times the account was taken down',\n                        type: 'integer',\n                    },\n                },\n            },\n            recordsStats: {\n                description: 'Statistics about a set of record subject items',\n                type: 'object',\n                properties: {\n                    totalReports: {\n                        description: 'Cumulative sum of the number of reports on the items in the set',\n                        type: 'integer',\n                    },\n                    reportedCount: {\n                        description: 'Number of items that were reported at least once',\n                        type: 'integer',\n                    },\n                    escalatedCount: {\n                        description: 'Number of items that were escalated at least once',\n                        type: 'integer',\n                    },\n                    appealedCount: {\n                        description: 'Number of items that were appealed at least once',\n                        type: 'integer',\n                    },\n                    subjectCount: {\n                        description: 'Total number of item in the set',\n                        type: 'integer',\n                    },\n                    pendingCount: {\n                        description: 'Number of item currently in \"reviewOpen\" or \"reviewEscalated\" state',\n                        type: 'integer',\n                    },\n                    processedCount: {\n                        description: 'Number of item currently in \"reviewNone\" or \"reviewClosed\" state',\n                        type: 'integer',\n                    },\n                    takendownCount: {\n                        description: 'Number of item currently taken down',\n                        type: 'integer',\n                    },\n                },\n            },\n            subjectReviewState: {\n                type: 'string',\n                knownValues: [\n                    'lex:tools.ozone.moderation.defs#reviewOpen',\n                    'lex:tools.ozone.moderation.defs#reviewEscalated',\n                    'lex:tools.ozone.moderation.defs#reviewClosed',\n                    'lex:tools.ozone.moderation.defs#reviewNone',\n                ],\n            },\n            reviewOpen: {\n                type: 'token',\n                description: 'Moderator review status of a subject: Open. Indicates that the subject needs to be reviewed by a moderator',\n            },\n            reviewEscalated: {\n                type: 'token',\n                description: 'Moderator review status of a subject: Escalated. Indicates that the subject was escalated for review by a moderator',\n            },\n            reviewClosed: {\n                type: 'token',\n                description: 'Moderator review status of a subject: Closed. Indicates that the subject was already reviewed and resolved by a moderator',\n            },\n            reviewNone: {\n                type: 'token',\n                description: 'Moderator review status of a subject: Unnecessary. Indicates that the subject does not need a review at the moment but there is probably some moderation related metadata available for it',\n            },\n            modEventTakedown: {\n                type: 'object',\n                description: 'Take down a subject permanently or temporarily',\n                properties: {\n                    comment: {\n                        type: 'string',\n                    },\n                    durationInHours: {\n                        type: 'integer',\n                        description: 'Indicates how long the takedown should be in effect before automatically expiring.',\n                    },\n                    acknowledgeAccountSubjects: {\n                        type: 'boolean',\n                        description: 'If true, all other reports on content authored by this account will be resolved (acknowledged).',\n                    },\n                    policies: {\n                        type: 'array',\n                        maxLength: 5,\n                        items: {\n                            type: 'string',\n                        },\n                        description: 'Names/Keywords of the policies that drove the decision.',\n                    },\n                },\n            },\n            modEventReverseTakedown: {\n                type: 'object',\n                description: 'Revert take down action on a subject',\n                properties: {\n                    comment: {\n                        type: 'string',\n                        description: 'Describe reasoning behind the reversal.',\n                    },\n                },\n            },\n            modEventResolveAppeal: {\n                type: 'object',\n                description: 'Resolve appeal on a subject',\n                properties: {\n                    comment: {\n                        type: 'string',\n                        description: 'Describe resolution.',\n                    },\n                },\n            },\n            modEventComment: {\n                type: 'object',\n                description: 'Add a comment to a subject',\n                required: ['comment'],\n                properties: {\n                    comment: {\n                        type: 'string',\n                    },\n                    sticky: {\n                        type: 'boolean',\n                        description: 'Make the comment persistent on the subject',\n                    },\n                },\n            },\n            modEventReport: {\n                type: 'object',\n                description: 'Report a subject',\n                required: ['reportType'],\n                properties: {\n                    comment: {\n                        type: 'string',\n                    },\n                    isReporterMuted: {\n                        type: 'boolean',\n                        description: \"Set to true if the reporter was muted from reporting at the time of the event. These reports won't impact the reviewState of the subject.\",\n                    },\n                    reportType: {\n                        type: 'ref',\n                        ref: 'lex:com.atproto.moderation.defs#reasonType',\n                    },\n                },\n            },\n            modEventLabel: {\n                type: 'object',\n                description: 'Apply/Negate labels on a subject',\n                required: ['createLabelVals', 'negateLabelVals'],\n                properties: {\n                    comment: {\n                        type: 'string',\n                    },\n                    createLabelVals: {\n                        type: 'array',\n                        items: {\n                            type: 'string',\n                        },\n                    },\n                    negateLabelVals: {\n                        type: 'array',\n                        items: {\n                            type: 'string',\n                        },\n                    },\n                    durationInHours: {\n                        type: 'integer',\n                        description: 'Indicates how long the label will remain on the subject. Only applies on labels that are being added.',\n                    },\n                },\n            },\n            modEventPriorityScore: {\n                type: 'object',\n                description: 'Set priority score of the subject. Higher score means higher priority.',\n                required: ['score'],\n                properties: {\n                    comment: {\n                        type: 'string',\n                    },\n                    score: {\n                        type: 'integer',\n                        minimum: 0,\n                        maximum: 100,\n                    },\n                },\n            },\n            modEventAcknowledge: {\n                type: 'object',\n                properties: {\n                    comment: {\n                        type: 'string',\n                    },\n                    acknowledgeAccountSubjects: {\n                        type: 'boolean',\n                        description: 'If true, all other reports on content authored by this account will be resolved (acknowledged).',\n                    },\n                },\n            },\n            modEventEscalate: {\n                type: 'object',\n                properties: {\n                    comment: {\n                        type: 'string',\n                    },\n                },\n            },\n            modEventMute: {\n                type: 'object',\n                description: 'Mute incoming reports on a subject',\n                required: ['durationInHours'],\n                properties: {\n                    comment: {\n                        type: 'string',\n                    },\n                    durationInHours: {\n                        type: 'integer',\n                        description: 'Indicates how long the subject should remain muted.',\n                    },\n                },\n            },\n            modEventUnmute: {\n                type: 'object',\n                description: 'Unmute action on a subject',\n                properties: {\n                    comment: {\n                        type: 'string',\n                        description: 'Describe reasoning behind the reversal.',\n                    },\n                },\n            },\n            modEventMuteReporter: {\n                type: 'object',\n                description: 'Mute incoming reports from an account',\n                properties: {\n                    comment: {\n                        type: 'string',\n                    },\n                    durationInHours: {\n                        type: 'integer',\n                        description: 'Indicates how long the account should remain muted. Falsy value here means a permanent mute.',\n                    },\n                },\n            },\n            modEventUnmuteReporter: {\n                type: 'object',\n                description: 'Unmute incoming reports from an account',\n                properties: {\n                    comment: {\n                        type: 'string',\n                        description: 'Describe reasoning behind the reversal.',\n                    },\n                },\n            },\n            modEventEmail: {\n                type: 'object',\n                description: 'Keep a log of outgoing email to a user',\n                required: ['subjectLine'],\n                properties: {\n                    subjectLine: {\n                        type: 'string',\n                        description: 'The subject line of the email sent to the user.',\n                    },\n                    content: {\n                        type: 'string',\n                        description: 'The content of the email sent to the user.',\n                    },\n                    comment: {\n                        type: 'string',\n                        description: 'Additional comment about the outgoing comm.',\n                    },\n                },\n            },\n            modEventDivert: {\n                type: 'object',\n                description: \"Divert a record's blobs to a 3rd party service for further scanning/tagging\",\n                properties: {\n                    comment: {\n                        type: 'string',\n                    },\n                },\n            },\n            modEventTag: {\n                type: 'object',\n                description: 'Add/Remove a tag on a subject',\n                required: ['add', 'remove'],\n                properties: {\n                    add: {\n                        type: 'array',\n                        items: {\n                            type: 'string',\n                        },\n                        description: \"Tags to be added to the subject. If already exists, won't be duplicated.\",\n                    },\n                    remove: {\n                        type: 'array',\n                        items: {\n                            type: 'string',\n                        },\n                        description: \"Tags to be removed to the subject. Ignores a tag If it doesn't exist, won't be duplicated.\",\n                    },\n                    comment: {\n                        type: 'string',\n                        description: 'Additional comment about added/removed tags.',\n                    },\n                },\n            },\n            accountEvent: {\n                type: 'object',\n                description: 'Logs account status related events on a repo subject. Normally captured by automod from the firehose and emitted to ozone for historical tracking.',\n                required: ['timestamp', 'active'],\n                properties: {\n                    comment: {\n                        type: 'string',\n                    },\n                    active: {\n                        type: 'boolean',\n                        description: 'Indicates that the account has a repository which can be fetched from the host that emitted this event.',\n                    },\n                    status: {\n                        type: 'string',\n                        knownValues: [\n                            'unknown',\n                            'deactivated',\n                            'deleted',\n                            'takendown',\n                            'suspended',\n                            'tombstoned',\n                        ],\n                    },\n                    timestamp: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                },\n            },\n            identityEvent: {\n                type: 'object',\n                description: 'Logs identity related events on a repo subject. Normally captured by automod from the firehose and emitted to ozone for historical tracking.',\n                required: ['timestamp'],\n                properties: {\n                    comment: {\n                        type: 'string',\n                    },\n                    handle: {\n                        type: 'string',\n                        format: 'handle',\n                    },\n                    pdsHost: {\n                        type: 'string',\n                        format: 'uri',\n                    },\n                    tombstone: {\n                        type: 'boolean',\n                    },\n                    timestamp: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                },\n            },\n            recordEvent: {\n                type: 'object',\n                description: 'Logs lifecycle event on a record subject. Normally captured by automod from the firehose and emitted to ozone for historical tracking.',\n                required: ['timestamp', 'op'],\n                properties: {\n                    comment: {\n                        type: 'string',\n                    },\n                    op: {\n                        type: 'string',\n                        knownValues: ['create', 'update', 'delete'],\n                    },\n                    cid: {\n                        type: 'string',\n                        format: 'cid',\n                    },\n                    timestamp: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                },\n            },\n            repoView: {\n                type: 'object',\n                required: [\n                    'did',\n                    'handle',\n                    'relatedRecords',\n                    'indexedAt',\n                    'moderation',\n                ],\n                properties: {\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                    handle: {\n                        type: 'string',\n                        format: 'handle',\n                    },\n                    email: {\n                        type: 'string',\n                    },\n                    relatedRecords: {\n                        type: 'array',\n                        items: {\n                            type: 'unknown',\n                        },\n                    },\n                    indexedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    moderation: {\n                        type: 'ref',\n                        ref: 'lex:tools.ozone.moderation.defs#moderation',\n                    },\n                    invitedBy: {\n                        type: 'ref',\n                        ref: 'lex:com.atproto.server.defs#inviteCode',\n                    },\n                    invitesDisabled: {\n                        type: 'boolean',\n                    },\n                    inviteNote: {\n                        type: 'string',\n                    },\n                    deactivatedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    threatSignatures: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.admin.defs#threatSignature',\n                        },\n                    },\n                },\n            },\n            repoViewDetail: {\n                type: 'object',\n                required: [\n                    'did',\n                    'handle',\n                    'relatedRecords',\n                    'indexedAt',\n                    'moderation',\n                ],\n                properties: {\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                    handle: {\n                        type: 'string',\n                        format: 'handle',\n                    },\n                    email: {\n                        type: 'string',\n                    },\n                    relatedRecords: {\n                        type: 'array',\n                        items: {\n                            type: 'unknown',\n                        },\n                    },\n                    indexedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    moderation: {\n                        type: 'ref',\n                        ref: 'lex:tools.ozone.moderation.defs#moderationDetail',\n                    },\n                    labels: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.label.defs#label',\n                        },\n                    },\n                    invitedBy: {\n                        type: 'ref',\n                        ref: 'lex:com.atproto.server.defs#inviteCode',\n                    },\n                    invites: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.server.defs#inviteCode',\n                        },\n                    },\n                    invitesDisabled: {\n                        type: 'boolean',\n                    },\n                    inviteNote: {\n                        type: 'string',\n                    },\n                    emailConfirmedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    deactivatedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    threatSignatures: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.admin.defs#threatSignature',\n                        },\n                    },\n                },\n            },\n            repoViewNotFound: {\n                type: 'object',\n                required: ['did'],\n                properties: {\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                },\n            },\n            recordView: {\n                type: 'object',\n                required: [\n                    'uri',\n                    'cid',\n                    'value',\n                    'blobCids',\n                    'indexedAt',\n                    'moderation',\n                    'repo',\n                ],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    cid: {\n                        type: 'string',\n                        format: 'cid',\n                    },\n                    value: {\n                        type: 'unknown',\n                    },\n                    blobCids: {\n                        type: 'array',\n                        items: {\n                            type: 'string',\n                            format: 'cid',\n                        },\n                    },\n                    indexedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    moderation: {\n                        type: 'ref',\n                        ref: 'lex:tools.ozone.moderation.defs#moderation',\n                    },\n                    repo: {\n                        type: 'ref',\n                        ref: 'lex:tools.ozone.moderation.defs#repoView',\n                    },\n                },\n            },\n            recordViewDetail: {\n                type: 'object',\n                required: [\n                    'uri',\n                    'cid',\n                    'value',\n                    'blobs',\n                    'indexedAt',\n                    'moderation',\n                    'repo',\n                ],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                    cid: {\n                        type: 'string',\n                        format: 'cid',\n                    },\n                    value: {\n                        type: 'unknown',\n                    },\n                    blobs: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:tools.ozone.moderation.defs#blobView',\n                        },\n                    },\n                    labels: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:com.atproto.label.defs#label',\n                        },\n                    },\n                    indexedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    moderation: {\n                        type: 'ref',\n                        ref: 'lex:tools.ozone.moderation.defs#moderationDetail',\n                    },\n                    repo: {\n                        type: 'ref',\n                        ref: 'lex:tools.ozone.moderation.defs#repoView',\n                    },\n                },\n            },\n            recordViewNotFound: {\n                type: 'object',\n                required: ['uri'],\n                properties: {\n                    uri: {\n                        type: 'string',\n                        format: 'at-uri',\n                    },\n                },\n            },\n            moderation: {\n                type: 'object',\n                properties: {\n                    subjectStatus: {\n                        type: 'ref',\n                        ref: 'lex:tools.ozone.moderation.defs#subjectStatusView',\n                    },\n                },\n            },\n            moderationDetail: {\n                type: 'object',\n                properties: {\n                    subjectStatus: {\n                        type: 'ref',\n                        ref: 'lex:tools.ozone.moderation.defs#subjectStatusView',\n                    },\n                },\n            },\n            blobView: {\n                type: 'object',\n                required: ['cid', 'mimeType', 'size', 'createdAt'],\n                properties: {\n                    cid: {\n                        type: 'string',\n                        format: 'cid',\n                    },\n                    mimeType: {\n                        type: 'string',\n                    },\n                    size: {\n                        type: 'integer',\n                    },\n                    createdAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    details: {\n                        type: 'union',\n                        refs: [\n                            'lex:tools.ozone.moderation.defs#imageDetails',\n                            'lex:tools.ozone.moderation.defs#videoDetails',\n                        ],\n                    },\n                    moderation: {\n                        type: 'ref',\n                        ref: 'lex:tools.ozone.moderation.defs#moderation',\n                    },\n                },\n            },\n            imageDetails: {\n                type: 'object',\n                required: ['width', 'height'],\n                properties: {\n                    width: {\n                        type: 'integer',\n                    },\n                    height: {\n                        type: 'integer',\n                    },\n                },\n            },\n            videoDetails: {\n                type: 'object',\n                required: ['width', 'height', 'length'],\n                properties: {\n                    width: {\n                        type: 'integer',\n                    },\n                    height: {\n                        type: 'integer',\n                    },\n                    length: {\n                        type: 'integer',\n                    },\n                },\n            },\n            accountHosting: {\n                type: 'object',\n                required: ['status'],\n                properties: {\n                    status: {\n                        type: 'string',\n                        knownValues: [\n                            'takendown',\n                            'suspended',\n                            'deleted',\n                            'deactivated',\n                            'unknown',\n                        ],\n                    },\n                    updatedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    createdAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    deletedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    deactivatedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    reactivatedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                },\n            },\n            recordHosting: {\n                type: 'object',\n                required: ['status'],\n                properties: {\n                    status: {\n                        type: 'string',\n                        knownValues: ['deleted', 'unknown'],\n                    },\n                    updatedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    createdAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    deletedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                },\n            },\n        },\n    },\n    ToolsOzoneModerationEmitEvent: {\n        lexicon: 1,\n        id: 'tools.ozone.moderation.emitEvent',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Take a moderation action on an actor.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['event', 'subject', 'createdBy'],\n                        properties: {\n                            event: {\n                                type: 'union',\n                                refs: [\n                                    'lex:tools.ozone.moderation.defs#modEventTakedown',\n                                    'lex:tools.ozone.moderation.defs#modEventAcknowledge',\n                                    'lex:tools.ozone.moderation.defs#modEventEscalate',\n                                    'lex:tools.ozone.moderation.defs#modEventComment',\n                                    'lex:tools.ozone.moderation.defs#modEventLabel',\n                                    'lex:tools.ozone.moderation.defs#modEventReport',\n                                    'lex:tools.ozone.moderation.defs#modEventMute',\n                                    'lex:tools.ozone.moderation.defs#modEventUnmute',\n                                    'lex:tools.ozone.moderation.defs#modEventMuteReporter',\n                                    'lex:tools.ozone.moderation.defs#modEventUnmuteReporter',\n                                    'lex:tools.ozone.moderation.defs#modEventReverseTakedown',\n                                    'lex:tools.ozone.moderation.defs#modEventResolveAppeal',\n                                    'lex:tools.ozone.moderation.defs#modEventEmail',\n                                    'lex:tools.ozone.moderation.defs#modEventTag',\n                                    'lex:tools.ozone.moderation.defs#accountEvent',\n                                    'lex:tools.ozone.moderation.defs#identityEvent',\n                                    'lex:tools.ozone.moderation.defs#recordEvent',\n                                    'lex:tools.ozone.moderation.defs#modEventPriorityScore',\n                                ],\n                            },\n                            subject: {\n                                type: 'union',\n                                refs: [\n                                    'lex:com.atproto.admin.defs#repoRef',\n                                    'lex:com.atproto.repo.strongRef',\n                                ],\n                            },\n                            subjectBlobCids: {\n                                type: 'array',\n                                items: {\n                                    type: 'string',\n                                    format: 'cid',\n                                },\n                            },\n                            createdBy: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'ref',\n                        ref: 'lex:tools.ozone.moderation.defs#modEventView',\n                    },\n                },\n                errors: [\n                    {\n                        name: 'SubjectHasAction',\n                    },\n                ],\n            },\n        },\n    },\n    ToolsOzoneModerationGetEvent: {\n        lexicon: 1,\n        id: 'tools.ozone.moderation.getEvent',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get details about a moderation event.',\n                parameters: {\n                    type: 'params',\n                    required: ['id'],\n                    properties: {\n                        id: {\n                            type: 'integer',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'ref',\n                        ref: 'lex:tools.ozone.moderation.defs#modEventViewDetail',\n                    },\n                },\n            },\n        },\n    },\n    ToolsOzoneModerationGetRecord: {\n        lexicon: 1,\n        id: 'tools.ozone.moderation.getRecord',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get details about a record.',\n                parameters: {\n                    type: 'params',\n                    required: ['uri'],\n                    properties: {\n                        uri: {\n                            type: 'string',\n                            format: 'at-uri',\n                        },\n                        cid: {\n                            type: 'string',\n                            format: 'cid',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'ref',\n                        ref: 'lex:tools.ozone.moderation.defs#recordViewDetail',\n                    },\n                },\n                errors: [\n                    {\n                        name: 'RecordNotFound',\n                    },\n                ],\n            },\n        },\n    },\n    ToolsOzoneModerationGetRecords: {\n        lexicon: 1,\n        id: 'tools.ozone.moderation.getRecords',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get details about some records.',\n                parameters: {\n                    type: 'params',\n                    required: ['uris'],\n                    properties: {\n                        uris: {\n                            type: 'array',\n                            maxLength: 100,\n                            items: {\n                                type: 'string',\n                                format: 'at-uri',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['records'],\n                        properties: {\n                            records: {\n                                type: 'array',\n                                items: {\n                                    type: 'union',\n                                    refs: [\n                                        'lex:tools.ozone.moderation.defs#recordViewDetail',\n                                        'lex:tools.ozone.moderation.defs#recordViewNotFound',\n                                    ],\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ToolsOzoneModerationGetRepo: {\n        lexicon: 1,\n        id: 'tools.ozone.moderation.getRepo',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get details about a repository.',\n                parameters: {\n                    type: 'params',\n                    required: ['did'],\n                    properties: {\n                        did: {\n                            type: 'string',\n                            format: 'did',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'ref',\n                        ref: 'lex:tools.ozone.moderation.defs#repoViewDetail',\n                    },\n                },\n                errors: [\n                    {\n                        name: 'RepoNotFound',\n                    },\n                ],\n            },\n        },\n    },\n    ToolsOzoneModerationGetRepos: {\n        lexicon: 1,\n        id: 'tools.ozone.moderation.getRepos',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get details about some repositories.',\n                parameters: {\n                    type: 'params',\n                    required: ['dids'],\n                    properties: {\n                        dids: {\n                            type: 'array',\n                            maxLength: 100,\n                            items: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['repos'],\n                        properties: {\n                            repos: {\n                                type: 'array',\n                                items: {\n                                    type: 'union',\n                                    refs: [\n                                        'lex:tools.ozone.moderation.defs#repoViewDetail',\n                                        'lex:tools.ozone.moderation.defs#repoViewNotFound',\n                                    ],\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ToolsOzoneModerationQueryEvents: {\n        lexicon: 1,\n        id: 'tools.ozone.moderation.queryEvents',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'List moderation events related to a subject.',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        types: {\n                            type: 'array',\n                            items: {\n                                type: 'string',\n                            },\n                            description: 'The types of events (fully qualified string in the format of tools.ozone.moderation.defs#modEvent<name>) to filter by. If not specified, all events are returned.',\n                        },\n                        createdBy: {\n                            type: 'string',\n                            format: 'did',\n                        },\n                        sortDirection: {\n                            type: 'string',\n                            default: 'desc',\n                            enum: ['asc', 'desc'],\n                            description: 'Sort direction for the events. Defaults to descending order of created at timestamp.',\n                        },\n                        createdAfter: {\n                            type: 'string',\n                            format: 'datetime',\n                            description: 'Retrieve events created after a given timestamp',\n                        },\n                        createdBefore: {\n                            type: 'string',\n                            format: 'datetime',\n                            description: 'Retrieve events created before a given timestamp',\n                        },\n                        subject: {\n                            type: 'string',\n                            format: 'uri',\n                        },\n                        collections: {\n                            type: 'array',\n                            maxLength: 20,\n                            description: \"If specified, only events where the subject belongs to the given collections will be returned. When subjectType is set to 'account', this will be ignored.\",\n                            items: {\n                                type: 'string',\n                                format: 'nsid',\n                            },\n                        },\n                        subjectType: {\n                            type: 'string',\n                            description: \"If specified, only events where the subject is of the given type (account or record) will be returned. When this is set to 'account' the 'collections' parameter will be ignored. When includeAllUserRecords or subject is set, this will be ignored.\",\n                            knownValues: ['account', 'record'],\n                        },\n                        includeAllUserRecords: {\n                            type: 'boolean',\n                            default: false,\n                            description: \"If true, events on all record types (posts, lists, profile etc.) or records from given 'collections' param, owned by the did are returned.\",\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        hasComment: {\n                            type: 'boolean',\n                            description: 'If true, only events with comments are returned',\n                        },\n                        comment: {\n                            type: 'string',\n                            description: 'If specified, only events with comments containing the keyword are returned. Apply || separator to use multiple keywords and match using OR condition.',\n                        },\n                        addedLabels: {\n                            type: 'array',\n                            items: {\n                                type: 'string',\n                            },\n                            description: 'If specified, only events where all of these labels were added are returned',\n                        },\n                        removedLabels: {\n                            type: 'array',\n                            items: {\n                                type: 'string',\n                            },\n                            description: 'If specified, only events where all of these labels were removed are returned',\n                        },\n                        addedTags: {\n                            type: 'array',\n                            items: {\n                                type: 'string',\n                            },\n                            description: 'If specified, only events where all of these tags were added are returned',\n                        },\n                        removedTags: {\n                            type: 'array',\n                            items: {\n                                type: 'string',\n                            },\n                            description: 'If specified, only events where all of these tags were removed are returned',\n                        },\n                        reportTypes: {\n                            type: 'array',\n                            items: {\n                                type: 'string',\n                            },\n                        },\n                        policies: {\n                            type: 'array',\n                            items: {\n                                type: 'string',\n                                description: 'If specified, only events where the action policies match any of the given policies are returned',\n                            },\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['events'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            events: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:tools.ozone.moderation.defs#modEventView',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ToolsOzoneModerationQueryStatuses: {\n        lexicon: 1,\n        id: 'tools.ozone.moderation.queryStatuses',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'View moderation statuses of subjects (record or repo).',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        queueCount: {\n                            type: 'integer',\n                            description: 'Number of queues being used by moderators. Subjects will be split among all queues.',\n                        },\n                        queueIndex: {\n                            type: 'integer',\n                            description: 'Index of the queue to fetch subjects from. Works only when queueCount value is specified.',\n                        },\n                        queueSeed: {\n                            type: 'string',\n                            description: 'A seeder to shuffle/balance the queue items.',\n                        },\n                        includeAllUserRecords: {\n                            type: 'boolean',\n                            description: \"All subjects, or subjects from given 'collections' param, belonging to the account specified in the 'subject' param will be returned.\",\n                        },\n                        subject: {\n                            type: 'string',\n                            format: 'uri',\n                            description: 'The subject to get the status for.',\n                        },\n                        comment: {\n                            type: 'string',\n                            description: 'Search subjects by keyword from comments',\n                        },\n                        reportedAfter: {\n                            type: 'string',\n                            format: 'datetime',\n                            description: 'Search subjects reported after a given timestamp',\n                        },\n                        reportedBefore: {\n                            type: 'string',\n                            format: 'datetime',\n                            description: 'Search subjects reported before a given timestamp',\n                        },\n                        reviewedAfter: {\n                            type: 'string',\n                            format: 'datetime',\n                            description: 'Search subjects reviewed after a given timestamp',\n                        },\n                        hostingDeletedAfter: {\n                            type: 'string',\n                            format: 'datetime',\n                            description: 'Search subjects where the associated record/account was deleted after a given timestamp',\n                        },\n                        hostingDeletedBefore: {\n                            type: 'string',\n                            format: 'datetime',\n                            description: 'Search subjects where the associated record/account was deleted before a given timestamp',\n                        },\n                        hostingUpdatedAfter: {\n                            type: 'string',\n                            format: 'datetime',\n                            description: 'Search subjects where the associated record/account was updated after a given timestamp',\n                        },\n                        hostingUpdatedBefore: {\n                            type: 'string',\n                            format: 'datetime',\n                            description: 'Search subjects where the associated record/account was updated before a given timestamp',\n                        },\n                        hostingStatuses: {\n                            type: 'array',\n                            items: {\n                                type: 'string',\n                            },\n                            description: 'Search subjects by the status of the associated record/account',\n                        },\n                        reviewedBefore: {\n                            type: 'string',\n                            format: 'datetime',\n                            description: 'Search subjects reviewed before a given timestamp',\n                        },\n                        includeMuted: {\n                            type: 'boolean',\n                            description: \"By default, we don't include muted subjects in the results. Set this to true to include them.\",\n                        },\n                        onlyMuted: {\n                            type: 'boolean',\n                            description: 'When set to true, only muted subjects and reporters will be returned.',\n                        },\n                        reviewState: {\n                            type: 'string',\n                            description: 'Specify when fetching subjects in a certain state',\n                        },\n                        ignoreSubjects: {\n                            type: 'array',\n                            items: {\n                                type: 'string',\n                                format: 'uri',\n                            },\n                        },\n                        lastReviewedBy: {\n                            type: 'string',\n                            format: 'did',\n                            description: 'Get all subject statuses that were reviewed by a specific moderator',\n                        },\n                        sortField: {\n                            type: 'string',\n                            default: 'lastReportedAt',\n                            enum: [\n                                'lastReviewedAt',\n                                'lastReportedAt',\n                                'reportedRecordsCount',\n                                'takendownRecordsCount',\n                                'priorityScore',\n                            ],\n                        },\n                        sortDirection: {\n                            type: 'string',\n                            default: 'desc',\n                            enum: ['asc', 'desc'],\n                        },\n                        takendown: {\n                            type: 'boolean',\n                            description: 'Get subjects that were taken down',\n                        },\n                        appealed: {\n                            type: 'boolean',\n                            description: 'Get subjects in unresolved appealed status',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        tags: {\n                            type: 'array',\n                            maxLength: 25,\n                            items: {\n                                type: 'string',\n                                description: 'Items in this array are applied with OR filters. To apply AND filter, put all tags in the same string and separate using && characters',\n                            },\n                        },\n                        excludeTags: {\n                            type: 'array',\n                            items: {\n                                type: 'string',\n                            },\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                        collections: {\n                            type: 'array',\n                            maxLength: 20,\n                            description: \"If specified, subjects belonging to the given collections will be returned. When subjectType is set to 'account', this will be ignored.\",\n                            items: {\n                                type: 'string',\n                                format: 'nsid',\n                            },\n                        },\n                        subjectType: {\n                            type: 'string',\n                            description: \"If specified, subjects of the given type (account or record) will be returned. When this is set to 'account' the 'collections' parameter will be ignored. When includeAllUserRecords or subject is set, this will be ignored.\",\n                            knownValues: ['account', 'record'],\n                        },\n                        minAccountSuspendCount: {\n                            type: 'integer',\n                            description: 'If specified, only subjects that belong to an account that has at least this many suspensions will be returned.',\n                        },\n                        minReportedRecordsCount: {\n                            type: 'integer',\n                            description: 'If specified, only subjects that belong to an account that has at least this many reported records will be returned.',\n                        },\n                        minTakendownRecordsCount: {\n                            type: 'integer',\n                            description: 'If specified, only subjects that belong to an account that has at least this many taken down records will be returned.',\n                        },\n                        minPriorityScore: {\n                            minimum: 0,\n                            maximum: 100,\n                            type: 'integer',\n                            description: 'If specified, only subjects that have priority score value above the given value will be returned.',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['subjectStatuses'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            subjectStatuses: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:tools.ozone.moderation.defs#subjectStatusView',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ToolsOzoneModerationSearchRepos: {\n        lexicon: 1,\n        id: 'tools.ozone.moderation.searchRepos',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Find repositories based on a search term.',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        term: {\n                            type: 'string',\n                            description: \"DEPRECATED: use 'q' instead\",\n                        },\n                        q: {\n                            type: 'string',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['repos'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            repos: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:tools.ozone.moderation.defs#repoView',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ToolsOzoneServerGetConfig: {\n        lexicon: 1,\n        id: 'tools.ozone.server.getConfig',\n        defs: {\n            main: {\n                type: 'query',\n                description: \"Get details about ozone's server configuration.\",\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        properties: {\n                            appview: {\n                                type: 'ref',\n                                ref: 'lex:tools.ozone.server.getConfig#serviceConfig',\n                            },\n                            pds: {\n                                type: 'ref',\n                                ref: 'lex:tools.ozone.server.getConfig#serviceConfig',\n                            },\n                            blobDivert: {\n                                type: 'ref',\n                                ref: 'lex:tools.ozone.server.getConfig#serviceConfig',\n                            },\n                            chat: {\n                                type: 'ref',\n                                ref: 'lex:tools.ozone.server.getConfig#serviceConfig',\n                            },\n                            viewer: {\n                                type: 'ref',\n                                ref: 'lex:tools.ozone.server.getConfig#viewerConfig',\n                            },\n                        },\n                    },\n                },\n            },\n            serviceConfig: {\n                type: 'object',\n                properties: {\n                    url: {\n                        type: 'string',\n                        format: 'uri',\n                    },\n                },\n            },\n            viewerConfig: {\n                type: 'object',\n                properties: {\n                    role: {\n                        type: 'string',\n                        knownValues: [\n                            'tools.ozone.team.defs#roleAdmin',\n                            'tools.ozone.team.defs#roleModerator',\n                            'tools.ozone.team.defs#roleTriage',\n                        ],\n                    },\n                },\n            },\n        },\n    },\n    ToolsOzoneSetAddValues: {\n        lexicon: 1,\n        id: 'tools.ozone.set.addValues',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Add values to a specific set. Attempting to add values to a set that does not exist will result in an error.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['name', 'values'],\n                        properties: {\n                            name: {\n                                type: 'string',\n                                description: 'Name of the set to add values to',\n                            },\n                            values: {\n                                type: 'array',\n                                minLength: 1,\n                                maxLength: 1000,\n                                items: {\n                                    type: 'string',\n                                },\n                                description: 'Array of string values to add to the set',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ToolsOzoneSetDefs: {\n        lexicon: 1,\n        id: 'tools.ozone.set.defs',\n        defs: {\n            set: {\n                type: 'object',\n                required: ['name'],\n                properties: {\n                    name: {\n                        type: 'string',\n                        minLength: 3,\n                        maxLength: 128,\n                    },\n                    description: {\n                        type: 'string',\n                        maxGraphemes: 1024,\n                        maxLength: 10240,\n                    },\n                },\n            },\n            setView: {\n                type: 'object',\n                required: ['name', 'setSize', 'createdAt', 'updatedAt'],\n                properties: {\n                    name: {\n                        type: 'string',\n                        minLength: 3,\n                        maxLength: 128,\n                    },\n                    description: {\n                        type: 'string',\n                        maxGraphemes: 1024,\n                        maxLength: 10240,\n                    },\n                    setSize: {\n                        type: 'integer',\n                    },\n                    createdAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    updatedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                },\n            },\n        },\n    },\n    ToolsOzoneSetDeleteSet: {\n        lexicon: 1,\n        id: 'tools.ozone.set.deleteSet',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Delete an entire set. Attempting to delete a set that does not exist will result in an error.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['name'],\n                        properties: {\n                            name: {\n                                type: 'string',\n                                description: 'Name of the set to delete',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        properties: {},\n                    },\n                },\n                errors: [\n                    {\n                        name: 'SetNotFound',\n                        description: 'set with the given name does not exist',\n                    },\n                ],\n            },\n        },\n    },\n    ToolsOzoneSetDeleteValues: {\n        lexicon: 1,\n        id: 'tools.ozone.set.deleteValues',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Delete values from a specific set. Attempting to delete values that are not in the set will not result in an error',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['name', 'values'],\n                        properties: {\n                            name: {\n                                type: 'string',\n                                description: 'Name of the set to delete values from',\n                            },\n                            values: {\n                                type: 'array',\n                                minLength: 1,\n                                items: {\n                                    type: 'string',\n                                },\n                                description: 'Array of string values to delete from the set',\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'SetNotFound',\n                        description: 'set with the given name does not exist',\n                    },\n                ],\n            },\n        },\n    },\n    ToolsOzoneSetGetValues: {\n        lexicon: 1,\n        id: 'tools.ozone.set.getValues',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get a specific set and its values',\n                parameters: {\n                    type: 'params',\n                    required: ['name'],\n                    properties: {\n                        name: {\n                            type: 'string',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 1000,\n                            default: 100,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['set', 'values'],\n                        properties: {\n                            set: {\n                                type: 'ref',\n                                ref: 'lex:tools.ozone.set.defs#setView',\n                            },\n                            values: {\n                                type: 'array',\n                                items: {\n                                    type: 'string',\n                                },\n                            },\n                            cursor: {\n                                type: 'string',\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'SetNotFound',\n                        description: 'set with the given name does not exist',\n                    },\n                ],\n            },\n        },\n    },\n    ToolsOzoneSetQuerySets: {\n        lexicon: 1,\n        id: 'tools.ozone.set.querySets',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Query available sets',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                        namePrefix: {\n                            type: 'string',\n                        },\n                        sortBy: {\n                            type: 'string',\n                            enum: ['name', 'createdAt', 'updatedAt'],\n                            default: 'name',\n                        },\n                        sortDirection: {\n                            type: 'string',\n                            default: 'asc',\n                            enum: ['asc', 'desc'],\n                            description: 'Defaults to ascending order of name field.',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['sets'],\n                        properties: {\n                            sets: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:tools.ozone.set.defs#setView',\n                                },\n                            },\n                            cursor: {\n                                type: 'string',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ToolsOzoneSetUpsertSet: {\n        lexicon: 1,\n        id: 'tools.ozone.set.upsertSet',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Create or update set metadata',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'ref',\n                        ref: 'lex:tools.ozone.set.defs#set',\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'ref',\n                        ref: 'lex:tools.ozone.set.defs#setView',\n                    },\n                },\n            },\n        },\n    },\n    ToolsOzoneSettingDefs: {\n        lexicon: 1,\n        id: 'tools.ozone.setting.defs',\n        defs: {\n            option: {\n                type: 'object',\n                required: [\n                    'key',\n                    'value',\n                    'did',\n                    'scope',\n                    'createdBy',\n                    'lastUpdatedBy',\n                ],\n                properties: {\n                    key: {\n                        type: 'string',\n                        format: 'nsid',\n                    },\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                    value: {\n                        type: 'unknown',\n                    },\n                    description: {\n                        type: 'string',\n                        maxGraphemes: 1024,\n                        maxLength: 10240,\n                    },\n                    createdAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    updatedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    managerRole: {\n                        type: 'string',\n                        knownValues: [\n                            'tools.ozone.team.defs#roleModerator',\n                            'tools.ozone.team.defs#roleTriage',\n                            'tools.ozone.team.defs#roleAdmin',\n                        ],\n                    },\n                    scope: {\n                        type: 'string',\n                        knownValues: ['instance', 'personal'],\n                    },\n                    createdBy: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                    lastUpdatedBy: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                },\n            },\n        },\n    },\n    ToolsOzoneSettingListOptions: {\n        lexicon: 1,\n        id: 'tools.ozone.setting.listOptions',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'List settings with optional filtering',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                        scope: {\n                            type: 'string',\n                            knownValues: ['instance', 'personal'],\n                            default: 'instance',\n                        },\n                        prefix: {\n                            type: 'string',\n                            description: 'Filter keys by prefix',\n                        },\n                        keys: {\n                            type: 'array',\n                            maxLength: 100,\n                            items: {\n                                type: 'string',\n                                format: 'nsid',\n                            },\n                            description: 'Filter for only the specified keys. Ignored if prefix is provided',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['options'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            options: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:tools.ozone.setting.defs#option',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ToolsOzoneSettingRemoveOptions: {\n        lexicon: 1,\n        id: 'tools.ozone.setting.removeOptions',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Delete settings by key',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['keys', 'scope'],\n                        properties: {\n                            keys: {\n                                type: 'array',\n                                minLength: 1,\n                                maxLength: 200,\n                                items: {\n                                    type: 'string',\n                                    format: 'nsid',\n                                },\n                            },\n                            scope: {\n                                type: 'string',\n                                knownValues: ['instance', 'personal'],\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        properties: {},\n                    },\n                },\n            },\n        },\n    },\n    ToolsOzoneSettingUpsertOption: {\n        lexicon: 1,\n        id: 'tools.ozone.setting.upsertOption',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Create or update setting option',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['key', 'scope', 'value'],\n                        properties: {\n                            key: {\n                                type: 'string',\n                                format: 'nsid',\n                            },\n                            scope: {\n                                type: 'string',\n                                knownValues: ['instance', 'personal'],\n                            },\n                            value: {\n                                type: 'unknown',\n                            },\n                            description: {\n                                type: 'string',\n                                maxLength: 2000,\n                            },\n                            managerRole: {\n                                type: 'string',\n                                knownValues: [\n                                    'tools.ozone.team.defs#roleModerator',\n                                    'tools.ozone.team.defs#roleTriage',\n                                    'tools.ozone.team.defs#roleAdmin',\n                                ],\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['option'],\n                        properties: {\n                            option: {\n                                type: 'ref',\n                                ref: 'lex:tools.ozone.setting.defs#option',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ToolsOzoneSignatureDefs: {\n        lexicon: 1,\n        id: 'tools.ozone.signature.defs',\n        defs: {\n            sigDetail: {\n                type: 'object',\n                required: ['property', 'value'],\n                properties: {\n                    property: {\n                        type: 'string',\n                    },\n                    value: {\n                        type: 'string',\n                    },\n                },\n            },\n        },\n    },\n    ToolsOzoneSignatureFindCorrelation: {\n        lexicon: 1,\n        id: 'tools.ozone.signature.findCorrelation',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Find all correlated threat signatures between 2 or more accounts.',\n                parameters: {\n                    type: 'params',\n                    required: ['dids'],\n                    properties: {\n                        dids: {\n                            type: 'array',\n                            items: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['details'],\n                        properties: {\n                            details: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:tools.ozone.signature.defs#sigDetail',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ToolsOzoneSignatureFindRelatedAccounts: {\n        lexicon: 1,\n        id: 'tools.ozone.signature.findRelatedAccounts',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Get accounts that share some matching threat signatures with the root account.',\n                parameters: {\n                    type: 'params',\n                    required: ['did'],\n                    properties: {\n                        did: {\n                            type: 'string',\n                            format: 'did',\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['accounts'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            accounts: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:tools.ozone.signature.findRelatedAccounts#relatedAccount',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n            relatedAccount: {\n                type: 'object',\n                required: ['account'],\n                properties: {\n                    account: {\n                        type: 'ref',\n                        ref: 'lex:com.atproto.admin.defs#accountView',\n                    },\n                    similarities: {\n                        type: 'array',\n                        items: {\n                            type: 'ref',\n                            ref: 'lex:tools.ozone.signature.defs#sigDetail',\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ToolsOzoneSignatureSearchAccounts: {\n        lexicon: 1,\n        id: 'tools.ozone.signature.searchAccounts',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'Search for accounts that match one or more threat signature values.',\n                parameters: {\n                    type: 'params',\n                    required: ['values'],\n                    properties: {\n                        values: {\n                            type: 'array',\n                            items: {\n                                type: 'string',\n                            },\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['accounts'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            accounts: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:com.atproto.admin.defs#accountView',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ToolsOzoneTeamAddMember: {\n        lexicon: 1,\n        id: 'tools.ozone.team.addMember',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Add a member to the ozone team. Requires admin role.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['did', 'role'],\n                        properties: {\n                            did: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                            role: {\n                                type: 'string',\n                                knownValues: [\n                                    'tools.ozone.team.defs#roleAdmin',\n                                    'tools.ozone.team.defs#roleModerator',\n                                    'tools.ozone.team.defs#roleTriage',\n                                ],\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'ref',\n                        ref: 'lex:tools.ozone.team.defs#member',\n                    },\n                },\n                errors: [\n                    {\n                        name: 'MemberAlreadyExists',\n                        description: 'Member already exists in the team.',\n                    },\n                ],\n            },\n        },\n    },\n    ToolsOzoneTeamDefs: {\n        lexicon: 1,\n        id: 'tools.ozone.team.defs',\n        defs: {\n            member: {\n                type: 'object',\n                required: ['did', 'role'],\n                properties: {\n                    did: {\n                        type: 'string',\n                        format: 'did',\n                    },\n                    disabled: {\n                        type: 'boolean',\n                    },\n                    profile: {\n                        type: 'ref',\n                        ref: 'lex:app.bsky.actor.defs#profileViewDetailed',\n                    },\n                    createdAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    updatedAt: {\n                        type: 'string',\n                        format: 'datetime',\n                    },\n                    lastUpdatedBy: {\n                        type: 'string',\n                    },\n                    role: {\n                        type: 'string',\n                        knownValues: [\n                            'lex:tools.ozone.team.defs#roleAdmin',\n                            'lex:tools.ozone.team.defs#roleModerator',\n                            'lex:tools.ozone.team.defs#roleTriage',\n                        ],\n                    },\n                },\n            },\n            roleAdmin: {\n                type: 'token',\n                description: 'Admin role. Highest level of access, can perform all actions.',\n            },\n            roleModerator: {\n                type: 'token',\n                description: 'Moderator role. Can perform most actions.',\n            },\n            roleTriage: {\n                type: 'token',\n                description: 'Triage role. Mostly intended for monitoring and escalating issues.',\n            },\n        },\n    },\n    ToolsOzoneTeamDeleteMember: {\n        lexicon: 1,\n        id: 'tools.ozone.team.deleteMember',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Delete a member from ozone team. Requires admin role.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['did'],\n                        properties: {\n                            did: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                        },\n                    },\n                },\n                errors: [\n                    {\n                        name: 'MemberNotFound',\n                        description: 'The member being deleted does not exist',\n                    },\n                    {\n                        name: 'CannotDeleteSelf',\n                        description: 'You can not delete yourself from the team',\n                    },\n                ],\n            },\n        },\n    },\n    ToolsOzoneTeamListMembers: {\n        lexicon: 1,\n        id: 'tools.ozone.team.listMembers',\n        defs: {\n            main: {\n                type: 'query',\n                description: 'List all members with access to the ozone service.',\n                parameters: {\n                    type: 'params',\n                    properties: {\n                        limit: {\n                            type: 'integer',\n                            minimum: 1,\n                            maximum: 100,\n                            default: 50,\n                        },\n                        cursor: {\n                            type: 'string',\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['members'],\n                        properties: {\n                            cursor: {\n                                type: 'string',\n                            },\n                            members: {\n                                type: 'array',\n                                items: {\n                                    type: 'ref',\n                                    ref: 'lex:tools.ozone.team.defs#member',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    ToolsOzoneTeamUpdateMember: {\n        lexicon: 1,\n        id: 'tools.ozone.team.updateMember',\n        defs: {\n            main: {\n                type: 'procedure',\n                description: 'Update a member in the ozone service. Requires admin role.',\n                input: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'object',\n                        required: ['did'],\n                        properties: {\n                            did: {\n                                type: 'string',\n                                format: 'did',\n                            },\n                            disabled: {\n                                type: 'boolean',\n                            },\n                            role: {\n                                type: 'string',\n                                knownValues: [\n                                    'tools.ozone.team.defs#roleAdmin',\n                                    'tools.ozone.team.defs#roleModerator',\n                                    'tools.ozone.team.defs#roleTriage',\n                                ],\n                            },\n                        },\n                    },\n                },\n                output: {\n                    encoding: 'application/json',\n                    schema: {\n                        type: 'ref',\n                        ref: 'lex:tools.ozone.team.defs#member',\n                    },\n                },\n                errors: [\n                    {\n                        name: 'MemberNotFound',\n                        description: 'The member being updated does not exist in the team',\n                    },\n                ],\n            },\n        },\n    },\n};\nexports.schemas = Object.values(exports.schemaDict);\nexports.lexicons = new lexicon_1.Lexicons(exports.schemas);\nexports.ids = {\n    ComAtprotoAdminDefs: 'com.atproto.admin.defs',\n    ComAtprotoAdminDeleteAccount: 'com.atproto.admin.deleteAccount',\n    ComAtprotoAdminDisableAccountInvites: 'com.atproto.admin.disableAccountInvites',\n    ComAtprotoAdminDisableInviteCodes: 'com.atproto.admin.disableInviteCodes',\n    ComAtprotoAdminEnableAccountInvites: 'com.atproto.admin.enableAccountInvites',\n    ComAtprotoAdminGetAccountInfo: 'com.atproto.admin.getAccountInfo',\n    ComAtprotoAdminGetAccountInfos: 'com.atproto.admin.getAccountInfos',\n    ComAtprotoAdminGetInviteCodes: 'com.atproto.admin.getInviteCodes',\n    ComAtprotoAdminGetSubjectStatus: 'com.atproto.admin.getSubjectStatus',\n    ComAtprotoAdminSearchAccounts: 'com.atproto.admin.searchAccounts',\n    ComAtprotoAdminSendEmail: 'com.atproto.admin.sendEmail',\n    ComAtprotoAdminUpdateAccountEmail: 'com.atproto.admin.updateAccountEmail',\n    ComAtprotoAdminUpdateAccountHandle: 'com.atproto.admin.updateAccountHandle',\n    ComAtprotoAdminUpdateAccountPassword: 'com.atproto.admin.updateAccountPassword',\n    ComAtprotoAdminUpdateSubjectStatus: 'com.atproto.admin.updateSubjectStatus',\n    ComAtprotoIdentityGetRecommendedDidCredentials: 'com.atproto.identity.getRecommendedDidCredentials',\n    ComAtprotoIdentityRequestPlcOperationSignature: 'com.atproto.identity.requestPlcOperationSignature',\n    ComAtprotoIdentityResolveHandle: 'com.atproto.identity.resolveHandle',\n    ComAtprotoIdentitySignPlcOperation: 'com.atproto.identity.signPlcOperation',\n    ComAtprotoIdentitySubmitPlcOperation: 'com.atproto.identity.submitPlcOperation',\n    ComAtprotoIdentityUpdateHandle: 'com.atproto.identity.updateHandle',\n    ComAtprotoLabelDefs: 'com.atproto.label.defs',\n    ComAtprotoLabelQueryLabels: 'com.atproto.label.queryLabels',\n    ComAtprotoLabelSubscribeLabels: 'com.atproto.label.subscribeLabels',\n    ComAtprotoLexiconSchema: 'com.atproto.lexicon.schema',\n    ComAtprotoModerationCreateReport: 'com.atproto.moderation.createReport',\n    ComAtprotoModerationDefs: 'com.atproto.moderation.defs',\n    ComAtprotoRepoApplyWrites: 'com.atproto.repo.applyWrites',\n    ComAtprotoRepoCreateRecord: 'com.atproto.repo.createRecord',\n    ComAtprotoRepoDefs: 'com.atproto.repo.defs',\n    ComAtprotoRepoDeleteRecord: 'com.atproto.repo.deleteRecord',\n    ComAtprotoRepoDescribeRepo: 'com.atproto.repo.describeRepo',\n    ComAtprotoRepoGetRecord: 'com.atproto.repo.getRecord',\n    ComAtprotoRepoImportRepo: 'com.atproto.repo.importRepo',\n    ComAtprotoRepoListMissingBlobs: 'com.atproto.repo.listMissingBlobs',\n    ComAtprotoRepoListRecords: 'com.atproto.repo.listRecords',\n    ComAtprotoRepoPutRecord: 'com.atproto.repo.putRecord',\n    ComAtprotoRepoStrongRef: 'com.atproto.repo.strongRef',\n    ComAtprotoRepoUploadBlob: 'com.atproto.repo.uploadBlob',\n    ComAtprotoServerActivateAccount: 'com.atproto.server.activateAccount',\n    ComAtprotoServerCheckAccountStatus: 'com.atproto.server.checkAccountStatus',\n    ComAtprotoServerConfirmEmail: 'com.atproto.server.confirmEmail',\n    ComAtprotoServerCreateAccount: 'com.atproto.server.createAccount',\n    ComAtprotoServerCreateAppPassword: 'com.atproto.server.createAppPassword',\n    ComAtprotoServerCreateInviteCode: 'com.atproto.server.createInviteCode',\n    ComAtprotoServerCreateInviteCodes: 'com.atproto.server.createInviteCodes',\n    ComAtprotoServerCreateSession: 'com.atproto.server.createSession',\n    ComAtprotoServerDeactivateAccount: 'com.atproto.server.deactivateAccount',\n    ComAtprotoServerDefs: 'com.atproto.server.defs',\n    ComAtprotoServerDeleteAccount: 'com.atproto.server.deleteAccount',\n    ComAtprotoServerDeleteSession: 'com.atproto.server.deleteSession',\n    ComAtprotoServerDescribeServer: 'com.atproto.server.describeServer',\n    ComAtprotoServerGetAccountInviteCodes: 'com.atproto.server.getAccountInviteCodes',\n    ComAtprotoServerGetServiceAuth: 'com.atproto.server.getServiceAuth',\n    ComAtprotoServerGetSession: 'com.atproto.server.getSession',\n    ComAtprotoServerListAppPasswords: 'com.atproto.server.listAppPasswords',\n    ComAtprotoServerRefreshSession: 'com.atproto.server.refreshSession',\n    ComAtprotoServerRequestAccountDelete: 'com.atproto.server.requestAccountDelete',\n    ComAtprotoServerRequestEmailConfirmation: 'com.atproto.server.requestEmailConfirmation',\n    ComAtprotoServerRequestEmailUpdate: 'com.atproto.server.requestEmailUpdate',\n    ComAtprotoServerRequestPasswordReset: 'com.atproto.server.requestPasswordReset',\n    ComAtprotoServerReserveSigningKey: 'com.atproto.server.reserveSigningKey',\n    ComAtprotoServerResetPassword: 'com.atproto.server.resetPassword',\n    ComAtprotoServerRevokeAppPassword: 'com.atproto.server.revokeAppPassword',\n    ComAtprotoServerUpdateEmail: 'com.atproto.server.updateEmail',\n    ComAtprotoSyncGetBlob: 'com.atproto.sync.getBlob',\n    ComAtprotoSyncGetBlocks: 'com.atproto.sync.getBlocks',\n    ComAtprotoSyncGetCheckout: 'com.atproto.sync.getCheckout',\n    ComAtprotoSyncGetHead: 'com.atproto.sync.getHead',\n    ComAtprotoSyncGetLatestCommit: 'com.atproto.sync.getLatestCommit',\n    ComAtprotoSyncGetRecord: 'com.atproto.sync.getRecord',\n    ComAtprotoSyncGetRepo: 'com.atproto.sync.getRepo',\n    ComAtprotoSyncGetRepoStatus: 'com.atproto.sync.getRepoStatus',\n    ComAtprotoSyncListBlobs: 'com.atproto.sync.listBlobs',\n    ComAtprotoSyncListRepos: 'com.atproto.sync.listRepos',\n    ComAtprotoSyncNotifyOfUpdate: 'com.atproto.sync.notifyOfUpdate',\n    ComAtprotoSyncRequestCrawl: 'com.atproto.sync.requestCrawl',\n    ComAtprotoSyncSubscribeRepos: 'com.atproto.sync.subscribeRepos',\n    ComAtprotoTempAddReservedHandle: 'com.atproto.temp.addReservedHandle',\n    ComAtprotoTempCheckSignupQueue: 'com.atproto.temp.checkSignupQueue',\n    ComAtprotoTempFetchLabels: 'com.atproto.temp.fetchLabels',\n    ComAtprotoTempRequestPhoneVerification: 'com.atproto.temp.requestPhoneVerification',\n    AppBskyActorDefs: 'app.bsky.actor.defs',\n    AppBskyActorGetPreferences: 'app.bsky.actor.getPreferences',\n    AppBskyActorGetProfile: 'app.bsky.actor.getProfile',\n    AppBskyActorGetProfiles: 'app.bsky.actor.getProfiles',\n    AppBskyActorGetSuggestions: 'app.bsky.actor.getSuggestions',\n    AppBskyActorProfile: 'app.bsky.actor.profile',\n    AppBskyActorPutPreferences: 'app.bsky.actor.putPreferences',\n    AppBskyActorSearchActors: 'app.bsky.actor.searchActors',\n    AppBskyActorSearchActorsTypeahead: 'app.bsky.actor.searchActorsTypeahead',\n    AppBskyEmbedDefs: 'app.bsky.embed.defs',\n    AppBskyEmbedExternal: 'app.bsky.embed.external',\n    AppBskyEmbedImages: 'app.bsky.embed.images',\n    AppBskyEmbedRecord: 'app.bsky.embed.record',\n    AppBskyEmbedRecordWithMedia: 'app.bsky.embed.recordWithMedia',\n    AppBskyEmbedVideo: 'app.bsky.embed.video',\n    AppBskyFeedDefs: 'app.bsky.feed.defs',\n    AppBskyFeedDescribeFeedGenerator: 'app.bsky.feed.describeFeedGenerator',\n    AppBskyFeedGenerator: 'app.bsky.feed.generator',\n    AppBskyFeedGetActorFeeds: 'app.bsky.feed.getActorFeeds',\n    AppBskyFeedGetActorLikes: 'app.bsky.feed.getActorLikes',\n    AppBskyFeedGetAuthorFeed: 'app.bsky.feed.getAuthorFeed',\n    AppBskyFeedGetFeed: 'app.bsky.feed.getFeed',\n    AppBskyFeedGetFeedGenerator: 'app.bsky.feed.getFeedGenerator',\n    AppBskyFeedGetFeedGenerators: 'app.bsky.feed.getFeedGenerators',\n    AppBskyFeedGetFeedSkeleton: 'app.bsky.feed.getFeedSkeleton',\n    AppBskyFeedGetLikes: 'app.bsky.feed.getLikes',\n    AppBskyFeedGetListFeed: 'app.bsky.feed.getListFeed',\n    AppBskyFeedGetPostThread: 'app.bsky.feed.getPostThread',\n    AppBskyFeedGetPosts: 'app.bsky.feed.getPosts',\n    AppBskyFeedGetQuotes: 'app.bsky.feed.getQuotes',\n    AppBskyFeedGetRepostedBy: 'app.bsky.feed.getRepostedBy',\n    AppBskyFeedGetSuggestedFeeds: 'app.bsky.feed.getSuggestedFeeds',\n    AppBskyFeedGetTimeline: 'app.bsky.feed.getTimeline',\n    AppBskyFeedLike: 'app.bsky.feed.like',\n    AppBskyFeedPost: 'app.bsky.feed.post',\n    AppBskyFeedPostgate: 'app.bsky.feed.postgate',\n    AppBskyFeedRepost: 'app.bsky.feed.repost',\n    AppBskyFeedSearchPosts: 'app.bsky.feed.searchPosts',\n    AppBskyFeedSendInteractions: 'app.bsky.feed.sendInteractions',\n    AppBskyFeedThreadgate: 'app.bsky.feed.threadgate',\n    AppBskyGraphBlock: 'app.bsky.graph.block',\n    AppBskyGraphDefs: 'app.bsky.graph.defs',\n    AppBskyGraphFollow: 'app.bsky.graph.follow',\n    AppBskyGraphGetActorStarterPacks: 'app.bsky.graph.getActorStarterPacks',\n    AppBskyGraphGetBlocks: 'app.bsky.graph.getBlocks',\n    AppBskyGraphGetFollowers: 'app.bsky.graph.getFollowers',\n    AppBskyGraphGetFollows: 'app.bsky.graph.getFollows',\n    AppBskyGraphGetKnownFollowers: 'app.bsky.graph.getKnownFollowers',\n    AppBskyGraphGetList: 'app.bsky.graph.getList',\n    AppBskyGraphGetListBlocks: 'app.bsky.graph.getListBlocks',\n    AppBskyGraphGetListMutes: 'app.bsky.graph.getListMutes',\n    AppBskyGraphGetLists: 'app.bsky.graph.getLists',\n    AppBskyGraphGetMutes: 'app.bsky.graph.getMutes',\n    AppBskyGraphGetRelationships: 'app.bsky.graph.getRelationships',\n    AppBskyGraphGetStarterPack: 'app.bsky.graph.getStarterPack',\n    AppBskyGraphGetStarterPacks: 'app.bsky.graph.getStarterPacks',\n    AppBskyGraphGetSuggestedFollowsByActor: 'app.bsky.graph.getSuggestedFollowsByActor',\n    AppBskyGraphList: 'app.bsky.graph.list',\n    AppBskyGraphListblock: 'app.bsky.graph.listblock',\n    AppBskyGraphListitem: 'app.bsky.graph.listitem',\n    AppBskyGraphMuteActor: 'app.bsky.graph.muteActor',\n    AppBskyGraphMuteActorList: 'app.bsky.graph.muteActorList',\n    AppBskyGraphMuteThread: 'app.bsky.graph.muteThread',\n    AppBskyGraphSearchStarterPacks: 'app.bsky.graph.searchStarterPacks',\n    AppBskyGraphStarterpack: 'app.bsky.graph.starterpack',\n    AppBskyGraphUnmuteActor: 'app.bsky.graph.unmuteActor',\n    AppBskyGraphUnmuteActorList: 'app.bsky.graph.unmuteActorList',\n    AppBskyGraphUnmuteThread: 'app.bsky.graph.unmuteThread',\n    AppBskyLabelerDefs: 'app.bsky.labeler.defs',\n    AppBskyLabelerGetServices: 'app.bsky.labeler.getServices',\n    AppBskyLabelerService: 'app.bsky.labeler.service',\n    AppBskyNotificationGetUnreadCount: 'app.bsky.notification.getUnreadCount',\n    AppBskyNotificationListNotifications: 'app.bsky.notification.listNotifications',\n    AppBskyNotificationPutPreferences: 'app.bsky.notification.putPreferences',\n    AppBskyNotificationRegisterPush: 'app.bsky.notification.registerPush',\n    AppBskyNotificationUpdateSeen: 'app.bsky.notification.updateSeen',\n    AppBskyRichtextFacet: 'app.bsky.richtext.facet',\n    AppBskyUnspeccedDefs: 'app.bsky.unspecced.defs',\n    AppBskyUnspeccedGetConfig: 'app.bsky.unspecced.getConfig',\n    AppBskyUnspeccedGetPopularFeedGenerators: 'app.bsky.unspecced.getPopularFeedGenerators',\n    AppBskyUnspeccedGetSuggestionsSkeleton: 'app.bsky.unspecced.getSuggestionsSkeleton',\n    AppBskyUnspeccedGetTaggedSuggestions: 'app.bsky.unspecced.getTaggedSuggestions',\n    AppBskyUnspeccedGetTrendingTopics: 'app.bsky.unspecced.getTrendingTopics',\n    AppBskyUnspeccedSearchActorsSkeleton: 'app.bsky.unspecced.searchActorsSkeleton',\n    AppBskyUnspeccedSearchPostsSkeleton: 'app.bsky.unspecced.searchPostsSkeleton',\n    AppBskyUnspeccedSearchStarterPacksSkeleton: 'app.bsky.unspecced.searchStarterPacksSkeleton',\n    AppBskyVideoDefs: 'app.bsky.video.defs',\n    AppBskyVideoGetJobStatus: 'app.bsky.video.getJobStatus',\n    AppBskyVideoGetUploadLimits: 'app.bsky.video.getUploadLimits',\n    AppBskyVideoUploadVideo: 'app.bsky.video.uploadVideo',\n    ChatBskyActorDeclaration: 'chat.bsky.actor.declaration',\n    ChatBskyActorDefs: 'chat.bsky.actor.defs',\n    ChatBskyActorDeleteAccount: 'chat.bsky.actor.deleteAccount',\n    ChatBskyActorExportAccountData: 'chat.bsky.actor.exportAccountData',\n    ChatBskyConvoDefs: 'chat.bsky.convo.defs',\n    ChatBskyConvoDeleteMessageForSelf: 'chat.bsky.convo.deleteMessageForSelf',\n    ChatBskyConvoGetConvo: 'chat.bsky.convo.getConvo',\n    ChatBskyConvoGetConvoForMembers: 'chat.bsky.convo.getConvoForMembers',\n    ChatBskyConvoGetLog: 'chat.bsky.convo.getLog',\n    ChatBskyConvoGetMessages: 'chat.bsky.convo.getMessages',\n    ChatBskyConvoLeaveConvo: 'chat.bsky.convo.leaveConvo',\n    ChatBskyConvoListConvos: 'chat.bsky.convo.listConvos',\n    ChatBskyConvoMuteConvo: 'chat.bsky.convo.muteConvo',\n    ChatBskyConvoSendMessage: 'chat.bsky.convo.sendMessage',\n    ChatBskyConvoSendMessageBatch: 'chat.bsky.convo.sendMessageBatch',\n    ChatBskyConvoUnmuteConvo: 'chat.bsky.convo.unmuteConvo',\n    ChatBskyConvoUpdateRead: 'chat.bsky.convo.updateRead',\n    ChatBskyModerationGetActorMetadata: 'chat.bsky.moderation.getActorMetadata',\n    ChatBskyModerationGetMessageContext: 'chat.bsky.moderation.getMessageContext',\n    ChatBskyModerationUpdateActorAccess: 'chat.bsky.moderation.updateActorAccess',\n    ToolsOzoneCommunicationCreateTemplate: 'tools.ozone.communication.createTemplate',\n    ToolsOzoneCommunicationDefs: 'tools.ozone.communication.defs',\n    ToolsOzoneCommunicationDeleteTemplate: 'tools.ozone.communication.deleteTemplate',\n    ToolsOzoneCommunicationListTemplates: 'tools.ozone.communication.listTemplates',\n    ToolsOzoneCommunicationUpdateTemplate: 'tools.ozone.communication.updateTemplate',\n    ToolsOzoneModerationDefs: 'tools.ozone.moderation.defs',\n    ToolsOzoneModerationEmitEvent: 'tools.ozone.moderation.emitEvent',\n    ToolsOzoneModerationGetEvent: 'tools.ozone.moderation.getEvent',\n    ToolsOzoneModerationGetRecord: 'tools.ozone.moderation.getRecord',\n    ToolsOzoneModerationGetRecords: 'tools.ozone.moderation.getRecords',\n    ToolsOzoneModerationGetRepo: 'tools.ozone.moderation.getRepo',\n    ToolsOzoneModerationGetRepos: 'tools.ozone.moderation.getRepos',\n    ToolsOzoneModerationQueryEvents: 'tools.ozone.moderation.queryEvents',\n    ToolsOzoneModerationQueryStatuses: 'tools.ozone.moderation.queryStatuses',\n    ToolsOzoneModerationSearchRepos: 'tools.ozone.moderation.searchRepos',\n    ToolsOzoneServerGetConfig: 'tools.ozone.server.getConfig',\n    ToolsOzoneSetAddValues: 'tools.ozone.set.addValues',\n    ToolsOzoneSetDefs: 'tools.ozone.set.defs',\n    ToolsOzoneSetDeleteSet: 'tools.ozone.set.deleteSet',\n    ToolsOzoneSetDeleteValues: 'tools.ozone.set.deleteValues',\n    ToolsOzoneSetGetValues: 'tools.ozone.set.getValues',\n    ToolsOzoneSetQuerySets: 'tools.ozone.set.querySets',\n    ToolsOzoneSetUpsertSet: 'tools.ozone.set.upsertSet',\n    ToolsOzoneSettingDefs: 'tools.ozone.setting.defs',\n    ToolsOzoneSettingListOptions: 'tools.ozone.setting.listOptions',\n    ToolsOzoneSettingRemoveOptions: 'tools.ozone.setting.removeOptions',\n    ToolsOzoneSettingUpsertOption: 'tools.ozone.setting.upsertOption',\n    ToolsOzoneSignatureDefs: 'tools.ozone.signature.defs',\n    ToolsOzoneSignatureFindCorrelation: 'tools.ozone.signature.findCorrelation',\n    ToolsOzoneSignatureFindRelatedAccounts: 'tools.ozone.signature.findRelatedAccounts',\n    ToolsOzoneSignatureSearchAccounts: 'tools.ozone.signature.searchAccounts',\n    ToolsOzoneTeamAddMember: 'tools.ozone.team.addMember',\n    ToolsOzoneTeamDefs: 'tools.ozone.team.defs',\n    ToolsOzoneTeamDeleteMember: 'tools.ozone.team.deleteMember',\n    ToolsOzoneTeamListMembers: 'tools.ozone.team.listMembers',\n    ToolsOzoneTeamUpdateMember: 'tools.ozone.team.updateMember',\n};\n//# sourceMappingURL=lexicons.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/defs.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/actor/defs.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isProfileViewBasic = isProfileViewBasic;\nexports.validateProfileViewBasic = validateProfileViewBasic;\nexports.isProfileView = isProfileView;\nexports.validateProfileView = validateProfileView;\nexports.isProfileViewDetailed = isProfileViewDetailed;\nexports.validateProfileViewDetailed = validateProfileViewDetailed;\nexports.isProfileAssociated = isProfileAssociated;\nexports.validateProfileAssociated = validateProfileAssociated;\nexports.isProfileAssociatedChat = isProfileAssociatedChat;\nexports.validateProfileAssociatedChat = validateProfileAssociatedChat;\nexports.isViewerState = isViewerState;\nexports.validateViewerState = validateViewerState;\nexports.isKnownFollowers = isKnownFollowers;\nexports.validateKnownFollowers = validateKnownFollowers;\nexports.isAdultContentPref = isAdultContentPref;\nexports.validateAdultContentPref = validateAdultContentPref;\nexports.isContentLabelPref = isContentLabelPref;\nexports.validateContentLabelPref = validateContentLabelPref;\nexports.isSavedFeed = isSavedFeed;\nexports.validateSavedFeed = validateSavedFeed;\nexports.isSavedFeedsPrefV2 = isSavedFeedsPrefV2;\nexports.validateSavedFeedsPrefV2 = validateSavedFeedsPrefV2;\nexports.isSavedFeedsPref = isSavedFeedsPref;\nexports.validateSavedFeedsPref = validateSavedFeedsPref;\nexports.isPersonalDetailsPref = isPersonalDetailsPref;\nexports.validatePersonalDetailsPref = validatePersonalDetailsPref;\nexports.isFeedViewPref = isFeedViewPref;\nexports.validateFeedViewPref = validateFeedViewPref;\nexports.isThreadViewPref = isThreadViewPref;\nexports.validateThreadViewPref = validateThreadViewPref;\nexports.isInterestsPref = isInterestsPref;\nexports.validateInterestsPref = validateInterestsPref;\nexports.isMutedWord = isMutedWord;\nexports.validateMutedWord = validateMutedWord;\nexports.isMutedWordsPref = isMutedWordsPref;\nexports.validateMutedWordsPref = validateMutedWordsPref;\nexports.isHiddenPostsPref = isHiddenPostsPref;\nexports.validateHiddenPostsPref = validateHiddenPostsPref;\nexports.isLabelersPref = isLabelersPref;\nexports.validateLabelersPref = validateLabelersPref;\nexports.isLabelerPrefItem = isLabelerPrefItem;\nexports.validateLabelerPrefItem = validateLabelerPrefItem;\nexports.isBskyAppStatePref = isBskyAppStatePref;\nexports.validateBskyAppStatePref = validateBskyAppStatePref;\nexports.isBskyAppProgressGuide = isBskyAppProgressGuide;\nexports.validateBskyAppProgressGuide = validateBskyAppProgressGuide;\nexports.isNux = isNux;\nexports.validateNux = validateNux;\nexports.isPostInteractionSettingsPref = isPostInteractionSettingsPref;\nexports.validatePostInteractionSettingsPref = validatePostInteractionSettingsPref;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isProfileViewBasic(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.actor.defs#profileViewBasic');\n}\nfunction validateProfileViewBasic(v) {\n    return lexicons_1.lexicons.validate('app.bsky.actor.defs#profileViewBasic', v);\n}\nfunction isProfileView(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.actor.defs#profileView');\n}\nfunction validateProfileView(v) {\n    return lexicons_1.lexicons.validate('app.bsky.actor.defs#profileView', v);\n}\nfunction isProfileViewDetailed(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.actor.defs#profileViewDetailed');\n}\nfunction validateProfileViewDetailed(v) {\n    return lexicons_1.lexicons.validate('app.bsky.actor.defs#profileViewDetailed', v);\n}\nfunction isProfileAssociated(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.actor.defs#profileAssociated');\n}\nfunction validateProfileAssociated(v) {\n    return lexicons_1.lexicons.validate('app.bsky.actor.defs#profileAssociated', v);\n}\nfunction isProfileAssociatedChat(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.actor.defs#profileAssociatedChat');\n}\nfunction validateProfileAssociatedChat(v) {\n    return lexicons_1.lexicons.validate('app.bsky.actor.defs#profileAssociatedChat', v);\n}\nfunction isViewerState(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.actor.defs#viewerState');\n}\nfunction validateViewerState(v) {\n    return lexicons_1.lexicons.validate('app.bsky.actor.defs#viewerState', v);\n}\nfunction isKnownFollowers(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.actor.defs#knownFollowers');\n}\nfunction validateKnownFollowers(v) {\n    return lexicons_1.lexicons.validate('app.bsky.actor.defs#knownFollowers', v);\n}\nfunction isAdultContentPref(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.actor.defs#adultContentPref');\n}\nfunction validateAdultContentPref(v) {\n    return lexicons_1.lexicons.validate('app.bsky.actor.defs#adultContentPref', v);\n}\nfunction isContentLabelPref(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.actor.defs#contentLabelPref');\n}\nfunction validateContentLabelPref(v) {\n    return lexicons_1.lexicons.validate('app.bsky.actor.defs#contentLabelPref', v);\n}\nfunction isSavedFeed(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.actor.defs#savedFeed');\n}\nfunction validateSavedFeed(v) {\n    return lexicons_1.lexicons.validate('app.bsky.actor.defs#savedFeed', v);\n}\nfunction isSavedFeedsPrefV2(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.actor.defs#savedFeedsPrefV2');\n}\nfunction validateSavedFeedsPrefV2(v) {\n    return lexicons_1.lexicons.validate('app.bsky.actor.defs#savedFeedsPrefV2', v);\n}\nfunction isSavedFeedsPref(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.actor.defs#savedFeedsPref');\n}\nfunction validateSavedFeedsPref(v) {\n    return lexicons_1.lexicons.validate('app.bsky.actor.defs#savedFeedsPref', v);\n}\nfunction isPersonalDetailsPref(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.actor.defs#personalDetailsPref');\n}\nfunction validatePersonalDetailsPref(v) {\n    return lexicons_1.lexicons.validate('app.bsky.actor.defs#personalDetailsPref', v);\n}\nfunction isFeedViewPref(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.actor.defs#feedViewPref');\n}\nfunction validateFeedViewPref(v) {\n    return lexicons_1.lexicons.validate('app.bsky.actor.defs#feedViewPref', v);\n}\nfunction isThreadViewPref(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.actor.defs#threadViewPref');\n}\nfunction validateThreadViewPref(v) {\n    return lexicons_1.lexicons.validate('app.bsky.actor.defs#threadViewPref', v);\n}\nfunction isInterestsPref(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.actor.defs#interestsPref');\n}\nfunction validateInterestsPref(v) {\n    return lexicons_1.lexicons.validate('app.bsky.actor.defs#interestsPref', v);\n}\nfunction isMutedWord(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.actor.defs#mutedWord');\n}\nfunction validateMutedWord(v) {\n    return lexicons_1.lexicons.validate('app.bsky.actor.defs#mutedWord', v);\n}\nfunction isMutedWordsPref(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.actor.defs#mutedWordsPref');\n}\nfunction validateMutedWordsPref(v) {\n    return lexicons_1.lexicons.validate('app.bsky.actor.defs#mutedWordsPref', v);\n}\nfunction isHiddenPostsPref(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.actor.defs#hiddenPostsPref');\n}\nfunction validateHiddenPostsPref(v) {\n    return lexicons_1.lexicons.validate('app.bsky.actor.defs#hiddenPostsPref', v);\n}\nfunction isLabelersPref(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.actor.defs#labelersPref');\n}\nfunction validateLabelersPref(v) {\n    return lexicons_1.lexicons.validate('app.bsky.actor.defs#labelersPref', v);\n}\nfunction isLabelerPrefItem(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.actor.defs#labelerPrefItem');\n}\nfunction validateLabelerPrefItem(v) {\n    return lexicons_1.lexicons.validate('app.bsky.actor.defs#labelerPrefItem', v);\n}\nfunction isBskyAppStatePref(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.actor.defs#bskyAppStatePref');\n}\nfunction validateBskyAppStatePref(v) {\n    return lexicons_1.lexicons.validate('app.bsky.actor.defs#bskyAppStatePref', v);\n}\nfunction isBskyAppProgressGuide(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.actor.defs#bskyAppProgressGuide');\n}\nfunction validateBskyAppProgressGuide(v) {\n    return lexicons_1.lexicons.validate('app.bsky.actor.defs#bskyAppProgressGuide', v);\n}\nfunction isNux(v) {\n    return ((0, util_1.isObj)(v) && (0, util_1.hasProp)(v, '$type') && v.$type === 'app.bsky.actor.defs#nux');\n}\nfunction validateNux(v) {\n    return lexicons_1.lexicons.validate('app.bsky.actor.defs#nux', v);\n}\nfunction isPostInteractionSettingsPref(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.actor.defs#postInteractionSettingsPref');\n}\nfunction validatePostInteractionSettingsPref(v) {\n    return lexicons_1.lexicons.validate('app.bsky.actor.defs#postInteractionSettingsPref', v);\n}\n//# sourceMappingURL=defs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/defs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/getPreferences.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/actor/getPreferences.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getPreferences.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2FjdG9yL2dldFByZWZlcmVuY2VzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9hY3Rvci9nZXRQcmVmZXJlbmNlcy5qcz9mZjc5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0UHJlZmVyZW5jZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/getPreferences.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/getProfile.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/actor/getProfile.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getProfile.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2FjdG9yL2dldFByb2ZpbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2FjdG9yL2dldFByb2ZpbGUuanM/N2MzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldFByb2ZpbGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/getProfile.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/getProfiles.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/actor/getProfiles.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getProfiles.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2FjdG9yL2dldFByb2ZpbGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9hY3Rvci9nZXRQcm9maWxlcy5qcz82YWRkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0UHJvZmlsZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/getProfiles.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/getSuggestions.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/actor/getSuggestions.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getSuggestions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2FjdG9yL2dldFN1Z2dlc3Rpb25zLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9hY3Rvci9nZXRTdWdnZXN0aW9ucy5qcz84ZDZkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0U3VnZ2VzdGlvbnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/getSuggestions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/profile.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/actor/profile.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isRecord = isRecord;\nexports.validateRecord = validateRecord;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isRecord(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        (v.$type === 'app.bsky.actor.profile#main' ||\n            v.$type === 'app.bsky.actor.profile'));\n}\nfunction validateRecord(v) {\n    return lexicons_1.lexicons.validate('app.bsky.actor.profile#main', v);\n}\n//# sourceMappingURL=profile.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2FjdG9yL3Byb2ZpbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCO0FBQ2hCLHNCQUFzQjtBQUN0QixlQUFlLG1CQUFPLENBQUMsK0VBQWtCO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLHVGQUFzQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9hY3Rvci9wcm9maWxlLmpzPzljOTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzUmVjb3JkID0gaXNSZWNvcmQ7XG5leHBvcnRzLnZhbGlkYXRlUmVjb3JkID0gdmFsaWRhdGVSZWNvcmQ7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vdXRpbFwiKTtcbmNvbnN0IGxleGljb25zXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbGV4aWNvbnNcIik7XG5mdW5jdGlvbiBpc1JlY29yZCh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgICh2LiR0eXBlID09PSAnYXBwLmJza3kuYWN0b3IucHJvZmlsZSNtYWluJyB8fFxuICAgICAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmFjdG9yLnByb2ZpbGUnKSk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZVJlY29yZCh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2FwcC5ic2t5LmFjdG9yLnByb2ZpbGUjbWFpbicsIHYpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvZmlsZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/profile.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/putPreferences.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/actor/putPreferences.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=putPreferences.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2FjdG9yL3B1dFByZWZlcmVuY2VzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9hY3Rvci9wdXRQcmVmZXJlbmNlcy5qcz83MWQ1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHV0UHJlZmVyZW5jZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/putPreferences.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/searchActors.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/actor/searchActors.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=searchActors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2FjdG9yL3NlYXJjaEFjdG9ycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvYWN0b3Ivc2VhcmNoQWN0b3JzLmpzPzYxYjgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZWFyY2hBY3RvcnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/searchActors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/searchActorsTypeahead.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/actor/searchActorsTypeahead.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=searchActorsTypeahead.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2FjdG9yL3NlYXJjaEFjdG9yc1R5cGVhaGVhZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvYWN0b3Ivc2VhcmNoQWN0b3JzVHlwZWFoZWFkLmpzPzk3YTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZWFyY2hBY3RvcnNUeXBlYWhlYWQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/actor/searchActorsTypeahead.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/embed/defs.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/embed/defs.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isAspectRatio = isAspectRatio;\nexports.validateAspectRatio = validateAspectRatio;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isAspectRatio(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.embed.defs#aspectRatio');\n}\nfunction validateAspectRatio(v) {\n    return lexicons_1.lexicons.validate('app.bsky.embed.defs#aspectRatio', v);\n}\n//# sourceMappingURL=defs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2VtYmVkL2RlZnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCLDJCQUEyQjtBQUMzQixlQUFlLG1CQUFPLENBQUMsK0VBQWtCO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLHVGQUFzQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvZW1iZWQvZGVmcy5qcz85NWQxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc0FzcGVjdFJhdGlvID0gaXNBc3BlY3RSYXRpbztcbmV4cG9ydHMudmFsaWRhdGVBc3BlY3RSYXRpbyA9IHZhbGlkYXRlQXNwZWN0UmF0aW87XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vdXRpbFwiKTtcbmNvbnN0IGxleGljb25zXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbGV4aWNvbnNcIik7XG5mdW5jdGlvbiBpc0FzcGVjdFJhdGlvKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmVtYmVkLmRlZnMjYXNwZWN0UmF0aW8nKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlQXNwZWN0UmF0aW8odikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5lbWJlZC5kZWZzI2FzcGVjdFJhdGlvJywgdik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWZzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/embed/defs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/embed/external.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/embed/external.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isMain = isMain;\nexports.validateMain = validateMain;\nexports.isExternal = isExternal;\nexports.validateExternal = validateExternal;\nexports.isView = isView;\nexports.validateView = validateView;\nexports.isViewExternal = isViewExternal;\nexports.validateViewExternal = validateViewExternal;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isMain(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        (v.$type === 'app.bsky.embed.external#main' ||\n            v.$type === 'app.bsky.embed.external'));\n}\nfunction validateMain(v) {\n    return lexicons_1.lexicons.validate('app.bsky.embed.external#main', v);\n}\nfunction isExternal(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.embed.external#external');\n}\nfunction validateExternal(v) {\n    return lexicons_1.lexicons.validate('app.bsky.embed.external#external', v);\n}\nfunction isView(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.embed.external#view');\n}\nfunction validateView(v) {\n    return lexicons_1.lexicons.validate('app.bsky.embed.external#view', v);\n}\nfunction isViewExternal(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.embed.external#viewExternal');\n}\nfunction validateViewExternal(v) {\n    return lexicons_1.lexicons.validate('app.bsky.embed.external#viewExternal', v);\n}\n//# sourceMappingURL=external.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2VtYmVkL2V4dGVybmFsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWM7QUFDZCxvQkFBb0I7QUFDcEIsa0JBQWtCO0FBQ2xCLHdCQUF3QjtBQUN4QixjQUFjO0FBQ2Qsb0JBQW9CO0FBQ3BCLHNCQUFzQjtBQUN0Qiw0QkFBNEI7QUFDNUIsZUFBZSxtQkFBTyxDQUFDLCtFQUFrQjtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBc0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvZW1iZWQvZXh0ZXJuYWwuanM/NWE1MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNNYWluID0gaXNNYWluO1xuZXhwb3J0cy52YWxpZGF0ZU1haW4gPSB2YWxpZGF0ZU1haW47XG5leHBvcnRzLmlzRXh0ZXJuYWwgPSBpc0V4dGVybmFsO1xuZXhwb3J0cy52YWxpZGF0ZUV4dGVybmFsID0gdmFsaWRhdGVFeHRlcm5hbDtcbmV4cG9ydHMuaXNWaWV3ID0gaXNWaWV3O1xuZXhwb3J0cy52YWxpZGF0ZVZpZXcgPSB2YWxpZGF0ZVZpZXc7XG5leHBvcnRzLmlzVmlld0V4dGVybmFsID0gaXNWaWV3RXh0ZXJuYWw7XG5leHBvcnRzLnZhbGlkYXRlVmlld0V4dGVybmFsID0gdmFsaWRhdGVWaWV3RXh0ZXJuYWw7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vdXRpbFwiKTtcbmNvbnN0IGxleGljb25zXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbGV4aWNvbnNcIik7XG5mdW5jdGlvbiBpc01haW4odikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICAodi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmVtYmVkLmV4dGVybmFsI21haW4nIHx8XG4gICAgICAgICAgICB2LiR0eXBlID09PSAnYXBwLmJza3kuZW1iZWQuZXh0ZXJuYWwnKSk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZU1haW4odikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5lbWJlZC5leHRlcm5hbCNtYWluJywgdik7XG59XG5mdW5jdGlvbiBpc0V4dGVybmFsKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmVtYmVkLmV4dGVybmFsI2V4dGVybmFsJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZUV4dGVybmFsKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kuZW1iZWQuZXh0ZXJuYWwjZXh0ZXJuYWwnLCB2KTtcbn1cbmZ1bmN0aW9uIGlzVmlldyh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdhcHAuYnNreS5lbWJlZC5leHRlcm5hbCN2aWV3Jyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZVZpZXcodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5lbWJlZC5leHRlcm5hbCN2aWV3Jywgdik7XG59XG5mdW5jdGlvbiBpc1ZpZXdFeHRlcm5hbCh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdhcHAuYnNreS5lbWJlZC5leHRlcm5hbCN2aWV3RXh0ZXJuYWwnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlVmlld0V4dGVybmFsKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kuZW1iZWQuZXh0ZXJuYWwjdmlld0V4dGVybmFsJywgdik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1leHRlcm5hbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/embed/external.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/embed/images.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/embed/images.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isMain = isMain;\nexports.validateMain = validateMain;\nexports.isImage = isImage;\nexports.validateImage = validateImage;\nexports.isView = isView;\nexports.validateView = validateView;\nexports.isViewImage = isViewImage;\nexports.validateViewImage = validateViewImage;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isMain(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        (v.$type === 'app.bsky.embed.images#main' ||\n            v.$type === 'app.bsky.embed.images'));\n}\nfunction validateMain(v) {\n    return lexicons_1.lexicons.validate('app.bsky.embed.images#main', v);\n}\nfunction isImage(v) {\n    return ((0, util_1.isObj)(v) && (0, util_1.hasProp)(v, '$type') && v.$type === 'app.bsky.embed.images#image');\n}\nfunction validateImage(v) {\n    return lexicons_1.lexicons.validate('app.bsky.embed.images#image', v);\n}\nfunction isView(v) {\n    return ((0, util_1.isObj)(v) && (0, util_1.hasProp)(v, '$type') && v.$type === 'app.bsky.embed.images#view');\n}\nfunction validateView(v) {\n    return lexicons_1.lexicons.validate('app.bsky.embed.images#view', v);\n}\nfunction isViewImage(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.embed.images#viewImage');\n}\nfunction validateViewImage(v) {\n    return lexicons_1.lexicons.validate('app.bsky.embed.images#viewImage', v);\n}\n//# sourceMappingURL=images.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2VtYmVkL2ltYWdlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2Qsb0JBQW9CO0FBQ3BCLGVBQWU7QUFDZixxQkFBcUI7QUFDckIsY0FBYztBQUNkLG9CQUFvQjtBQUNwQixtQkFBbUI7QUFDbkIseUJBQXlCO0FBQ3pCLGVBQWUsbUJBQU8sQ0FBQywrRUFBa0I7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsdUZBQXNCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9lbWJlZC9pbWFnZXMuanM/NzgzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNNYWluID0gaXNNYWluO1xuZXhwb3J0cy52YWxpZGF0ZU1haW4gPSB2YWxpZGF0ZU1haW47XG5leHBvcnRzLmlzSW1hZ2UgPSBpc0ltYWdlO1xuZXhwb3J0cy52YWxpZGF0ZUltYWdlID0gdmFsaWRhdGVJbWFnZTtcbmV4cG9ydHMuaXNWaWV3ID0gaXNWaWV3O1xuZXhwb3J0cy52YWxpZGF0ZVZpZXcgPSB2YWxpZGF0ZVZpZXc7XG5leHBvcnRzLmlzVmlld0ltYWdlID0gaXNWaWV3SW1hZ2U7XG5leHBvcnRzLnZhbGlkYXRlVmlld0ltYWdlID0gdmFsaWRhdGVWaWV3SW1hZ2U7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vdXRpbFwiKTtcbmNvbnN0IGxleGljb25zXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbGV4aWNvbnNcIik7XG5mdW5jdGlvbiBpc01haW4odikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICAodi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmVtYmVkLmltYWdlcyNtYWluJyB8fFxuICAgICAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmVtYmVkLmltYWdlcycpKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlTWFpbih2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2FwcC5ic2t5LmVtYmVkLmltYWdlcyNtYWluJywgdik7XG59XG5mdW5jdGlvbiBpc0ltYWdlKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiYgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmVtYmVkLmltYWdlcyNpbWFnZScpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVJbWFnZSh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2FwcC5ic2t5LmVtYmVkLmltYWdlcyNpbWFnZScsIHYpO1xufVxuZnVuY3Rpb24gaXNWaWV3KHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiYgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmVtYmVkLmltYWdlcyN2aWV3Jyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZVZpZXcodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5lbWJlZC5pbWFnZXMjdmlldycsIHYpO1xufVxuZnVuY3Rpb24gaXNWaWV3SW1hZ2Uodikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAnYXBwLmJza3kuZW1iZWQuaW1hZ2VzI3ZpZXdJbWFnZScpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVWaWV3SW1hZ2Uodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5lbWJlZC5pbWFnZXMjdmlld0ltYWdlJywgdik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbWFnZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/embed/images.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/embed/record.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/embed/record.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isMain = isMain;\nexports.validateMain = validateMain;\nexports.isView = isView;\nexports.validateView = validateView;\nexports.isViewRecord = isViewRecord;\nexports.validateViewRecord = validateViewRecord;\nexports.isViewNotFound = isViewNotFound;\nexports.validateViewNotFound = validateViewNotFound;\nexports.isViewBlocked = isViewBlocked;\nexports.validateViewBlocked = validateViewBlocked;\nexports.isViewDetached = isViewDetached;\nexports.validateViewDetached = validateViewDetached;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isMain(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        (v.$type === 'app.bsky.embed.record#main' ||\n            v.$type === 'app.bsky.embed.record'));\n}\nfunction validateMain(v) {\n    return lexicons_1.lexicons.validate('app.bsky.embed.record#main', v);\n}\nfunction isView(v) {\n    return ((0, util_1.isObj)(v) && (0, util_1.hasProp)(v, '$type') && v.$type === 'app.bsky.embed.record#view');\n}\nfunction validateView(v) {\n    return lexicons_1.lexicons.validate('app.bsky.embed.record#view', v);\n}\nfunction isViewRecord(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.embed.record#viewRecord');\n}\nfunction validateViewRecord(v) {\n    return lexicons_1.lexicons.validate('app.bsky.embed.record#viewRecord', v);\n}\nfunction isViewNotFound(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.embed.record#viewNotFound');\n}\nfunction validateViewNotFound(v) {\n    return lexicons_1.lexicons.validate('app.bsky.embed.record#viewNotFound', v);\n}\nfunction isViewBlocked(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.embed.record#viewBlocked');\n}\nfunction validateViewBlocked(v) {\n    return lexicons_1.lexicons.validate('app.bsky.embed.record#viewBlocked', v);\n}\nfunction isViewDetached(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.embed.record#viewDetached');\n}\nfunction validateViewDetached(v) {\n    return lexicons_1.lexicons.validate('app.bsky.embed.record#viewDetached', v);\n}\n//# sourceMappingURL=record.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2VtYmVkL3JlY29yZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2Qsb0JBQW9CO0FBQ3BCLGNBQWM7QUFDZCxvQkFBb0I7QUFDcEIsb0JBQW9CO0FBQ3BCLDBCQUEwQjtBQUMxQixzQkFBc0I7QUFDdEIsNEJBQTRCO0FBQzVCLHFCQUFxQjtBQUNyQiwyQkFBMkI7QUFDM0Isc0JBQXNCO0FBQ3RCLDRCQUE0QjtBQUM1QixlQUFlLG1CQUFPLENBQUMsK0VBQWtCO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLHVGQUFzQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvZW1iZWQvcmVjb3JkLmpzP2UwNDMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzTWFpbiA9IGlzTWFpbjtcbmV4cG9ydHMudmFsaWRhdGVNYWluID0gdmFsaWRhdGVNYWluO1xuZXhwb3J0cy5pc1ZpZXcgPSBpc1ZpZXc7XG5leHBvcnRzLnZhbGlkYXRlVmlldyA9IHZhbGlkYXRlVmlldztcbmV4cG9ydHMuaXNWaWV3UmVjb3JkID0gaXNWaWV3UmVjb3JkO1xuZXhwb3J0cy52YWxpZGF0ZVZpZXdSZWNvcmQgPSB2YWxpZGF0ZVZpZXdSZWNvcmQ7XG5leHBvcnRzLmlzVmlld05vdEZvdW5kID0gaXNWaWV3Tm90Rm91bmQ7XG5leHBvcnRzLnZhbGlkYXRlVmlld05vdEZvdW5kID0gdmFsaWRhdGVWaWV3Tm90Rm91bmQ7XG5leHBvcnRzLmlzVmlld0Jsb2NrZWQgPSBpc1ZpZXdCbG9ja2VkO1xuZXhwb3J0cy52YWxpZGF0ZVZpZXdCbG9ja2VkID0gdmFsaWRhdGVWaWV3QmxvY2tlZDtcbmV4cG9ydHMuaXNWaWV3RGV0YWNoZWQgPSBpc1ZpZXdEZXRhY2hlZDtcbmV4cG9ydHMudmFsaWRhdGVWaWV3RGV0YWNoZWQgPSB2YWxpZGF0ZVZpZXdEZXRhY2hlZDtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi91dGlsXCIpO1xuY29uc3QgbGV4aWNvbnNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9sZXhpY29uc1wiKTtcbmZ1bmN0aW9uIGlzTWFpbih2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgICh2LiR0eXBlID09PSAnYXBwLmJza3kuZW1iZWQucmVjb3JkI21haW4nIHx8XG4gICAgICAgICAgICB2LiR0eXBlID09PSAnYXBwLmJza3kuZW1iZWQucmVjb3JkJykpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVNYWluKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kuZW1iZWQucmVjb3JkI21haW4nLCB2KTtcbn1cbmZ1bmN0aW9uIGlzVmlldyh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJiAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmIHYuJHR5cGUgPT09ICdhcHAuYnNreS5lbWJlZC5yZWNvcmQjdmlldycpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVWaWV3KHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kuZW1iZWQucmVjb3JkI3ZpZXcnLCB2KTtcbn1cbmZ1bmN0aW9uIGlzVmlld1JlY29yZCh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdhcHAuYnNreS5lbWJlZC5yZWNvcmQjdmlld1JlY29yZCcpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVWaWV3UmVjb3JkKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kuZW1iZWQucmVjb3JkI3ZpZXdSZWNvcmQnLCB2KTtcbn1cbmZ1bmN0aW9uIGlzVmlld05vdEZvdW5kKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmVtYmVkLnJlY29yZCN2aWV3Tm90Rm91bmQnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlVmlld05vdEZvdW5kKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kuZW1iZWQucmVjb3JkI3ZpZXdOb3RGb3VuZCcsIHYpO1xufVxuZnVuY3Rpb24gaXNWaWV3QmxvY2tlZCh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdhcHAuYnNreS5lbWJlZC5yZWNvcmQjdmlld0Jsb2NrZWQnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlVmlld0Jsb2NrZWQodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5lbWJlZC5yZWNvcmQjdmlld0Jsb2NrZWQnLCB2KTtcbn1cbmZ1bmN0aW9uIGlzVmlld0RldGFjaGVkKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmVtYmVkLnJlY29yZCN2aWV3RGV0YWNoZWQnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlVmlld0RldGFjaGVkKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kuZW1iZWQucmVjb3JkI3ZpZXdEZXRhY2hlZCcsIHYpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVjb3JkLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/embed/record.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/embed/recordWithMedia.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/embed/recordWithMedia.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isMain = isMain;\nexports.validateMain = validateMain;\nexports.isView = isView;\nexports.validateView = validateView;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isMain(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        (v.$type === 'app.bsky.embed.recordWithMedia#main' ||\n            v.$type === 'app.bsky.embed.recordWithMedia'));\n}\nfunction validateMain(v) {\n    return lexicons_1.lexicons.validate('app.bsky.embed.recordWithMedia#main', v);\n}\nfunction isView(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.embed.recordWithMedia#view');\n}\nfunction validateView(v) {\n    return lexicons_1.lexicons.validate('app.bsky.embed.recordWithMedia#view', v);\n}\n//# sourceMappingURL=recordWithMedia.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2VtYmVkL3JlY29yZFdpdGhNZWRpYS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2Qsb0JBQW9CO0FBQ3BCLGNBQWM7QUFDZCxvQkFBb0I7QUFDcEIsZUFBZSxtQkFBTyxDQUFDLCtFQUFrQjtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBc0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2VtYmVkL3JlY29yZFdpdGhNZWRpYS5qcz8yNzIyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc01haW4gPSBpc01haW47XG5leHBvcnRzLnZhbGlkYXRlTWFpbiA9IHZhbGlkYXRlTWFpbjtcbmV4cG9ydHMuaXNWaWV3ID0gaXNWaWV3O1xuZXhwb3J0cy52YWxpZGF0ZVZpZXcgPSB2YWxpZGF0ZVZpZXc7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vdXRpbFwiKTtcbmNvbnN0IGxleGljb25zXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbGV4aWNvbnNcIik7XG5mdW5jdGlvbiBpc01haW4odikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICAodi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmVtYmVkLnJlY29yZFdpdGhNZWRpYSNtYWluJyB8fFxuICAgICAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmVtYmVkLnJlY29yZFdpdGhNZWRpYScpKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlTWFpbih2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2FwcC5ic2t5LmVtYmVkLnJlY29yZFdpdGhNZWRpYSNtYWluJywgdik7XG59XG5mdW5jdGlvbiBpc1ZpZXcodikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAnYXBwLmJza3kuZW1iZWQucmVjb3JkV2l0aE1lZGlhI3ZpZXcnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlVmlldyh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2FwcC5ic2t5LmVtYmVkLnJlY29yZFdpdGhNZWRpYSN2aWV3Jywgdik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWNvcmRXaXRoTWVkaWEuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/embed/recordWithMedia.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/embed/video.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/embed/video.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isMain = isMain;\nexports.validateMain = validateMain;\nexports.isCaption = isCaption;\nexports.validateCaption = validateCaption;\nexports.isView = isView;\nexports.validateView = validateView;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isMain(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        (v.$type === 'app.bsky.embed.video#main' ||\n            v.$type === 'app.bsky.embed.video'));\n}\nfunction validateMain(v) {\n    return lexicons_1.lexicons.validate('app.bsky.embed.video#main', v);\n}\nfunction isCaption(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.embed.video#caption');\n}\nfunction validateCaption(v) {\n    return lexicons_1.lexicons.validate('app.bsky.embed.video#caption', v);\n}\nfunction isView(v) {\n    return ((0, util_1.isObj)(v) && (0, util_1.hasProp)(v, '$type') && v.$type === 'app.bsky.embed.video#view');\n}\nfunction validateView(v) {\n    return lexicons_1.lexicons.validate('app.bsky.embed.video#view', v);\n}\n//# sourceMappingURL=video.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2VtYmVkL3ZpZGVvLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWM7QUFDZCxvQkFBb0I7QUFDcEIsaUJBQWlCO0FBQ2pCLHVCQUF1QjtBQUN2QixjQUFjO0FBQ2Qsb0JBQW9CO0FBQ3BCLGVBQWUsbUJBQU8sQ0FBQywrRUFBa0I7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsdUZBQXNCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9lbWJlZC92aWRlby5qcz8yMGZmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc01haW4gPSBpc01haW47XG5leHBvcnRzLnZhbGlkYXRlTWFpbiA9IHZhbGlkYXRlTWFpbjtcbmV4cG9ydHMuaXNDYXB0aW9uID0gaXNDYXB0aW9uO1xuZXhwb3J0cy52YWxpZGF0ZUNhcHRpb24gPSB2YWxpZGF0ZUNhcHRpb247XG5leHBvcnRzLmlzVmlldyA9IGlzVmlldztcbmV4cG9ydHMudmFsaWRhdGVWaWV3ID0gdmFsaWRhdGVWaWV3O1xuY29uc3QgdXRpbF8xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL3V0aWxcIik7XG5jb25zdCBsZXhpY29uc18xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL2xleGljb25zXCIpO1xuZnVuY3Rpb24gaXNNYWluKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgKHYuJHR5cGUgPT09ICdhcHAuYnNreS5lbWJlZC52aWRlbyNtYWluJyB8fFxuICAgICAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmVtYmVkLnZpZGVvJykpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVNYWluKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kuZW1iZWQudmlkZW8jbWFpbicsIHYpO1xufVxuZnVuY3Rpb24gaXNDYXB0aW9uKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmVtYmVkLnZpZGVvI2NhcHRpb24nKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlQ2FwdGlvbih2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2FwcC5ic2t5LmVtYmVkLnZpZGVvI2NhcHRpb24nLCB2KTtcbn1cbmZ1bmN0aW9uIGlzVmlldyh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJiAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmIHYuJHR5cGUgPT09ICdhcHAuYnNreS5lbWJlZC52aWRlbyN2aWV3Jyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZVZpZXcodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5lbWJlZC52aWRlbyN2aWV3Jywgdik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD12aWRlby5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/embed/video.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/defs.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/feed/defs.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.INTERACTIONSHARE = exports.INTERACTIONQUOTE = exports.INTERACTIONREPLY = exports.INTERACTIONREPOST = exports.INTERACTIONLIKE = exports.INTERACTIONSEEN = exports.CONTENTMODEVIDEO = exports.CONTENTMODEUNSPECIFIED = exports.CLICKTHROUGHEMBED = exports.CLICKTHROUGHREPOSTER = exports.CLICKTHROUGHAUTHOR = exports.CLICKTHROUGHITEM = exports.REQUESTMORE = exports.REQUESTLESS = void 0;\nexports.isPostView = isPostView;\nexports.validatePostView = validatePostView;\nexports.isViewerState = isViewerState;\nexports.validateViewerState = validateViewerState;\nexports.isThreadContext = isThreadContext;\nexports.validateThreadContext = validateThreadContext;\nexports.isFeedViewPost = isFeedViewPost;\nexports.validateFeedViewPost = validateFeedViewPost;\nexports.isReplyRef = isReplyRef;\nexports.validateReplyRef = validateReplyRef;\nexports.isReasonRepost = isReasonRepost;\nexports.validateReasonRepost = validateReasonRepost;\nexports.isReasonPin = isReasonPin;\nexports.validateReasonPin = validateReasonPin;\nexports.isThreadViewPost = isThreadViewPost;\nexports.validateThreadViewPost = validateThreadViewPost;\nexports.isNotFoundPost = isNotFoundPost;\nexports.validateNotFoundPost = validateNotFoundPost;\nexports.isBlockedPost = isBlockedPost;\nexports.validateBlockedPost = validateBlockedPost;\nexports.isBlockedAuthor = isBlockedAuthor;\nexports.validateBlockedAuthor = validateBlockedAuthor;\nexports.isGeneratorView = isGeneratorView;\nexports.validateGeneratorView = validateGeneratorView;\nexports.isGeneratorViewerState = isGeneratorViewerState;\nexports.validateGeneratorViewerState = validateGeneratorViewerState;\nexports.isSkeletonFeedPost = isSkeletonFeedPost;\nexports.validateSkeletonFeedPost = validateSkeletonFeedPost;\nexports.isSkeletonReasonRepost = isSkeletonReasonRepost;\nexports.validateSkeletonReasonRepost = validateSkeletonReasonRepost;\nexports.isSkeletonReasonPin = isSkeletonReasonPin;\nexports.validateSkeletonReasonPin = validateSkeletonReasonPin;\nexports.isThreadgateView = isThreadgateView;\nexports.validateThreadgateView = validateThreadgateView;\nexports.isInteraction = isInteraction;\nexports.validateInteraction = validateInteraction;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isPostView(v) {\n    return ((0, util_1.isObj)(v) && (0, util_1.hasProp)(v, '$type') && v.$type === 'app.bsky.feed.defs#postView');\n}\nfunction validatePostView(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.defs#postView', v);\n}\nfunction isViewerState(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.feed.defs#viewerState');\n}\nfunction validateViewerState(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.defs#viewerState', v);\n}\nfunction isThreadContext(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.feed.defs#threadContext');\n}\nfunction validateThreadContext(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.defs#threadContext', v);\n}\nfunction isFeedViewPost(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.feed.defs#feedViewPost');\n}\nfunction validateFeedViewPost(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.defs#feedViewPost', v);\n}\nfunction isReplyRef(v) {\n    return ((0, util_1.isObj)(v) && (0, util_1.hasProp)(v, '$type') && v.$type === 'app.bsky.feed.defs#replyRef');\n}\nfunction validateReplyRef(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.defs#replyRef', v);\n}\nfunction isReasonRepost(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.feed.defs#reasonRepost');\n}\nfunction validateReasonRepost(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.defs#reasonRepost', v);\n}\nfunction isReasonPin(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.feed.defs#reasonPin');\n}\nfunction validateReasonPin(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.defs#reasonPin', v);\n}\nfunction isThreadViewPost(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.feed.defs#threadViewPost');\n}\nfunction validateThreadViewPost(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.defs#threadViewPost', v);\n}\nfunction isNotFoundPost(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.feed.defs#notFoundPost');\n}\nfunction validateNotFoundPost(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.defs#notFoundPost', v);\n}\nfunction isBlockedPost(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.feed.defs#blockedPost');\n}\nfunction validateBlockedPost(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.defs#blockedPost', v);\n}\nfunction isBlockedAuthor(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.feed.defs#blockedAuthor');\n}\nfunction validateBlockedAuthor(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.defs#blockedAuthor', v);\n}\nfunction isGeneratorView(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.feed.defs#generatorView');\n}\nfunction validateGeneratorView(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.defs#generatorView', v);\n}\nfunction isGeneratorViewerState(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.feed.defs#generatorViewerState');\n}\nfunction validateGeneratorViewerState(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.defs#generatorViewerState', v);\n}\nfunction isSkeletonFeedPost(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.feed.defs#skeletonFeedPost');\n}\nfunction validateSkeletonFeedPost(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.defs#skeletonFeedPost', v);\n}\nfunction isSkeletonReasonRepost(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.feed.defs#skeletonReasonRepost');\n}\nfunction validateSkeletonReasonRepost(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.defs#skeletonReasonRepost', v);\n}\nfunction isSkeletonReasonPin(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.feed.defs#skeletonReasonPin');\n}\nfunction validateSkeletonReasonPin(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.defs#skeletonReasonPin', v);\n}\nfunction isThreadgateView(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.feed.defs#threadgateView');\n}\nfunction validateThreadgateView(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.defs#threadgateView', v);\n}\nfunction isInteraction(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.feed.defs#interaction');\n}\nfunction validateInteraction(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.defs#interaction', v);\n}\n/** Request that less content like the given feed item be shown in the feed */\nexports.REQUESTLESS = 'app.bsky.feed.defs#requestLess';\n/** Request that more content like the given feed item be shown in the feed */\nexports.REQUESTMORE = 'app.bsky.feed.defs#requestMore';\n/** User clicked through to the feed item */\nexports.CLICKTHROUGHITEM = 'app.bsky.feed.defs#clickthroughItem';\n/** User clicked through to the author of the feed item */\nexports.CLICKTHROUGHAUTHOR = 'app.bsky.feed.defs#clickthroughAuthor';\n/** User clicked through to the reposter of the feed item */\nexports.CLICKTHROUGHREPOSTER = 'app.bsky.feed.defs#clickthroughReposter';\n/** User clicked through to the embedded content of the feed item */\nexports.CLICKTHROUGHEMBED = 'app.bsky.feed.defs#clickthroughEmbed';\n/** Declares the feed generator returns any types of posts. */\nexports.CONTENTMODEUNSPECIFIED = 'app.bsky.feed.defs#contentModeUnspecified';\n/** Declares the feed generator returns posts containing app.bsky.embed.video embeds. */\nexports.CONTENTMODEVIDEO = 'app.bsky.feed.defs#contentModeVideo';\n/** Feed item was seen by user */\nexports.INTERACTIONSEEN = 'app.bsky.feed.defs#interactionSeen';\n/** User liked the feed item */\nexports.INTERACTIONLIKE = 'app.bsky.feed.defs#interactionLike';\n/** User reposted the feed item */\nexports.INTERACTIONREPOST = 'app.bsky.feed.defs#interactionRepost';\n/** User replied to the feed item */\nexports.INTERACTIONREPLY = 'app.bsky.feed.defs#interactionReply';\n/** User quoted the feed item */\nexports.INTERACTIONQUOTE = 'app.bsky.feed.defs#interactionQuote';\n/** User shared the feed item */\nexports.INTERACTIONSHARE = 'app.bsky.feed.defs#interactionShare';\n//# sourceMappingURL=defs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvZGVmcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0IsR0FBRyx3QkFBd0IsR0FBRyx3QkFBd0IsR0FBRyx5QkFBeUIsR0FBRyx1QkFBdUIsR0FBRyx1QkFBdUIsR0FBRyx3QkFBd0IsR0FBRyw4QkFBOEIsR0FBRyx5QkFBeUIsR0FBRyw0QkFBNEIsR0FBRywwQkFBMEIsR0FBRyx3QkFBd0IsR0FBRyxtQkFBbUIsR0FBRyxtQkFBbUI7QUFDelgsa0JBQWtCO0FBQ2xCLHdCQUF3QjtBQUN4QixxQkFBcUI7QUFDckIsMkJBQTJCO0FBQzNCLHVCQUF1QjtBQUN2Qiw2QkFBNkI7QUFDN0Isc0JBQXNCO0FBQ3RCLDRCQUE0QjtBQUM1QixrQkFBa0I7QUFDbEIsd0JBQXdCO0FBQ3hCLHNCQUFzQjtBQUN0Qiw0QkFBNEI7QUFDNUIsbUJBQW1CO0FBQ25CLHlCQUF5QjtBQUN6Qix3QkFBd0I7QUFDeEIsOEJBQThCO0FBQzlCLHNCQUFzQjtBQUN0Qiw0QkFBNEI7QUFDNUIscUJBQXFCO0FBQ3JCLDJCQUEyQjtBQUMzQix1QkFBdUI7QUFDdkIsNkJBQTZCO0FBQzdCLHVCQUF1QjtBQUN2Qiw2QkFBNkI7QUFDN0IsOEJBQThCO0FBQzlCLG9DQUFvQztBQUNwQywwQkFBMEI7QUFDMUIsZ0NBQWdDO0FBQ2hDLDhCQUE4QjtBQUM5QixvQ0FBb0M7QUFDcEMsMkJBQTJCO0FBQzNCLGlDQUFpQztBQUNqQyx3QkFBd0I7QUFDeEIsOEJBQThCO0FBQzlCLHFCQUFxQjtBQUNyQiwyQkFBMkI7QUFDM0IsZUFBZSxtQkFBTyxDQUFDLCtFQUFrQjtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBc0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0Esd0JBQXdCO0FBQ3hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvZGVmcy5qcz9kNmVjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JTlRFUkFDVElPTlNIQVJFID0gZXhwb3J0cy5JTlRFUkFDVElPTlFVT1RFID0gZXhwb3J0cy5JTlRFUkFDVElPTlJFUExZID0gZXhwb3J0cy5JTlRFUkFDVElPTlJFUE9TVCA9IGV4cG9ydHMuSU5URVJBQ1RJT05MSUtFID0gZXhwb3J0cy5JTlRFUkFDVElPTlNFRU4gPSBleHBvcnRzLkNPTlRFTlRNT0RFVklERU8gPSBleHBvcnRzLkNPTlRFTlRNT0RFVU5TUEVDSUZJRUQgPSBleHBvcnRzLkNMSUNLVEhST1VHSEVNQkVEID0gZXhwb3J0cy5DTElDS1RIUk9VR0hSRVBPU1RFUiA9IGV4cG9ydHMuQ0xJQ0tUSFJPVUdIQVVUSE9SID0gZXhwb3J0cy5DTElDS1RIUk9VR0hJVEVNID0gZXhwb3J0cy5SRVFVRVNUTU9SRSA9IGV4cG9ydHMuUkVRVUVTVExFU1MgPSB2b2lkIDA7XG5leHBvcnRzLmlzUG9zdFZpZXcgPSBpc1Bvc3RWaWV3O1xuZXhwb3J0cy52YWxpZGF0ZVBvc3RWaWV3ID0gdmFsaWRhdGVQb3N0VmlldztcbmV4cG9ydHMuaXNWaWV3ZXJTdGF0ZSA9IGlzVmlld2VyU3RhdGU7XG5leHBvcnRzLnZhbGlkYXRlVmlld2VyU3RhdGUgPSB2YWxpZGF0ZVZpZXdlclN0YXRlO1xuZXhwb3J0cy5pc1RocmVhZENvbnRleHQgPSBpc1RocmVhZENvbnRleHQ7XG5leHBvcnRzLnZhbGlkYXRlVGhyZWFkQ29udGV4dCA9IHZhbGlkYXRlVGhyZWFkQ29udGV4dDtcbmV4cG9ydHMuaXNGZWVkVmlld1Bvc3QgPSBpc0ZlZWRWaWV3UG9zdDtcbmV4cG9ydHMudmFsaWRhdGVGZWVkVmlld1Bvc3QgPSB2YWxpZGF0ZUZlZWRWaWV3UG9zdDtcbmV4cG9ydHMuaXNSZXBseVJlZiA9IGlzUmVwbHlSZWY7XG5leHBvcnRzLnZhbGlkYXRlUmVwbHlSZWYgPSB2YWxpZGF0ZVJlcGx5UmVmO1xuZXhwb3J0cy5pc1JlYXNvblJlcG9zdCA9IGlzUmVhc29uUmVwb3N0O1xuZXhwb3J0cy52YWxpZGF0ZVJlYXNvblJlcG9zdCA9IHZhbGlkYXRlUmVhc29uUmVwb3N0O1xuZXhwb3J0cy5pc1JlYXNvblBpbiA9IGlzUmVhc29uUGluO1xuZXhwb3J0cy52YWxpZGF0ZVJlYXNvblBpbiA9IHZhbGlkYXRlUmVhc29uUGluO1xuZXhwb3J0cy5pc1RocmVhZFZpZXdQb3N0ID0gaXNUaHJlYWRWaWV3UG9zdDtcbmV4cG9ydHMudmFsaWRhdGVUaHJlYWRWaWV3UG9zdCA9IHZhbGlkYXRlVGhyZWFkVmlld1Bvc3Q7XG5leHBvcnRzLmlzTm90Rm91bmRQb3N0ID0gaXNOb3RGb3VuZFBvc3Q7XG5leHBvcnRzLnZhbGlkYXRlTm90Rm91bmRQb3N0ID0gdmFsaWRhdGVOb3RGb3VuZFBvc3Q7XG5leHBvcnRzLmlzQmxvY2tlZFBvc3QgPSBpc0Jsb2NrZWRQb3N0O1xuZXhwb3J0cy52YWxpZGF0ZUJsb2NrZWRQb3N0ID0gdmFsaWRhdGVCbG9ja2VkUG9zdDtcbmV4cG9ydHMuaXNCbG9ja2VkQXV0aG9yID0gaXNCbG9ja2VkQXV0aG9yO1xuZXhwb3J0cy52YWxpZGF0ZUJsb2NrZWRBdXRob3IgPSB2YWxpZGF0ZUJsb2NrZWRBdXRob3I7XG5leHBvcnRzLmlzR2VuZXJhdG9yVmlldyA9IGlzR2VuZXJhdG9yVmlldztcbmV4cG9ydHMudmFsaWRhdGVHZW5lcmF0b3JWaWV3ID0gdmFsaWRhdGVHZW5lcmF0b3JWaWV3O1xuZXhwb3J0cy5pc0dlbmVyYXRvclZpZXdlclN0YXRlID0gaXNHZW5lcmF0b3JWaWV3ZXJTdGF0ZTtcbmV4cG9ydHMudmFsaWRhdGVHZW5lcmF0b3JWaWV3ZXJTdGF0ZSA9IHZhbGlkYXRlR2VuZXJhdG9yVmlld2VyU3RhdGU7XG5leHBvcnRzLmlzU2tlbGV0b25GZWVkUG9zdCA9IGlzU2tlbGV0b25GZWVkUG9zdDtcbmV4cG9ydHMudmFsaWRhdGVTa2VsZXRvbkZlZWRQb3N0ID0gdmFsaWRhdGVTa2VsZXRvbkZlZWRQb3N0O1xuZXhwb3J0cy5pc1NrZWxldG9uUmVhc29uUmVwb3N0ID0gaXNTa2VsZXRvblJlYXNvblJlcG9zdDtcbmV4cG9ydHMudmFsaWRhdGVTa2VsZXRvblJlYXNvblJlcG9zdCA9IHZhbGlkYXRlU2tlbGV0b25SZWFzb25SZXBvc3Q7XG5leHBvcnRzLmlzU2tlbGV0b25SZWFzb25QaW4gPSBpc1NrZWxldG9uUmVhc29uUGluO1xuZXhwb3J0cy52YWxpZGF0ZVNrZWxldG9uUmVhc29uUGluID0gdmFsaWRhdGVTa2VsZXRvblJlYXNvblBpbjtcbmV4cG9ydHMuaXNUaHJlYWRnYXRlVmlldyA9IGlzVGhyZWFkZ2F0ZVZpZXc7XG5leHBvcnRzLnZhbGlkYXRlVGhyZWFkZ2F0ZVZpZXcgPSB2YWxpZGF0ZVRocmVhZGdhdGVWaWV3O1xuZXhwb3J0cy5pc0ludGVyYWN0aW9uID0gaXNJbnRlcmFjdGlvbjtcbmV4cG9ydHMudmFsaWRhdGVJbnRlcmFjdGlvbiA9IHZhbGlkYXRlSW50ZXJhY3Rpb247XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vdXRpbFwiKTtcbmNvbnN0IGxleGljb25zXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbGV4aWNvbnNcIik7XG5mdW5jdGlvbiBpc1Bvc3RWaWV3KHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiYgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmZlZWQuZGVmcyNwb3N0VmlldycpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVQb3N0Vmlldyh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2FwcC5ic2t5LmZlZWQuZGVmcyNwb3N0VmlldycsIHYpO1xufVxuZnVuY3Rpb24gaXNWaWV3ZXJTdGF0ZSh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdhcHAuYnNreS5mZWVkLmRlZnMjdmlld2VyU3RhdGUnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlVmlld2VyU3RhdGUodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5mZWVkLmRlZnMjdmlld2VyU3RhdGUnLCB2KTtcbn1cbmZ1bmN0aW9uIGlzVGhyZWFkQ29udGV4dCh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdhcHAuYnNreS5mZWVkLmRlZnMjdGhyZWFkQ29udGV4dCcpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVUaHJlYWRDb250ZXh0KHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kuZmVlZC5kZWZzI3RocmVhZENvbnRleHQnLCB2KTtcbn1cbmZ1bmN0aW9uIGlzRmVlZFZpZXdQb3N0KHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmZlZWQuZGVmcyNmZWVkVmlld1Bvc3QnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlRmVlZFZpZXdQb3N0KHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kuZmVlZC5kZWZzI2ZlZWRWaWV3UG9zdCcsIHYpO1xufVxuZnVuY3Rpb24gaXNSZXBseVJlZih2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJiAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmIHYuJHR5cGUgPT09ICdhcHAuYnNreS5mZWVkLmRlZnMjcmVwbHlSZWYnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlUmVwbHlSZWYodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5mZWVkLmRlZnMjcmVwbHlSZWYnLCB2KTtcbn1cbmZ1bmN0aW9uIGlzUmVhc29uUmVwb3N0KHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmZlZWQuZGVmcyNyZWFzb25SZXBvc3QnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlUmVhc29uUmVwb3N0KHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kuZmVlZC5kZWZzI3JlYXNvblJlcG9zdCcsIHYpO1xufVxuZnVuY3Rpb24gaXNSZWFzb25QaW4odikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAnYXBwLmJza3kuZmVlZC5kZWZzI3JlYXNvblBpbicpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVSZWFzb25QaW4odikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5mZWVkLmRlZnMjcmVhc29uUGluJywgdik7XG59XG5mdW5jdGlvbiBpc1RocmVhZFZpZXdQb3N0KHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmZlZWQuZGVmcyN0aHJlYWRWaWV3UG9zdCcpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVUaHJlYWRWaWV3UG9zdCh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2FwcC5ic2t5LmZlZWQuZGVmcyN0aHJlYWRWaWV3UG9zdCcsIHYpO1xufVxuZnVuY3Rpb24gaXNOb3RGb3VuZFBvc3Qodikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAnYXBwLmJza3kuZmVlZC5kZWZzI25vdEZvdW5kUG9zdCcpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVOb3RGb3VuZFBvc3Qodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5mZWVkLmRlZnMjbm90Rm91bmRQb3N0Jywgdik7XG59XG5mdW5jdGlvbiBpc0Jsb2NrZWRQb3N0KHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmZlZWQuZGVmcyNibG9ja2VkUG9zdCcpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVCbG9ja2VkUG9zdCh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2FwcC5ic2t5LmZlZWQuZGVmcyNibG9ja2VkUG9zdCcsIHYpO1xufVxuZnVuY3Rpb24gaXNCbG9ja2VkQXV0aG9yKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmZlZWQuZGVmcyNibG9ja2VkQXV0aG9yJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZUJsb2NrZWRBdXRob3Iodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5mZWVkLmRlZnMjYmxvY2tlZEF1dGhvcicsIHYpO1xufVxuZnVuY3Rpb24gaXNHZW5lcmF0b3JWaWV3KHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmZlZWQuZGVmcyNnZW5lcmF0b3JWaWV3Jyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZUdlbmVyYXRvclZpZXcodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5mZWVkLmRlZnMjZ2VuZXJhdG9yVmlldycsIHYpO1xufVxuZnVuY3Rpb24gaXNHZW5lcmF0b3JWaWV3ZXJTdGF0ZSh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdhcHAuYnNreS5mZWVkLmRlZnMjZ2VuZXJhdG9yVmlld2VyU3RhdGUnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlR2VuZXJhdG9yVmlld2VyU3RhdGUodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5mZWVkLmRlZnMjZ2VuZXJhdG9yVmlld2VyU3RhdGUnLCB2KTtcbn1cbmZ1bmN0aW9uIGlzU2tlbGV0b25GZWVkUG9zdCh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdhcHAuYnNreS5mZWVkLmRlZnMjc2tlbGV0b25GZWVkUG9zdCcpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVTa2VsZXRvbkZlZWRQb3N0KHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kuZmVlZC5kZWZzI3NrZWxldG9uRmVlZFBvc3QnLCB2KTtcbn1cbmZ1bmN0aW9uIGlzU2tlbGV0b25SZWFzb25SZXBvc3Qodikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAnYXBwLmJza3kuZmVlZC5kZWZzI3NrZWxldG9uUmVhc29uUmVwb3N0Jyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZVNrZWxldG9uUmVhc29uUmVwb3N0KHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kuZmVlZC5kZWZzI3NrZWxldG9uUmVhc29uUmVwb3N0Jywgdik7XG59XG5mdW5jdGlvbiBpc1NrZWxldG9uUmVhc29uUGluKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmZlZWQuZGVmcyNza2VsZXRvblJlYXNvblBpbicpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVTa2VsZXRvblJlYXNvblBpbih2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2FwcC5ic2t5LmZlZWQuZGVmcyNza2VsZXRvblJlYXNvblBpbicsIHYpO1xufVxuZnVuY3Rpb24gaXNUaHJlYWRnYXRlVmlldyh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdhcHAuYnNreS5mZWVkLmRlZnMjdGhyZWFkZ2F0ZVZpZXcnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlVGhyZWFkZ2F0ZVZpZXcodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5mZWVkLmRlZnMjdGhyZWFkZ2F0ZVZpZXcnLCB2KTtcbn1cbmZ1bmN0aW9uIGlzSW50ZXJhY3Rpb24odikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAnYXBwLmJza3kuZmVlZC5kZWZzI2ludGVyYWN0aW9uJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZUludGVyYWN0aW9uKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kuZmVlZC5kZWZzI2ludGVyYWN0aW9uJywgdik7XG59XG4vKiogUmVxdWVzdCB0aGF0IGxlc3MgY29udGVudCBsaWtlIHRoZSBnaXZlbiBmZWVkIGl0ZW0gYmUgc2hvd24gaW4gdGhlIGZlZWQgKi9cbmV4cG9ydHMuUkVRVUVTVExFU1MgPSAnYXBwLmJza3kuZmVlZC5kZWZzI3JlcXVlc3RMZXNzJztcbi8qKiBSZXF1ZXN0IHRoYXQgbW9yZSBjb250ZW50IGxpa2UgdGhlIGdpdmVuIGZlZWQgaXRlbSBiZSBzaG93biBpbiB0aGUgZmVlZCAqL1xuZXhwb3J0cy5SRVFVRVNUTU9SRSA9ICdhcHAuYnNreS5mZWVkLmRlZnMjcmVxdWVzdE1vcmUnO1xuLyoqIFVzZXIgY2xpY2tlZCB0aHJvdWdoIHRvIHRoZSBmZWVkIGl0ZW0gKi9cbmV4cG9ydHMuQ0xJQ0tUSFJPVUdISVRFTSA9ICdhcHAuYnNreS5mZWVkLmRlZnMjY2xpY2t0aHJvdWdoSXRlbSc7XG4vKiogVXNlciBjbGlja2VkIHRocm91Z2ggdG8gdGhlIGF1dGhvciBvZiB0aGUgZmVlZCBpdGVtICovXG5leHBvcnRzLkNMSUNLVEhST1VHSEFVVEhPUiA9ICdhcHAuYnNreS5mZWVkLmRlZnMjY2xpY2t0aHJvdWdoQXV0aG9yJztcbi8qKiBVc2VyIGNsaWNrZWQgdGhyb3VnaCB0byB0aGUgcmVwb3N0ZXIgb2YgdGhlIGZlZWQgaXRlbSAqL1xuZXhwb3J0cy5DTElDS1RIUk9VR0hSRVBPU1RFUiA9ICdhcHAuYnNreS5mZWVkLmRlZnMjY2xpY2t0aHJvdWdoUmVwb3N0ZXInO1xuLyoqIFVzZXIgY2xpY2tlZCB0aHJvdWdoIHRvIHRoZSBlbWJlZGRlZCBjb250ZW50IG9mIHRoZSBmZWVkIGl0ZW0gKi9cbmV4cG9ydHMuQ0xJQ0tUSFJPVUdIRU1CRUQgPSAnYXBwLmJza3kuZmVlZC5kZWZzI2NsaWNrdGhyb3VnaEVtYmVkJztcbi8qKiBEZWNsYXJlcyB0aGUgZmVlZCBnZW5lcmF0b3IgcmV0dXJucyBhbnkgdHlwZXMgb2YgcG9zdHMuICovXG5leHBvcnRzLkNPTlRFTlRNT0RFVU5TUEVDSUZJRUQgPSAnYXBwLmJza3kuZmVlZC5kZWZzI2NvbnRlbnRNb2RlVW5zcGVjaWZpZWQnO1xuLyoqIERlY2xhcmVzIHRoZSBmZWVkIGdlbmVyYXRvciByZXR1cm5zIHBvc3RzIGNvbnRhaW5pbmcgYXBwLmJza3kuZW1iZWQudmlkZW8gZW1iZWRzLiAqL1xuZXhwb3J0cy5DT05URU5UTU9ERVZJREVPID0gJ2FwcC5ic2t5LmZlZWQuZGVmcyNjb250ZW50TW9kZVZpZGVvJztcbi8qKiBGZWVkIGl0ZW0gd2FzIHNlZW4gYnkgdXNlciAqL1xuZXhwb3J0cy5JTlRFUkFDVElPTlNFRU4gPSAnYXBwLmJza3kuZmVlZC5kZWZzI2ludGVyYWN0aW9uU2Vlbic7XG4vKiogVXNlciBsaWtlZCB0aGUgZmVlZCBpdGVtICovXG5leHBvcnRzLklOVEVSQUNUSU9OTElLRSA9ICdhcHAuYnNreS5mZWVkLmRlZnMjaW50ZXJhY3Rpb25MaWtlJztcbi8qKiBVc2VyIHJlcG9zdGVkIHRoZSBmZWVkIGl0ZW0gKi9cbmV4cG9ydHMuSU5URVJBQ1RJT05SRVBPU1QgPSAnYXBwLmJza3kuZmVlZC5kZWZzI2ludGVyYWN0aW9uUmVwb3N0Jztcbi8qKiBVc2VyIHJlcGxpZWQgdG8gdGhlIGZlZWQgaXRlbSAqL1xuZXhwb3J0cy5JTlRFUkFDVElPTlJFUExZID0gJ2FwcC5ic2t5LmZlZWQuZGVmcyNpbnRlcmFjdGlvblJlcGx5Jztcbi8qKiBVc2VyIHF1b3RlZCB0aGUgZmVlZCBpdGVtICovXG5leHBvcnRzLklOVEVSQUNUSU9OUVVPVEUgPSAnYXBwLmJza3kuZmVlZC5kZWZzI2ludGVyYWN0aW9uUXVvdGUnO1xuLyoqIFVzZXIgc2hhcmVkIHRoZSBmZWVkIGl0ZW0gKi9cbmV4cG9ydHMuSU5URVJBQ1RJT05TSEFSRSA9ICdhcHAuYnNreS5mZWVkLmRlZnMjaW50ZXJhY3Rpb25TaGFyZSc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWZzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/defs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/describeFeedGenerator.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/feed/describeFeedGenerator.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nexports.isFeed = isFeed;\nexports.validateFeed = validateFeed;\nexports.isLinks = isLinks;\nexports.validateLinks = validateLinks;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction toKnownErr(e) {\n    return e;\n}\nfunction isFeed(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.feed.describeFeedGenerator#feed');\n}\nfunction validateFeed(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.describeFeedGenerator#feed', v);\n}\nfunction isLinks(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.feed.describeFeedGenerator#links');\n}\nfunction validateLinks(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.describeFeedGenerator#links', v);\n}\n//# sourceMappingURL=describeFeedGenerator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvZGVzY3JpYmVGZWVkR2VuZXJhdG9yLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQixjQUFjO0FBQ2Qsb0JBQW9CO0FBQ3BCLGVBQWU7QUFDZixxQkFBcUI7QUFDckIsZUFBZSxtQkFBTyxDQUFDLCtFQUFrQjtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBc0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9mZWVkL2Rlc2NyaWJlRmVlZEdlbmVyYXRvci5qcz9hYzA0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmV4cG9ydHMuaXNGZWVkID0gaXNGZWVkO1xuZXhwb3J0cy52YWxpZGF0ZUZlZWQgPSB2YWxpZGF0ZUZlZWQ7XG5leHBvcnRzLmlzTGlua3MgPSBpc0xpbmtzO1xuZXhwb3J0cy52YWxpZGF0ZUxpbmtzID0gdmFsaWRhdGVMaW5rcztcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi91dGlsXCIpO1xuY29uc3QgbGV4aWNvbnNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9sZXhpY29uc1wiKTtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuZnVuY3Rpb24gaXNGZWVkKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmZlZWQuZGVzY3JpYmVGZWVkR2VuZXJhdG9yI2ZlZWQnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlRmVlZCh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2FwcC5ic2t5LmZlZWQuZGVzY3JpYmVGZWVkR2VuZXJhdG9yI2ZlZWQnLCB2KTtcbn1cbmZ1bmN0aW9uIGlzTGlua3Modikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAnYXBwLmJza3kuZmVlZC5kZXNjcmliZUZlZWRHZW5lcmF0b3IjbGlua3MnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlTGlua3Modikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5mZWVkLmRlc2NyaWJlRmVlZEdlbmVyYXRvciNsaW5rcycsIHYpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVzY3JpYmVGZWVkR2VuZXJhdG9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/describeFeedGenerator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/generator.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/feed/generator.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isRecord = isRecord;\nexports.validateRecord = validateRecord;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isRecord(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        (v.$type === 'app.bsky.feed.generator#main' ||\n            v.$type === 'app.bsky.feed.generator'));\n}\nfunction validateRecord(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.generator#main', v);\n}\n//# sourceMappingURL=generator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvZ2VuZXJhdG9yLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQjtBQUNoQixzQkFBc0I7QUFDdEIsZUFBZSxtQkFBTyxDQUFDLCtFQUFrQjtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBc0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvZmVlZC9nZW5lcmF0b3IuanM/MGQyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNSZWNvcmQgPSBpc1JlY29yZDtcbmV4cG9ydHMudmFsaWRhdGVSZWNvcmQgPSB2YWxpZGF0ZVJlY29yZDtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi91dGlsXCIpO1xuY29uc3QgbGV4aWNvbnNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9sZXhpY29uc1wiKTtcbmZ1bmN0aW9uIGlzUmVjb3JkKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgKHYuJHR5cGUgPT09ICdhcHAuYnNreS5mZWVkLmdlbmVyYXRvciNtYWluJyB8fFxuICAgICAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmZlZWQuZ2VuZXJhdG9yJykpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVSZWNvcmQodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5mZWVkLmdlbmVyYXRvciNtYWluJywgdik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZW5lcmF0b3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/generator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getActorFeeds.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getActorFeeds.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getActorFeeds.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvZ2V0QWN0b3JGZWVkcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvZmVlZC9nZXRBY3RvckZlZWRzLmpzPzZjZTMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRBY3RvckZlZWRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getActorFeeds.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getActorLikes.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getActorLikes.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BlockedByActorError = exports.BlockedActorError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass BlockedActorError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.BlockedActorError = BlockedActorError;\nclass BlockedByActorError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.BlockedByActorError = BlockedByActorError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'BlockedActor')\n            return new BlockedActorError(e);\n        if (e.error === 'BlockedByActor')\n            return new BlockedByActorError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=getActorLikes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvZ2V0QWN0b3JMaWtlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkIsR0FBRyx5QkFBeUI7QUFDdkQsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyx1RUFBZTtBQUN0QztBQUNBO0FBQ0EsaUVBQWlFLFlBQVk7QUFDN0U7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0EsaUVBQWlFLFlBQVk7QUFDN0U7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9mZWVkL2dldEFjdG9yTGlrZXMuanM/N2UxMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQmxvY2tlZEJ5QWN0b3JFcnJvciA9IGV4cG9ydHMuQmxvY2tlZEFjdG9yRXJyb3IgPSB2b2lkIDA7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuLyoqXG4gKiBHRU5FUkFURUQgQ09ERSAtIERPIE5PVCBNT0RJRllcbiAqL1xuY29uc3QgeHJwY18xID0gcmVxdWlyZShcIkBhdHByb3RvL3hycGNcIik7XG5jbGFzcyBCbG9ja2VkQWN0b3JFcnJvciBleHRlbmRzIHhycGNfMS5YUlBDRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHNyYykge1xuICAgICAgICBzdXBlcihzcmMuc3RhdHVzLCBzcmMuZXJyb3IsIHNyYy5tZXNzYWdlLCBzcmMuaGVhZGVycywgeyBjYXVzZTogc3JjIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuQmxvY2tlZEFjdG9yRXJyb3IgPSBCbG9ja2VkQWN0b3JFcnJvcjtcbmNsYXNzIEJsb2NrZWRCeUFjdG9yRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLkJsb2NrZWRCeUFjdG9yRXJyb3IgPSBCbG9ja2VkQnlBY3RvckVycm9yO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiB4cnBjXzEuWFJQQ0Vycm9yKSB7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnQmxvY2tlZEFjdG9yJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgQmxvY2tlZEFjdG9yRXJyb3IoZSk7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnQmxvY2tlZEJ5QWN0b3InKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBCbG9ja2VkQnlBY3RvckVycm9yKGUpO1xuICAgIH1cbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldEFjdG9yTGlrZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getActorLikes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getAuthorFeed.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getAuthorFeed.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BlockedByActorError = exports.BlockedActorError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass BlockedActorError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.BlockedActorError = BlockedActorError;\nclass BlockedByActorError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.BlockedByActorError = BlockedByActorError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'BlockedActor')\n            return new BlockedActorError(e);\n        if (e.error === 'BlockedByActor')\n            return new BlockedByActorError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=getAuthorFeed.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvZ2V0QXV0aG9yRmVlZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkIsR0FBRyx5QkFBeUI7QUFDdkQsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyx1RUFBZTtBQUN0QztBQUNBO0FBQ0EsaUVBQWlFLFlBQVk7QUFDN0U7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0EsaUVBQWlFLFlBQVk7QUFDN0U7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9mZWVkL2dldEF1dGhvckZlZWQuanM/MTI5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQmxvY2tlZEJ5QWN0b3JFcnJvciA9IGV4cG9ydHMuQmxvY2tlZEFjdG9yRXJyb3IgPSB2b2lkIDA7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuLyoqXG4gKiBHRU5FUkFURUQgQ09ERSAtIERPIE5PVCBNT0RJRllcbiAqL1xuY29uc3QgeHJwY18xID0gcmVxdWlyZShcIkBhdHByb3RvL3hycGNcIik7XG5jbGFzcyBCbG9ja2VkQWN0b3JFcnJvciBleHRlbmRzIHhycGNfMS5YUlBDRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHNyYykge1xuICAgICAgICBzdXBlcihzcmMuc3RhdHVzLCBzcmMuZXJyb3IsIHNyYy5tZXNzYWdlLCBzcmMuaGVhZGVycywgeyBjYXVzZTogc3JjIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuQmxvY2tlZEFjdG9yRXJyb3IgPSBCbG9ja2VkQWN0b3JFcnJvcjtcbmNsYXNzIEJsb2NrZWRCeUFjdG9yRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLkJsb2NrZWRCeUFjdG9yRXJyb3IgPSBCbG9ja2VkQnlBY3RvckVycm9yO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiB4cnBjXzEuWFJQQ0Vycm9yKSB7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnQmxvY2tlZEFjdG9yJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgQmxvY2tlZEFjdG9yRXJyb3IoZSk7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnQmxvY2tlZEJ5QWN0b3InKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBCbG9ja2VkQnlBY3RvckVycm9yKGUpO1xuICAgIH1cbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldEF1dGhvckZlZWQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getAuthorFeed.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getFeed.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getFeed.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UnknownFeedError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass UnknownFeedError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.UnknownFeedError = UnknownFeedError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'UnknownFeed')\n            return new UnknownFeedError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=getFeed.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvZ2V0RmVlZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEIsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyx1RUFBZTtBQUN0QztBQUNBO0FBQ0EsaUVBQWlFLFlBQVk7QUFDN0U7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvZ2V0RmVlZC5qcz9lNGFjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Vbmtub3duRmVlZEVycm9yID0gdm9pZCAwO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbi8qKlxuICogR0VORVJBVEVEIENPREUgLSBETyBOT1QgTU9ESUZZXG4gKi9cbmNvbnN0IHhycGNfMSA9IHJlcXVpcmUoXCJAYXRwcm90by94cnBjXCIpO1xuY2xhc3MgVW5rbm93bkZlZWRFcnJvciBleHRlbmRzIHhycGNfMS5YUlBDRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHNyYykge1xuICAgICAgICBzdXBlcihzcmMuc3RhdHVzLCBzcmMuZXJyb3IsIHNyYy5tZXNzYWdlLCBzcmMuaGVhZGVycywgeyBjYXVzZTogc3JjIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuVW5rbm93bkZlZWRFcnJvciA9IFVua25vd25GZWVkRXJyb3I7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIHhycGNfMS5YUlBDRXJyb3IpIHtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdVbmtub3duRmVlZCcpXG4gICAgICAgICAgICByZXR1cm4gbmV3IFVua25vd25GZWVkRXJyb3IoZSk7XG4gICAgfVxuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0RmVlZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getFeed.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getFeedGenerator.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getFeedGenerator.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getFeedGenerator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvZ2V0RmVlZEdlbmVyYXRvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvZmVlZC9nZXRGZWVkR2VuZXJhdG9yLmpzPzk2NzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRGZWVkR2VuZXJhdG9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getFeedGenerator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getFeedGenerators.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getFeedGenerators.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getFeedGenerators.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvZ2V0RmVlZEdlbmVyYXRvcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvZ2V0RmVlZEdlbmVyYXRvcnMuanM/NjFkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldEZlZWRHZW5lcmF0b3JzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getFeedGenerators.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getFeedSkeleton.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getFeedSkeleton.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UnknownFeedError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass UnknownFeedError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.UnknownFeedError = UnknownFeedError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'UnknownFeed')\n            return new UnknownFeedError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=getFeedSkeleton.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvZ2V0RmVlZFNrZWxldG9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4QixrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHVFQUFlO0FBQ3RDO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvZmVlZC9nZXRGZWVkU2tlbGV0b24uanM/MGVlZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVW5rbm93bkZlZWRFcnJvciA9IHZvaWQgMDtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG4vKipcbiAqIEdFTkVSQVRFRCBDT0RFIC0gRE8gTk9UIE1PRElGWVxuICovXG5jb25zdCB4cnBjXzEgPSByZXF1aXJlKFwiQGF0cHJvdG8veHJwY1wiKTtcbmNsYXNzIFVua25vd25GZWVkRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLlVua25vd25GZWVkRXJyb3IgPSBVbmtub3duRmVlZEVycm9yO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiB4cnBjXzEuWFJQQ0Vycm9yKSB7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnVW5rbm93bkZlZWQnKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBVbmtub3duRmVlZEVycm9yKGUpO1xuICAgIH1cbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldEZlZWRTa2VsZXRvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getFeedSkeleton.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getLikes.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getLikes.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nexports.isLike = isLike;\nexports.validateLike = validateLike;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction toKnownErr(e) {\n    return e;\n}\nfunction isLike(v) {\n    return ((0, util_1.isObj)(v) && (0, util_1.hasProp)(v, '$type') && v.$type === 'app.bsky.feed.getLikes#like');\n}\nfunction validateLike(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.getLikes#like', v);\n}\n//# sourceMappingURL=getLikes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvZ2V0TGlrZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCLGNBQWM7QUFDZCxvQkFBb0I7QUFDcEIsZUFBZSxtQkFBTyxDQUFDLCtFQUFrQjtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBc0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvZmVlZC9nZXRMaWtlcy5qcz8zYWQzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmV4cG9ydHMuaXNMaWtlID0gaXNMaWtlO1xuZXhwb3J0cy52YWxpZGF0ZUxpa2UgPSB2YWxpZGF0ZUxpa2U7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vdXRpbFwiKTtcbmNvbnN0IGxleGljb25zXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbGV4aWNvbnNcIik7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbmZ1bmN0aW9uIGlzTGlrZSh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJiAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmIHYuJHR5cGUgPT09ICdhcHAuYnNreS5mZWVkLmdldExpa2VzI2xpa2UnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlTGlrZSh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2FwcC5ic2t5LmZlZWQuZ2V0TGlrZXMjbGlrZScsIHYpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0TGlrZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getLikes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getListFeed.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getListFeed.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UnknownListError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass UnknownListError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.UnknownListError = UnknownListError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'UnknownList')\n            return new UnknownListError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=getListFeed.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvZ2V0TGlzdEZlZWQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFPLENBQUMsdUVBQWU7QUFDdEM7QUFDQTtBQUNBLGlFQUFpRSxZQUFZO0FBQzdFO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9mZWVkL2dldExpc3RGZWVkLmpzP2FkOWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVua25vd25MaXN0RXJyb3IgPSB2b2lkIDA7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuLyoqXG4gKiBHRU5FUkFURUQgQ09ERSAtIERPIE5PVCBNT0RJRllcbiAqL1xuY29uc3QgeHJwY18xID0gcmVxdWlyZShcIkBhdHByb3RvL3hycGNcIik7XG5jbGFzcyBVbmtub3duTGlzdEVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5Vbmtub3duTGlzdEVycm9yID0gVW5rbm93bkxpc3RFcnJvcjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIGlmIChlIGluc3RhbmNlb2YgeHJwY18xLlhSUENFcnJvcikge1xuICAgICAgICBpZiAoZS5lcnJvciA9PT0gJ1Vua25vd25MaXN0JylcbiAgICAgICAgICAgIHJldHVybiBuZXcgVW5rbm93bkxpc3RFcnJvcihlKTtcbiAgICB9XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRMaXN0RmVlZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getListFeed.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getPostThread.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getPostThread.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NotFoundError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass NotFoundError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.NotFoundError = NotFoundError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'NotFound')\n            return new NotFoundError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=getPostThread.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvZ2V0UG9zdFRocmVhZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckIsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyx1RUFBZTtBQUN0QztBQUNBO0FBQ0EsaUVBQWlFLFlBQVk7QUFDN0U7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvZ2V0UG9zdFRocmVhZC5qcz9mMGRkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Ob3RGb3VuZEVycm9yID0gdm9pZCAwO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbi8qKlxuICogR0VORVJBVEVEIENPREUgLSBETyBOT1QgTU9ESUZZXG4gKi9cbmNvbnN0IHhycGNfMSA9IHJlcXVpcmUoXCJAYXRwcm90by94cnBjXCIpO1xuY2xhc3MgTm90Rm91bmRFcnJvciBleHRlbmRzIHhycGNfMS5YUlBDRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHNyYykge1xuICAgICAgICBzdXBlcihzcmMuc3RhdHVzLCBzcmMuZXJyb3IsIHNyYy5tZXNzYWdlLCBzcmMuaGVhZGVycywgeyBjYXVzZTogc3JjIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuTm90Rm91bmRFcnJvciA9IE5vdEZvdW5kRXJyb3I7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIHhycGNfMS5YUlBDRXJyb3IpIHtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdOb3RGb3VuZCcpXG4gICAgICAgICAgICByZXR1cm4gbmV3IE5vdEZvdW5kRXJyb3IoZSk7XG4gICAgfVxuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0UG9zdFRocmVhZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getPostThread.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getPosts.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getPosts.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getPosts.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvZ2V0UG9zdHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvZ2V0UG9zdHMuanM/NGYyNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldFBvc3RzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getPosts.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getQuotes.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getQuotes.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getQuotes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvZ2V0UXVvdGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9mZWVkL2dldFF1b3Rlcy5qcz85MGUzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0UXVvdGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getQuotes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getRepostedBy.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getRepostedBy.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getRepostedBy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvZ2V0UmVwb3N0ZWRCeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvZmVlZC9nZXRSZXBvc3RlZEJ5LmpzP2RmOWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRSZXBvc3RlZEJ5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getRepostedBy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getSuggestedFeeds.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getSuggestedFeeds.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getSuggestedFeeds.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvZ2V0U3VnZ2VzdGVkRmVlZHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvZ2V0U3VnZ2VzdGVkRmVlZHMuanM/NDIzMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldFN1Z2dlc3RlZEZlZWRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getSuggestedFeeds.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getTimeline.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getTimeline.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getTimeline.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvZ2V0VGltZWxpbmUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvZ2V0VGltZWxpbmUuanM/OWQwNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldFRpbWVsaW5lLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/getTimeline.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/like.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/feed/like.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isRecord = isRecord;\nexports.validateRecord = validateRecord;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isRecord(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        (v.$type === 'app.bsky.feed.like#main' || v.$type === 'app.bsky.feed.like'));\n}\nfunction validateRecord(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.like#main', v);\n}\n//# sourceMappingURL=like.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvbGlrZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEIsc0JBQXNCO0FBQ3RCLGVBQWUsbUJBQU8sQ0FBQywrRUFBa0I7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsdUZBQXNCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9mZWVkL2xpa2UuanM/MzFmMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNSZWNvcmQgPSBpc1JlY29yZDtcbmV4cG9ydHMudmFsaWRhdGVSZWNvcmQgPSB2YWxpZGF0ZVJlY29yZDtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi91dGlsXCIpO1xuY29uc3QgbGV4aWNvbnNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9sZXhpY29uc1wiKTtcbmZ1bmN0aW9uIGlzUmVjb3JkKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgKHYuJHR5cGUgPT09ICdhcHAuYnNreS5mZWVkLmxpa2UjbWFpbicgfHwgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmZlZWQubGlrZScpKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlUmVjb3JkKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kuZmVlZC5saWtlI21haW4nLCB2KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxpa2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/like.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/post.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/feed/post.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isRecord = isRecord;\nexports.validateRecord = validateRecord;\nexports.isReplyRef = isReplyRef;\nexports.validateReplyRef = validateReplyRef;\nexports.isEntity = isEntity;\nexports.validateEntity = validateEntity;\nexports.isTextSlice = isTextSlice;\nexports.validateTextSlice = validateTextSlice;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isRecord(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        (v.$type === 'app.bsky.feed.post#main' || v.$type === 'app.bsky.feed.post'));\n}\nfunction validateRecord(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.post#main', v);\n}\nfunction isReplyRef(v) {\n    return ((0, util_1.isObj)(v) && (0, util_1.hasProp)(v, '$type') && v.$type === 'app.bsky.feed.post#replyRef');\n}\nfunction validateReplyRef(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.post#replyRef', v);\n}\nfunction isEntity(v) {\n    return ((0, util_1.isObj)(v) && (0, util_1.hasProp)(v, '$type') && v.$type === 'app.bsky.feed.post#entity');\n}\nfunction validateEntity(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.post#entity', v);\n}\nfunction isTextSlice(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.feed.post#textSlice');\n}\nfunction validateTextSlice(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.post#textSlice', v);\n}\n//# sourceMappingURL=post.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvcG9zdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEIsc0JBQXNCO0FBQ3RCLGtCQUFrQjtBQUNsQix3QkFBd0I7QUFDeEIsZ0JBQWdCO0FBQ2hCLHNCQUFzQjtBQUN0QixtQkFBbUI7QUFDbkIseUJBQXlCO0FBQ3pCLGVBQWUsbUJBQU8sQ0FBQywrRUFBa0I7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsdUZBQXNCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvZmVlZC9wb3N0LmpzPzkwN2EiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzUmVjb3JkID0gaXNSZWNvcmQ7XG5leHBvcnRzLnZhbGlkYXRlUmVjb3JkID0gdmFsaWRhdGVSZWNvcmQ7XG5leHBvcnRzLmlzUmVwbHlSZWYgPSBpc1JlcGx5UmVmO1xuZXhwb3J0cy52YWxpZGF0ZVJlcGx5UmVmID0gdmFsaWRhdGVSZXBseVJlZjtcbmV4cG9ydHMuaXNFbnRpdHkgPSBpc0VudGl0eTtcbmV4cG9ydHMudmFsaWRhdGVFbnRpdHkgPSB2YWxpZGF0ZUVudGl0eTtcbmV4cG9ydHMuaXNUZXh0U2xpY2UgPSBpc1RleHRTbGljZTtcbmV4cG9ydHMudmFsaWRhdGVUZXh0U2xpY2UgPSB2YWxpZGF0ZVRleHRTbGljZTtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi91dGlsXCIpO1xuY29uc3QgbGV4aWNvbnNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9sZXhpY29uc1wiKTtcbmZ1bmN0aW9uIGlzUmVjb3JkKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgKHYuJHR5cGUgPT09ICdhcHAuYnNreS5mZWVkLnBvc3QjbWFpbicgfHwgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmZlZWQucG9zdCcpKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlUmVjb3JkKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kuZmVlZC5wb3N0I21haW4nLCB2KTtcbn1cbmZ1bmN0aW9uIGlzUmVwbHlSZWYodikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiYgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJiB2LiR0eXBlID09PSAnYXBwLmJza3kuZmVlZC5wb3N0I3JlcGx5UmVmJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZVJlcGx5UmVmKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kuZmVlZC5wb3N0I3JlcGx5UmVmJywgdik7XG59XG5mdW5jdGlvbiBpc0VudGl0eSh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJiAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmIHYuJHR5cGUgPT09ICdhcHAuYnNreS5mZWVkLnBvc3QjZW50aXR5Jyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZUVudGl0eSh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2FwcC5ic2t5LmZlZWQucG9zdCNlbnRpdHknLCB2KTtcbn1cbmZ1bmN0aW9uIGlzVGV4dFNsaWNlKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmZlZWQucG9zdCN0ZXh0U2xpY2UnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlVGV4dFNsaWNlKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kuZmVlZC5wb3N0I3RleHRTbGljZScsIHYpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cG9zdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/post.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/postgate.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/feed/postgate.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isRecord = isRecord;\nexports.validateRecord = validateRecord;\nexports.isDisableRule = isDisableRule;\nexports.validateDisableRule = validateDisableRule;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isRecord(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        (v.$type === 'app.bsky.feed.postgate#main' ||\n            v.$type === 'app.bsky.feed.postgate'));\n}\nfunction validateRecord(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.postgate#main', v);\n}\nfunction isDisableRule(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.feed.postgate#disableRule');\n}\nfunction validateDisableRule(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.postgate#disableRule', v);\n}\n//# sourceMappingURL=postgate.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvcG9zdGdhdGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCO0FBQ2hCLHNCQUFzQjtBQUN0QixxQkFBcUI7QUFDckIsMkJBQTJCO0FBQzNCLGVBQWUsbUJBQU8sQ0FBQywrRUFBa0I7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsdUZBQXNCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9mZWVkL3Bvc3RnYXRlLmpzP2U4OGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzUmVjb3JkID0gaXNSZWNvcmQ7XG5leHBvcnRzLnZhbGlkYXRlUmVjb3JkID0gdmFsaWRhdGVSZWNvcmQ7XG5leHBvcnRzLmlzRGlzYWJsZVJ1bGUgPSBpc0Rpc2FibGVSdWxlO1xuZXhwb3J0cy52YWxpZGF0ZURpc2FibGVSdWxlID0gdmFsaWRhdGVEaXNhYmxlUnVsZTtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi91dGlsXCIpO1xuY29uc3QgbGV4aWNvbnNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9sZXhpY29uc1wiKTtcbmZ1bmN0aW9uIGlzUmVjb3JkKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgKHYuJHR5cGUgPT09ICdhcHAuYnNreS5mZWVkLnBvc3RnYXRlI21haW4nIHx8XG4gICAgICAgICAgICB2LiR0eXBlID09PSAnYXBwLmJza3kuZmVlZC5wb3N0Z2F0ZScpKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlUmVjb3JkKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kuZmVlZC5wb3N0Z2F0ZSNtYWluJywgdik7XG59XG5mdW5jdGlvbiBpc0Rpc2FibGVSdWxlKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmZlZWQucG9zdGdhdGUjZGlzYWJsZVJ1bGUnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlRGlzYWJsZVJ1bGUodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5mZWVkLnBvc3RnYXRlI2Rpc2FibGVSdWxlJywgdik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wb3N0Z2F0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/postgate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/repost.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/feed/repost.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isRecord = isRecord;\nexports.validateRecord = validateRecord;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isRecord(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        (v.$type === 'app.bsky.feed.repost#main' ||\n            v.$type === 'app.bsky.feed.repost'));\n}\nfunction validateRecord(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.repost#main', v);\n}\n//# sourceMappingURL=repost.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvcmVwb3N0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQjtBQUNoQixzQkFBc0I7QUFDdEIsZUFBZSxtQkFBTyxDQUFDLCtFQUFrQjtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBc0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvZmVlZC9yZXBvc3QuanM/ZjBkYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNSZWNvcmQgPSBpc1JlY29yZDtcbmV4cG9ydHMudmFsaWRhdGVSZWNvcmQgPSB2YWxpZGF0ZVJlY29yZDtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi91dGlsXCIpO1xuY29uc3QgbGV4aWNvbnNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9sZXhpY29uc1wiKTtcbmZ1bmN0aW9uIGlzUmVjb3JkKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgKHYuJHR5cGUgPT09ICdhcHAuYnNreS5mZWVkLnJlcG9zdCNtYWluJyB8fFxuICAgICAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmZlZWQucmVwb3N0JykpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVSZWNvcmQodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5mZWVkLnJlcG9zdCNtYWluJywgdik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXBvc3QuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/repost.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/searchPosts.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/feed/searchPosts.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BadQueryStringError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass BadQueryStringError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.BadQueryStringError = BadQueryStringError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'BadQueryString')\n            return new BadQueryStringError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=searchPosts.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvc2VhcmNoUG9zdHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCO0FBQzNCLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFPLENBQUMsdUVBQWU7QUFDdEM7QUFDQTtBQUNBLGlFQUFpRSxZQUFZO0FBQzdFO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9mZWVkL3NlYXJjaFBvc3RzLmpzP2FlNWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkJhZFF1ZXJ5U3RyaW5nRXJyb3IgPSB2b2lkIDA7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuLyoqXG4gKiBHRU5FUkFURUQgQ09ERSAtIERPIE5PVCBNT0RJRllcbiAqL1xuY29uc3QgeHJwY18xID0gcmVxdWlyZShcIkBhdHByb3RvL3hycGNcIik7XG5jbGFzcyBCYWRRdWVyeVN0cmluZ0Vycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5CYWRRdWVyeVN0cmluZ0Vycm9yID0gQmFkUXVlcnlTdHJpbmdFcnJvcjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIGlmIChlIGluc3RhbmNlb2YgeHJwY18xLlhSUENFcnJvcikge1xuICAgICAgICBpZiAoZS5lcnJvciA9PT0gJ0JhZFF1ZXJ5U3RyaW5nJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgQmFkUXVlcnlTdHJpbmdFcnJvcihlKTtcbiAgICB9XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZWFyY2hQb3N0cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/searchPosts.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/sendInteractions.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/feed/sendInteractions.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=sendInteractions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvc2VuZEludGVyYWN0aW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvZmVlZC9zZW5kSW50ZXJhY3Rpb25zLmpzP2M5OTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZW5kSW50ZXJhY3Rpb25zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/sendInteractions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/threadgate.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/feed/threadgate.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isRecord = isRecord;\nexports.validateRecord = validateRecord;\nexports.isMentionRule = isMentionRule;\nexports.validateMentionRule = validateMentionRule;\nexports.isFollowerRule = isFollowerRule;\nexports.validateFollowerRule = validateFollowerRule;\nexports.isFollowingRule = isFollowingRule;\nexports.validateFollowingRule = validateFollowingRule;\nexports.isListRule = isListRule;\nexports.validateListRule = validateListRule;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isRecord(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        (v.$type === 'app.bsky.feed.threadgate#main' ||\n            v.$type === 'app.bsky.feed.threadgate'));\n}\nfunction validateRecord(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.threadgate#main', v);\n}\nfunction isMentionRule(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.feed.threadgate#mentionRule');\n}\nfunction validateMentionRule(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.threadgate#mentionRule', v);\n}\nfunction isFollowerRule(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.feed.threadgate#followerRule');\n}\nfunction validateFollowerRule(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.threadgate#followerRule', v);\n}\nfunction isFollowingRule(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.feed.threadgate#followingRule');\n}\nfunction validateFollowingRule(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.threadgate#followingRule', v);\n}\nfunction isListRule(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.feed.threadgate#listRule');\n}\nfunction validateListRule(v) {\n    return lexicons_1.lexicons.validate('app.bsky.feed.threadgate#listRule', v);\n}\n//# sourceMappingURL=threadgate.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvdGhyZWFkZ2F0ZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEIsc0JBQXNCO0FBQ3RCLHFCQUFxQjtBQUNyQiwyQkFBMkI7QUFDM0Isc0JBQXNCO0FBQ3RCLDRCQUE0QjtBQUM1Qix1QkFBdUI7QUFDdkIsNkJBQTZCO0FBQzdCLGtCQUFrQjtBQUNsQix3QkFBd0I7QUFDeEIsZUFBZSxtQkFBTyxDQUFDLCtFQUFrQjtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBc0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2ZlZWQvdGhyZWFkZ2F0ZS5qcz84OGM3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc1JlY29yZCA9IGlzUmVjb3JkO1xuZXhwb3J0cy52YWxpZGF0ZVJlY29yZCA9IHZhbGlkYXRlUmVjb3JkO1xuZXhwb3J0cy5pc01lbnRpb25SdWxlID0gaXNNZW50aW9uUnVsZTtcbmV4cG9ydHMudmFsaWRhdGVNZW50aW9uUnVsZSA9IHZhbGlkYXRlTWVudGlvblJ1bGU7XG5leHBvcnRzLmlzRm9sbG93ZXJSdWxlID0gaXNGb2xsb3dlclJ1bGU7XG5leHBvcnRzLnZhbGlkYXRlRm9sbG93ZXJSdWxlID0gdmFsaWRhdGVGb2xsb3dlclJ1bGU7XG5leHBvcnRzLmlzRm9sbG93aW5nUnVsZSA9IGlzRm9sbG93aW5nUnVsZTtcbmV4cG9ydHMudmFsaWRhdGVGb2xsb3dpbmdSdWxlID0gdmFsaWRhdGVGb2xsb3dpbmdSdWxlO1xuZXhwb3J0cy5pc0xpc3RSdWxlID0gaXNMaXN0UnVsZTtcbmV4cG9ydHMudmFsaWRhdGVMaXN0UnVsZSA9IHZhbGlkYXRlTGlzdFJ1bGU7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vdXRpbFwiKTtcbmNvbnN0IGxleGljb25zXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbGV4aWNvbnNcIik7XG5mdW5jdGlvbiBpc1JlY29yZCh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgICh2LiR0eXBlID09PSAnYXBwLmJza3kuZmVlZC50aHJlYWRnYXRlI21haW4nIHx8XG4gICAgICAgICAgICB2LiR0eXBlID09PSAnYXBwLmJza3kuZmVlZC50aHJlYWRnYXRlJykpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVSZWNvcmQodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5mZWVkLnRocmVhZGdhdGUjbWFpbicsIHYpO1xufVxuZnVuY3Rpb24gaXNNZW50aW9uUnVsZSh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdhcHAuYnNreS5mZWVkLnRocmVhZGdhdGUjbWVudGlvblJ1bGUnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlTWVudGlvblJ1bGUodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5mZWVkLnRocmVhZGdhdGUjbWVudGlvblJ1bGUnLCB2KTtcbn1cbmZ1bmN0aW9uIGlzRm9sbG93ZXJSdWxlKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmZlZWQudGhyZWFkZ2F0ZSNmb2xsb3dlclJ1bGUnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlRm9sbG93ZXJSdWxlKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kuZmVlZC50aHJlYWRnYXRlI2ZvbGxvd2VyUnVsZScsIHYpO1xufVxuZnVuY3Rpb24gaXNGb2xsb3dpbmdSdWxlKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmZlZWQudGhyZWFkZ2F0ZSNmb2xsb3dpbmdSdWxlJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZUZvbGxvd2luZ1J1bGUodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5mZWVkLnRocmVhZGdhdGUjZm9sbG93aW5nUnVsZScsIHYpO1xufVxuZnVuY3Rpb24gaXNMaXN0UnVsZSh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdhcHAuYnNreS5mZWVkLnRocmVhZGdhdGUjbGlzdFJ1bGUnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlTGlzdFJ1bGUodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5mZWVkLnRocmVhZGdhdGUjbGlzdFJ1bGUnLCB2KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRocmVhZGdhdGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/feed/threadgate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/block.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/block.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isRecord = isRecord;\nexports.validateRecord = validateRecord;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isRecord(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        (v.$type === 'app.bsky.graph.block#main' ||\n            v.$type === 'app.bsky.graph.block'));\n}\nfunction validateRecord(v) {\n    return lexicons_1.lexicons.validate('app.bsky.graph.block#main', v);\n}\n//# sourceMappingURL=block.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL2Jsb2NrLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQjtBQUNoQixzQkFBc0I7QUFDdEIsZUFBZSxtQkFBTyxDQUFDLCtFQUFrQjtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBc0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvZ3JhcGgvYmxvY2suanM/MDc5YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNSZWNvcmQgPSBpc1JlY29yZDtcbmV4cG9ydHMudmFsaWRhdGVSZWNvcmQgPSB2YWxpZGF0ZVJlY29yZDtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi91dGlsXCIpO1xuY29uc3QgbGV4aWNvbnNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9sZXhpY29uc1wiKTtcbmZ1bmN0aW9uIGlzUmVjb3JkKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgKHYuJHR5cGUgPT09ICdhcHAuYnNreS5ncmFwaC5ibG9jayNtYWluJyB8fFxuICAgICAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmdyYXBoLmJsb2NrJykpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVSZWNvcmQodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5ncmFwaC5ibG9jayNtYWluJywgdik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ibG9jay5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/block.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/defs.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/defs.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.REFERENCELIST = exports.CURATELIST = exports.MODLIST = void 0;\nexports.isListViewBasic = isListViewBasic;\nexports.validateListViewBasic = validateListViewBasic;\nexports.isListView = isListView;\nexports.validateListView = validateListView;\nexports.isListItemView = isListItemView;\nexports.validateListItemView = validateListItemView;\nexports.isStarterPackView = isStarterPackView;\nexports.validateStarterPackView = validateStarterPackView;\nexports.isStarterPackViewBasic = isStarterPackViewBasic;\nexports.validateStarterPackViewBasic = validateStarterPackViewBasic;\nexports.isListViewerState = isListViewerState;\nexports.validateListViewerState = validateListViewerState;\nexports.isNotFoundActor = isNotFoundActor;\nexports.validateNotFoundActor = validateNotFoundActor;\nexports.isRelationship = isRelationship;\nexports.validateRelationship = validateRelationship;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isListViewBasic(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.graph.defs#listViewBasic');\n}\nfunction validateListViewBasic(v) {\n    return lexicons_1.lexicons.validate('app.bsky.graph.defs#listViewBasic', v);\n}\nfunction isListView(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.graph.defs#listView');\n}\nfunction validateListView(v) {\n    return lexicons_1.lexicons.validate('app.bsky.graph.defs#listView', v);\n}\nfunction isListItemView(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.graph.defs#listItemView');\n}\nfunction validateListItemView(v) {\n    return lexicons_1.lexicons.validate('app.bsky.graph.defs#listItemView', v);\n}\nfunction isStarterPackView(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.graph.defs#starterPackView');\n}\nfunction validateStarterPackView(v) {\n    return lexicons_1.lexicons.validate('app.bsky.graph.defs#starterPackView', v);\n}\nfunction isStarterPackViewBasic(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.graph.defs#starterPackViewBasic');\n}\nfunction validateStarterPackViewBasic(v) {\n    return lexicons_1.lexicons.validate('app.bsky.graph.defs#starterPackViewBasic', v);\n}\n/** A list of actors to apply an aggregate moderation action (mute/block) on. */\nexports.MODLIST = 'app.bsky.graph.defs#modlist';\n/** A list of actors used for curation purposes such as list feeds or interaction gating. */\nexports.CURATELIST = 'app.bsky.graph.defs#curatelist';\n/** A list of actors used for only for reference purposes such as within a starter pack. */\nexports.REFERENCELIST = 'app.bsky.graph.defs#referencelist';\nfunction isListViewerState(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.graph.defs#listViewerState');\n}\nfunction validateListViewerState(v) {\n    return lexicons_1.lexicons.validate('app.bsky.graph.defs#listViewerState', v);\n}\nfunction isNotFoundActor(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.graph.defs#notFoundActor');\n}\nfunction validateNotFoundActor(v) {\n    return lexicons_1.lexicons.validate('app.bsky.graph.defs#notFoundActor', v);\n}\nfunction isRelationship(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.graph.defs#relationship');\n}\nfunction validateRelationship(v) {\n    return lexicons_1.lexicons.validate('app.bsky.graph.defs#relationship', v);\n}\n//# sourceMappingURL=defs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL2RlZnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCLEdBQUcsa0JBQWtCLEdBQUcsZUFBZTtBQUM1RCx1QkFBdUI7QUFDdkIsNkJBQTZCO0FBQzdCLGtCQUFrQjtBQUNsQix3QkFBd0I7QUFDeEIsc0JBQXNCO0FBQ3RCLDRCQUE0QjtBQUM1Qix5QkFBeUI7QUFDekIsK0JBQStCO0FBQy9CLDhCQUE4QjtBQUM5QixvQ0FBb0M7QUFDcEMseUJBQXlCO0FBQ3pCLCtCQUErQjtBQUMvQix1QkFBdUI7QUFDdkIsNkJBQTZCO0FBQzdCLHNCQUFzQjtBQUN0Qiw0QkFBNEI7QUFDNUIsZUFBZSxtQkFBTyxDQUFDLCtFQUFrQjtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBc0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9ncmFwaC9kZWZzLmpzPzk3ODkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJFRkVSRU5DRUxJU1QgPSBleHBvcnRzLkNVUkFURUxJU1QgPSBleHBvcnRzLk1PRExJU1QgPSB2b2lkIDA7XG5leHBvcnRzLmlzTGlzdFZpZXdCYXNpYyA9IGlzTGlzdFZpZXdCYXNpYztcbmV4cG9ydHMudmFsaWRhdGVMaXN0Vmlld0Jhc2ljID0gdmFsaWRhdGVMaXN0Vmlld0Jhc2ljO1xuZXhwb3J0cy5pc0xpc3RWaWV3ID0gaXNMaXN0VmlldztcbmV4cG9ydHMudmFsaWRhdGVMaXN0VmlldyA9IHZhbGlkYXRlTGlzdFZpZXc7XG5leHBvcnRzLmlzTGlzdEl0ZW1WaWV3ID0gaXNMaXN0SXRlbVZpZXc7XG5leHBvcnRzLnZhbGlkYXRlTGlzdEl0ZW1WaWV3ID0gdmFsaWRhdGVMaXN0SXRlbVZpZXc7XG5leHBvcnRzLmlzU3RhcnRlclBhY2tWaWV3ID0gaXNTdGFydGVyUGFja1ZpZXc7XG5leHBvcnRzLnZhbGlkYXRlU3RhcnRlclBhY2tWaWV3ID0gdmFsaWRhdGVTdGFydGVyUGFja1ZpZXc7XG5leHBvcnRzLmlzU3RhcnRlclBhY2tWaWV3QmFzaWMgPSBpc1N0YXJ0ZXJQYWNrVmlld0Jhc2ljO1xuZXhwb3J0cy52YWxpZGF0ZVN0YXJ0ZXJQYWNrVmlld0Jhc2ljID0gdmFsaWRhdGVTdGFydGVyUGFja1ZpZXdCYXNpYztcbmV4cG9ydHMuaXNMaXN0Vmlld2VyU3RhdGUgPSBpc0xpc3RWaWV3ZXJTdGF0ZTtcbmV4cG9ydHMudmFsaWRhdGVMaXN0Vmlld2VyU3RhdGUgPSB2YWxpZGF0ZUxpc3RWaWV3ZXJTdGF0ZTtcbmV4cG9ydHMuaXNOb3RGb3VuZEFjdG9yID0gaXNOb3RGb3VuZEFjdG9yO1xuZXhwb3J0cy52YWxpZGF0ZU5vdEZvdW5kQWN0b3IgPSB2YWxpZGF0ZU5vdEZvdW5kQWN0b3I7XG5leHBvcnRzLmlzUmVsYXRpb25zaGlwID0gaXNSZWxhdGlvbnNoaXA7XG5leHBvcnRzLnZhbGlkYXRlUmVsYXRpb25zaGlwID0gdmFsaWRhdGVSZWxhdGlvbnNoaXA7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vdXRpbFwiKTtcbmNvbnN0IGxleGljb25zXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbGV4aWNvbnNcIik7XG5mdW5jdGlvbiBpc0xpc3RWaWV3QmFzaWModikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAnYXBwLmJza3kuZ3JhcGguZGVmcyNsaXN0Vmlld0Jhc2ljJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZUxpc3RWaWV3QmFzaWModikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5ncmFwaC5kZWZzI2xpc3RWaWV3QmFzaWMnLCB2KTtcbn1cbmZ1bmN0aW9uIGlzTGlzdFZpZXcodikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAnYXBwLmJza3kuZ3JhcGguZGVmcyNsaXN0VmlldycpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVMaXN0Vmlldyh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2FwcC5ic2t5LmdyYXBoLmRlZnMjbGlzdFZpZXcnLCB2KTtcbn1cbmZ1bmN0aW9uIGlzTGlzdEl0ZW1WaWV3KHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmdyYXBoLmRlZnMjbGlzdEl0ZW1WaWV3Jyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZUxpc3RJdGVtVmlldyh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2FwcC5ic2t5LmdyYXBoLmRlZnMjbGlzdEl0ZW1WaWV3Jywgdik7XG59XG5mdW5jdGlvbiBpc1N0YXJ0ZXJQYWNrVmlldyh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdhcHAuYnNreS5ncmFwaC5kZWZzI3N0YXJ0ZXJQYWNrVmlldycpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVTdGFydGVyUGFja1ZpZXcodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5ncmFwaC5kZWZzI3N0YXJ0ZXJQYWNrVmlldycsIHYpO1xufVxuZnVuY3Rpb24gaXNTdGFydGVyUGFja1ZpZXdCYXNpYyh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdhcHAuYnNreS5ncmFwaC5kZWZzI3N0YXJ0ZXJQYWNrVmlld0Jhc2ljJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZVN0YXJ0ZXJQYWNrVmlld0Jhc2ljKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kuZ3JhcGguZGVmcyNzdGFydGVyUGFja1ZpZXdCYXNpYycsIHYpO1xufVxuLyoqIEEgbGlzdCBvZiBhY3RvcnMgdG8gYXBwbHkgYW4gYWdncmVnYXRlIG1vZGVyYXRpb24gYWN0aW9uIChtdXRlL2Jsb2NrKSBvbi4gKi9cbmV4cG9ydHMuTU9ETElTVCA9ICdhcHAuYnNreS5ncmFwaC5kZWZzI21vZGxpc3QnO1xuLyoqIEEgbGlzdCBvZiBhY3RvcnMgdXNlZCBmb3IgY3VyYXRpb24gcHVycG9zZXMgc3VjaCBhcyBsaXN0IGZlZWRzIG9yIGludGVyYWN0aW9uIGdhdGluZy4gKi9cbmV4cG9ydHMuQ1VSQVRFTElTVCA9ICdhcHAuYnNreS5ncmFwaC5kZWZzI2N1cmF0ZWxpc3QnO1xuLyoqIEEgbGlzdCBvZiBhY3RvcnMgdXNlZCBmb3Igb25seSBmb3IgcmVmZXJlbmNlIHB1cnBvc2VzIHN1Y2ggYXMgd2l0aGluIGEgc3RhcnRlciBwYWNrLiAqL1xuZXhwb3J0cy5SRUZFUkVOQ0VMSVNUID0gJ2FwcC5ic2t5LmdyYXBoLmRlZnMjcmVmZXJlbmNlbGlzdCc7XG5mdW5jdGlvbiBpc0xpc3RWaWV3ZXJTdGF0ZSh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdhcHAuYnNreS5ncmFwaC5kZWZzI2xpc3RWaWV3ZXJTdGF0ZScpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVMaXN0Vmlld2VyU3RhdGUodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5ncmFwaC5kZWZzI2xpc3RWaWV3ZXJTdGF0ZScsIHYpO1xufVxuZnVuY3Rpb24gaXNOb3RGb3VuZEFjdG9yKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmdyYXBoLmRlZnMjbm90Rm91bmRBY3RvcicpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVOb3RGb3VuZEFjdG9yKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kuZ3JhcGguZGVmcyNub3RGb3VuZEFjdG9yJywgdik7XG59XG5mdW5jdGlvbiBpc1JlbGF0aW9uc2hpcCh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdhcHAuYnNreS5ncmFwaC5kZWZzI3JlbGF0aW9uc2hpcCcpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVSZWxhdGlvbnNoaXAodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5ncmFwaC5kZWZzI3JlbGF0aW9uc2hpcCcsIHYpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVmcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/defs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/follow.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/follow.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isRecord = isRecord;\nexports.validateRecord = validateRecord;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isRecord(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        (v.$type === 'app.bsky.graph.follow#main' ||\n            v.$type === 'app.bsky.graph.follow'));\n}\nfunction validateRecord(v) {\n    return lexicons_1.lexicons.validate('app.bsky.graph.follow#main', v);\n}\n//# sourceMappingURL=follow.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL2ZvbGxvdy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEIsc0JBQXNCO0FBQ3RCLGVBQWUsbUJBQU8sQ0FBQywrRUFBa0I7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsdUZBQXNCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL2ZvbGxvdy5qcz8wZjFjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc1JlY29yZCA9IGlzUmVjb3JkO1xuZXhwb3J0cy52YWxpZGF0ZVJlY29yZCA9IHZhbGlkYXRlUmVjb3JkO1xuY29uc3QgdXRpbF8xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL3V0aWxcIik7XG5jb25zdCBsZXhpY29uc18xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL2xleGljb25zXCIpO1xuZnVuY3Rpb24gaXNSZWNvcmQodikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICAodi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmdyYXBoLmZvbGxvdyNtYWluJyB8fFxuICAgICAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmdyYXBoLmZvbGxvdycpKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlUmVjb3JkKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kuZ3JhcGguZm9sbG93I21haW4nLCB2KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZvbGxvdy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/follow.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getActorStarterPacks.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getActorStarterPacks.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getActorStarterPacks.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL2dldEFjdG9yU3RhcnRlclBhY2tzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9ncmFwaC9nZXRBY3RvclN0YXJ0ZXJQYWNrcy5qcz83MjQ1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0QWN0b3JTdGFydGVyUGFja3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getActorStarterPacks.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getBlocks.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getBlocks.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getBlocks.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL2dldEJsb2Nrcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvZ3JhcGgvZ2V0QmxvY2tzLmpzPzk3OWUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRCbG9ja3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getBlocks.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getFollowers.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getFollowers.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getFollowers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL2dldEZvbGxvd2Vycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvZ3JhcGgvZ2V0Rm9sbG93ZXJzLmpzPzMyNTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRGb2xsb3dlcnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getFollowers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getFollows.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getFollows.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getFollows.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL2dldEZvbGxvd3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL2dldEZvbGxvd3MuanM/NDM0YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldEZvbGxvd3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getFollows.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getKnownFollowers.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getKnownFollowers.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getKnownFollowers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL2dldEtub3duRm9sbG93ZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9ncmFwaC9nZXRLbm93bkZvbGxvd2Vycy5qcz8zMjRiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0S25vd25Gb2xsb3dlcnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getKnownFollowers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getList.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getList.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getList.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL2dldExpc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL2dldExpc3QuanM/MTdhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldExpc3QuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getList.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getListBlocks.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getListBlocks.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getListBlocks.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL2dldExpc3RCbG9ja3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL2dldExpc3RCbG9ja3MuanM/ODU5NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldExpc3RCbG9ja3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getListBlocks.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getListMutes.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getListMutes.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getListMutes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL2dldExpc3RNdXRlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvZ3JhcGgvZ2V0TGlzdE11dGVzLmpzP2U0MjgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRMaXN0TXV0ZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getListMutes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getLists.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getLists.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getLists.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL2dldExpc3RzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9ncmFwaC9nZXRMaXN0cy5qcz84MWM1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0TGlzdHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getLists.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getMutes.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getMutes.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getMutes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL2dldE11dGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9ncmFwaC9nZXRNdXRlcy5qcz82NzE5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0TXV0ZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getMutes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getRelationships.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getRelationships.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ActorNotFoundError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass ActorNotFoundError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.ActorNotFoundError = ActorNotFoundError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'ActorNotFound')\n            return new ActorNotFoundError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=getRelationships.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL2dldFJlbGF0aW9uc2hpcHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCO0FBQzFCLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFPLENBQUMsdUVBQWU7QUFDdEM7QUFDQTtBQUNBLGlFQUFpRSxZQUFZO0FBQzdFO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9ncmFwaC9nZXRSZWxhdGlvbnNoaXBzLmpzP2JkOTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFjdG9yTm90Rm91bmRFcnJvciA9IHZvaWQgMDtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG4vKipcbiAqIEdFTkVSQVRFRCBDT0RFIC0gRE8gTk9UIE1PRElGWVxuICovXG5jb25zdCB4cnBjXzEgPSByZXF1aXJlKFwiQGF0cHJvdG8veHJwY1wiKTtcbmNsYXNzIEFjdG9yTm90Rm91bmRFcnJvciBleHRlbmRzIHhycGNfMS5YUlBDRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHNyYykge1xuICAgICAgICBzdXBlcihzcmMuc3RhdHVzLCBzcmMuZXJyb3IsIHNyYy5tZXNzYWdlLCBzcmMuaGVhZGVycywgeyBjYXVzZTogc3JjIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuQWN0b3JOb3RGb3VuZEVycm9yID0gQWN0b3JOb3RGb3VuZEVycm9yO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiB4cnBjXzEuWFJQQ0Vycm9yKSB7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnQWN0b3JOb3RGb3VuZCcpXG4gICAgICAgICAgICByZXR1cm4gbmV3IEFjdG9yTm90Rm91bmRFcnJvcihlKTtcbiAgICB9XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRSZWxhdGlvbnNoaXBzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getRelationships.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getStarterPack.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getStarterPack.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getStarterPack.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL2dldFN0YXJ0ZXJQYWNrLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9ncmFwaC9nZXRTdGFydGVyUGFjay5qcz83MTVmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0U3RhcnRlclBhY2suanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getStarterPack.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getStarterPacks.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getStarterPacks.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getStarterPacks.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL2dldFN0YXJ0ZXJQYWNrcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvZ3JhcGgvZ2V0U3RhcnRlclBhY2tzLmpzPzFhYTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRTdGFydGVyUGFja3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getStarterPacks.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getSuggestedFollowsByActor.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getSuggestedFollowsByActor.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getSuggestedFollowsByActor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL2dldFN1Z2dlc3RlZEZvbGxvd3NCeUFjdG9yLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9ncmFwaC9nZXRTdWdnZXN0ZWRGb2xsb3dzQnlBY3Rvci5qcz8zODZhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0U3VnZ2VzdGVkRm9sbG93c0J5QWN0b3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/getSuggestedFollowsByActor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/list.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/list.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isRecord = isRecord;\nexports.validateRecord = validateRecord;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isRecord(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        (v.$type === 'app.bsky.graph.list#main' ||\n            v.$type === 'app.bsky.graph.list'));\n}\nfunction validateRecord(v) {\n    return lexicons_1.lexicons.validate('app.bsky.graph.list#main', v);\n}\n//# sourceMappingURL=list.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL2xpc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCO0FBQ2hCLHNCQUFzQjtBQUN0QixlQUFlLG1CQUFPLENBQUMsK0VBQWtCO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLHVGQUFzQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9ncmFwaC9saXN0LmpzPzhiNWUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzUmVjb3JkID0gaXNSZWNvcmQ7XG5leHBvcnRzLnZhbGlkYXRlUmVjb3JkID0gdmFsaWRhdGVSZWNvcmQ7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vdXRpbFwiKTtcbmNvbnN0IGxleGljb25zXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbGV4aWNvbnNcIik7XG5mdW5jdGlvbiBpc1JlY29yZCh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgICh2LiR0eXBlID09PSAnYXBwLmJza3kuZ3JhcGgubGlzdCNtYWluJyB8fFxuICAgICAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmdyYXBoLmxpc3QnKSk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZVJlY29yZCh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2FwcC5ic2t5LmdyYXBoLmxpc3QjbWFpbicsIHYpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGlzdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/list.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/listblock.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/listblock.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isRecord = isRecord;\nexports.validateRecord = validateRecord;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isRecord(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        (v.$type === 'app.bsky.graph.listblock#main' ||\n            v.$type === 'app.bsky.graph.listblock'));\n}\nfunction validateRecord(v) {\n    return lexicons_1.lexicons.validate('app.bsky.graph.listblock#main', v);\n}\n//# sourceMappingURL=listblock.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL2xpc3RibG9jay5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEIsc0JBQXNCO0FBQ3RCLGVBQWUsbUJBQU8sQ0FBQywrRUFBa0I7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsdUZBQXNCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL2xpc3RibG9jay5qcz80NDI1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc1JlY29yZCA9IGlzUmVjb3JkO1xuZXhwb3J0cy52YWxpZGF0ZVJlY29yZCA9IHZhbGlkYXRlUmVjb3JkO1xuY29uc3QgdXRpbF8xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL3V0aWxcIik7XG5jb25zdCBsZXhpY29uc18xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL2xleGljb25zXCIpO1xuZnVuY3Rpb24gaXNSZWNvcmQodikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICAodi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmdyYXBoLmxpc3RibG9jayNtYWluJyB8fFxuICAgICAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmdyYXBoLmxpc3RibG9jaycpKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlUmVjb3JkKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kuZ3JhcGgubGlzdGJsb2NrI21haW4nLCB2KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxpc3RibG9jay5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/listblock.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/listitem.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/listitem.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isRecord = isRecord;\nexports.validateRecord = validateRecord;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isRecord(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        (v.$type === 'app.bsky.graph.listitem#main' ||\n            v.$type === 'app.bsky.graph.listitem'));\n}\nfunction validateRecord(v) {\n    return lexicons_1.lexicons.validate('app.bsky.graph.listitem#main', v);\n}\n//# sourceMappingURL=listitem.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL2xpc3RpdGVtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQjtBQUNoQixzQkFBc0I7QUFDdEIsZUFBZSxtQkFBTyxDQUFDLCtFQUFrQjtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBc0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvZ3JhcGgvbGlzdGl0ZW0uanM/ODZmNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNSZWNvcmQgPSBpc1JlY29yZDtcbmV4cG9ydHMudmFsaWRhdGVSZWNvcmQgPSB2YWxpZGF0ZVJlY29yZDtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi91dGlsXCIpO1xuY29uc3QgbGV4aWNvbnNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9sZXhpY29uc1wiKTtcbmZ1bmN0aW9uIGlzUmVjb3JkKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgKHYuJHR5cGUgPT09ICdhcHAuYnNreS5ncmFwaC5saXN0aXRlbSNtYWluJyB8fFxuICAgICAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmdyYXBoLmxpc3RpdGVtJykpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVSZWNvcmQodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5ncmFwaC5saXN0aXRlbSNtYWluJywgdik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1saXN0aXRlbS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/listitem.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/muteActor.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/muteActor.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=muteActor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL211dGVBY3Rvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvZ3JhcGgvbXV0ZUFjdG9yLmpzP2NlMzUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tdXRlQWN0b3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/muteActor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/muteActorList.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/muteActorList.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=muteActorList.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL211dGVBY3Rvckxpc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL211dGVBY3Rvckxpc3QuanM/MTlhZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW11dGVBY3Rvckxpc3QuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/muteActorList.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/muteThread.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/muteThread.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=muteThread.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL211dGVUaHJlYWQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL211dGVUaHJlYWQuanM/YTdjNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW11dGVUaHJlYWQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/muteThread.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/searchStarterPacks.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/searchStarterPacks.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=searchStarterPacks.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL3NlYXJjaFN0YXJ0ZXJQYWNrcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvZ3JhcGgvc2VhcmNoU3RhcnRlclBhY2tzLmpzPzU2YjgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZWFyY2hTdGFydGVyUGFja3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/searchStarterPacks.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/starterpack.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/starterpack.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isRecord = isRecord;\nexports.validateRecord = validateRecord;\nexports.isFeedItem = isFeedItem;\nexports.validateFeedItem = validateFeedItem;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isRecord(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        (v.$type === 'app.bsky.graph.starterpack#main' ||\n            v.$type === 'app.bsky.graph.starterpack'));\n}\nfunction validateRecord(v) {\n    return lexicons_1.lexicons.validate('app.bsky.graph.starterpack#main', v);\n}\nfunction isFeedItem(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.graph.starterpack#feedItem');\n}\nfunction validateFeedItem(v) {\n    return lexicons_1.lexicons.validate('app.bsky.graph.starterpack#feedItem', v);\n}\n//# sourceMappingURL=starterpack.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL3N0YXJ0ZXJwYWNrLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQjtBQUNoQixzQkFBc0I7QUFDdEIsa0JBQWtCO0FBQ2xCLHdCQUF3QjtBQUN4QixlQUFlLG1CQUFPLENBQUMsK0VBQWtCO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLHVGQUFzQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvZ3JhcGgvc3RhcnRlcnBhY2suanM/NjJmMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNSZWNvcmQgPSBpc1JlY29yZDtcbmV4cG9ydHMudmFsaWRhdGVSZWNvcmQgPSB2YWxpZGF0ZVJlY29yZDtcbmV4cG9ydHMuaXNGZWVkSXRlbSA9IGlzRmVlZEl0ZW07XG5leHBvcnRzLnZhbGlkYXRlRmVlZEl0ZW0gPSB2YWxpZGF0ZUZlZWRJdGVtO1xuY29uc3QgdXRpbF8xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL3V0aWxcIik7XG5jb25zdCBsZXhpY29uc18xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL2xleGljb25zXCIpO1xuZnVuY3Rpb24gaXNSZWNvcmQodikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICAodi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmdyYXBoLnN0YXJ0ZXJwYWNrI21haW4nIHx8XG4gICAgICAgICAgICB2LiR0eXBlID09PSAnYXBwLmJza3kuZ3JhcGguc3RhcnRlcnBhY2snKSk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZVJlY29yZCh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2FwcC5ic2t5LmdyYXBoLnN0YXJ0ZXJwYWNrI21haW4nLCB2KTtcbn1cbmZ1bmN0aW9uIGlzRmVlZEl0ZW0odikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAnYXBwLmJza3kuZ3JhcGguc3RhcnRlcnBhY2sjZmVlZEl0ZW0nKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlRmVlZEl0ZW0odikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5ncmFwaC5zdGFydGVycGFjayNmZWVkSXRlbScsIHYpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RhcnRlcnBhY2suanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/starterpack.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/unmuteActor.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/unmuteActor.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=unmuteActor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL3VubXV0ZUFjdG9yLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9ncmFwaC91bm11dGVBY3Rvci5qcz8xZGMwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dW5tdXRlQWN0b3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/unmuteActor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/unmuteActorList.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/unmuteActorList.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=unmuteActorList.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL3VubXV0ZUFjdG9yTGlzdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvZ3JhcGgvdW5tdXRlQWN0b3JMaXN0LmpzPzViZDEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11bm11dGVBY3Rvckxpc3QuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/unmuteActorList.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/unmuteThread.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/graph/unmuteThread.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=unmuteThread.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2dyYXBoL3VubXV0ZVRocmVhZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvZ3JhcGgvdW5tdXRlVGhyZWFkLmpzPzBmNjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11bm11dGVUaHJlYWQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/graph/unmuteThread.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/labeler/defs.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/labeler/defs.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isLabelerView = isLabelerView;\nexports.validateLabelerView = validateLabelerView;\nexports.isLabelerViewDetailed = isLabelerViewDetailed;\nexports.validateLabelerViewDetailed = validateLabelerViewDetailed;\nexports.isLabelerViewerState = isLabelerViewerState;\nexports.validateLabelerViewerState = validateLabelerViewerState;\nexports.isLabelerPolicies = isLabelerPolicies;\nexports.validateLabelerPolicies = validateLabelerPolicies;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isLabelerView(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.labeler.defs#labelerView');\n}\nfunction validateLabelerView(v) {\n    return lexicons_1.lexicons.validate('app.bsky.labeler.defs#labelerView', v);\n}\nfunction isLabelerViewDetailed(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.labeler.defs#labelerViewDetailed');\n}\nfunction validateLabelerViewDetailed(v) {\n    return lexicons_1.lexicons.validate('app.bsky.labeler.defs#labelerViewDetailed', v);\n}\nfunction isLabelerViewerState(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.labeler.defs#labelerViewerState');\n}\nfunction validateLabelerViewerState(v) {\n    return lexicons_1.lexicons.validate('app.bsky.labeler.defs#labelerViewerState', v);\n}\nfunction isLabelerPolicies(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.labeler.defs#labelerPolicies');\n}\nfunction validateLabelerPolicies(v) {\n    return lexicons_1.lexicons.validate('app.bsky.labeler.defs#labelerPolicies', v);\n}\n//# sourceMappingURL=defs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2xhYmVsZXIvZGVmcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckIsMkJBQTJCO0FBQzNCLDZCQUE2QjtBQUM3QixtQ0FBbUM7QUFDbkMsNEJBQTRCO0FBQzVCLGtDQUFrQztBQUNsQyx5QkFBeUI7QUFDekIsK0JBQStCO0FBQy9CLGVBQWUsbUJBQU8sQ0FBQywrRUFBa0I7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsdUZBQXNCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9sYWJlbGVyL2RlZnMuanM/YjhhOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNMYWJlbGVyVmlldyA9IGlzTGFiZWxlclZpZXc7XG5leHBvcnRzLnZhbGlkYXRlTGFiZWxlclZpZXcgPSB2YWxpZGF0ZUxhYmVsZXJWaWV3O1xuZXhwb3J0cy5pc0xhYmVsZXJWaWV3RGV0YWlsZWQgPSBpc0xhYmVsZXJWaWV3RGV0YWlsZWQ7XG5leHBvcnRzLnZhbGlkYXRlTGFiZWxlclZpZXdEZXRhaWxlZCA9IHZhbGlkYXRlTGFiZWxlclZpZXdEZXRhaWxlZDtcbmV4cG9ydHMuaXNMYWJlbGVyVmlld2VyU3RhdGUgPSBpc0xhYmVsZXJWaWV3ZXJTdGF0ZTtcbmV4cG9ydHMudmFsaWRhdGVMYWJlbGVyVmlld2VyU3RhdGUgPSB2YWxpZGF0ZUxhYmVsZXJWaWV3ZXJTdGF0ZTtcbmV4cG9ydHMuaXNMYWJlbGVyUG9saWNpZXMgPSBpc0xhYmVsZXJQb2xpY2llcztcbmV4cG9ydHMudmFsaWRhdGVMYWJlbGVyUG9saWNpZXMgPSB2YWxpZGF0ZUxhYmVsZXJQb2xpY2llcztcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi91dGlsXCIpO1xuY29uc3QgbGV4aWNvbnNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9sZXhpY29uc1wiKTtcbmZ1bmN0aW9uIGlzTGFiZWxlclZpZXcodikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAnYXBwLmJza3kubGFiZWxlci5kZWZzI2xhYmVsZXJWaWV3Jyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZUxhYmVsZXJWaWV3KHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kubGFiZWxlci5kZWZzI2xhYmVsZXJWaWV3Jywgdik7XG59XG5mdW5jdGlvbiBpc0xhYmVsZXJWaWV3RGV0YWlsZWQodikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAnYXBwLmJza3kubGFiZWxlci5kZWZzI2xhYmVsZXJWaWV3RGV0YWlsZWQnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlTGFiZWxlclZpZXdEZXRhaWxlZCh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2FwcC5ic2t5LmxhYmVsZXIuZGVmcyNsYWJlbGVyVmlld0RldGFpbGVkJywgdik7XG59XG5mdW5jdGlvbiBpc0xhYmVsZXJWaWV3ZXJTdGF0ZSh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdhcHAuYnNreS5sYWJlbGVyLmRlZnMjbGFiZWxlclZpZXdlclN0YXRlJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZUxhYmVsZXJWaWV3ZXJTdGF0ZSh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2FwcC5ic2t5LmxhYmVsZXIuZGVmcyNsYWJlbGVyVmlld2VyU3RhdGUnLCB2KTtcbn1cbmZ1bmN0aW9uIGlzTGFiZWxlclBvbGljaWVzKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmxhYmVsZXIuZGVmcyNsYWJlbGVyUG9saWNpZXMnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlTGFiZWxlclBvbGljaWVzKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kubGFiZWxlci5kZWZzI2xhYmVsZXJQb2xpY2llcycsIHYpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVmcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/labeler/defs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/labeler/getServices.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/labeler/getServices.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getServices.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2xhYmVsZXIvZ2V0U2VydmljZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2xhYmVsZXIvZ2V0U2VydmljZXMuanM/NzA3ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldFNlcnZpY2VzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/labeler/getServices.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/labeler/service.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/labeler/service.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isRecord = isRecord;\nexports.validateRecord = validateRecord;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isRecord(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        (v.$type === 'app.bsky.labeler.service#main' ||\n            v.$type === 'app.bsky.labeler.service'));\n}\nfunction validateRecord(v) {\n    return lexicons_1.lexicons.validate('app.bsky.labeler.service#main', v);\n}\n//# sourceMappingURL=service.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2xhYmVsZXIvc2VydmljZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEIsc0JBQXNCO0FBQ3RCLGVBQWUsbUJBQU8sQ0FBQywrRUFBa0I7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsdUZBQXNCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L2xhYmVsZXIvc2VydmljZS5qcz81NGU0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc1JlY29yZCA9IGlzUmVjb3JkO1xuZXhwb3J0cy52YWxpZGF0ZVJlY29yZCA9IHZhbGlkYXRlUmVjb3JkO1xuY29uc3QgdXRpbF8xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL3V0aWxcIik7XG5jb25zdCBsZXhpY29uc18xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL2xleGljb25zXCIpO1xuZnVuY3Rpb24gaXNSZWNvcmQodikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICAodi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmxhYmVsZXIuc2VydmljZSNtYWluJyB8fFxuICAgICAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LmxhYmVsZXIuc2VydmljZScpKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlUmVjb3JkKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kubGFiZWxlci5zZXJ2aWNlI21haW4nLCB2KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlcnZpY2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/labeler/service.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/notification/getUnreadCount.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/notification/getUnreadCount.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getUnreadCount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L25vdGlmaWNhdGlvbi9nZXRVbnJlYWRDb3VudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvbm90aWZpY2F0aW9uL2dldFVucmVhZENvdW50LmpzPzMwYjYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRVbnJlYWRDb3VudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/notification/getUnreadCount.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/notification/listNotifications.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/notification/listNotifications.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nexports.isNotification = isNotification;\nexports.validateNotification = validateNotification;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction toKnownErr(e) {\n    return e;\n}\nfunction isNotification(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.notification.listNotifications#notification');\n}\nfunction validateNotification(v) {\n    return lexicons_1.lexicons.validate('app.bsky.notification.listNotifications#notification', v);\n}\n//# sourceMappingURL=listNotifications.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L25vdGlmaWNhdGlvbi9saXN0Tm90aWZpY2F0aW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEIsc0JBQXNCO0FBQ3RCLDRCQUE0QjtBQUM1QixlQUFlLG1CQUFPLENBQUMsK0VBQWtCO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLHVGQUFzQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvbm90aWZpY2F0aW9uL2xpc3ROb3RpZmljYXRpb25zLmpzP2ZiZDAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZXhwb3J0cy5pc05vdGlmaWNhdGlvbiA9IGlzTm90aWZpY2F0aW9uO1xuZXhwb3J0cy52YWxpZGF0ZU5vdGlmaWNhdGlvbiA9IHZhbGlkYXRlTm90aWZpY2F0aW9uO1xuY29uc3QgdXRpbF8xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL3V0aWxcIik7XG5jb25zdCBsZXhpY29uc18xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL2xleGljb25zXCIpO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG5mdW5jdGlvbiBpc05vdGlmaWNhdGlvbih2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdhcHAuYnNreS5ub3RpZmljYXRpb24ubGlzdE5vdGlmaWNhdGlvbnMjbm90aWZpY2F0aW9uJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZU5vdGlmaWNhdGlvbih2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2FwcC5ic2t5Lm5vdGlmaWNhdGlvbi5saXN0Tm90aWZpY2F0aW9ucyNub3RpZmljYXRpb24nLCB2KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxpc3ROb3RpZmljYXRpb25zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/notification/listNotifications.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/notification/putPreferences.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/notification/putPreferences.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=putPreferences.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L25vdGlmaWNhdGlvbi9wdXRQcmVmZXJlbmNlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvbm90aWZpY2F0aW9uL3B1dFByZWZlcmVuY2VzLmpzPzdkYWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wdXRQcmVmZXJlbmNlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/notification/putPreferences.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/notification/registerPush.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/notification/registerPush.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=registerPush.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L25vdGlmaWNhdGlvbi9yZWdpc3RlclB1c2guanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L25vdGlmaWNhdGlvbi9yZWdpc3RlclB1c2guanM/NDQ1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlZ2lzdGVyUHVzaC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/notification/registerPush.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/notification/updateSeen.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/notification/updateSeen.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=updateSeen.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L25vdGlmaWNhdGlvbi91cGRhdGVTZWVuLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9ub3RpZmljYXRpb24vdXBkYXRlU2Vlbi5qcz8zMjJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXBkYXRlU2Vlbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/notification/updateSeen.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/richtext/facet.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/richtext/facet.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isMain = isMain;\nexports.validateMain = validateMain;\nexports.isMention = isMention;\nexports.validateMention = validateMention;\nexports.isLink = isLink;\nexports.validateLink = validateLink;\nexports.isTag = isTag;\nexports.validateTag = validateTag;\nexports.isByteSlice = isByteSlice;\nexports.validateByteSlice = validateByteSlice;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isMain(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        (v.$type === 'app.bsky.richtext.facet#main' ||\n            v.$type === 'app.bsky.richtext.facet'));\n}\nfunction validateMain(v) {\n    return lexicons_1.lexicons.validate('app.bsky.richtext.facet#main', v);\n}\nfunction isMention(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.richtext.facet#mention');\n}\nfunction validateMention(v) {\n    return lexicons_1.lexicons.validate('app.bsky.richtext.facet#mention', v);\n}\nfunction isLink(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.richtext.facet#link');\n}\nfunction validateLink(v) {\n    return lexicons_1.lexicons.validate('app.bsky.richtext.facet#link', v);\n}\nfunction isTag(v) {\n    return ((0, util_1.isObj)(v) && (0, util_1.hasProp)(v, '$type') && v.$type === 'app.bsky.richtext.facet#tag');\n}\nfunction validateTag(v) {\n    return lexicons_1.lexicons.validate('app.bsky.richtext.facet#tag', v);\n}\nfunction isByteSlice(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.richtext.facet#byteSlice');\n}\nfunction validateByteSlice(v) {\n    return lexicons_1.lexicons.validate('app.bsky.richtext.facet#byteSlice', v);\n}\n//# sourceMappingURL=facet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L3JpY2h0ZXh0L2ZhY2V0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWM7QUFDZCxvQkFBb0I7QUFDcEIsaUJBQWlCO0FBQ2pCLHVCQUF1QjtBQUN2QixjQUFjO0FBQ2Qsb0JBQW9CO0FBQ3BCLGFBQWE7QUFDYixtQkFBbUI7QUFDbkIsbUJBQW1CO0FBQ25CLHlCQUF5QjtBQUN6QixlQUFlLG1CQUFPLENBQUMsK0VBQWtCO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLHVGQUFzQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS9yaWNodGV4dC9mYWNldC5qcz81ZmQxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc01haW4gPSBpc01haW47XG5leHBvcnRzLnZhbGlkYXRlTWFpbiA9IHZhbGlkYXRlTWFpbjtcbmV4cG9ydHMuaXNNZW50aW9uID0gaXNNZW50aW9uO1xuZXhwb3J0cy52YWxpZGF0ZU1lbnRpb24gPSB2YWxpZGF0ZU1lbnRpb247XG5leHBvcnRzLmlzTGluayA9IGlzTGluaztcbmV4cG9ydHMudmFsaWRhdGVMaW5rID0gdmFsaWRhdGVMaW5rO1xuZXhwb3J0cy5pc1RhZyA9IGlzVGFnO1xuZXhwb3J0cy52YWxpZGF0ZVRhZyA9IHZhbGlkYXRlVGFnO1xuZXhwb3J0cy5pc0J5dGVTbGljZSA9IGlzQnl0ZVNsaWNlO1xuZXhwb3J0cy52YWxpZGF0ZUJ5dGVTbGljZSA9IHZhbGlkYXRlQnl0ZVNsaWNlO1xuY29uc3QgdXRpbF8xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL3V0aWxcIik7XG5jb25zdCBsZXhpY29uc18xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL2xleGljb25zXCIpO1xuZnVuY3Rpb24gaXNNYWluKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgKHYuJHR5cGUgPT09ICdhcHAuYnNreS5yaWNodGV4dC5mYWNldCNtYWluJyB8fFxuICAgICAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LnJpY2h0ZXh0LmZhY2V0JykpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVNYWluKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kucmljaHRleHQuZmFjZXQjbWFpbicsIHYpO1xufVxuZnVuY3Rpb24gaXNNZW50aW9uKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LnJpY2h0ZXh0LmZhY2V0I21lbnRpb24nKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlTWVudGlvbih2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2FwcC5ic2t5LnJpY2h0ZXh0LmZhY2V0I21lbnRpb24nLCB2KTtcbn1cbmZ1bmN0aW9uIGlzTGluayh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdhcHAuYnNreS5yaWNodGV4dC5mYWNldCNsaW5rJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZUxpbmsodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS5yaWNodGV4dC5mYWNldCNsaW5rJywgdik7XG59XG5mdW5jdGlvbiBpc1RhZyh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJiAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmIHYuJHR5cGUgPT09ICdhcHAuYnNreS5yaWNodGV4dC5mYWNldCN0YWcnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlVGFnKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kucmljaHRleHQuZmFjZXQjdGFnJywgdik7XG59XG5mdW5jdGlvbiBpc0J5dGVTbGljZSh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdhcHAuYnNreS5yaWNodGV4dC5mYWNldCNieXRlU2xpY2UnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlQnl0ZVNsaWNlKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kucmljaHRleHQuZmFjZXQjYnl0ZVNsaWNlJywgdik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mYWNldC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/richtext/facet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/defs.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/defs.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isSkeletonSearchPost = isSkeletonSearchPost;\nexports.validateSkeletonSearchPost = validateSkeletonSearchPost;\nexports.isSkeletonSearchActor = isSkeletonSearchActor;\nexports.validateSkeletonSearchActor = validateSkeletonSearchActor;\nexports.isSkeletonSearchStarterPack = isSkeletonSearchStarterPack;\nexports.validateSkeletonSearchStarterPack = validateSkeletonSearchStarterPack;\nexports.isTrendingTopic = isTrendingTopic;\nexports.validateTrendingTopic = validateTrendingTopic;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isSkeletonSearchPost(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.unspecced.defs#skeletonSearchPost');\n}\nfunction validateSkeletonSearchPost(v) {\n    return lexicons_1.lexicons.validate('app.bsky.unspecced.defs#skeletonSearchPost', v);\n}\nfunction isSkeletonSearchActor(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.unspecced.defs#skeletonSearchActor');\n}\nfunction validateSkeletonSearchActor(v) {\n    return lexicons_1.lexicons.validate('app.bsky.unspecced.defs#skeletonSearchActor', v);\n}\nfunction isSkeletonSearchStarterPack(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.unspecced.defs#skeletonSearchStarterPack');\n}\nfunction validateSkeletonSearchStarterPack(v) {\n    return lexicons_1.lexicons.validate('app.bsky.unspecced.defs#skeletonSearchStarterPack', v);\n}\nfunction isTrendingTopic(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.unspecced.defs#trendingTopic');\n}\nfunction validateTrendingTopic(v) {\n    return lexicons_1.lexicons.validate('app.bsky.unspecced.defs#trendingTopic', v);\n}\n//# sourceMappingURL=defs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L3Vuc3BlY2NlZC9kZWZzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QjtBQUM1QixrQ0FBa0M7QUFDbEMsNkJBQTZCO0FBQzdCLG1DQUFtQztBQUNuQyxtQ0FBbUM7QUFDbkMseUNBQXlDO0FBQ3pDLHVCQUF1QjtBQUN2Qiw2QkFBNkI7QUFDN0IsZUFBZSxtQkFBTyxDQUFDLCtFQUFrQjtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBc0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L3Vuc3BlY2NlZC9kZWZzLmpzPzQxNTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzU2tlbGV0b25TZWFyY2hQb3N0ID0gaXNTa2VsZXRvblNlYXJjaFBvc3Q7XG5leHBvcnRzLnZhbGlkYXRlU2tlbGV0b25TZWFyY2hQb3N0ID0gdmFsaWRhdGVTa2VsZXRvblNlYXJjaFBvc3Q7XG5leHBvcnRzLmlzU2tlbGV0b25TZWFyY2hBY3RvciA9IGlzU2tlbGV0b25TZWFyY2hBY3RvcjtcbmV4cG9ydHMudmFsaWRhdGVTa2VsZXRvblNlYXJjaEFjdG9yID0gdmFsaWRhdGVTa2VsZXRvblNlYXJjaEFjdG9yO1xuZXhwb3J0cy5pc1NrZWxldG9uU2VhcmNoU3RhcnRlclBhY2sgPSBpc1NrZWxldG9uU2VhcmNoU3RhcnRlclBhY2s7XG5leHBvcnRzLnZhbGlkYXRlU2tlbGV0b25TZWFyY2hTdGFydGVyUGFjayA9IHZhbGlkYXRlU2tlbGV0b25TZWFyY2hTdGFydGVyUGFjaztcbmV4cG9ydHMuaXNUcmVuZGluZ1RvcGljID0gaXNUcmVuZGluZ1RvcGljO1xuZXhwb3J0cy52YWxpZGF0ZVRyZW5kaW5nVG9waWMgPSB2YWxpZGF0ZVRyZW5kaW5nVG9waWM7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vdXRpbFwiKTtcbmNvbnN0IGxleGljb25zXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbGV4aWNvbnNcIik7XG5mdW5jdGlvbiBpc1NrZWxldG9uU2VhcmNoUG9zdCh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdhcHAuYnNreS51bnNwZWNjZWQuZGVmcyNza2VsZXRvblNlYXJjaFBvc3QnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlU2tlbGV0b25TZWFyY2hQb3N0KHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kudW5zcGVjY2VkLmRlZnMjc2tlbGV0b25TZWFyY2hQb3N0Jywgdik7XG59XG5mdW5jdGlvbiBpc1NrZWxldG9uU2VhcmNoQWN0b3Iodikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAnYXBwLmJza3kudW5zcGVjY2VkLmRlZnMjc2tlbGV0b25TZWFyY2hBY3RvcicpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVTa2VsZXRvblNlYXJjaEFjdG9yKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kudW5zcGVjY2VkLmRlZnMjc2tlbGV0b25TZWFyY2hBY3RvcicsIHYpO1xufVxuZnVuY3Rpb24gaXNTa2VsZXRvblNlYXJjaFN0YXJ0ZXJQYWNrKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LnVuc3BlY2NlZC5kZWZzI3NrZWxldG9uU2VhcmNoU3RhcnRlclBhY2snKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlU2tlbGV0b25TZWFyY2hTdGFydGVyUGFjayh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2FwcC5ic2t5LnVuc3BlY2NlZC5kZWZzI3NrZWxldG9uU2VhcmNoU3RhcnRlclBhY2snLCB2KTtcbn1cbmZ1bmN0aW9uIGlzVHJlbmRpbmdUb3BpYyh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdhcHAuYnNreS51bnNwZWNjZWQuZGVmcyN0cmVuZGluZ1RvcGljJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZVRyZW5kaW5nVG9waWModikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS51bnNwZWNjZWQuZGVmcyN0cmVuZGluZ1RvcGljJywgdik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWZzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/defs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/getConfig.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/getConfig.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getConfig.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L3Vuc3BlY2NlZC9nZXRDb25maWcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L3Vuc3BlY2NlZC9nZXRDb25maWcuanM/OWRhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldENvbmZpZy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/getConfig.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/getPopularFeedGenerators.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/getPopularFeedGenerators.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getPopularFeedGenerators.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L3Vuc3BlY2NlZC9nZXRQb3B1bGFyRmVlZEdlbmVyYXRvcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L3Vuc3BlY2NlZC9nZXRQb3B1bGFyRmVlZEdlbmVyYXRvcnMuanM/N2ZkYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldFBvcHVsYXJGZWVkR2VuZXJhdG9ycy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/getPopularFeedGenerators.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/getSuggestionsSkeleton.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/getSuggestionsSkeleton.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getSuggestionsSkeleton.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L3Vuc3BlY2NlZC9nZXRTdWdnZXN0aW9uc1NrZWxldG9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS91bnNwZWNjZWQvZ2V0U3VnZ2VzdGlvbnNTa2VsZXRvbi5qcz9jZmJjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0U3VnZ2VzdGlvbnNTa2VsZXRvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/getSuggestionsSkeleton.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/getTaggedSuggestions.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/getTaggedSuggestions.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nexports.isSuggestion = isSuggestion;\nexports.validateSuggestion = validateSuggestion;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction toKnownErr(e) {\n    return e;\n}\nfunction isSuggestion(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.unspecced.getTaggedSuggestions#suggestion');\n}\nfunction validateSuggestion(v) {\n    return lexicons_1.lexicons.validate('app.bsky.unspecced.getTaggedSuggestions#suggestion', v);\n}\n//# sourceMappingURL=getTaggedSuggestions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L3Vuc3BlY2NlZC9nZXRUYWdnZWRTdWdnZXN0aW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEIsb0JBQW9CO0FBQ3BCLDBCQUEwQjtBQUMxQixlQUFlLG1CQUFPLENBQUMsK0VBQWtCO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLHVGQUFzQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvdW5zcGVjY2VkL2dldFRhZ2dlZFN1Z2dlc3Rpb25zLmpzPzkxYmMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZXhwb3J0cy5pc1N1Z2dlc3Rpb24gPSBpc1N1Z2dlc3Rpb247XG5leHBvcnRzLnZhbGlkYXRlU3VnZ2VzdGlvbiA9IHZhbGlkYXRlU3VnZ2VzdGlvbjtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi91dGlsXCIpO1xuY29uc3QgbGV4aWNvbnNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9sZXhpY29uc1wiKTtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuZnVuY3Rpb24gaXNTdWdnZXN0aW9uKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2FwcC5ic2t5LnVuc3BlY2NlZC5nZXRUYWdnZWRTdWdnZXN0aW9ucyNzdWdnZXN0aW9uJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZVN1Z2dlc3Rpb24odikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdhcHAuYnNreS51bnNwZWNjZWQuZ2V0VGFnZ2VkU3VnZ2VzdGlvbnMjc3VnZ2VzdGlvbicsIHYpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0VGFnZ2VkU3VnZ2VzdGlvbnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/getTaggedSuggestions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/getTrendingTopics.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/getTrendingTopics.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getTrendingTopics.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L3Vuc3BlY2NlZC9nZXRUcmVuZGluZ1RvcGljcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvdW5zcGVjY2VkL2dldFRyZW5kaW5nVG9waWNzLmpzPzEwMmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRUcmVuZGluZ1RvcGljcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/getTrendingTopics.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/searchActorsSkeleton.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/searchActorsSkeleton.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BadQueryStringError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass BadQueryStringError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.BadQueryStringError = BadQueryStringError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'BadQueryString')\n            return new BadQueryStringError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=searchActorsSkeleton.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L3Vuc3BlY2NlZC9zZWFyY2hBY3RvcnNTa2VsZXRvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkI7QUFDM0Isa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyx1RUFBZTtBQUN0QztBQUNBO0FBQ0EsaUVBQWlFLFlBQVk7QUFDN0U7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L3Vuc3BlY2NlZC9zZWFyY2hBY3RvcnNTa2VsZXRvbi5qcz80Y2MxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CYWRRdWVyeVN0cmluZ0Vycm9yID0gdm9pZCAwO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbi8qKlxuICogR0VORVJBVEVEIENPREUgLSBETyBOT1QgTU9ESUZZXG4gKi9cbmNvbnN0IHhycGNfMSA9IHJlcXVpcmUoXCJAYXRwcm90by94cnBjXCIpO1xuY2xhc3MgQmFkUXVlcnlTdHJpbmdFcnJvciBleHRlbmRzIHhycGNfMS5YUlBDRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHNyYykge1xuICAgICAgICBzdXBlcihzcmMuc3RhdHVzLCBzcmMuZXJyb3IsIHNyYy5tZXNzYWdlLCBzcmMuaGVhZGVycywgeyBjYXVzZTogc3JjIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuQmFkUXVlcnlTdHJpbmdFcnJvciA9IEJhZFF1ZXJ5U3RyaW5nRXJyb3I7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIHhycGNfMS5YUlBDRXJyb3IpIHtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdCYWRRdWVyeVN0cmluZycpXG4gICAgICAgICAgICByZXR1cm4gbmV3IEJhZFF1ZXJ5U3RyaW5nRXJyb3IoZSk7XG4gICAgfVxuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VhcmNoQWN0b3JzU2tlbGV0b24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/searchActorsSkeleton.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/searchPostsSkeleton.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/searchPostsSkeleton.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BadQueryStringError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass BadQueryStringError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.BadQueryStringError = BadQueryStringError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'BadQueryString')\n            return new BadQueryStringError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=searchPostsSkeleton.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L3Vuc3BlY2NlZC9zZWFyY2hQb3N0c1NrZWxldG9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQjtBQUMzQixrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHVFQUFlO0FBQ3RDO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvdW5zcGVjY2VkL3NlYXJjaFBvc3RzU2tlbGV0b24uanM/MzVlYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQmFkUXVlcnlTdHJpbmdFcnJvciA9IHZvaWQgMDtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG4vKipcbiAqIEdFTkVSQVRFRCBDT0RFIC0gRE8gTk9UIE1PRElGWVxuICovXG5jb25zdCB4cnBjXzEgPSByZXF1aXJlKFwiQGF0cHJvdG8veHJwY1wiKTtcbmNsYXNzIEJhZFF1ZXJ5U3RyaW5nRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLkJhZFF1ZXJ5U3RyaW5nRXJyb3IgPSBCYWRRdWVyeVN0cmluZ0Vycm9yO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiB4cnBjXzEuWFJQQ0Vycm9yKSB7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnQmFkUXVlcnlTdHJpbmcnKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBCYWRRdWVyeVN0cmluZ0Vycm9yKGUpO1xuICAgIH1cbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlYXJjaFBvc3RzU2tlbGV0b24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/searchPostsSkeleton.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/searchStarterPacksSkeleton.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/searchStarterPacksSkeleton.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BadQueryStringError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass BadQueryStringError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.BadQueryStringError = BadQueryStringError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'BadQueryString')\n            return new BadQueryStringError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=searchStarterPacksSkeleton.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L3Vuc3BlY2NlZC9zZWFyY2hTdGFydGVyUGFja3NTa2VsZXRvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkI7QUFDM0Isa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyx1RUFBZTtBQUN0QztBQUNBO0FBQ0EsaUVBQWlFLFlBQVk7QUFDN0U7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L3Vuc3BlY2NlZC9zZWFyY2hTdGFydGVyUGFja3NTa2VsZXRvbi5qcz8yZjgxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CYWRRdWVyeVN0cmluZ0Vycm9yID0gdm9pZCAwO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbi8qKlxuICogR0VORVJBVEVEIENPREUgLSBETyBOT1QgTU9ESUZZXG4gKi9cbmNvbnN0IHhycGNfMSA9IHJlcXVpcmUoXCJAYXRwcm90by94cnBjXCIpO1xuY2xhc3MgQmFkUXVlcnlTdHJpbmdFcnJvciBleHRlbmRzIHhycGNfMS5YUlBDRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHNyYykge1xuICAgICAgICBzdXBlcihzcmMuc3RhdHVzLCBzcmMuZXJyb3IsIHNyYy5tZXNzYWdlLCBzcmMuaGVhZGVycywgeyBjYXVzZTogc3JjIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuQmFkUXVlcnlTdHJpbmdFcnJvciA9IEJhZFF1ZXJ5U3RyaW5nRXJyb3I7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIHhycGNfMS5YUlBDRXJyb3IpIHtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdCYWRRdWVyeVN0cmluZycpXG4gICAgICAgICAgICByZXR1cm4gbmV3IEJhZFF1ZXJ5U3RyaW5nRXJyb3IoZSk7XG4gICAgfVxuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VhcmNoU3RhcnRlclBhY2tzU2tlbGV0b24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/unspecced/searchStarterPacksSkeleton.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/video/defs.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/video/defs.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isJobStatus = isJobStatus;\nexports.validateJobStatus = validateJobStatus;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isJobStatus(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'app.bsky.video.defs#jobStatus');\n}\nfunction validateJobStatus(v) {\n    return lexicons_1.lexicons.validate('app.bsky.video.defs#jobStatus', v);\n}\n//# sourceMappingURL=defs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L3ZpZGVvL2RlZnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CLHlCQUF5QjtBQUN6QixlQUFlLG1CQUFPLENBQUMsK0VBQWtCO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLHVGQUFzQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvdmlkZW8vZGVmcy5qcz83NmQ1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc0pvYlN0YXR1cyA9IGlzSm9iU3RhdHVzO1xuZXhwb3J0cy52YWxpZGF0ZUpvYlN0YXR1cyA9IHZhbGlkYXRlSm9iU3RhdHVzO1xuY29uc3QgdXRpbF8xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL3V0aWxcIik7XG5jb25zdCBsZXhpY29uc18xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL2xleGljb25zXCIpO1xuZnVuY3Rpb24gaXNKb2JTdGF0dXModikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAnYXBwLmJza3kudmlkZW8uZGVmcyNqb2JTdGF0dXMnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlSm9iU3RhdHVzKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnYXBwLmJza3kudmlkZW8uZGVmcyNqb2JTdGF0dXMnLCB2KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlZnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/video/defs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/video/getJobStatus.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/video/getJobStatus.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getJobStatus.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L3ZpZGVvL2dldEpvYlN0YXR1cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvdmlkZW8vZ2V0Sm9iU3RhdHVzLmpzPzFiYzUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRKb2JTdGF0dXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/video/getJobStatus.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/video/getUploadLimits.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/video/getUploadLimits.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getUploadLimits.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L3ZpZGVvL2dldFVwbG9hZExpbWl0cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvYXBwL2Jza3kvdmlkZW8vZ2V0VXBsb2FkTGltaXRzLmpzP2MyY2YiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRVcGxvYWRMaW1pdHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/video/getUploadLimits.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/video/uploadVideo.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/app/bsky/video/uploadVideo.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=uploadVideo.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2FwcC9ic2t5L3ZpZGVvL3VwbG9hZFZpZGVvLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9hcHAvYnNreS92aWRlby91cGxvYWRWaWRlby5qcz81N2I0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXBsb2FkVmlkZW8uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/app/bsky/video/uploadVideo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/actor/declaration.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/chat/bsky/actor/declaration.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isRecord = isRecord;\nexports.validateRecord = validateRecord;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isRecord(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        (v.$type === 'chat.bsky.actor.declaration#main' ||\n            v.$type === 'chat.bsky.actor.declaration'));\n}\nfunction validateRecord(v) {\n    return lexicons_1.lexicons.validate('chat.bsky.actor.declaration#main', v);\n}\n//# sourceMappingURL=declaration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9hY3Rvci9kZWNsYXJhdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEIsc0JBQXNCO0FBQ3RCLGVBQWUsbUJBQU8sQ0FBQywrRUFBa0I7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsdUZBQXNCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9hY3Rvci9kZWNsYXJhdGlvbi5qcz9mOGY1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc1JlY29yZCA9IGlzUmVjb3JkO1xuZXhwb3J0cy52YWxpZGF0ZVJlY29yZCA9IHZhbGlkYXRlUmVjb3JkO1xuY29uc3QgdXRpbF8xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL3V0aWxcIik7XG5jb25zdCBsZXhpY29uc18xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL2xleGljb25zXCIpO1xuZnVuY3Rpb24gaXNSZWNvcmQodikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICAodi4kdHlwZSA9PT0gJ2NoYXQuYnNreS5hY3Rvci5kZWNsYXJhdGlvbiNtYWluJyB8fFxuICAgICAgICAgICAgdi4kdHlwZSA9PT0gJ2NoYXQuYnNreS5hY3Rvci5kZWNsYXJhdGlvbicpKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlUmVjb3JkKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnY2hhdC5ic2t5LmFjdG9yLmRlY2xhcmF0aW9uI21haW4nLCB2KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlY2xhcmF0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/actor/declaration.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/actor/defs.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/chat/bsky/actor/defs.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isProfileViewBasic = isProfileViewBasic;\nexports.validateProfileViewBasic = validateProfileViewBasic;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isProfileViewBasic(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'chat.bsky.actor.defs#profileViewBasic');\n}\nfunction validateProfileViewBasic(v) {\n    return lexicons_1.lexicons.validate('chat.bsky.actor.defs#profileViewBasic', v);\n}\n//# sourceMappingURL=defs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9hY3Rvci9kZWZzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQjtBQUMxQixnQ0FBZ0M7QUFDaEMsZUFBZSxtQkFBTyxDQUFDLCtFQUFrQjtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBc0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9hY3Rvci9kZWZzLmpzPzdhZDUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzUHJvZmlsZVZpZXdCYXNpYyA9IGlzUHJvZmlsZVZpZXdCYXNpYztcbmV4cG9ydHMudmFsaWRhdGVQcm9maWxlVmlld0Jhc2ljID0gdmFsaWRhdGVQcm9maWxlVmlld0Jhc2ljO1xuY29uc3QgdXRpbF8xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL3V0aWxcIik7XG5jb25zdCBsZXhpY29uc18xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL2xleGljb25zXCIpO1xuZnVuY3Rpb24gaXNQcm9maWxlVmlld0Jhc2ljKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2NoYXQuYnNreS5hY3Rvci5kZWZzI3Byb2ZpbGVWaWV3QmFzaWMnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlUHJvZmlsZVZpZXdCYXNpYyh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2NoYXQuYnNreS5hY3Rvci5kZWZzI3Byb2ZpbGVWaWV3QmFzaWMnLCB2KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlZnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/actor/defs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/actor/deleteAccount.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/chat/bsky/actor/deleteAccount.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=deleteAccount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9hY3Rvci9kZWxldGVBY2NvdW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9jaGF0L2Jza3kvYWN0b3IvZGVsZXRlQWNjb3VudC5qcz82NDg5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVsZXRlQWNjb3VudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/actor/deleteAccount.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/actor/exportAccountData.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/chat/bsky/actor/exportAccountData.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=exportAccountData.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9hY3Rvci9leHBvcnRBY2NvdW50RGF0YS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY2hhdC9ic2t5L2FjdG9yL2V4cG9ydEFjY291bnREYXRhLmpzP2M0ZDEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1leHBvcnRBY2NvdW50RGF0YS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/actor/exportAccountData.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/defs.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/defs.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isMessageRef = isMessageRef;\nexports.validateMessageRef = validateMessageRef;\nexports.isMessageInput = isMessageInput;\nexports.validateMessageInput = validateMessageInput;\nexports.isMessageView = isMessageView;\nexports.validateMessageView = validateMessageView;\nexports.isDeletedMessageView = isDeletedMessageView;\nexports.validateDeletedMessageView = validateDeletedMessageView;\nexports.isMessageViewSender = isMessageViewSender;\nexports.validateMessageViewSender = validateMessageViewSender;\nexports.isConvoView = isConvoView;\nexports.validateConvoView = validateConvoView;\nexports.isLogBeginConvo = isLogBeginConvo;\nexports.validateLogBeginConvo = validateLogBeginConvo;\nexports.isLogLeaveConvo = isLogLeaveConvo;\nexports.validateLogLeaveConvo = validateLogLeaveConvo;\nexports.isLogCreateMessage = isLogCreateMessage;\nexports.validateLogCreateMessage = validateLogCreateMessage;\nexports.isLogDeleteMessage = isLogDeleteMessage;\nexports.validateLogDeleteMessage = validateLogDeleteMessage;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isMessageRef(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'chat.bsky.convo.defs#messageRef');\n}\nfunction validateMessageRef(v) {\n    return lexicons_1.lexicons.validate('chat.bsky.convo.defs#messageRef', v);\n}\nfunction isMessageInput(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'chat.bsky.convo.defs#messageInput');\n}\nfunction validateMessageInput(v) {\n    return lexicons_1.lexicons.validate('chat.bsky.convo.defs#messageInput', v);\n}\nfunction isMessageView(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'chat.bsky.convo.defs#messageView');\n}\nfunction validateMessageView(v) {\n    return lexicons_1.lexicons.validate('chat.bsky.convo.defs#messageView', v);\n}\nfunction isDeletedMessageView(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'chat.bsky.convo.defs#deletedMessageView');\n}\nfunction validateDeletedMessageView(v) {\n    return lexicons_1.lexicons.validate('chat.bsky.convo.defs#deletedMessageView', v);\n}\nfunction isMessageViewSender(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'chat.bsky.convo.defs#messageViewSender');\n}\nfunction validateMessageViewSender(v) {\n    return lexicons_1.lexicons.validate('chat.bsky.convo.defs#messageViewSender', v);\n}\nfunction isConvoView(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'chat.bsky.convo.defs#convoView');\n}\nfunction validateConvoView(v) {\n    return lexicons_1.lexicons.validate('chat.bsky.convo.defs#convoView', v);\n}\nfunction isLogBeginConvo(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'chat.bsky.convo.defs#logBeginConvo');\n}\nfunction validateLogBeginConvo(v) {\n    return lexicons_1.lexicons.validate('chat.bsky.convo.defs#logBeginConvo', v);\n}\nfunction isLogLeaveConvo(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'chat.bsky.convo.defs#logLeaveConvo');\n}\nfunction validateLogLeaveConvo(v) {\n    return lexicons_1.lexicons.validate('chat.bsky.convo.defs#logLeaveConvo', v);\n}\nfunction isLogCreateMessage(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'chat.bsky.convo.defs#logCreateMessage');\n}\nfunction validateLogCreateMessage(v) {\n    return lexicons_1.lexicons.validate('chat.bsky.convo.defs#logCreateMessage', v);\n}\nfunction isLogDeleteMessage(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'chat.bsky.convo.defs#logDeleteMessage');\n}\nfunction validateLogDeleteMessage(v) {\n    return lexicons_1.lexicons.validate('chat.bsky.convo.defs#logDeleteMessage', v);\n}\n//# sourceMappingURL=defs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9jb252by9kZWZzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQiwwQkFBMEI7QUFDMUIsc0JBQXNCO0FBQ3RCLDRCQUE0QjtBQUM1QixxQkFBcUI7QUFDckIsMkJBQTJCO0FBQzNCLDRCQUE0QjtBQUM1QixrQ0FBa0M7QUFDbEMsMkJBQTJCO0FBQzNCLGlDQUFpQztBQUNqQyxtQkFBbUI7QUFDbkIseUJBQXlCO0FBQ3pCLHVCQUF1QjtBQUN2Qiw2QkFBNkI7QUFDN0IsdUJBQXVCO0FBQ3ZCLDZCQUE2QjtBQUM3QiwwQkFBMEI7QUFDMUIsZ0NBQWdDO0FBQ2hDLDBCQUEwQjtBQUMxQixnQ0FBZ0M7QUFDaEMsZUFBZSxtQkFBTyxDQUFDLCtFQUFrQjtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBc0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9jb252by9kZWZzLmpzPzg1NmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzTWVzc2FnZVJlZiA9IGlzTWVzc2FnZVJlZjtcbmV4cG9ydHMudmFsaWRhdGVNZXNzYWdlUmVmID0gdmFsaWRhdGVNZXNzYWdlUmVmO1xuZXhwb3J0cy5pc01lc3NhZ2VJbnB1dCA9IGlzTWVzc2FnZUlucHV0O1xuZXhwb3J0cy52YWxpZGF0ZU1lc3NhZ2VJbnB1dCA9IHZhbGlkYXRlTWVzc2FnZUlucHV0O1xuZXhwb3J0cy5pc01lc3NhZ2VWaWV3ID0gaXNNZXNzYWdlVmlldztcbmV4cG9ydHMudmFsaWRhdGVNZXNzYWdlVmlldyA9IHZhbGlkYXRlTWVzc2FnZVZpZXc7XG5leHBvcnRzLmlzRGVsZXRlZE1lc3NhZ2VWaWV3ID0gaXNEZWxldGVkTWVzc2FnZVZpZXc7XG5leHBvcnRzLnZhbGlkYXRlRGVsZXRlZE1lc3NhZ2VWaWV3ID0gdmFsaWRhdGVEZWxldGVkTWVzc2FnZVZpZXc7XG5leHBvcnRzLmlzTWVzc2FnZVZpZXdTZW5kZXIgPSBpc01lc3NhZ2VWaWV3U2VuZGVyO1xuZXhwb3J0cy52YWxpZGF0ZU1lc3NhZ2VWaWV3U2VuZGVyID0gdmFsaWRhdGVNZXNzYWdlVmlld1NlbmRlcjtcbmV4cG9ydHMuaXNDb252b1ZpZXcgPSBpc0NvbnZvVmlldztcbmV4cG9ydHMudmFsaWRhdGVDb252b1ZpZXcgPSB2YWxpZGF0ZUNvbnZvVmlldztcbmV4cG9ydHMuaXNMb2dCZWdpbkNvbnZvID0gaXNMb2dCZWdpbkNvbnZvO1xuZXhwb3J0cy52YWxpZGF0ZUxvZ0JlZ2luQ29udm8gPSB2YWxpZGF0ZUxvZ0JlZ2luQ29udm87XG5leHBvcnRzLmlzTG9nTGVhdmVDb252byA9IGlzTG9nTGVhdmVDb252bztcbmV4cG9ydHMudmFsaWRhdGVMb2dMZWF2ZUNvbnZvID0gdmFsaWRhdGVMb2dMZWF2ZUNvbnZvO1xuZXhwb3J0cy5pc0xvZ0NyZWF0ZU1lc3NhZ2UgPSBpc0xvZ0NyZWF0ZU1lc3NhZ2U7XG5leHBvcnRzLnZhbGlkYXRlTG9nQ3JlYXRlTWVzc2FnZSA9IHZhbGlkYXRlTG9nQ3JlYXRlTWVzc2FnZTtcbmV4cG9ydHMuaXNMb2dEZWxldGVNZXNzYWdlID0gaXNMb2dEZWxldGVNZXNzYWdlO1xuZXhwb3J0cy52YWxpZGF0ZUxvZ0RlbGV0ZU1lc3NhZ2UgPSB2YWxpZGF0ZUxvZ0RlbGV0ZU1lc3NhZ2U7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vdXRpbFwiKTtcbmNvbnN0IGxleGljb25zXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbGV4aWNvbnNcIik7XG5mdW5jdGlvbiBpc01lc3NhZ2VSZWYodikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAnY2hhdC5ic2t5LmNvbnZvLmRlZnMjbWVzc2FnZVJlZicpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVNZXNzYWdlUmVmKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnY2hhdC5ic2t5LmNvbnZvLmRlZnMjbWVzc2FnZVJlZicsIHYpO1xufVxuZnVuY3Rpb24gaXNNZXNzYWdlSW5wdXQodikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAnY2hhdC5ic2t5LmNvbnZvLmRlZnMjbWVzc2FnZUlucHV0Jyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZU1lc3NhZ2VJbnB1dCh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2NoYXQuYnNreS5jb252by5kZWZzI21lc3NhZ2VJbnB1dCcsIHYpO1xufVxuZnVuY3Rpb24gaXNNZXNzYWdlVmlldyh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdjaGF0LmJza3kuY29udm8uZGVmcyNtZXNzYWdlVmlldycpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVNZXNzYWdlVmlldyh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2NoYXQuYnNreS5jb252by5kZWZzI21lc3NhZ2VWaWV3Jywgdik7XG59XG5mdW5jdGlvbiBpc0RlbGV0ZWRNZXNzYWdlVmlldyh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdjaGF0LmJza3kuY29udm8uZGVmcyNkZWxldGVkTWVzc2FnZVZpZXcnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlRGVsZXRlZE1lc3NhZ2VWaWV3KHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnY2hhdC5ic2t5LmNvbnZvLmRlZnMjZGVsZXRlZE1lc3NhZ2VWaWV3Jywgdik7XG59XG5mdW5jdGlvbiBpc01lc3NhZ2VWaWV3U2VuZGVyKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2NoYXQuYnNreS5jb252by5kZWZzI21lc3NhZ2VWaWV3U2VuZGVyJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZU1lc3NhZ2VWaWV3U2VuZGVyKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnY2hhdC5ic2t5LmNvbnZvLmRlZnMjbWVzc2FnZVZpZXdTZW5kZXInLCB2KTtcbn1cbmZ1bmN0aW9uIGlzQ29udm9WaWV3KHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2NoYXQuYnNreS5jb252by5kZWZzI2NvbnZvVmlldycpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVDb252b1ZpZXcodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdjaGF0LmJza3kuY29udm8uZGVmcyNjb252b1ZpZXcnLCB2KTtcbn1cbmZ1bmN0aW9uIGlzTG9nQmVnaW5Db252byh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdjaGF0LmJza3kuY29udm8uZGVmcyNsb2dCZWdpbkNvbnZvJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZUxvZ0JlZ2luQ29udm8odikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdjaGF0LmJza3kuY29udm8uZGVmcyNsb2dCZWdpbkNvbnZvJywgdik7XG59XG5mdW5jdGlvbiBpc0xvZ0xlYXZlQ29udm8odikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAnY2hhdC5ic2t5LmNvbnZvLmRlZnMjbG9nTGVhdmVDb252bycpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVMb2dMZWF2ZUNvbnZvKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnY2hhdC5ic2t5LmNvbnZvLmRlZnMjbG9nTGVhdmVDb252bycsIHYpO1xufVxuZnVuY3Rpb24gaXNMb2dDcmVhdGVNZXNzYWdlKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2NoYXQuYnNreS5jb252by5kZWZzI2xvZ0NyZWF0ZU1lc3NhZ2UnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlTG9nQ3JlYXRlTWVzc2FnZSh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2NoYXQuYnNreS5jb252by5kZWZzI2xvZ0NyZWF0ZU1lc3NhZ2UnLCB2KTtcbn1cbmZ1bmN0aW9uIGlzTG9nRGVsZXRlTWVzc2FnZSh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdjaGF0LmJza3kuY29udm8uZGVmcyNsb2dEZWxldGVNZXNzYWdlJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZUxvZ0RlbGV0ZU1lc3NhZ2Uodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdjaGF0LmJza3kuY29udm8uZGVmcyNsb2dEZWxldGVNZXNzYWdlJywgdik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWZzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/defs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/deleteMessageForSelf.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/deleteMessageForSelf.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=deleteMessageForSelf.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9jb252by9kZWxldGVNZXNzYWdlRm9yU2VsZi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY2hhdC9ic2t5L2NvbnZvL2RlbGV0ZU1lc3NhZ2VGb3JTZWxmLmpzPzNiZjQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWxldGVNZXNzYWdlRm9yU2VsZi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/deleteMessageForSelf.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/getConvo.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/getConvo.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getConvo.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9jb252by9nZXRDb252by5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY2hhdC9ic2t5L2NvbnZvL2dldENvbnZvLmpzPzYyMDQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRDb252by5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/getConvo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/getConvoForMembers.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/getConvoForMembers.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getConvoForMembers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9jb252by9nZXRDb252b0Zvck1lbWJlcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9jb252by9nZXRDb252b0Zvck1lbWJlcnMuanM/MTg2YSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldENvbnZvRm9yTWVtYmVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/getConvoForMembers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/getLog.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/getLog.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getLog.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9jb252by9nZXRMb2cuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9jb252by9nZXRMb2cuanM/MzgzNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldExvZy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/getLog.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/getMessages.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/getMessages.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getMessages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9jb252by9nZXRNZXNzYWdlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY2hhdC9ic2t5L2NvbnZvL2dldE1lc3NhZ2VzLmpzP2RmY2MiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRNZXNzYWdlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/getMessages.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/leaveConvo.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/leaveConvo.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=leaveConvo.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9jb252by9sZWF2ZUNvbnZvLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9jaGF0L2Jza3kvY29udm8vbGVhdmVDb252by5qcz9mOWU0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGVhdmVDb252by5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/leaveConvo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/listConvos.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/listConvos.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=listConvos.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9jb252by9saXN0Q29udm9zLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9jaGF0L2Jza3kvY29udm8vbGlzdENvbnZvcy5qcz81NzU1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGlzdENvbnZvcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/listConvos.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/muteConvo.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/muteConvo.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=muteConvo.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9jb252by9tdXRlQ29udm8uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9jb252by9tdXRlQ29udm8uanM/ZWZlNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW11dGVDb252by5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/muteConvo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/sendMessage.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/sendMessage.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=sendMessage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9jb252by9zZW5kTWVzc2FnZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY2hhdC9ic2t5L2NvbnZvL3NlbmRNZXNzYWdlLmpzPzQ4ZDAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZW5kTWVzc2FnZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/sendMessage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/sendMessageBatch.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/sendMessageBatch.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nexports.isBatchItem = isBatchItem;\nexports.validateBatchItem = validateBatchItem;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction toKnownErr(e) {\n    return e;\n}\nfunction isBatchItem(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'chat.bsky.convo.sendMessageBatch#batchItem');\n}\nfunction validateBatchItem(v) {\n    return lexicons_1.lexicons.validate('chat.bsky.convo.sendMessageBatch#batchItem', v);\n}\n//# sourceMappingURL=sendMessageBatch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9jb252by9zZW5kTWVzc2FnZUJhdGNoLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQixtQkFBbUI7QUFDbkIseUJBQXlCO0FBQ3pCLGVBQWUsbUJBQU8sQ0FBQywrRUFBa0I7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsdUZBQXNCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9jaGF0L2Jza3kvY29udm8vc2VuZE1lc3NhZ2VCYXRjaC5qcz80OTRhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmV4cG9ydHMuaXNCYXRjaEl0ZW0gPSBpc0JhdGNoSXRlbTtcbmV4cG9ydHMudmFsaWRhdGVCYXRjaEl0ZW0gPSB2YWxpZGF0ZUJhdGNoSXRlbTtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi91dGlsXCIpO1xuY29uc3QgbGV4aWNvbnNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9sZXhpY29uc1wiKTtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuZnVuY3Rpb24gaXNCYXRjaEl0ZW0odikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAnY2hhdC5ic2t5LmNvbnZvLnNlbmRNZXNzYWdlQmF0Y2gjYmF0Y2hJdGVtJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZUJhdGNoSXRlbSh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2NoYXQuYnNreS5jb252by5zZW5kTWVzc2FnZUJhdGNoI2JhdGNoSXRlbScsIHYpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VuZE1lc3NhZ2VCYXRjaC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/sendMessageBatch.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/unmuteConvo.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/unmuteConvo.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=unmuteConvo.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9jb252by91bm11dGVDb252by5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY2hhdC9ic2t5L2NvbnZvL3VubXV0ZUNvbnZvLmpzP2JjZTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11bm11dGVDb252by5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/unmuteConvo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/updateRead.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/updateRead.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=updateRead.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9jb252by91cGRhdGVSZWFkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9jaGF0L2Jza3kvY29udm8vdXBkYXRlUmVhZC5qcz9mYTU5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXBkYXRlUmVhZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/convo/updateRead.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/moderation/getActorMetadata.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/chat/bsky/moderation/getActorMetadata.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nexports.isMetadata = isMetadata;\nexports.validateMetadata = validateMetadata;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction toKnownErr(e) {\n    return e;\n}\nfunction isMetadata(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'chat.bsky.moderation.getActorMetadata#metadata');\n}\nfunction validateMetadata(v) {\n    return lexicons_1.lexicons.validate('chat.bsky.moderation.getActorMetadata#metadata', v);\n}\n//# sourceMappingURL=getActorMetadata.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9tb2RlcmF0aW9uL2dldEFjdG9yTWV0YWRhdGEuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCLGtCQUFrQjtBQUNsQix3QkFBd0I7QUFDeEIsZUFBZSxtQkFBTyxDQUFDLCtFQUFrQjtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBc0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9tb2RlcmF0aW9uL2dldEFjdG9yTWV0YWRhdGEuanM/ZjYwYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5leHBvcnRzLmlzTWV0YWRhdGEgPSBpc01ldGFkYXRhO1xuZXhwb3J0cy52YWxpZGF0ZU1ldGFkYXRhID0gdmFsaWRhdGVNZXRhZGF0YTtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi91dGlsXCIpO1xuY29uc3QgbGV4aWNvbnNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9sZXhpY29uc1wiKTtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuZnVuY3Rpb24gaXNNZXRhZGF0YSh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdjaGF0LmJza3kubW9kZXJhdGlvbi5nZXRBY3Rvck1ldGFkYXRhI21ldGFkYXRhJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZU1ldGFkYXRhKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnY2hhdC5ic2t5Lm1vZGVyYXRpb24uZ2V0QWN0b3JNZXRhZGF0YSNtZXRhZGF0YScsIHYpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0QWN0b3JNZXRhZGF0YS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/moderation/getActorMetadata.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/moderation/getMessageContext.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/chat/bsky/moderation/getMessageContext.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getMessageContext.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9tb2RlcmF0aW9uL2dldE1lc3NhZ2VDb250ZXh0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9jaGF0L2Jza3kvbW9kZXJhdGlvbi9nZXRNZXNzYWdlQ29udGV4dC5qcz8xOWQwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0TWVzc2FnZUNvbnRleHQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/moderation/getMessageContext.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/moderation/updateActorAccess.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/chat/bsky/moderation/updateActorAccess.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=updateActorAccess.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NoYXQvYnNreS9tb2RlcmF0aW9uL3VwZGF0ZUFjdG9yQWNjZXNzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9jaGF0L2Jza3kvbW9kZXJhdGlvbi91cGRhdGVBY3RvckFjY2Vzcy5qcz85YzkxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXBkYXRlQWN0b3JBY2Nlc3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/chat/bsky/moderation/updateActorAccess.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/defs.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/admin/defs.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isStatusAttr = isStatusAttr;\nexports.validateStatusAttr = validateStatusAttr;\nexports.isAccountView = isAccountView;\nexports.validateAccountView = validateAccountView;\nexports.isRepoRef = isRepoRef;\nexports.validateRepoRef = validateRepoRef;\nexports.isRepoBlobRef = isRepoBlobRef;\nexports.validateRepoBlobRef = validateRepoBlobRef;\nexports.isThreatSignature = isThreatSignature;\nexports.validateThreatSignature = validateThreatSignature;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isStatusAttr(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.admin.defs#statusAttr');\n}\nfunction validateStatusAttr(v) {\n    return lexicons_1.lexicons.validate('com.atproto.admin.defs#statusAttr', v);\n}\nfunction isAccountView(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.admin.defs#accountView');\n}\nfunction validateAccountView(v) {\n    return lexicons_1.lexicons.validate('com.atproto.admin.defs#accountView', v);\n}\nfunction isRepoRef(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.admin.defs#repoRef');\n}\nfunction validateRepoRef(v) {\n    return lexicons_1.lexicons.validate('com.atproto.admin.defs#repoRef', v);\n}\nfunction isRepoBlobRef(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.admin.defs#repoBlobRef');\n}\nfunction validateRepoBlobRef(v) {\n    return lexicons_1.lexicons.validate('com.atproto.admin.defs#repoBlobRef', v);\n}\nfunction isThreatSignature(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.admin.defs#threatSignature');\n}\nfunction validateThreatSignature(v) {\n    return lexicons_1.lexicons.validate('com.atproto.admin.defs#threatSignature', v);\n}\n//# sourceMappingURL=defs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2FkbWluL2RlZnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CO0FBQ3BCLDBCQUEwQjtBQUMxQixxQkFBcUI7QUFDckIsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQix1QkFBdUI7QUFDdkIscUJBQXFCO0FBQ3JCLDJCQUEyQjtBQUMzQix5QkFBeUI7QUFDekIsK0JBQStCO0FBQy9CLGVBQWUsbUJBQU8sQ0FBQywrRUFBa0I7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsdUZBQXNCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vYWRtaW4vZGVmcy5qcz9kMWVkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc1N0YXR1c0F0dHIgPSBpc1N0YXR1c0F0dHI7XG5leHBvcnRzLnZhbGlkYXRlU3RhdHVzQXR0ciA9IHZhbGlkYXRlU3RhdHVzQXR0cjtcbmV4cG9ydHMuaXNBY2NvdW50VmlldyA9IGlzQWNjb3VudFZpZXc7XG5leHBvcnRzLnZhbGlkYXRlQWNjb3VudFZpZXcgPSB2YWxpZGF0ZUFjY291bnRWaWV3O1xuZXhwb3J0cy5pc1JlcG9SZWYgPSBpc1JlcG9SZWY7XG5leHBvcnRzLnZhbGlkYXRlUmVwb1JlZiA9IHZhbGlkYXRlUmVwb1JlZjtcbmV4cG9ydHMuaXNSZXBvQmxvYlJlZiA9IGlzUmVwb0Jsb2JSZWY7XG5leHBvcnRzLnZhbGlkYXRlUmVwb0Jsb2JSZWYgPSB2YWxpZGF0ZVJlcG9CbG9iUmVmO1xuZXhwb3J0cy5pc1RocmVhdFNpZ25hdHVyZSA9IGlzVGhyZWF0U2lnbmF0dXJlO1xuZXhwb3J0cy52YWxpZGF0ZVRocmVhdFNpZ25hdHVyZSA9IHZhbGlkYXRlVGhyZWF0U2lnbmF0dXJlO1xuY29uc3QgdXRpbF8xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL3V0aWxcIik7XG5jb25zdCBsZXhpY29uc18xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL2xleGljb25zXCIpO1xuZnVuY3Rpb24gaXNTdGF0dXNBdHRyKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2NvbS5hdHByb3RvLmFkbWluLmRlZnMjc3RhdHVzQXR0cicpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVTdGF0dXNBdHRyKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnY29tLmF0cHJvdG8uYWRtaW4uZGVmcyNzdGF0dXNBdHRyJywgdik7XG59XG5mdW5jdGlvbiBpc0FjY291bnRWaWV3KHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2NvbS5hdHByb3RvLmFkbWluLmRlZnMjYWNjb3VudFZpZXcnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlQWNjb3VudFZpZXcodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdjb20uYXRwcm90by5hZG1pbi5kZWZzI2FjY291bnRWaWV3Jywgdik7XG59XG5mdW5jdGlvbiBpc1JlcG9SZWYodikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAnY29tLmF0cHJvdG8uYWRtaW4uZGVmcyNyZXBvUmVmJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZVJlcG9SZWYodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdjb20uYXRwcm90by5hZG1pbi5kZWZzI3JlcG9SZWYnLCB2KTtcbn1cbmZ1bmN0aW9uIGlzUmVwb0Jsb2JSZWYodikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAnY29tLmF0cHJvdG8uYWRtaW4uZGVmcyNyZXBvQmxvYlJlZicpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVSZXBvQmxvYlJlZih2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2NvbS5hdHByb3RvLmFkbWluLmRlZnMjcmVwb0Jsb2JSZWYnLCB2KTtcbn1cbmZ1bmN0aW9uIGlzVGhyZWF0U2lnbmF0dXJlKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2NvbS5hdHByb3RvLmFkbWluLmRlZnMjdGhyZWF0U2lnbmF0dXJlJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZVRocmVhdFNpZ25hdHVyZSh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2NvbS5hdHByb3RvLmFkbWluLmRlZnMjdGhyZWF0U2lnbmF0dXJlJywgdik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWZzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/defs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/deleteAccount.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/admin/deleteAccount.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=deleteAccount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2FkbWluL2RlbGV0ZUFjY291bnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2FkbWluL2RlbGV0ZUFjY291bnQuanM/ZDNiZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlbGV0ZUFjY291bnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/deleteAccount.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/disableAccountInvites.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/admin/disableAccountInvites.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=disableAccountInvites.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2FkbWluL2Rpc2FibGVBY2NvdW50SW52aXRlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vYWRtaW4vZGlzYWJsZUFjY291bnRJbnZpdGVzLmpzP2VjYWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kaXNhYmxlQWNjb3VudEludml0ZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/disableAccountInvites.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/disableInviteCodes.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/admin/disableInviteCodes.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=disableInviteCodes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2FkbWluL2Rpc2FibGVJbnZpdGVDb2Rlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vYWRtaW4vZGlzYWJsZUludml0ZUNvZGVzLmpzP2M0NjYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kaXNhYmxlSW52aXRlQ29kZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/disableInviteCodes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/enableAccountInvites.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/admin/enableAccountInvites.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=enableAccountInvites.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2FkbWluL2VuYWJsZUFjY291bnRJbnZpdGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9jb20vYXRwcm90by9hZG1pbi9lbmFibGVBY2NvdW50SW52aXRlcy5qcz8yYjk3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW5hYmxlQWNjb3VudEludml0ZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/enableAccountInvites.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/getAccountInfo.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/admin/getAccountInfo.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getAccountInfo.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2FkbWluL2dldEFjY291bnRJbmZvLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9jb20vYXRwcm90by9hZG1pbi9nZXRBY2NvdW50SW5mby5qcz9mNWZhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0QWNjb3VudEluZm8uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/getAccountInfo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/getAccountInfos.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/admin/getAccountInfos.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getAccountInfos.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2FkbWluL2dldEFjY291bnRJbmZvcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vYWRtaW4vZ2V0QWNjb3VudEluZm9zLmpzPzFhYmMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRBY2NvdW50SW5mb3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/getAccountInfos.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/getInviteCodes.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/admin/getInviteCodes.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getInviteCodes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2FkbWluL2dldEludml0ZUNvZGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9jb20vYXRwcm90by9hZG1pbi9nZXRJbnZpdGVDb2Rlcy5qcz8xODA4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0SW52aXRlQ29kZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/getInviteCodes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/getSubjectStatus.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/admin/getSubjectStatus.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getSubjectStatus.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2FkbWluL2dldFN1YmplY3RTdGF0dXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2FkbWluL2dldFN1YmplY3RTdGF0dXMuanM/OWRmZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldFN1YmplY3RTdGF0dXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/getSubjectStatus.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/searchAccounts.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/admin/searchAccounts.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=searchAccounts.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2FkbWluL3NlYXJjaEFjY291bnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9jb20vYXRwcm90by9hZG1pbi9zZWFyY2hBY2NvdW50cy5qcz9iMTAyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VhcmNoQWNjb3VudHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/searchAccounts.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/sendEmail.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/admin/sendEmail.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=sendEmail.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2FkbWluL3NlbmRFbWFpbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vYWRtaW4vc2VuZEVtYWlsLmpzPzEyOGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZW5kRW1haWwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/sendEmail.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/updateAccountEmail.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/admin/updateAccountEmail.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=updateAccountEmail.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2FkbWluL3VwZGF0ZUFjY291bnRFbWFpbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vYWRtaW4vdXBkYXRlQWNjb3VudEVtYWlsLmpzP2FlN2IiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11cGRhdGVBY2NvdW50RW1haWwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/updateAccountEmail.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/updateAccountHandle.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/admin/updateAccountHandle.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=updateAccountHandle.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2FkbWluL3VwZGF0ZUFjY291bnRIYW5kbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2FkbWluL3VwZGF0ZUFjY291bnRIYW5kbGUuanM/YWY5MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVwZGF0ZUFjY291bnRIYW5kbGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/updateAccountHandle.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/updateAccountPassword.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/admin/updateAccountPassword.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=updateAccountPassword.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2FkbWluL3VwZGF0ZUFjY291bnRQYXNzd29yZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vYWRtaW4vdXBkYXRlQWNjb3VudFBhc3N3b3JkLmpzPzVhYzYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11cGRhdGVBY2NvdW50UGFzc3dvcmQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/updateAccountPassword.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/updateSubjectStatus.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/admin/updateSubjectStatus.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=updateSubjectStatus.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2FkbWluL3VwZGF0ZVN1YmplY3RTdGF0dXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2FkbWluL3VwZGF0ZVN1YmplY3RTdGF0dXMuanM/Yzc1NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVwZGF0ZVN1YmplY3RTdGF0dXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/admin/updateSubjectStatus.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/identity/getRecommendedDidCredentials.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/identity/getRecommendedDidCredentials.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getRecommendedDidCredentials.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2lkZW50aXR5L2dldFJlY29tbWVuZGVkRGlkQ3JlZGVudGlhbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2lkZW50aXR5L2dldFJlY29tbWVuZGVkRGlkQ3JlZGVudGlhbHMuanM/NDE0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldFJlY29tbWVuZGVkRGlkQ3JlZGVudGlhbHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/identity/getRecommendedDidCredentials.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/identity/requestPlcOperationSignature.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/identity/requestPlcOperationSignature.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=requestPlcOperationSignature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2lkZW50aXR5L3JlcXVlc3RQbGNPcGVyYXRpb25TaWduYXR1cmUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2lkZW50aXR5L3JlcXVlc3RQbGNPcGVyYXRpb25TaWduYXR1cmUuanM/MzQ4YSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlcXVlc3RQbGNPcGVyYXRpb25TaWduYXR1cmUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/identity/requestPlcOperationSignature.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/identity/resolveHandle.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/identity/resolveHandle.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=resolveHandle.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2lkZW50aXR5L3Jlc29sdmVIYW5kbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2lkZW50aXR5L3Jlc29sdmVIYW5kbGUuanM/NTQ2MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlc29sdmVIYW5kbGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/identity/resolveHandle.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/identity/signPlcOperation.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/identity/signPlcOperation.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=signPlcOperation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2lkZW50aXR5L3NpZ25QbGNPcGVyYXRpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2lkZW50aXR5L3NpZ25QbGNPcGVyYXRpb24uanM/OWYwOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNpZ25QbGNPcGVyYXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/identity/signPlcOperation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/identity/submitPlcOperation.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/identity/submitPlcOperation.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=submitPlcOperation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2lkZW50aXR5L3N1Ym1pdFBsY09wZXJhdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vaWRlbnRpdHkvc3VibWl0UGxjT3BlcmF0aW9uLmpzP2Q5NmMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdWJtaXRQbGNPcGVyYXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/identity/submitPlcOperation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/identity/updateHandle.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/identity/updateHandle.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=updateHandle.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2lkZW50aXR5L3VwZGF0ZUhhbmRsZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vaWRlbnRpdHkvdXBkYXRlSGFuZGxlLmpzPzY3MzAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11cGRhdGVIYW5kbGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/identity/updateHandle.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/label/defs.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/label/defs.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isLabel = isLabel;\nexports.validateLabel = validateLabel;\nexports.isSelfLabels = isSelfLabels;\nexports.validateSelfLabels = validateSelfLabels;\nexports.isSelfLabel = isSelfLabel;\nexports.validateSelfLabel = validateSelfLabel;\nexports.isLabelValueDefinition = isLabelValueDefinition;\nexports.validateLabelValueDefinition = validateLabelValueDefinition;\nexports.isLabelValueDefinitionStrings = isLabelValueDefinitionStrings;\nexports.validateLabelValueDefinitionStrings = validateLabelValueDefinitionStrings;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isLabel(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.label.defs#label');\n}\nfunction validateLabel(v) {\n    return lexicons_1.lexicons.validate('com.atproto.label.defs#label', v);\n}\nfunction isSelfLabels(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.label.defs#selfLabels');\n}\nfunction validateSelfLabels(v) {\n    return lexicons_1.lexicons.validate('com.atproto.label.defs#selfLabels', v);\n}\nfunction isSelfLabel(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.label.defs#selfLabel');\n}\nfunction validateSelfLabel(v) {\n    return lexicons_1.lexicons.validate('com.atproto.label.defs#selfLabel', v);\n}\nfunction isLabelValueDefinition(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.label.defs#labelValueDefinition');\n}\nfunction validateLabelValueDefinition(v) {\n    return lexicons_1.lexicons.validate('com.atproto.label.defs#labelValueDefinition', v);\n}\nfunction isLabelValueDefinitionStrings(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.label.defs#labelValueDefinitionStrings');\n}\nfunction validateLabelValueDefinitionStrings(v) {\n    return lexicons_1.lexicons.validate('com.atproto.label.defs#labelValueDefinitionStrings', v);\n}\n//# sourceMappingURL=defs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2xhYmVsL2RlZnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmLHFCQUFxQjtBQUNyQixvQkFBb0I7QUFDcEIsMEJBQTBCO0FBQzFCLG1CQUFtQjtBQUNuQix5QkFBeUI7QUFDekIsOEJBQThCO0FBQzlCLG9DQUFvQztBQUNwQyxxQ0FBcUM7QUFDckMsMkNBQTJDO0FBQzNDLGVBQWUsbUJBQU8sQ0FBQywrRUFBa0I7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsdUZBQXNCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vbGFiZWwvZGVmcy5qcz84ZmY2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc0xhYmVsID0gaXNMYWJlbDtcbmV4cG9ydHMudmFsaWRhdGVMYWJlbCA9IHZhbGlkYXRlTGFiZWw7XG5leHBvcnRzLmlzU2VsZkxhYmVscyA9IGlzU2VsZkxhYmVscztcbmV4cG9ydHMudmFsaWRhdGVTZWxmTGFiZWxzID0gdmFsaWRhdGVTZWxmTGFiZWxzO1xuZXhwb3J0cy5pc1NlbGZMYWJlbCA9IGlzU2VsZkxhYmVsO1xuZXhwb3J0cy52YWxpZGF0ZVNlbGZMYWJlbCA9IHZhbGlkYXRlU2VsZkxhYmVsO1xuZXhwb3J0cy5pc0xhYmVsVmFsdWVEZWZpbml0aW9uID0gaXNMYWJlbFZhbHVlRGVmaW5pdGlvbjtcbmV4cG9ydHMudmFsaWRhdGVMYWJlbFZhbHVlRGVmaW5pdGlvbiA9IHZhbGlkYXRlTGFiZWxWYWx1ZURlZmluaXRpb247XG5leHBvcnRzLmlzTGFiZWxWYWx1ZURlZmluaXRpb25TdHJpbmdzID0gaXNMYWJlbFZhbHVlRGVmaW5pdGlvblN0cmluZ3M7XG5leHBvcnRzLnZhbGlkYXRlTGFiZWxWYWx1ZURlZmluaXRpb25TdHJpbmdzID0gdmFsaWRhdGVMYWJlbFZhbHVlRGVmaW5pdGlvblN0cmluZ3M7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vdXRpbFwiKTtcbmNvbnN0IGxleGljb25zXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbGV4aWNvbnNcIik7XG5mdW5jdGlvbiBpc0xhYmVsKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2NvbS5hdHByb3RvLmxhYmVsLmRlZnMjbGFiZWwnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlTGFiZWwodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdjb20uYXRwcm90by5sYWJlbC5kZWZzI2xhYmVsJywgdik7XG59XG5mdW5jdGlvbiBpc1NlbGZMYWJlbHModikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAnY29tLmF0cHJvdG8ubGFiZWwuZGVmcyNzZWxmTGFiZWxzJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZVNlbGZMYWJlbHModikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdjb20uYXRwcm90by5sYWJlbC5kZWZzI3NlbGZMYWJlbHMnLCB2KTtcbn1cbmZ1bmN0aW9uIGlzU2VsZkxhYmVsKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2NvbS5hdHByb3RvLmxhYmVsLmRlZnMjc2VsZkxhYmVsJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZVNlbGZMYWJlbCh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2NvbS5hdHByb3RvLmxhYmVsLmRlZnMjc2VsZkxhYmVsJywgdik7XG59XG5mdW5jdGlvbiBpc0xhYmVsVmFsdWVEZWZpbml0aW9uKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2NvbS5hdHByb3RvLmxhYmVsLmRlZnMjbGFiZWxWYWx1ZURlZmluaXRpb24nKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlTGFiZWxWYWx1ZURlZmluaXRpb24odikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdjb20uYXRwcm90by5sYWJlbC5kZWZzI2xhYmVsVmFsdWVEZWZpbml0aW9uJywgdik7XG59XG5mdW5jdGlvbiBpc0xhYmVsVmFsdWVEZWZpbml0aW9uU3RyaW5ncyh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdjb20uYXRwcm90by5sYWJlbC5kZWZzI2xhYmVsVmFsdWVEZWZpbml0aW9uU3RyaW5ncycpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVMYWJlbFZhbHVlRGVmaW5pdGlvblN0cmluZ3Modikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdjb20uYXRwcm90by5sYWJlbC5kZWZzI2xhYmVsVmFsdWVEZWZpbml0aW9uU3RyaW5ncycsIHYpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVmcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/label/defs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/label/queryLabels.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/label/queryLabels.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=queryLabels.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2xhYmVsL3F1ZXJ5TGFiZWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9jb20vYXRwcm90by9sYWJlbC9xdWVyeUxhYmVscy5qcz85NjYzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cXVlcnlMYWJlbHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/label/queryLabels.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/label/subscribeLabels.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/label/subscribeLabels.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isLabels = isLabels;\nexports.validateLabels = validateLabels;\nexports.isInfo = isInfo;\nexports.validateInfo = validateInfo;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isLabels(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.label.subscribeLabels#labels');\n}\nfunction validateLabels(v) {\n    return lexicons_1.lexicons.validate('com.atproto.label.subscribeLabels#labels', v);\n}\nfunction isInfo(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.label.subscribeLabels#info');\n}\nfunction validateInfo(v) {\n    return lexicons_1.lexicons.validate('com.atproto.label.subscribeLabels#info', v);\n}\n//# sourceMappingURL=subscribeLabels.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2xhYmVsL3N1YnNjcmliZUxhYmVscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEIsc0JBQXNCO0FBQ3RCLGNBQWM7QUFDZCxvQkFBb0I7QUFDcEIsZUFBZSxtQkFBTyxDQUFDLCtFQUFrQjtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBc0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9jb20vYXRwcm90by9sYWJlbC9zdWJzY3JpYmVMYWJlbHMuanM/ZGIyOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNMYWJlbHMgPSBpc0xhYmVscztcbmV4cG9ydHMudmFsaWRhdGVMYWJlbHMgPSB2YWxpZGF0ZUxhYmVscztcbmV4cG9ydHMuaXNJbmZvID0gaXNJbmZvO1xuZXhwb3J0cy52YWxpZGF0ZUluZm8gPSB2YWxpZGF0ZUluZm87XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vdXRpbFwiKTtcbmNvbnN0IGxleGljb25zXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbGV4aWNvbnNcIik7XG5mdW5jdGlvbiBpc0xhYmVscyh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdjb20uYXRwcm90by5sYWJlbC5zdWJzY3JpYmVMYWJlbHMjbGFiZWxzJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZUxhYmVscyh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2NvbS5hdHByb3RvLmxhYmVsLnN1YnNjcmliZUxhYmVscyNsYWJlbHMnLCB2KTtcbn1cbmZ1bmN0aW9uIGlzSW5mbyh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdjb20uYXRwcm90by5sYWJlbC5zdWJzY3JpYmVMYWJlbHMjaW5mbycpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVJbmZvKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnY29tLmF0cHJvdG8ubGFiZWwuc3Vic2NyaWJlTGFiZWxzI2luZm8nLCB2KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN1YnNjcmliZUxhYmVscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/label/subscribeLabels.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/lexicon/schema.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/lexicon/schema.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isRecord = isRecord;\nexports.validateRecord = validateRecord;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isRecord(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        (v.$type === 'com.atproto.lexicon.schema#main' ||\n            v.$type === 'com.atproto.lexicon.schema'));\n}\nfunction validateRecord(v) {\n    return lexicons_1.lexicons.validate('com.atproto.lexicon.schema#main', v);\n}\n//# sourceMappingURL=schema.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL2xleGljb24vc2NoZW1hLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQjtBQUNoQixzQkFBc0I7QUFDdEIsZUFBZSxtQkFBTyxDQUFDLCtFQUFrQjtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBc0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vbGV4aWNvbi9zY2hlbWEuanM/MmNmZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNSZWNvcmQgPSBpc1JlY29yZDtcbmV4cG9ydHMudmFsaWRhdGVSZWNvcmQgPSB2YWxpZGF0ZVJlY29yZDtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi91dGlsXCIpO1xuY29uc3QgbGV4aWNvbnNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9sZXhpY29uc1wiKTtcbmZ1bmN0aW9uIGlzUmVjb3JkKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgKHYuJHR5cGUgPT09ICdjb20uYXRwcm90by5sZXhpY29uLnNjaGVtYSNtYWluJyB8fFxuICAgICAgICAgICAgdi4kdHlwZSA9PT0gJ2NvbS5hdHByb3RvLmxleGljb24uc2NoZW1hJykpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVSZWNvcmQodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdjb20uYXRwcm90by5sZXhpY29uLnNjaGVtYSNtYWluJywgdik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zY2hlbWEuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/lexicon/schema.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/moderation/createReport.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/moderation/createReport.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=createReport.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL21vZGVyYXRpb24vY3JlYXRlUmVwb3J0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9jb20vYXRwcm90by9tb2RlcmF0aW9uL2NyZWF0ZVJlcG9ydC5qcz9iNzg3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3JlYXRlUmVwb3J0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/moderation/createReport.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/moderation/defs.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/moderation/defs.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.REASONAPPEAL = exports.REASONOTHER = exports.REASONRUDE = exports.REASONSEXUAL = exports.REASONMISLEADING = exports.REASONVIOLATION = exports.REASONSPAM = void 0;\n/** Spam: frequent unwanted promotion, replies, mentions */\nexports.REASONSPAM = 'com.atproto.moderation.defs#reasonSpam';\n/** Direct violation of server rules, laws, terms of service */\nexports.REASONVIOLATION = 'com.atproto.moderation.defs#reasonViolation';\n/** Misleading identity, affiliation, or content */\nexports.REASONMISLEADING = 'com.atproto.moderation.defs#reasonMisleading';\n/** Unwanted or mislabeled sexual content */\nexports.REASONSEXUAL = 'com.atproto.moderation.defs#reasonSexual';\n/** Rude, harassing, explicit, or otherwise unwelcoming behavior */\nexports.REASONRUDE = 'com.atproto.moderation.defs#reasonRude';\n/** Other: reports not falling under another report category */\nexports.REASONOTHER = 'com.atproto.moderation.defs#reasonOther';\n/** Appeal: appeal a previously taken moderation action */\nexports.REASONAPPEAL = 'com.atproto.moderation.defs#reasonAppeal';\n//# sourceMappingURL=defs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL21vZGVyYXRpb24vZGVmcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQkFBb0IsR0FBRyxtQkFBbUIsR0FBRyxrQkFBa0IsR0FBRyxvQkFBb0IsR0FBRyx3QkFBd0IsR0FBRyx1QkFBdUIsR0FBRyxrQkFBa0I7QUFDaEs7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSxvQkFBb0I7QUFDcEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vbW9kZXJhdGlvbi9kZWZzLmpzP2I1NDUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJFQVNPTkFQUEVBTCA9IGV4cG9ydHMuUkVBU09OT1RIRVIgPSBleHBvcnRzLlJFQVNPTlJVREUgPSBleHBvcnRzLlJFQVNPTlNFWFVBTCA9IGV4cG9ydHMuUkVBU09OTUlTTEVBRElORyA9IGV4cG9ydHMuUkVBU09OVklPTEFUSU9OID0gZXhwb3J0cy5SRUFTT05TUEFNID0gdm9pZCAwO1xuLyoqIFNwYW06IGZyZXF1ZW50IHVud2FudGVkIHByb21vdGlvbiwgcmVwbGllcywgbWVudGlvbnMgKi9cbmV4cG9ydHMuUkVBU09OU1BBTSA9ICdjb20uYXRwcm90by5tb2RlcmF0aW9uLmRlZnMjcmVhc29uU3BhbSc7XG4vKiogRGlyZWN0IHZpb2xhdGlvbiBvZiBzZXJ2ZXIgcnVsZXMsIGxhd3MsIHRlcm1zIG9mIHNlcnZpY2UgKi9cbmV4cG9ydHMuUkVBU09OVklPTEFUSU9OID0gJ2NvbS5hdHByb3RvLm1vZGVyYXRpb24uZGVmcyNyZWFzb25WaW9sYXRpb24nO1xuLyoqIE1pc2xlYWRpbmcgaWRlbnRpdHksIGFmZmlsaWF0aW9uLCBvciBjb250ZW50ICovXG5leHBvcnRzLlJFQVNPTk1JU0xFQURJTkcgPSAnY29tLmF0cHJvdG8ubW9kZXJhdGlvbi5kZWZzI3JlYXNvbk1pc2xlYWRpbmcnO1xuLyoqIFVud2FudGVkIG9yIG1pc2xhYmVsZWQgc2V4dWFsIGNvbnRlbnQgKi9cbmV4cG9ydHMuUkVBU09OU0VYVUFMID0gJ2NvbS5hdHByb3RvLm1vZGVyYXRpb24uZGVmcyNyZWFzb25TZXh1YWwnO1xuLyoqIFJ1ZGUsIGhhcmFzc2luZywgZXhwbGljaXQsIG9yIG90aGVyd2lzZSB1bndlbGNvbWluZyBiZWhhdmlvciAqL1xuZXhwb3J0cy5SRUFTT05SVURFID0gJ2NvbS5hdHByb3RvLm1vZGVyYXRpb24uZGVmcyNyZWFzb25SdWRlJztcbi8qKiBPdGhlcjogcmVwb3J0cyBub3QgZmFsbGluZyB1bmRlciBhbm90aGVyIHJlcG9ydCBjYXRlZ29yeSAqL1xuZXhwb3J0cy5SRUFTT05PVEhFUiA9ICdjb20uYXRwcm90by5tb2RlcmF0aW9uLmRlZnMjcmVhc29uT3RoZXInO1xuLyoqIEFwcGVhbDogYXBwZWFsIGEgcHJldmlvdXNseSB0YWtlbiBtb2RlcmF0aW9uIGFjdGlvbiAqL1xuZXhwb3J0cy5SRUFTT05BUFBFQUwgPSAnY29tLmF0cHJvdG8ubW9kZXJhdGlvbi5kZWZzI3JlYXNvbkFwcGVhbCc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWZzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/moderation/defs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/applyWrites.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/repo/applyWrites.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InvalidSwapError = void 0;\nexports.toKnownErr = toKnownErr;\nexports.isCreate = isCreate;\nexports.validateCreate = validateCreate;\nexports.isUpdate = isUpdate;\nexports.validateUpdate = validateUpdate;\nexports.isDelete = isDelete;\nexports.validateDelete = validateDelete;\nexports.isCreateResult = isCreateResult;\nexports.validateCreateResult = validateCreateResult;\nexports.isUpdateResult = isUpdateResult;\nexports.validateUpdateResult = validateUpdateResult;\nexports.isDeleteResult = isDeleteResult;\nexports.validateDeleteResult = validateDeleteResult;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nclass InvalidSwapError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.InvalidSwapError = InvalidSwapError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'InvalidSwap')\n            return new InvalidSwapError(e);\n    }\n    return e;\n}\nfunction isCreate(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.repo.applyWrites#create');\n}\nfunction validateCreate(v) {\n    return lexicons_1.lexicons.validate('com.atproto.repo.applyWrites#create', v);\n}\nfunction isUpdate(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.repo.applyWrites#update');\n}\nfunction validateUpdate(v) {\n    return lexicons_1.lexicons.validate('com.atproto.repo.applyWrites#update', v);\n}\nfunction isDelete(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.repo.applyWrites#delete');\n}\nfunction validateDelete(v) {\n    return lexicons_1.lexicons.validate('com.atproto.repo.applyWrites#delete', v);\n}\nfunction isCreateResult(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.repo.applyWrites#createResult');\n}\nfunction validateCreateResult(v) {\n    return lexicons_1.lexicons.validate('com.atproto.repo.applyWrites#createResult', v);\n}\nfunction isUpdateResult(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.repo.applyWrites#updateResult');\n}\nfunction validateUpdateResult(v) {\n    return lexicons_1.lexicons.validate('com.atproto.repo.applyWrites#updateResult', v);\n}\nfunction isDeleteResult(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.repo.applyWrites#deleteResult');\n}\nfunction validateDeleteResult(v) {\n    return lexicons_1.lexicons.validate('com.atproto.repo.applyWrites#deleteResult', v);\n}\n//# sourceMappingURL=applyWrites.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3JlcG8vYXBwbHlXcml0ZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLGtCQUFrQjtBQUNsQixnQkFBZ0I7QUFDaEIsc0JBQXNCO0FBQ3RCLGdCQUFnQjtBQUNoQixzQkFBc0I7QUFDdEIsZ0JBQWdCO0FBQ2hCLHNCQUFzQjtBQUN0QixzQkFBc0I7QUFDdEIsNEJBQTRCO0FBQzVCLHNCQUFzQjtBQUN0Qiw0QkFBNEI7QUFDNUIsc0JBQXNCO0FBQ3RCLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFPLENBQUMsdUVBQWU7QUFDdEMsZUFBZSxtQkFBTyxDQUFDLCtFQUFrQjtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBc0I7QUFDakQ7QUFDQTtBQUNBLGlFQUFpRSxZQUFZO0FBQzdFO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9jb20vYXRwcm90by9yZXBvL2FwcGx5V3JpdGVzLmpzP2U4NTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkludmFsaWRTd2FwRXJyb3IgPSB2b2lkIDA7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZXhwb3J0cy5pc0NyZWF0ZSA9IGlzQ3JlYXRlO1xuZXhwb3J0cy52YWxpZGF0ZUNyZWF0ZSA9IHZhbGlkYXRlQ3JlYXRlO1xuZXhwb3J0cy5pc1VwZGF0ZSA9IGlzVXBkYXRlO1xuZXhwb3J0cy52YWxpZGF0ZVVwZGF0ZSA9IHZhbGlkYXRlVXBkYXRlO1xuZXhwb3J0cy5pc0RlbGV0ZSA9IGlzRGVsZXRlO1xuZXhwb3J0cy52YWxpZGF0ZURlbGV0ZSA9IHZhbGlkYXRlRGVsZXRlO1xuZXhwb3J0cy5pc0NyZWF0ZVJlc3VsdCA9IGlzQ3JlYXRlUmVzdWx0O1xuZXhwb3J0cy52YWxpZGF0ZUNyZWF0ZVJlc3VsdCA9IHZhbGlkYXRlQ3JlYXRlUmVzdWx0O1xuZXhwb3J0cy5pc1VwZGF0ZVJlc3VsdCA9IGlzVXBkYXRlUmVzdWx0O1xuZXhwb3J0cy52YWxpZGF0ZVVwZGF0ZVJlc3VsdCA9IHZhbGlkYXRlVXBkYXRlUmVzdWx0O1xuZXhwb3J0cy5pc0RlbGV0ZVJlc3VsdCA9IGlzRGVsZXRlUmVzdWx0O1xuZXhwb3J0cy52YWxpZGF0ZURlbGV0ZVJlc3VsdCA9IHZhbGlkYXRlRGVsZXRlUmVzdWx0O1xuLyoqXG4gKiBHRU5FUkFURUQgQ09ERSAtIERPIE5PVCBNT0RJRllcbiAqL1xuY29uc3QgeHJwY18xID0gcmVxdWlyZShcIkBhdHByb3RvL3hycGNcIik7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vdXRpbFwiKTtcbmNvbnN0IGxleGljb25zXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbGV4aWNvbnNcIik7XG5jbGFzcyBJbnZhbGlkU3dhcEVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5JbnZhbGlkU3dhcEVycm9yID0gSW52YWxpZFN3YXBFcnJvcjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIGlmIChlIGluc3RhbmNlb2YgeHJwY18xLlhSUENFcnJvcikge1xuICAgICAgICBpZiAoZS5lcnJvciA9PT0gJ0ludmFsaWRTd2FwJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgSW52YWxpZFN3YXBFcnJvcihlKTtcbiAgICB9XG4gICAgcmV0dXJuIGU7XG59XG5mdW5jdGlvbiBpc0NyZWF0ZSh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdjb20uYXRwcm90by5yZXBvLmFwcGx5V3JpdGVzI2NyZWF0ZScpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVDcmVhdGUodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdjb20uYXRwcm90by5yZXBvLmFwcGx5V3JpdGVzI2NyZWF0ZScsIHYpO1xufVxuZnVuY3Rpb24gaXNVcGRhdGUodikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAnY29tLmF0cHJvdG8ucmVwby5hcHBseVdyaXRlcyN1cGRhdGUnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlVXBkYXRlKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnY29tLmF0cHJvdG8ucmVwby5hcHBseVdyaXRlcyN1cGRhdGUnLCB2KTtcbn1cbmZ1bmN0aW9uIGlzRGVsZXRlKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2NvbS5hdHByb3RvLnJlcG8uYXBwbHlXcml0ZXMjZGVsZXRlJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZURlbGV0ZSh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2NvbS5hdHByb3RvLnJlcG8uYXBwbHlXcml0ZXMjZGVsZXRlJywgdik7XG59XG5mdW5jdGlvbiBpc0NyZWF0ZVJlc3VsdCh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdjb20uYXRwcm90by5yZXBvLmFwcGx5V3JpdGVzI2NyZWF0ZVJlc3VsdCcpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVDcmVhdGVSZXN1bHQodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdjb20uYXRwcm90by5yZXBvLmFwcGx5V3JpdGVzI2NyZWF0ZVJlc3VsdCcsIHYpO1xufVxuZnVuY3Rpb24gaXNVcGRhdGVSZXN1bHQodikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAnY29tLmF0cHJvdG8ucmVwby5hcHBseVdyaXRlcyN1cGRhdGVSZXN1bHQnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlVXBkYXRlUmVzdWx0KHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnY29tLmF0cHJvdG8ucmVwby5hcHBseVdyaXRlcyN1cGRhdGVSZXN1bHQnLCB2KTtcbn1cbmZ1bmN0aW9uIGlzRGVsZXRlUmVzdWx0KHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2NvbS5hdHByb3RvLnJlcG8uYXBwbHlXcml0ZXMjZGVsZXRlUmVzdWx0Jyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZURlbGV0ZVJlc3VsdCh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2NvbS5hdHByb3RvLnJlcG8uYXBwbHlXcml0ZXMjZGVsZXRlUmVzdWx0Jywgdik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHBseVdyaXRlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/applyWrites.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/createRecord.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/repo/createRecord.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InvalidSwapError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass InvalidSwapError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.InvalidSwapError = InvalidSwapError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'InvalidSwap')\n            return new InvalidSwapError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=createRecord.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3JlcG8vY3JlYXRlUmVjb3JkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4QixrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHVFQUFlO0FBQ3RDO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vcmVwby9jcmVhdGVSZWNvcmQuanM/MmRmZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSW52YWxpZFN3YXBFcnJvciA9IHZvaWQgMDtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG4vKipcbiAqIEdFTkVSQVRFRCBDT0RFIC0gRE8gTk9UIE1PRElGWVxuICovXG5jb25zdCB4cnBjXzEgPSByZXF1aXJlKFwiQGF0cHJvdG8veHJwY1wiKTtcbmNsYXNzIEludmFsaWRTd2FwRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLkludmFsaWRTd2FwRXJyb3IgPSBJbnZhbGlkU3dhcEVycm9yO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiB4cnBjXzEuWFJQQ0Vycm9yKSB7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnSW52YWxpZFN3YXAnKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBJbnZhbGlkU3dhcEVycm9yKGUpO1xuICAgIH1cbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNyZWF0ZVJlY29yZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/createRecord.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/defs.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/repo/defs.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isCommitMeta = isCommitMeta;\nexports.validateCommitMeta = validateCommitMeta;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isCommitMeta(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.repo.defs#commitMeta');\n}\nfunction validateCommitMeta(v) {\n    return lexicons_1.lexicons.validate('com.atproto.repo.defs#commitMeta', v);\n}\n//# sourceMappingURL=defs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3JlcG8vZGVmcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQkFBb0I7QUFDcEIsMEJBQTBCO0FBQzFCLGVBQWUsbUJBQU8sQ0FBQywrRUFBa0I7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsdUZBQXNCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9jb20vYXRwcm90by9yZXBvL2RlZnMuanM/YWYwNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNDb21taXRNZXRhID0gaXNDb21taXRNZXRhO1xuZXhwb3J0cy52YWxpZGF0ZUNvbW1pdE1ldGEgPSB2YWxpZGF0ZUNvbW1pdE1ldGE7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vdXRpbFwiKTtcbmNvbnN0IGxleGljb25zXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbGV4aWNvbnNcIik7XG5mdW5jdGlvbiBpc0NvbW1pdE1ldGEodikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAnY29tLmF0cHJvdG8ucmVwby5kZWZzI2NvbW1pdE1ldGEnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlQ29tbWl0TWV0YSh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2NvbS5hdHByb3RvLnJlcG8uZGVmcyNjb21taXRNZXRhJywgdik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWZzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/defs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/deleteRecord.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/repo/deleteRecord.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InvalidSwapError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass InvalidSwapError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.InvalidSwapError = InvalidSwapError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'InvalidSwap')\n            return new InvalidSwapError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=deleteRecord.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3JlcG8vZGVsZXRlUmVjb3JkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4QixrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHVFQUFlO0FBQ3RDO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vcmVwby9kZWxldGVSZWNvcmQuanM/ZWY5ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSW52YWxpZFN3YXBFcnJvciA9IHZvaWQgMDtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG4vKipcbiAqIEdFTkVSQVRFRCBDT0RFIC0gRE8gTk9UIE1PRElGWVxuICovXG5jb25zdCB4cnBjXzEgPSByZXF1aXJlKFwiQGF0cHJvdG8veHJwY1wiKTtcbmNsYXNzIEludmFsaWRTd2FwRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLkludmFsaWRTd2FwRXJyb3IgPSBJbnZhbGlkU3dhcEVycm9yO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiB4cnBjXzEuWFJQQ0Vycm9yKSB7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnSW52YWxpZFN3YXAnKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBJbnZhbGlkU3dhcEVycm9yKGUpO1xuICAgIH1cbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlbGV0ZVJlY29yZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/deleteRecord.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/describeRepo.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/repo/describeRepo.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=describeRepo.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3JlcG8vZGVzY3JpYmVSZXBvLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9jb20vYXRwcm90by9yZXBvL2Rlc2NyaWJlUmVwby5qcz8xOTRkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVzY3JpYmVSZXBvLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/describeRepo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/getRecord.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/repo/getRecord.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RecordNotFoundError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass RecordNotFoundError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RecordNotFoundError = RecordNotFoundError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'RecordNotFound')\n            return new RecordNotFoundError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=getRecord.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3JlcG8vZ2V0UmVjb3JkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQjtBQUMzQixrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHVFQUFlO0FBQ3RDO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vcmVwby9nZXRSZWNvcmQuanM/NTE4YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUmVjb3JkTm90Rm91bmRFcnJvciA9IHZvaWQgMDtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG4vKipcbiAqIEdFTkVSQVRFRCBDT0RFIC0gRE8gTk9UIE1PRElGWVxuICovXG5jb25zdCB4cnBjXzEgPSByZXF1aXJlKFwiQGF0cHJvdG8veHJwY1wiKTtcbmNsYXNzIFJlY29yZE5vdEZvdW5kRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLlJlY29yZE5vdEZvdW5kRXJyb3IgPSBSZWNvcmROb3RGb3VuZEVycm9yO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiB4cnBjXzEuWFJQQ0Vycm9yKSB7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnUmVjb3JkTm90Rm91bmQnKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBSZWNvcmROb3RGb3VuZEVycm9yKGUpO1xuICAgIH1cbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldFJlY29yZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/getRecord.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/importRepo.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/repo/importRepo.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=importRepo.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3JlcG8vaW1wb3J0UmVwby5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vcmVwby9pbXBvcnRSZXBvLmpzPzliMGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbXBvcnRSZXBvLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/importRepo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/listMissingBlobs.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/repo/listMissingBlobs.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nexports.isRecordBlob = isRecordBlob;\nexports.validateRecordBlob = validateRecordBlob;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction toKnownErr(e) {\n    return e;\n}\nfunction isRecordBlob(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.repo.listMissingBlobs#recordBlob');\n}\nfunction validateRecordBlob(v) {\n    return lexicons_1.lexicons.validate('com.atproto.repo.listMissingBlobs#recordBlob', v);\n}\n//# sourceMappingURL=listMissingBlobs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3JlcG8vbGlzdE1pc3NpbmdCbG9icy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEIsb0JBQW9CO0FBQ3BCLDBCQUEwQjtBQUMxQixlQUFlLG1CQUFPLENBQUMsK0VBQWtCO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLHVGQUFzQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vcmVwby9saXN0TWlzc2luZ0Jsb2JzLmpzP2UzZmQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZXhwb3J0cy5pc1JlY29yZEJsb2IgPSBpc1JlY29yZEJsb2I7XG5leHBvcnRzLnZhbGlkYXRlUmVjb3JkQmxvYiA9IHZhbGlkYXRlUmVjb3JkQmxvYjtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi91dGlsXCIpO1xuY29uc3QgbGV4aWNvbnNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9sZXhpY29uc1wiKTtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuZnVuY3Rpb24gaXNSZWNvcmRCbG9iKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2NvbS5hdHByb3RvLnJlcG8ubGlzdE1pc3NpbmdCbG9icyNyZWNvcmRCbG9iJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZVJlY29yZEJsb2Iodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdjb20uYXRwcm90by5yZXBvLmxpc3RNaXNzaW5nQmxvYnMjcmVjb3JkQmxvYicsIHYpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGlzdE1pc3NpbmdCbG9icy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/listMissingBlobs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/listRecords.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/repo/listRecords.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nexports.isRecord = isRecord;\nexports.validateRecord = validateRecord;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction toKnownErr(e) {\n    return e;\n}\nfunction isRecord(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.repo.listRecords#record');\n}\nfunction validateRecord(v) {\n    return lexicons_1.lexicons.validate('com.atproto.repo.listRecords#record', v);\n}\n//# sourceMappingURL=listRecords.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3JlcG8vbGlzdFJlY29yZHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCLGdCQUFnQjtBQUNoQixzQkFBc0I7QUFDdEIsZUFBZSxtQkFBTyxDQUFDLCtFQUFrQjtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBc0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3JlcG8vbGlzdFJlY29yZHMuanM/NWY0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5leHBvcnRzLmlzUmVjb3JkID0gaXNSZWNvcmQ7XG5leHBvcnRzLnZhbGlkYXRlUmVjb3JkID0gdmFsaWRhdGVSZWNvcmQ7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vdXRpbFwiKTtcbmNvbnN0IGxleGljb25zXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbGV4aWNvbnNcIik7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbmZ1bmN0aW9uIGlzUmVjb3JkKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2NvbS5hdHByb3RvLnJlcG8ubGlzdFJlY29yZHMjcmVjb3JkJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZVJlY29yZCh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2NvbS5hdHByb3RvLnJlcG8ubGlzdFJlY29yZHMjcmVjb3JkJywgdik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1saXN0UmVjb3Jkcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/listRecords.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/putRecord.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/repo/putRecord.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InvalidSwapError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass InvalidSwapError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.InvalidSwapError = InvalidSwapError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'InvalidSwap')\n            return new InvalidSwapError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=putRecord.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3JlcG8vcHV0UmVjb3JkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4QixrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHVFQUFlO0FBQ3RDO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vcmVwby9wdXRSZWNvcmQuanM/MDg4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSW52YWxpZFN3YXBFcnJvciA9IHZvaWQgMDtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG4vKipcbiAqIEdFTkVSQVRFRCBDT0RFIC0gRE8gTk9UIE1PRElGWVxuICovXG5jb25zdCB4cnBjXzEgPSByZXF1aXJlKFwiQGF0cHJvdG8veHJwY1wiKTtcbmNsYXNzIEludmFsaWRTd2FwRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLkludmFsaWRTd2FwRXJyb3IgPSBJbnZhbGlkU3dhcEVycm9yO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiB4cnBjXzEuWFJQQ0Vycm9yKSB7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnSW52YWxpZFN3YXAnKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBJbnZhbGlkU3dhcEVycm9yKGUpO1xuICAgIH1cbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXB1dFJlY29yZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/putRecord.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/strongRef.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/repo/strongRef.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isMain = isMain;\nexports.validateMain = validateMain;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isMain(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        (v.$type === 'com.atproto.repo.strongRef#main' ||\n            v.$type === 'com.atproto.repo.strongRef'));\n}\nfunction validateMain(v) {\n    return lexicons_1.lexicons.validate('com.atproto.repo.strongRef#main', v);\n}\n//# sourceMappingURL=strongRef.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3JlcG8vc3Ryb25nUmVmLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWM7QUFDZCxvQkFBb0I7QUFDcEIsZUFBZSxtQkFBTyxDQUFDLCtFQUFrQjtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBc0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vcmVwby9zdHJvbmdSZWYuanM/ZjgzMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNNYWluID0gaXNNYWluO1xuZXhwb3J0cy52YWxpZGF0ZU1haW4gPSB2YWxpZGF0ZU1haW47XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vdXRpbFwiKTtcbmNvbnN0IGxleGljb25zXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbGV4aWNvbnNcIik7XG5mdW5jdGlvbiBpc01haW4odikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICAodi4kdHlwZSA9PT0gJ2NvbS5hdHByb3RvLnJlcG8uc3Ryb25nUmVmI21haW4nIHx8XG4gICAgICAgICAgICB2LiR0eXBlID09PSAnY29tLmF0cHJvdG8ucmVwby5zdHJvbmdSZWYnKSk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZU1haW4odikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdjb20uYXRwcm90by5yZXBvLnN0cm9uZ1JlZiNtYWluJywgdik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHJvbmdSZWYuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/strongRef.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/uploadBlob.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/repo/uploadBlob.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=uploadBlob.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3JlcG8vdXBsb2FkQmxvYi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vcmVwby91cGxvYWRCbG9iLmpzPzc1NGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11cGxvYWRCbG9iLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/repo/uploadBlob.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/activateAccount.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/server/activateAccount.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=activateAccount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9hY3RpdmF0ZUFjY291bnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9hY3RpdmF0ZUFjY291bnQuanM/YjI1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFjdGl2YXRlQWNjb3VudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/activateAccount.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/checkAccountStatus.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/server/checkAccountStatus.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=checkAccountStatus.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9jaGVja0FjY291bnRTdGF0dXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9jaGVja0FjY291bnRTdGF0dXMuanM/MmU4NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNoZWNrQWNjb3VudFN0YXR1cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/checkAccountStatus.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/confirmEmail.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/server/confirmEmail.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InvalidEmailError = exports.InvalidTokenError = exports.ExpiredTokenError = exports.AccountNotFoundError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass AccountNotFoundError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.AccountNotFoundError = AccountNotFoundError;\nclass ExpiredTokenError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.ExpiredTokenError = ExpiredTokenError;\nclass InvalidTokenError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.InvalidTokenError = InvalidTokenError;\nclass InvalidEmailError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.InvalidEmailError = InvalidEmailError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'AccountNotFound')\n            return new AccountNotFoundError(e);\n        if (e.error === 'ExpiredToken')\n            return new ExpiredTokenError(e);\n        if (e.error === 'InvalidToken')\n            return new InvalidTokenError(e);\n        if (e.error === 'InvalidEmail')\n            return new InvalidEmailError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=confirmEmail.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9jb25maXJtRW1haWwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QseUJBQXlCLEdBQUcseUJBQXlCLEdBQUcseUJBQXlCLEdBQUcsNEJBQTRCO0FBQ2hILGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFPLENBQUMsdUVBQWU7QUFDdEM7QUFDQTtBQUNBLGlFQUFpRSxZQUFZO0FBQzdFO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBLGlFQUFpRSxZQUFZO0FBQzdFO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBLGlFQUFpRSxZQUFZO0FBQzdFO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBLGlFQUFpRSxZQUFZO0FBQzdFO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9jb20vYXRwcm90by9zZXJ2ZXIvY29uZmlybUVtYWlsLmpzPzA5ZDUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkludmFsaWRFbWFpbEVycm9yID0gZXhwb3J0cy5JbnZhbGlkVG9rZW5FcnJvciA9IGV4cG9ydHMuRXhwaXJlZFRva2VuRXJyb3IgPSBleHBvcnRzLkFjY291bnROb3RGb3VuZEVycm9yID0gdm9pZCAwO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbi8qKlxuICogR0VORVJBVEVEIENPREUgLSBETyBOT1QgTU9ESUZZXG4gKi9cbmNvbnN0IHhycGNfMSA9IHJlcXVpcmUoXCJAYXRwcm90by94cnBjXCIpO1xuY2xhc3MgQWNjb3VudE5vdEZvdW5kRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLkFjY291bnROb3RGb3VuZEVycm9yID0gQWNjb3VudE5vdEZvdW5kRXJyb3I7XG5jbGFzcyBFeHBpcmVkVG9rZW5FcnJvciBleHRlbmRzIHhycGNfMS5YUlBDRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHNyYykge1xuICAgICAgICBzdXBlcihzcmMuc3RhdHVzLCBzcmMuZXJyb3IsIHNyYy5tZXNzYWdlLCBzcmMuaGVhZGVycywgeyBjYXVzZTogc3JjIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuRXhwaXJlZFRva2VuRXJyb3IgPSBFeHBpcmVkVG9rZW5FcnJvcjtcbmNsYXNzIEludmFsaWRUb2tlbkVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5JbnZhbGlkVG9rZW5FcnJvciA9IEludmFsaWRUb2tlbkVycm9yO1xuY2xhc3MgSW52YWxpZEVtYWlsRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLkludmFsaWRFbWFpbEVycm9yID0gSW52YWxpZEVtYWlsRXJyb3I7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIHhycGNfMS5YUlBDRXJyb3IpIHtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdBY2NvdW50Tm90Rm91bmQnKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBBY2NvdW50Tm90Rm91bmRFcnJvcihlKTtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdFeHBpcmVkVG9rZW4nKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBFeHBpcmVkVG9rZW5FcnJvcihlKTtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdJbnZhbGlkVG9rZW4nKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBJbnZhbGlkVG9rZW5FcnJvcihlKTtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdJbnZhbGlkRW1haWwnKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBJbnZhbGlkRW1haWxFcnJvcihlKTtcbiAgICB9XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25maXJtRW1haWwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/confirmEmail.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/createAccount.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/server/createAccount.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IncompatibleDidDocError = exports.UnresolvableDidError = exports.UnsupportedDomainError = exports.HandleNotAvailableError = exports.InvalidInviteCodeError = exports.InvalidPasswordError = exports.InvalidHandleError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass InvalidHandleError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.InvalidHandleError = InvalidHandleError;\nclass InvalidPasswordError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.InvalidPasswordError = InvalidPasswordError;\nclass InvalidInviteCodeError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.InvalidInviteCodeError = InvalidInviteCodeError;\nclass HandleNotAvailableError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.HandleNotAvailableError = HandleNotAvailableError;\nclass UnsupportedDomainError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.UnsupportedDomainError = UnsupportedDomainError;\nclass UnresolvableDidError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.UnresolvableDidError = UnresolvableDidError;\nclass IncompatibleDidDocError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.IncompatibleDidDocError = IncompatibleDidDocError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'InvalidHandle')\n            return new InvalidHandleError(e);\n        if (e.error === 'InvalidPassword')\n            return new InvalidPasswordError(e);\n        if (e.error === 'InvalidInviteCode')\n            return new InvalidInviteCodeError(e);\n        if (e.error === 'HandleNotAvailable')\n            return new HandleNotAvailableError(e);\n        if (e.error === 'UnsupportedDomain')\n            return new UnsupportedDomainError(e);\n        if (e.error === 'UnresolvableDid')\n            return new UnresolvableDidError(e);\n        if (e.error === 'IncompatibleDidDoc')\n            return new IncompatibleDidDocError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=createAccount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9jcmVhdGVBY2NvdW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELCtCQUErQixHQUFHLDRCQUE0QixHQUFHLDhCQUE4QixHQUFHLCtCQUErQixHQUFHLDhCQUE4QixHQUFHLDRCQUE0QixHQUFHLDBCQUEwQjtBQUM5TixrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHVFQUFlO0FBQ3RDO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vc2VydmVyL2NyZWF0ZUFjY291bnQuanM/NTExNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSW5jb21wYXRpYmxlRGlkRG9jRXJyb3IgPSBleHBvcnRzLlVucmVzb2x2YWJsZURpZEVycm9yID0gZXhwb3J0cy5VbnN1cHBvcnRlZERvbWFpbkVycm9yID0gZXhwb3J0cy5IYW5kbGVOb3RBdmFpbGFibGVFcnJvciA9IGV4cG9ydHMuSW52YWxpZEludml0ZUNvZGVFcnJvciA9IGV4cG9ydHMuSW52YWxpZFBhc3N3b3JkRXJyb3IgPSBleHBvcnRzLkludmFsaWRIYW5kbGVFcnJvciA9IHZvaWQgMDtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG4vKipcbiAqIEdFTkVSQVRFRCBDT0RFIC0gRE8gTk9UIE1PRElGWVxuICovXG5jb25zdCB4cnBjXzEgPSByZXF1aXJlKFwiQGF0cHJvdG8veHJwY1wiKTtcbmNsYXNzIEludmFsaWRIYW5kbGVFcnJvciBleHRlbmRzIHhycGNfMS5YUlBDRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHNyYykge1xuICAgICAgICBzdXBlcihzcmMuc3RhdHVzLCBzcmMuZXJyb3IsIHNyYy5tZXNzYWdlLCBzcmMuaGVhZGVycywgeyBjYXVzZTogc3JjIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuSW52YWxpZEhhbmRsZUVycm9yID0gSW52YWxpZEhhbmRsZUVycm9yO1xuY2xhc3MgSW52YWxpZFBhc3N3b3JkRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLkludmFsaWRQYXNzd29yZEVycm9yID0gSW52YWxpZFBhc3N3b3JkRXJyb3I7XG5jbGFzcyBJbnZhbGlkSW52aXRlQ29kZUVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5JbnZhbGlkSW52aXRlQ29kZUVycm9yID0gSW52YWxpZEludml0ZUNvZGVFcnJvcjtcbmNsYXNzIEhhbmRsZU5vdEF2YWlsYWJsZUVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5IYW5kbGVOb3RBdmFpbGFibGVFcnJvciA9IEhhbmRsZU5vdEF2YWlsYWJsZUVycm9yO1xuY2xhc3MgVW5zdXBwb3J0ZWREb21haW5FcnJvciBleHRlbmRzIHhycGNfMS5YUlBDRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHNyYykge1xuICAgICAgICBzdXBlcihzcmMuc3RhdHVzLCBzcmMuZXJyb3IsIHNyYy5tZXNzYWdlLCBzcmMuaGVhZGVycywgeyBjYXVzZTogc3JjIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuVW5zdXBwb3J0ZWREb21haW5FcnJvciA9IFVuc3VwcG9ydGVkRG9tYWluRXJyb3I7XG5jbGFzcyBVbnJlc29sdmFibGVEaWRFcnJvciBleHRlbmRzIHhycGNfMS5YUlBDRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHNyYykge1xuICAgICAgICBzdXBlcihzcmMuc3RhdHVzLCBzcmMuZXJyb3IsIHNyYy5tZXNzYWdlLCBzcmMuaGVhZGVycywgeyBjYXVzZTogc3JjIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuVW5yZXNvbHZhYmxlRGlkRXJyb3IgPSBVbnJlc29sdmFibGVEaWRFcnJvcjtcbmNsYXNzIEluY29tcGF0aWJsZURpZERvY0Vycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5JbmNvbXBhdGlibGVEaWREb2NFcnJvciA9IEluY29tcGF0aWJsZURpZERvY0Vycm9yO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiB4cnBjXzEuWFJQQ0Vycm9yKSB7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnSW52YWxpZEhhbmRsZScpXG4gICAgICAgICAgICByZXR1cm4gbmV3IEludmFsaWRIYW5kbGVFcnJvcihlKTtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdJbnZhbGlkUGFzc3dvcmQnKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBJbnZhbGlkUGFzc3dvcmRFcnJvcihlKTtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdJbnZhbGlkSW52aXRlQ29kZScpXG4gICAgICAgICAgICByZXR1cm4gbmV3IEludmFsaWRJbnZpdGVDb2RlRXJyb3IoZSk7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnSGFuZGxlTm90QXZhaWxhYmxlJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgSGFuZGxlTm90QXZhaWxhYmxlRXJyb3IoZSk7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnVW5zdXBwb3J0ZWREb21haW4nKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBVbnN1cHBvcnRlZERvbWFpbkVycm9yKGUpO1xuICAgICAgICBpZiAoZS5lcnJvciA9PT0gJ1VucmVzb2x2YWJsZURpZCcpXG4gICAgICAgICAgICByZXR1cm4gbmV3IFVucmVzb2x2YWJsZURpZEVycm9yKGUpO1xuICAgICAgICBpZiAoZS5lcnJvciA9PT0gJ0luY29tcGF0aWJsZURpZERvYycpXG4gICAgICAgICAgICByZXR1cm4gbmV3IEluY29tcGF0aWJsZURpZERvY0Vycm9yKGUpO1xuICAgIH1cbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNyZWF0ZUFjY291bnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/createAccount.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/createAppPassword.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/server/createAppPassword.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AccountTakedownError = void 0;\nexports.toKnownErr = toKnownErr;\nexports.isAppPassword = isAppPassword;\nexports.validateAppPassword = validateAppPassword;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nclass AccountTakedownError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.AccountTakedownError = AccountTakedownError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'AccountTakedown')\n            return new AccountTakedownError(e);\n    }\n    return e;\n}\nfunction isAppPassword(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.server.createAppPassword#appPassword');\n}\nfunction validateAppPassword(v) {\n    return lexicons_1.lexicons.validate('com.atproto.server.createAppPassword#appPassword', v);\n}\n//# sourceMappingURL=createAppPassword.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9jcmVhdGVBcHBQYXNzd29yZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw0QkFBNEI7QUFDNUIsa0JBQWtCO0FBQ2xCLHFCQUFxQjtBQUNyQiwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHVFQUFlO0FBQ3RDLGVBQWUsbUJBQU8sQ0FBQywrRUFBa0I7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsdUZBQXNCO0FBQ2pEO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9jcmVhdGVBcHBQYXNzd29yZC5qcz9jYTI3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BY2NvdW50VGFrZWRvd25FcnJvciA9IHZvaWQgMDtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5leHBvcnRzLmlzQXBwUGFzc3dvcmQgPSBpc0FwcFBhc3N3b3JkO1xuZXhwb3J0cy52YWxpZGF0ZUFwcFBhc3N3b3JkID0gdmFsaWRhdGVBcHBQYXNzd29yZDtcbi8qKlxuICogR0VORVJBVEVEIENPREUgLSBETyBOT1QgTU9ESUZZXG4gKi9cbmNvbnN0IHhycGNfMSA9IHJlcXVpcmUoXCJAYXRwcm90by94cnBjXCIpO1xuY29uc3QgdXRpbF8xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL3V0aWxcIik7XG5jb25zdCBsZXhpY29uc18xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL2xleGljb25zXCIpO1xuY2xhc3MgQWNjb3VudFRha2Vkb3duRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLkFjY291bnRUYWtlZG93bkVycm9yID0gQWNjb3VudFRha2Vkb3duRXJyb3I7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIHhycGNfMS5YUlBDRXJyb3IpIHtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdBY2NvdW50VGFrZWRvd24nKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBBY2NvdW50VGFrZWRvd25FcnJvcihlKTtcbiAgICB9XG4gICAgcmV0dXJuIGU7XG59XG5mdW5jdGlvbiBpc0FwcFBhc3N3b3JkKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2NvbS5hdHByb3RvLnNlcnZlci5jcmVhdGVBcHBQYXNzd29yZCNhcHBQYXNzd29yZCcpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVBcHBQYXNzd29yZCh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2NvbS5hdHByb3RvLnNlcnZlci5jcmVhdGVBcHBQYXNzd29yZCNhcHBQYXNzd29yZCcsIHYpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3JlYXRlQXBwUGFzc3dvcmQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/createAppPassword.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/createInviteCode.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/server/createInviteCode.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=createInviteCode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9jcmVhdGVJbnZpdGVDb2RlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9jb20vYXRwcm90by9zZXJ2ZXIvY3JlYXRlSW52aXRlQ29kZS5qcz9lZDA1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3JlYXRlSW52aXRlQ29kZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/createInviteCode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/createInviteCodes.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/server/createInviteCodes.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nexports.isAccountCodes = isAccountCodes;\nexports.validateAccountCodes = validateAccountCodes;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction toKnownErr(e) {\n    return e;\n}\nfunction isAccountCodes(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.server.createInviteCodes#accountCodes');\n}\nfunction validateAccountCodes(v) {\n    return lexicons_1.lexicons.validate('com.atproto.server.createInviteCodes#accountCodes', v);\n}\n//# sourceMappingURL=createInviteCodes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9jcmVhdGVJbnZpdGVDb2Rlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEIsc0JBQXNCO0FBQ3RCLDRCQUE0QjtBQUM1QixlQUFlLG1CQUFPLENBQUMsK0VBQWtCO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLHVGQUFzQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vc2VydmVyL2NyZWF0ZUludml0ZUNvZGVzLmpzPzM4MDQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZXhwb3J0cy5pc0FjY291bnRDb2RlcyA9IGlzQWNjb3VudENvZGVzO1xuZXhwb3J0cy52YWxpZGF0ZUFjY291bnRDb2RlcyA9IHZhbGlkYXRlQWNjb3VudENvZGVzO1xuY29uc3QgdXRpbF8xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL3V0aWxcIik7XG5jb25zdCBsZXhpY29uc18xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL2xleGljb25zXCIpO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG5mdW5jdGlvbiBpc0FjY291bnRDb2Rlcyh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdjb20uYXRwcm90by5zZXJ2ZXIuY3JlYXRlSW52aXRlQ29kZXMjYWNjb3VudENvZGVzJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZUFjY291bnRDb2Rlcyh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2NvbS5hdHByb3RvLnNlcnZlci5jcmVhdGVJbnZpdGVDb2RlcyNhY2NvdW50Q29kZXMnLCB2KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNyZWF0ZUludml0ZUNvZGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/createInviteCodes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/createSession.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/server/createSession.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AuthFactorTokenRequiredError = exports.AccountTakedownError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass AccountTakedownError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.AccountTakedownError = AccountTakedownError;\nclass AuthFactorTokenRequiredError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.AuthFactorTokenRequiredError = AuthFactorTokenRequiredError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'AccountTakedown')\n            return new AccountTakedownError(e);\n        if (e.error === 'AuthFactorTokenRequired')\n            return new AuthFactorTokenRequiredError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=createSession.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9jcmVhdGVTZXNzaW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9DQUFvQyxHQUFHLDRCQUE0QjtBQUNuRSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHVFQUFlO0FBQ3RDO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9jcmVhdGVTZXNzaW9uLmpzP2I4OGEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkF1dGhGYWN0b3JUb2tlblJlcXVpcmVkRXJyb3IgPSBleHBvcnRzLkFjY291bnRUYWtlZG93bkVycm9yID0gdm9pZCAwO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbi8qKlxuICogR0VORVJBVEVEIENPREUgLSBETyBOT1QgTU9ESUZZXG4gKi9cbmNvbnN0IHhycGNfMSA9IHJlcXVpcmUoXCJAYXRwcm90by94cnBjXCIpO1xuY2xhc3MgQWNjb3VudFRha2Vkb3duRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLkFjY291bnRUYWtlZG93bkVycm9yID0gQWNjb3VudFRha2Vkb3duRXJyb3I7XG5jbGFzcyBBdXRoRmFjdG9yVG9rZW5SZXF1aXJlZEVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5BdXRoRmFjdG9yVG9rZW5SZXF1aXJlZEVycm9yID0gQXV0aEZhY3RvclRva2VuUmVxdWlyZWRFcnJvcjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIGlmIChlIGluc3RhbmNlb2YgeHJwY18xLlhSUENFcnJvcikge1xuICAgICAgICBpZiAoZS5lcnJvciA9PT0gJ0FjY291bnRUYWtlZG93bicpXG4gICAgICAgICAgICByZXR1cm4gbmV3IEFjY291bnRUYWtlZG93bkVycm9yKGUpO1xuICAgICAgICBpZiAoZS5lcnJvciA9PT0gJ0F1dGhGYWN0b3JUb2tlblJlcXVpcmVkJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgQXV0aEZhY3RvclRva2VuUmVxdWlyZWRFcnJvcihlKTtcbiAgICB9XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcmVhdGVTZXNzaW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/createSession.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/deactivateAccount.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/server/deactivateAccount.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=deactivateAccount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9kZWFjdGl2YXRlQWNjb3VudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vc2VydmVyL2RlYWN0aXZhdGVBY2NvdW50LmpzP2M1NGQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWFjdGl2YXRlQWNjb3VudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/deactivateAccount.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/defs.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/server/defs.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isInviteCode = isInviteCode;\nexports.validateInviteCode = validateInviteCode;\nexports.isInviteCodeUse = isInviteCodeUse;\nexports.validateInviteCodeUse = validateInviteCodeUse;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isInviteCode(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.server.defs#inviteCode');\n}\nfunction validateInviteCode(v) {\n    return lexicons_1.lexicons.validate('com.atproto.server.defs#inviteCode', v);\n}\nfunction isInviteCodeUse(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.server.defs#inviteCodeUse');\n}\nfunction validateInviteCodeUse(v) {\n    return lexicons_1.lexicons.validate('com.atproto.server.defs#inviteCodeUse', v);\n}\n//# sourceMappingURL=defs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9kZWZzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQiwwQkFBMEI7QUFDMUIsdUJBQXVCO0FBQ3ZCLDZCQUE2QjtBQUM3QixlQUFlLG1CQUFPLENBQUMsK0VBQWtCO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLHVGQUFzQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9kZWZzLmpzP2I4MDUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzSW52aXRlQ29kZSA9IGlzSW52aXRlQ29kZTtcbmV4cG9ydHMudmFsaWRhdGVJbnZpdGVDb2RlID0gdmFsaWRhdGVJbnZpdGVDb2RlO1xuZXhwb3J0cy5pc0ludml0ZUNvZGVVc2UgPSBpc0ludml0ZUNvZGVVc2U7XG5leHBvcnRzLnZhbGlkYXRlSW52aXRlQ29kZVVzZSA9IHZhbGlkYXRlSW52aXRlQ29kZVVzZTtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi91dGlsXCIpO1xuY29uc3QgbGV4aWNvbnNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9sZXhpY29uc1wiKTtcbmZ1bmN0aW9uIGlzSW52aXRlQ29kZSh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdjb20uYXRwcm90by5zZXJ2ZXIuZGVmcyNpbnZpdGVDb2RlJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZUludml0ZUNvZGUodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdjb20uYXRwcm90by5zZXJ2ZXIuZGVmcyNpbnZpdGVDb2RlJywgdik7XG59XG5mdW5jdGlvbiBpc0ludml0ZUNvZGVVc2Uodikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAnY29tLmF0cHJvdG8uc2VydmVyLmRlZnMjaW52aXRlQ29kZVVzZScpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVJbnZpdGVDb2RlVXNlKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnY29tLmF0cHJvdG8uc2VydmVyLmRlZnMjaW52aXRlQ29kZVVzZScsIHYpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVmcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/defs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/deleteAccount.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/server/deleteAccount.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InvalidTokenError = exports.ExpiredTokenError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass ExpiredTokenError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.ExpiredTokenError = ExpiredTokenError;\nclass InvalidTokenError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.InvalidTokenError = InvalidTokenError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'ExpiredToken')\n            return new ExpiredTokenError(e);\n        if (e.error === 'InvalidToken')\n            return new InvalidTokenError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=deleteAccount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9kZWxldGVBY2NvdW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QixHQUFHLHlCQUF5QjtBQUNyRCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHVFQUFlO0FBQ3RDO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9kZWxldGVBY2NvdW50LmpzPzhlNmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkludmFsaWRUb2tlbkVycm9yID0gZXhwb3J0cy5FeHBpcmVkVG9rZW5FcnJvciA9IHZvaWQgMDtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG4vKipcbiAqIEdFTkVSQVRFRCBDT0RFIC0gRE8gTk9UIE1PRElGWVxuICovXG5jb25zdCB4cnBjXzEgPSByZXF1aXJlKFwiQGF0cHJvdG8veHJwY1wiKTtcbmNsYXNzIEV4cGlyZWRUb2tlbkVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5FeHBpcmVkVG9rZW5FcnJvciA9IEV4cGlyZWRUb2tlbkVycm9yO1xuY2xhc3MgSW52YWxpZFRva2VuRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLkludmFsaWRUb2tlbkVycm9yID0gSW52YWxpZFRva2VuRXJyb3I7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIHhycGNfMS5YUlBDRXJyb3IpIHtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdFeHBpcmVkVG9rZW4nKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBFeHBpcmVkVG9rZW5FcnJvcihlKTtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdJbnZhbGlkVG9rZW4nKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBJbnZhbGlkVG9rZW5FcnJvcihlKTtcbiAgICB9XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWxldGVBY2NvdW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/deleteAccount.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/deleteSession.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/server/deleteSession.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=deleteSession.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9kZWxldGVTZXNzaW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9jb20vYXRwcm90by9zZXJ2ZXIvZGVsZXRlU2Vzc2lvbi5qcz81MjgyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVsZXRlU2Vzc2lvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/deleteSession.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/describeServer.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/server/describeServer.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nexports.isLinks = isLinks;\nexports.validateLinks = validateLinks;\nexports.isContact = isContact;\nexports.validateContact = validateContact;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction toKnownErr(e) {\n    return e;\n}\nfunction isLinks(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.server.describeServer#links');\n}\nfunction validateLinks(v) {\n    return lexicons_1.lexicons.validate('com.atproto.server.describeServer#links', v);\n}\nfunction isContact(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.server.describeServer#contact');\n}\nfunction validateContact(v) {\n    return lexicons_1.lexicons.validate('com.atproto.server.describeServer#contact', v);\n}\n//# sourceMappingURL=describeServer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9kZXNjcmliZVNlcnZlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEIsZUFBZTtBQUNmLHFCQUFxQjtBQUNyQixpQkFBaUI7QUFDakIsdUJBQXVCO0FBQ3ZCLGVBQWUsbUJBQU8sQ0FBQywrRUFBa0I7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsdUZBQXNCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vc2VydmVyL2Rlc2NyaWJlU2VydmVyLmpzPzJjMzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZXhwb3J0cy5pc0xpbmtzID0gaXNMaW5rcztcbmV4cG9ydHMudmFsaWRhdGVMaW5rcyA9IHZhbGlkYXRlTGlua3M7XG5leHBvcnRzLmlzQ29udGFjdCA9IGlzQ29udGFjdDtcbmV4cG9ydHMudmFsaWRhdGVDb250YWN0ID0gdmFsaWRhdGVDb250YWN0O1xuY29uc3QgdXRpbF8xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL3V0aWxcIik7XG5jb25zdCBsZXhpY29uc18xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL2xleGljb25zXCIpO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG5mdW5jdGlvbiBpc0xpbmtzKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2NvbS5hdHByb3RvLnNlcnZlci5kZXNjcmliZVNlcnZlciNsaW5rcycpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVMaW5rcyh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2NvbS5hdHByb3RvLnNlcnZlci5kZXNjcmliZVNlcnZlciNsaW5rcycsIHYpO1xufVxuZnVuY3Rpb24gaXNDb250YWN0KHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2NvbS5hdHByb3RvLnNlcnZlci5kZXNjcmliZVNlcnZlciNjb250YWN0Jyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZUNvbnRhY3Qodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdjb20uYXRwcm90by5zZXJ2ZXIuZGVzY3JpYmVTZXJ2ZXIjY29udGFjdCcsIHYpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVzY3JpYmVTZXJ2ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/describeServer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/getAccountInviteCodes.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/server/getAccountInviteCodes.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DuplicateCreateError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass DuplicateCreateError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.DuplicateCreateError = DuplicateCreateError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'DuplicateCreate')\n            return new DuplicateCreateError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=getAccountInviteCodes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9nZXRBY2NvdW50SW52aXRlQ29kZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCO0FBQzVCLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFPLENBQUMsdUVBQWU7QUFDdEM7QUFDQTtBQUNBLGlFQUFpRSxZQUFZO0FBQzdFO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9jb20vYXRwcm90by9zZXJ2ZXIvZ2V0QWNjb3VudEludml0ZUNvZGVzLmpzPzhhZTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkR1cGxpY2F0ZUNyZWF0ZUVycm9yID0gdm9pZCAwO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbi8qKlxuICogR0VORVJBVEVEIENPREUgLSBETyBOT1QgTU9ESUZZXG4gKi9cbmNvbnN0IHhycGNfMSA9IHJlcXVpcmUoXCJAYXRwcm90by94cnBjXCIpO1xuY2xhc3MgRHVwbGljYXRlQ3JlYXRlRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLkR1cGxpY2F0ZUNyZWF0ZUVycm9yID0gRHVwbGljYXRlQ3JlYXRlRXJyb3I7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIHhycGNfMS5YUlBDRXJyb3IpIHtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdEdXBsaWNhdGVDcmVhdGUnKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBEdXBsaWNhdGVDcmVhdGVFcnJvcihlKTtcbiAgICB9XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRBY2NvdW50SW52aXRlQ29kZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/getAccountInviteCodes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/getServiceAuth.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/server/getServiceAuth.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BadExpirationError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass BadExpirationError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.BadExpirationError = BadExpirationError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'BadExpiration')\n            return new BadExpirationError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=getServiceAuth.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9nZXRTZXJ2aWNlQXV0aC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQkFBMEI7QUFDMUIsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyx1RUFBZTtBQUN0QztBQUNBO0FBQ0EsaUVBQWlFLFlBQVk7QUFDN0U7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9nZXRTZXJ2aWNlQXV0aC5qcz83ZDA0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CYWRFeHBpcmF0aW9uRXJyb3IgPSB2b2lkIDA7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuLyoqXG4gKiBHRU5FUkFURUQgQ09ERSAtIERPIE5PVCBNT0RJRllcbiAqL1xuY29uc3QgeHJwY18xID0gcmVxdWlyZShcIkBhdHByb3RvL3hycGNcIik7XG5jbGFzcyBCYWRFeHBpcmF0aW9uRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLkJhZEV4cGlyYXRpb25FcnJvciA9IEJhZEV4cGlyYXRpb25FcnJvcjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIGlmIChlIGluc3RhbmNlb2YgeHJwY18xLlhSUENFcnJvcikge1xuICAgICAgICBpZiAoZS5lcnJvciA9PT0gJ0JhZEV4cGlyYXRpb24nKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBCYWRFeHBpcmF0aW9uRXJyb3IoZSk7XG4gICAgfVxuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0U2VydmljZUF1dGguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/getServiceAuth.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/getSession.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/server/getSession.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getSession.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9nZXRTZXNzaW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9jb20vYXRwcm90by9zZXJ2ZXIvZ2V0U2Vzc2lvbi5qcz9iMzRmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0U2Vzc2lvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/getSession.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/listAppPasswords.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/server/listAppPasswords.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AccountTakedownError = void 0;\nexports.toKnownErr = toKnownErr;\nexports.isAppPassword = isAppPassword;\nexports.validateAppPassword = validateAppPassword;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nclass AccountTakedownError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.AccountTakedownError = AccountTakedownError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'AccountTakedown')\n            return new AccountTakedownError(e);\n    }\n    return e;\n}\nfunction isAppPassword(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.server.listAppPasswords#appPassword');\n}\nfunction validateAppPassword(v) {\n    return lexicons_1.lexicons.validate('com.atproto.server.listAppPasswords#appPassword', v);\n}\n//# sourceMappingURL=listAppPasswords.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9saXN0QXBwUGFzc3dvcmRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QjtBQUM1QixrQkFBa0I7QUFDbEIscUJBQXFCO0FBQ3JCLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFPLENBQUMsdUVBQWU7QUFDdEMsZUFBZSxtQkFBTyxDQUFDLCtFQUFrQjtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBc0I7QUFDakQ7QUFDQTtBQUNBLGlFQUFpRSxZQUFZO0FBQzdFO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vc2VydmVyL2xpc3RBcHBQYXNzd29yZHMuanM/ZjYzMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQWNjb3VudFRha2Vkb3duRXJyb3IgPSB2b2lkIDA7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZXhwb3J0cy5pc0FwcFBhc3N3b3JkID0gaXNBcHBQYXNzd29yZDtcbmV4cG9ydHMudmFsaWRhdGVBcHBQYXNzd29yZCA9IHZhbGlkYXRlQXBwUGFzc3dvcmQ7XG4vKipcbiAqIEdFTkVSQVRFRCBDT0RFIC0gRE8gTk9UIE1PRElGWVxuICovXG5jb25zdCB4cnBjXzEgPSByZXF1aXJlKFwiQGF0cHJvdG8veHJwY1wiKTtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi91dGlsXCIpO1xuY29uc3QgbGV4aWNvbnNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9sZXhpY29uc1wiKTtcbmNsYXNzIEFjY291bnRUYWtlZG93bkVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5BY2NvdW50VGFrZWRvd25FcnJvciA9IEFjY291bnRUYWtlZG93bkVycm9yO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiB4cnBjXzEuWFJQQ0Vycm9yKSB7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnQWNjb3VudFRha2Vkb3duJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgQWNjb3VudFRha2Vkb3duRXJyb3IoZSk7XG4gICAgfVxuICAgIHJldHVybiBlO1xufVxuZnVuY3Rpb24gaXNBcHBQYXNzd29yZCh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdjb20uYXRwcm90by5zZXJ2ZXIubGlzdEFwcFBhc3N3b3JkcyNhcHBQYXNzd29yZCcpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVBcHBQYXNzd29yZCh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ2NvbS5hdHByb3RvLnNlcnZlci5saXN0QXBwUGFzc3dvcmRzI2FwcFBhc3N3b3JkJywgdik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1saXN0QXBwUGFzc3dvcmRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/listAppPasswords.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/refreshSession.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/server/refreshSession.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AccountTakedownError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass AccountTakedownError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.AccountTakedownError = AccountTakedownError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'AccountTakedown')\n            return new AccountTakedownError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=refreshSession.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9yZWZyZXNoU2Vzc2lvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw0QkFBNEI7QUFDNUIsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyx1RUFBZTtBQUN0QztBQUNBO0FBQ0EsaUVBQWlFLFlBQVk7QUFDN0U7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9yZWZyZXNoU2Vzc2lvbi5qcz9mNWFiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BY2NvdW50VGFrZWRvd25FcnJvciA9IHZvaWQgMDtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG4vKipcbiAqIEdFTkVSQVRFRCBDT0RFIC0gRE8gTk9UIE1PRElGWVxuICovXG5jb25zdCB4cnBjXzEgPSByZXF1aXJlKFwiQGF0cHJvdG8veHJwY1wiKTtcbmNsYXNzIEFjY291bnRUYWtlZG93bkVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5BY2NvdW50VGFrZWRvd25FcnJvciA9IEFjY291bnRUYWtlZG93bkVycm9yO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiB4cnBjXzEuWFJQQ0Vycm9yKSB7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnQWNjb3VudFRha2Vkb3duJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgQWNjb3VudFRha2Vkb3duRXJyb3IoZSk7XG4gICAgfVxuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVmcmVzaFNlc3Npb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/refreshSession.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/requestAccountDelete.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/server/requestAccountDelete.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=requestAccountDelete.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9yZXF1ZXN0QWNjb3VudERlbGV0ZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vc2VydmVyL3JlcXVlc3RBY2NvdW50RGVsZXRlLmpzPzk0NzgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0QWNjb3VudERlbGV0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/requestAccountDelete.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/requestEmailConfirmation.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/server/requestEmailConfirmation.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=requestEmailConfirmation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9yZXF1ZXN0RW1haWxDb25maXJtYXRpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9yZXF1ZXN0RW1haWxDb25maXJtYXRpb24uanM/MTA2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlcXVlc3RFbWFpbENvbmZpcm1hdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/requestEmailConfirmation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/requestEmailUpdate.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/server/requestEmailUpdate.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=requestEmailUpdate.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9yZXF1ZXN0RW1haWxVcGRhdGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9yZXF1ZXN0RW1haWxVcGRhdGUuanM/NzE4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlcXVlc3RFbWFpbFVwZGF0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/requestEmailUpdate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/requestPasswordReset.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/server/requestPasswordReset.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=requestPasswordReset.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9yZXF1ZXN0UGFzc3dvcmRSZXNldC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vc2VydmVyL3JlcXVlc3RQYXNzd29yZFJlc2V0LmpzPzcxMTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0UGFzc3dvcmRSZXNldC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/requestPasswordReset.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/reserveSigningKey.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/server/reserveSigningKey.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=reserveSigningKey.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9yZXNlcnZlU2lnbmluZ0tleS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vc2VydmVyL3Jlc2VydmVTaWduaW5nS2V5LmpzP2I4MDkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXNlcnZlU2lnbmluZ0tleS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/reserveSigningKey.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/resetPassword.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/server/resetPassword.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InvalidTokenError = exports.ExpiredTokenError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass ExpiredTokenError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.ExpiredTokenError = ExpiredTokenError;\nclass InvalidTokenError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.InvalidTokenError = InvalidTokenError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'ExpiredToken')\n            return new ExpiredTokenError(e);\n        if (e.error === 'InvalidToken')\n            return new InvalidTokenError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=resetPassword.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9yZXNldFBhc3N3b3JkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QixHQUFHLHlCQUF5QjtBQUNyRCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHVFQUFlO0FBQ3RDO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9yZXNldFBhc3N3b3JkLmpzPzc2NTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkludmFsaWRUb2tlbkVycm9yID0gZXhwb3J0cy5FeHBpcmVkVG9rZW5FcnJvciA9IHZvaWQgMDtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG4vKipcbiAqIEdFTkVSQVRFRCBDT0RFIC0gRE8gTk9UIE1PRElGWVxuICovXG5jb25zdCB4cnBjXzEgPSByZXF1aXJlKFwiQGF0cHJvdG8veHJwY1wiKTtcbmNsYXNzIEV4cGlyZWRUb2tlbkVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5FeHBpcmVkVG9rZW5FcnJvciA9IEV4cGlyZWRUb2tlbkVycm9yO1xuY2xhc3MgSW52YWxpZFRva2VuRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLkludmFsaWRUb2tlbkVycm9yID0gSW52YWxpZFRva2VuRXJyb3I7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIHhycGNfMS5YUlBDRXJyb3IpIHtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdFeHBpcmVkVG9rZW4nKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBFeHBpcmVkVG9rZW5FcnJvcihlKTtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdJbnZhbGlkVG9rZW4nKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBJbnZhbGlkVG9rZW5FcnJvcihlKTtcbiAgICB9XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXNldFBhc3N3b3JkLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/resetPassword.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/revokeAppPassword.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/server/revokeAppPassword.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=revokeAppPassword.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci9yZXZva2VBcHBQYXNzd29yZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vc2VydmVyL3Jldm9rZUFwcFBhc3N3b3JkLmpzP2Q3MmMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXZva2VBcHBQYXNzd29yZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/revokeAppPassword.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/updateEmail.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/server/updateEmail.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TokenRequiredError = exports.InvalidTokenError = exports.ExpiredTokenError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass ExpiredTokenError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.ExpiredTokenError = ExpiredTokenError;\nclass InvalidTokenError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.InvalidTokenError = InvalidTokenError;\nclass TokenRequiredError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.TokenRequiredError = TokenRequiredError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'ExpiredToken')\n            return new ExpiredTokenError(e);\n        if (e.error === 'InvalidToken')\n            return new InvalidTokenError(e);\n        if (e.error === 'TokenRequired')\n            return new TokenRequiredError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=updateEmail.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3NlcnZlci91cGRhdGVFbWFpbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQkFBMEIsR0FBRyx5QkFBeUIsR0FBRyx5QkFBeUI7QUFDbEYsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyx1RUFBZTtBQUN0QztBQUNBO0FBQ0EsaUVBQWlFLFlBQVk7QUFDN0U7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0EsaUVBQWlFLFlBQVk7QUFDN0U7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0EsaUVBQWlFLFlBQVk7QUFDN0U7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vc2VydmVyL3VwZGF0ZUVtYWlsLmpzPzkyMDYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlRva2VuUmVxdWlyZWRFcnJvciA9IGV4cG9ydHMuSW52YWxpZFRva2VuRXJyb3IgPSBleHBvcnRzLkV4cGlyZWRUb2tlbkVycm9yID0gdm9pZCAwO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbi8qKlxuICogR0VORVJBVEVEIENPREUgLSBETyBOT1QgTU9ESUZZXG4gKi9cbmNvbnN0IHhycGNfMSA9IHJlcXVpcmUoXCJAYXRwcm90by94cnBjXCIpO1xuY2xhc3MgRXhwaXJlZFRva2VuRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLkV4cGlyZWRUb2tlbkVycm9yID0gRXhwaXJlZFRva2VuRXJyb3I7XG5jbGFzcyBJbnZhbGlkVG9rZW5FcnJvciBleHRlbmRzIHhycGNfMS5YUlBDRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHNyYykge1xuICAgICAgICBzdXBlcihzcmMuc3RhdHVzLCBzcmMuZXJyb3IsIHNyYy5tZXNzYWdlLCBzcmMuaGVhZGVycywgeyBjYXVzZTogc3JjIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuSW52YWxpZFRva2VuRXJyb3IgPSBJbnZhbGlkVG9rZW5FcnJvcjtcbmNsYXNzIFRva2VuUmVxdWlyZWRFcnJvciBleHRlbmRzIHhycGNfMS5YUlBDRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHNyYykge1xuICAgICAgICBzdXBlcihzcmMuc3RhdHVzLCBzcmMuZXJyb3IsIHNyYy5tZXNzYWdlLCBzcmMuaGVhZGVycywgeyBjYXVzZTogc3JjIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuVG9rZW5SZXF1aXJlZEVycm9yID0gVG9rZW5SZXF1aXJlZEVycm9yO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiB4cnBjXzEuWFJQQ0Vycm9yKSB7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnRXhwaXJlZFRva2VuJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgRXhwaXJlZFRva2VuRXJyb3IoZSk7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnSW52YWxpZFRva2VuJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgSW52YWxpZFRva2VuRXJyb3IoZSk7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnVG9rZW5SZXF1aXJlZCcpXG4gICAgICAgICAgICByZXR1cm4gbmV3IFRva2VuUmVxdWlyZWRFcnJvcihlKTtcbiAgICB9XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11cGRhdGVFbWFpbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/server/updateEmail.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getBlob.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getBlob.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RepoDeactivatedError = exports.RepoSuspendedError = exports.RepoTakendownError = exports.RepoNotFoundError = exports.BlobNotFoundError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass BlobNotFoundError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.BlobNotFoundError = BlobNotFoundError;\nclass RepoNotFoundError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RepoNotFoundError = RepoNotFoundError;\nclass RepoTakendownError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RepoTakendownError = RepoTakendownError;\nclass RepoSuspendedError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RepoSuspendedError = RepoSuspendedError;\nclass RepoDeactivatedError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RepoDeactivatedError = RepoDeactivatedError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'BlobNotFound')\n            return new BlobNotFoundError(e);\n        if (e.error === 'RepoNotFound')\n            return new RepoNotFoundError(e);\n        if (e.error === 'RepoTakendown')\n            return new RepoTakendownError(e);\n        if (e.error === 'RepoSuspended')\n            return new RepoSuspendedError(e);\n        if (e.error === 'RepoDeactivated')\n            return new RepoDeactivatedError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=getBlob.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3N5bmMvZ2V0QmxvYi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw0QkFBNEIsR0FBRywwQkFBMEIsR0FBRywwQkFBMEIsR0FBRyx5QkFBeUIsR0FBRyx5QkFBeUI7QUFDOUksa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyx1RUFBZTtBQUN0QztBQUNBO0FBQ0EsaUVBQWlFLFlBQVk7QUFDN0U7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0EsaUVBQWlFLFlBQVk7QUFDN0U7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0EsaUVBQWlFLFlBQVk7QUFDN0U7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0EsaUVBQWlFLFlBQVk7QUFDN0U7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0EsaUVBQWlFLFlBQVk7QUFDN0U7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9jb20vYXRwcm90by9zeW5jL2dldEJsb2IuanM/ZmQ2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUmVwb0RlYWN0aXZhdGVkRXJyb3IgPSBleHBvcnRzLlJlcG9TdXNwZW5kZWRFcnJvciA9IGV4cG9ydHMuUmVwb1Rha2VuZG93bkVycm9yID0gZXhwb3J0cy5SZXBvTm90Rm91bmRFcnJvciA9IGV4cG9ydHMuQmxvYk5vdEZvdW5kRXJyb3IgPSB2b2lkIDA7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuLyoqXG4gKiBHRU5FUkFURUQgQ09ERSAtIERPIE5PVCBNT0RJRllcbiAqL1xuY29uc3QgeHJwY18xID0gcmVxdWlyZShcIkBhdHByb3RvL3hycGNcIik7XG5jbGFzcyBCbG9iTm90Rm91bmRFcnJvciBleHRlbmRzIHhycGNfMS5YUlBDRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHNyYykge1xuICAgICAgICBzdXBlcihzcmMuc3RhdHVzLCBzcmMuZXJyb3IsIHNyYy5tZXNzYWdlLCBzcmMuaGVhZGVycywgeyBjYXVzZTogc3JjIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuQmxvYk5vdEZvdW5kRXJyb3IgPSBCbG9iTm90Rm91bmRFcnJvcjtcbmNsYXNzIFJlcG9Ob3RGb3VuZEVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5SZXBvTm90Rm91bmRFcnJvciA9IFJlcG9Ob3RGb3VuZEVycm9yO1xuY2xhc3MgUmVwb1Rha2VuZG93bkVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5SZXBvVGFrZW5kb3duRXJyb3IgPSBSZXBvVGFrZW5kb3duRXJyb3I7XG5jbGFzcyBSZXBvU3VzcGVuZGVkRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLlJlcG9TdXNwZW5kZWRFcnJvciA9IFJlcG9TdXNwZW5kZWRFcnJvcjtcbmNsYXNzIFJlcG9EZWFjdGl2YXRlZEVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5SZXBvRGVhY3RpdmF0ZWRFcnJvciA9IFJlcG9EZWFjdGl2YXRlZEVycm9yO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiB4cnBjXzEuWFJQQ0Vycm9yKSB7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnQmxvYk5vdEZvdW5kJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgQmxvYk5vdEZvdW5kRXJyb3IoZSk7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnUmVwb05vdEZvdW5kJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgUmVwb05vdEZvdW5kRXJyb3IoZSk7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnUmVwb1Rha2VuZG93bicpXG4gICAgICAgICAgICByZXR1cm4gbmV3IFJlcG9UYWtlbmRvd25FcnJvcihlKTtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdSZXBvU3VzcGVuZGVkJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgUmVwb1N1c3BlbmRlZEVycm9yKGUpO1xuICAgICAgICBpZiAoZS5lcnJvciA9PT0gJ1JlcG9EZWFjdGl2YXRlZCcpXG4gICAgICAgICAgICByZXR1cm4gbmV3IFJlcG9EZWFjdGl2YXRlZEVycm9yKGUpO1xuICAgIH1cbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldEJsb2IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getBlob.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getBlocks.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getBlocks.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RepoDeactivatedError = exports.RepoSuspendedError = exports.RepoTakendownError = exports.RepoNotFoundError = exports.BlockNotFoundError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass BlockNotFoundError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.BlockNotFoundError = BlockNotFoundError;\nclass RepoNotFoundError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RepoNotFoundError = RepoNotFoundError;\nclass RepoTakendownError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RepoTakendownError = RepoTakendownError;\nclass RepoSuspendedError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RepoSuspendedError = RepoSuspendedError;\nclass RepoDeactivatedError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RepoDeactivatedError = RepoDeactivatedError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'BlockNotFound')\n            return new BlockNotFoundError(e);\n        if (e.error === 'RepoNotFound')\n            return new RepoNotFoundError(e);\n        if (e.error === 'RepoTakendown')\n            return new RepoTakendownError(e);\n        if (e.error === 'RepoSuspended')\n            return new RepoSuspendedError(e);\n        if (e.error === 'RepoDeactivated')\n            return new RepoDeactivatedError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=getBlocks.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3N5bmMvZ2V0QmxvY2tzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QixHQUFHLDBCQUEwQixHQUFHLDBCQUEwQixHQUFHLHlCQUF5QixHQUFHLDBCQUEwQjtBQUMvSSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHVFQUFlO0FBQ3RDO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3N5bmMvZ2V0QmxvY2tzLmpzP2NjMWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJlcG9EZWFjdGl2YXRlZEVycm9yID0gZXhwb3J0cy5SZXBvU3VzcGVuZGVkRXJyb3IgPSBleHBvcnRzLlJlcG9UYWtlbmRvd25FcnJvciA9IGV4cG9ydHMuUmVwb05vdEZvdW5kRXJyb3IgPSBleHBvcnRzLkJsb2NrTm90Rm91bmRFcnJvciA9IHZvaWQgMDtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG4vKipcbiAqIEdFTkVSQVRFRCBDT0RFIC0gRE8gTk9UIE1PRElGWVxuICovXG5jb25zdCB4cnBjXzEgPSByZXF1aXJlKFwiQGF0cHJvdG8veHJwY1wiKTtcbmNsYXNzIEJsb2NrTm90Rm91bmRFcnJvciBleHRlbmRzIHhycGNfMS5YUlBDRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHNyYykge1xuICAgICAgICBzdXBlcihzcmMuc3RhdHVzLCBzcmMuZXJyb3IsIHNyYy5tZXNzYWdlLCBzcmMuaGVhZGVycywgeyBjYXVzZTogc3JjIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuQmxvY2tOb3RGb3VuZEVycm9yID0gQmxvY2tOb3RGb3VuZEVycm9yO1xuY2xhc3MgUmVwb05vdEZvdW5kRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLlJlcG9Ob3RGb3VuZEVycm9yID0gUmVwb05vdEZvdW5kRXJyb3I7XG5jbGFzcyBSZXBvVGFrZW5kb3duRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLlJlcG9UYWtlbmRvd25FcnJvciA9IFJlcG9UYWtlbmRvd25FcnJvcjtcbmNsYXNzIFJlcG9TdXNwZW5kZWRFcnJvciBleHRlbmRzIHhycGNfMS5YUlBDRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHNyYykge1xuICAgICAgICBzdXBlcihzcmMuc3RhdHVzLCBzcmMuZXJyb3IsIHNyYy5tZXNzYWdlLCBzcmMuaGVhZGVycywgeyBjYXVzZTogc3JjIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuUmVwb1N1c3BlbmRlZEVycm9yID0gUmVwb1N1c3BlbmRlZEVycm9yO1xuY2xhc3MgUmVwb0RlYWN0aXZhdGVkRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLlJlcG9EZWFjdGl2YXRlZEVycm9yID0gUmVwb0RlYWN0aXZhdGVkRXJyb3I7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIHhycGNfMS5YUlBDRXJyb3IpIHtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdCbG9ja05vdEZvdW5kJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgQmxvY2tOb3RGb3VuZEVycm9yKGUpO1xuICAgICAgICBpZiAoZS5lcnJvciA9PT0gJ1JlcG9Ob3RGb3VuZCcpXG4gICAgICAgICAgICByZXR1cm4gbmV3IFJlcG9Ob3RGb3VuZEVycm9yKGUpO1xuICAgICAgICBpZiAoZS5lcnJvciA9PT0gJ1JlcG9UYWtlbmRvd24nKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBSZXBvVGFrZW5kb3duRXJyb3IoZSk7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnUmVwb1N1c3BlbmRlZCcpXG4gICAgICAgICAgICByZXR1cm4gbmV3IFJlcG9TdXNwZW5kZWRFcnJvcihlKTtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdSZXBvRGVhY3RpdmF0ZWQnKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBSZXBvRGVhY3RpdmF0ZWRFcnJvcihlKTtcbiAgICB9XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRCbG9ja3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getBlocks.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getCheckout.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getCheckout.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getCheckout.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3N5bmMvZ2V0Q2hlY2tvdXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3N5bmMvZ2V0Q2hlY2tvdXQuanM/OGJlOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldENoZWNrb3V0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getCheckout.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getHead.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getHead.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HeadNotFoundError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass HeadNotFoundError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.HeadNotFoundError = HeadNotFoundError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'HeadNotFound')\n            return new HeadNotFoundError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=getHead.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3N5bmMvZ2V0SGVhZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUI7QUFDekIsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyx1RUFBZTtBQUN0QztBQUNBO0FBQ0EsaUVBQWlFLFlBQVk7QUFDN0U7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3N5bmMvZ2V0SGVhZC5qcz80OWY3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5IZWFkTm90Rm91bmRFcnJvciA9IHZvaWQgMDtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG4vKipcbiAqIEdFTkVSQVRFRCBDT0RFIC0gRE8gTk9UIE1PRElGWVxuICovXG5jb25zdCB4cnBjXzEgPSByZXF1aXJlKFwiQGF0cHJvdG8veHJwY1wiKTtcbmNsYXNzIEhlYWROb3RGb3VuZEVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5IZWFkTm90Rm91bmRFcnJvciA9IEhlYWROb3RGb3VuZEVycm9yO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiB4cnBjXzEuWFJQQ0Vycm9yKSB7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnSGVhZE5vdEZvdW5kJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgSGVhZE5vdEZvdW5kRXJyb3IoZSk7XG4gICAgfVxuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0SGVhZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getHead.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getLatestCommit.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getLatestCommit.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RepoDeactivatedError = exports.RepoSuspendedError = exports.RepoTakendownError = exports.RepoNotFoundError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass RepoNotFoundError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RepoNotFoundError = RepoNotFoundError;\nclass RepoTakendownError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RepoTakendownError = RepoTakendownError;\nclass RepoSuspendedError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RepoSuspendedError = RepoSuspendedError;\nclass RepoDeactivatedError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RepoDeactivatedError = RepoDeactivatedError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'RepoNotFound')\n            return new RepoNotFoundError(e);\n        if (e.error === 'RepoTakendown')\n            return new RepoTakendownError(e);\n        if (e.error === 'RepoSuspended')\n            return new RepoSuspendedError(e);\n        if (e.error === 'RepoDeactivated')\n            return new RepoDeactivatedError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=getLatestCommit.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3N5bmMvZ2V0TGF0ZXN0Q29tbWl0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QixHQUFHLDBCQUEwQixHQUFHLDBCQUEwQixHQUFHLHlCQUF5QjtBQUNsSCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHVFQUFlO0FBQ3RDO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vc3luYy9nZXRMYXRlc3RDb21taXQuanM/MzhjZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUmVwb0RlYWN0aXZhdGVkRXJyb3IgPSBleHBvcnRzLlJlcG9TdXNwZW5kZWRFcnJvciA9IGV4cG9ydHMuUmVwb1Rha2VuZG93bkVycm9yID0gZXhwb3J0cy5SZXBvTm90Rm91bmRFcnJvciA9IHZvaWQgMDtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG4vKipcbiAqIEdFTkVSQVRFRCBDT0RFIC0gRE8gTk9UIE1PRElGWVxuICovXG5jb25zdCB4cnBjXzEgPSByZXF1aXJlKFwiQGF0cHJvdG8veHJwY1wiKTtcbmNsYXNzIFJlcG9Ob3RGb3VuZEVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5SZXBvTm90Rm91bmRFcnJvciA9IFJlcG9Ob3RGb3VuZEVycm9yO1xuY2xhc3MgUmVwb1Rha2VuZG93bkVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5SZXBvVGFrZW5kb3duRXJyb3IgPSBSZXBvVGFrZW5kb3duRXJyb3I7XG5jbGFzcyBSZXBvU3VzcGVuZGVkRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLlJlcG9TdXNwZW5kZWRFcnJvciA9IFJlcG9TdXNwZW5kZWRFcnJvcjtcbmNsYXNzIFJlcG9EZWFjdGl2YXRlZEVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5SZXBvRGVhY3RpdmF0ZWRFcnJvciA9IFJlcG9EZWFjdGl2YXRlZEVycm9yO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiB4cnBjXzEuWFJQQ0Vycm9yKSB7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnUmVwb05vdEZvdW5kJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgUmVwb05vdEZvdW5kRXJyb3IoZSk7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnUmVwb1Rha2VuZG93bicpXG4gICAgICAgICAgICByZXR1cm4gbmV3IFJlcG9UYWtlbmRvd25FcnJvcihlKTtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdSZXBvU3VzcGVuZGVkJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgUmVwb1N1c3BlbmRlZEVycm9yKGUpO1xuICAgICAgICBpZiAoZS5lcnJvciA9PT0gJ1JlcG9EZWFjdGl2YXRlZCcpXG4gICAgICAgICAgICByZXR1cm4gbmV3IFJlcG9EZWFjdGl2YXRlZEVycm9yKGUpO1xuICAgIH1cbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldExhdGVzdENvbW1pdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getLatestCommit.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getRecord.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getRecord.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RepoDeactivatedError = exports.RepoSuspendedError = exports.RepoTakendownError = exports.RepoNotFoundError = exports.RecordNotFoundError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass RecordNotFoundError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RecordNotFoundError = RecordNotFoundError;\nclass RepoNotFoundError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RepoNotFoundError = RepoNotFoundError;\nclass RepoTakendownError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RepoTakendownError = RepoTakendownError;\nclass RepoSuspendedError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RepoSuspendedError = RepoSuspendedError;\nclass RepoDeactivatedError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RepoDeactivatedError = RepoDeactivatedError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'RecordNotFound')\n            return new RecordNotFoundError(e);\n        if (e.error === 'RepoNotFound')\n            return new RepoNotFoundError(e);\n        if (e.error === 'RepoTakendown')\n            return new RepoTakendownError(e);\n        if (e.error === 'RepoSuspended')\n            return new RepoSuspendedError(e);\n        if (e.error === 'RepoDeactivated')\n            return new RepoDeactivatedError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=getRecord.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3N5bmMvZ2V0UmVjb3JkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QixHQUFHLDBCQUEwQixHQUFHLDBCQUEwQixHQUFHLHlCQUF5QixHQUFHLDJCQUEyQjtBQUNoSixrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHVFQUFlO0FBQ3RDO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3N5bmMvZ2V0UmVjb3JkLmpzP2FmZmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJlcG9EZWFjdGl2YXRlZEVycm9yID0gZXhwb3J0cy5SZXBvU3VzcGVuZGVkRXJyb3IgPSBleHBvcnRzLlJlcG9UYWtlbmRvd25FcnJvciA9IGV4cG9ydHMuUmVwb05vdEZvdW5kRXJyb3IgPSBleHBvcnRzLlJlY29yZE5vdEZvdW5kRXJyb3IgPSB2b2lkIDA7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuLyoqXG4gKiBHRU5FUkFURUQgQ09ERSAtIERPIE5PVCBNT0RJRllcbiAqL1xuY29uc3QgeHJwY18xID0gcmVxdWlyZShcIkBhdHByb3RvL3hycGNcIik7XG5jbGFzcyBSZWNvcmROb3RGb3VuZEVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5SZWNvcmROb3RGb3VuZEVycm9yID0gUmVjb3JkTm90Rm91bmRFcnJvcjtcbmNsYXNzIFJlcG9Ob3RGb3VuZEVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5SZXBvTm90Rm91bmRFcnJvciA9IFJlcG9Ob3RGb3VuZEVycm9yO1xuY2xhc3MgUmVwb1Rha2VuZG93bkVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5SZXBvVGFrZW5kb3duRXJyb3IgPSBSZXBvVGFrZW5kb3duRXJyb3I7XG5jbGFzcyBSZXBvU3VzcGVuZGVkRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLlJlcG9TdXNwZW5kZWRFcnJvciA9IFJlcG9TdXNwZW5kZWRFcnJvcjtcbmNsYXNzIFJlcG9EZWFjdGl2YXRlZEVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5SZXBvRGVhY3RpdmF0ZWRFcnJvciA9IFJlcG9EZWFjdGl2YXRlZEVycm9yO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiB4cnBjXzEuWFJQQ0Vycm9yKSB7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnUmVjb3JkTm90Rm91bmQnKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBSZWNvcmROb3RGb3VuZEVycm9yKGUpO1xuICAgICAgICBpZiAoZS5lcnJvciA9PT0gJ1JlcG9Ob3RGb3VuZCcpXG4gICAgICAgICAgICByZXR1cm4gbmV3IFJlcG9Ob3RGb3VuZEVycm9yKGUpO1xuICAgICAgICBpZiAoZS5lcnJvciA9PT0gJ1JlcG9UYWtlbmRvd24nKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBSZXBvVGFrZW5kb3duRXJyb3IoZSk7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnUmVwb1N1c3BlbmRlZCcpXG4gICAgICAgICAgICByZXR1cm4gbmV3IFJlcG9TdXNwZW5kZWRFcnJvcihlKTtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdSZXBvRGVhY3RpdmF0ZWQnKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBSZXBvRGVhY3RpdmF0ZWRFcnJvcihlKTtcbiAgICB9XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRSZWNvcmQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getRecord.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getRepo.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getRepo.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RepoDeactivatedError = exports.RepoSuspendedError = exports.RepoTakendownError = exports.RepoNotFoundError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass RepoNotFoundError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RepoNotFoundError = RepoNotFoundError;\nclass RepoTakendownError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RepoTakendownError = RepoTakendownError;\nclass RepoSuspendedError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RepoSuspendedError = RepoSuspendedError;\nclass RepoDeactivatedError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RepoDeactivatedError = RepoDeactivatedError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'RepoNotFound')\n            return new RepoNotFoundError(e);\n        if (e.error === 'RepoTakendown')\n            return new RepoTakendownError(e);\n        if (e.error === 'RepoSuspended')\n            return new RepoSuspendedError(e);\n        if (e.error === 'RepoDeactivated')\n            return new RepoDeactivatedError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=getRepo.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3N5bmMvZ2V0UmVwby5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw0QkFBNEIsR0FBRywwQkFBMEIsR0FBRywwQkFBMEIsR0FBRyx5QkFBeUI7QUFDbEgsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyx1RUFBZTtBQUN0QztBQUNBO0FBQ0EsaUVBQWlFLFlBQVk7QUFDN0U7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0EsaUVBQWlFLFlBQVk7QUFDN0U7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0EsaUVBQWlFLFlBQVk7QUFDN0U7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0EsaUVBQWlFLFlBQVk7QUFDN0U7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3N5bmMvZ2V0UmVwby5qcz82OWVjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5SZXBvRGVhY3RpdmF0ZWRFcnJvciA9IGV4cG9ydHMuUmVwb1N1c3BlbmRlZEVycm9yID0gZXhwb3J0cy5SZXBvVGFrZW5kb3duRXJyb3IgPSBleHBvcnRzLlJlcG9Ob3RGb3VuZEVycm9yID0gdm9pZCAwO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbi8qKlxuICogR0VORVJBVEVEIENPREUgLSBETyBOT1QgTU9ESUZZXG4gKi9cbmNvbnN0IHhycGNfMSA9IHJlcXVpcmUoXCJAYXRwcm90by94cnBjXCIpO1xuY2xhc3MgUmVwb05vdEZvdW5kRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLlJlcG9Ob3RGb3VuZEVycm9yID0gUmVwb05vdEZvdW5kRXJyb3I7XG5jbGFzcyBSZXBvVGFrZW5kb3duRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLlJlcG9UYWtlbmRvd25FcnJvciA9IFJlcG9UYWtlbmRvd25FcnJvcjtcbmNsYXNzIFJlcG9TdXNwZW5kZWRFcnJvciBleHRlbmRzIHhycGNfMS5YUlBDRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHNyYykge1xuICAgICAgICBzdXBlcihzcmMuc3RhdHVzLCBzcmMuZXJyb3IsIHNyYy5tZXNzYWdlLCBzcmMuaGVhZGVycywgeyBjYXVzZTogc3JjIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuUmVwb1N1c3BlbmRlZEVycm9yID0gUmVwb1N1c3BlbmRlZEVycm9yO1xuY2xhc3MgUmVwb0RlYWN0aXZhdGVkRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLlJlcG9EZWFjdGl2YXRlZEVycm9yID0gUmVwb0RlYWN0aXZhdGVkRXJyb3I7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIHhycGNfMS5YUlBDRXJyb3IpIHtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdSZXBvTm90Rm91bmQnKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBSZXBvTm90Rm91bmRFcnJvcihlKTtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdSZXBvVGFrZW5kb3duJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgUmVwb1Rha2VuZG93bkVycm9yKGUpO1xuICAgICAgICBpZiAoZS5lcnJvciA9PT0gJ1JlcG9TdXNwZW5kZWQnKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBSZXBvU3VzcGVuZGVkRXJyb3IoZSk7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnUmVwb0RlYWN0aXZhdGVkJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgUmVwb0RlYWN0aXZhdGVkRXJyb3IoZSk7XG4gICAgfVxuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0UmVwby5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getRepo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getRepoStatus.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getRepoStatus.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RepoNotFoundError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass RepoNotFoundError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RepoNotFoundError = RepoNotFoundError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'RepoNotFound')\n            return new RepoNotFoundError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=getRepoStatus.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3N5bmMvZ2V0UmVwb1N0YXR1cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUI7QUFDekIsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyx1RUFBZTtBQUN0QztBQUNBO0FBQ0EsaUVBQWlFLFlBQVk7QUFDN0U7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3N5bmMvZ2V0UmVwb1N0YXR1cy5qcz8wNWMwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5SZXBvTm90Rm91bmRFcnJvciA9IHZvaWQgMDtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG4vKipcbiAqIEdFTkVSQVRFRCBDT0RFIC0gRE8gTk9UIE1PRElGWVxuICovXG5jb25zdCB4cnBjXzEgPSByZXF1aXJlKFwiQGF0cHJvdG8veHJwY1wiKTtcbmNsYXNzIFJlcG9Ob3RGb3VuZEVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5SZXBvTm90Rm91bmRFcnJvciA9IFJlcG9Ob3RGb3VuZEVycm9yO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiB4cnBjXzEuWFJQQ0Vycm9yKSB7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnUmVwb05vdEZvdW5kJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgUmVwb05vdEZvdW5kRXJyb3IoZSk7XG4gICAgfVxuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0UmVwb1N0YXR1cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/getRepoStatus.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/listBlobs.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/sync/listBlobs.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RepoDeactivatedError = exports.RepoSuspendedError = exports.RepoTakendownError = exports.RepoNotFoundError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass RepoNotFoundError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RepoNotFoundError = RepoNotFoundError;\nclass RepoTakendownError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RepoTakendownError = RepoTakendownError;\nclass RepoSuspendedError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RepoSuspendedError = RepoSuspendedError;\nclass RepoDeactivatedError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RepoDeactivatedError = RepoDeactivatedError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'RepoNotFound')\n            return new RepoNotFoundError(e);\n        if (e.error === 'RepoTakendown')\n            return new RepoTakendownError(e);\n        if (e.error === 'RepoSuspended')\n            return new RepoSuspendedError(e);\n        if (e.error === 'RepoDeactivated')\n            return new RepoDeactivatedError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=listBlobs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3N5bmMvbGlzdEJsb2JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QixHQUFHLDBCQUEwQixHQUFHLDBCQUEwQixHQUFHLHlCQUF5QjtBQUNsSCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHVFQUFlO0FBQ3RDO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vc3luYy9saXN0QmxvYnMuanM/Mjg5NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUmVwb0RlYWN0aXZhdGVkRXJyb3IgPSBleHBvcnRzLlJlcG9TdXNwZW5kZWRFcnJvciA9IGV4cG9ydHMuUmVwb1Rha2VuZG93bkVycm9yID0gZXhwb3J0cy5SZXBvTm90Rm91bmRFcnJvciA9IHZvaWQgMDtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG4vKipcbiAqIEdFTkVSQVRFRCBDT0RFIC0gRE8gTk9UIE1PRElGWVxuICovXG5jb25zdCB4cnBjXzEgPSByZXF1aXJlKFwiQGF0cHJvdG8veHJwY1wiKTtcbmNsYXNzIFJlcG9Ob3RGb3VuZEVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5SZXBvTm90Rm91bmRFcnJvciA9IFJlcG9Ob3RGb3VuZEVycm9yO1xuY2xhc3MgUmVwb1Rha2VuZG93bkVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5SZXBvVGFrZW5kb3duRXJyb3IgPSBSZXBvVGFrZW5kb3duRXJyb3I7XG5jbGFzcyBSZXBvU3VzcGVuZGVkRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLlJlcG9TdXNwZW5kZWRFcnJvciA9IFJlcG9TdXNwZW5kZWRFcnJvcjtcbmNsYXNzIFJlcG9EZWFjdGl2YXRlZEVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5SZXBvRGVhY3RpdmF0ZWRFcnJvciA9IFJlcG9EZWFjdGl2YXRlZEVycm9yO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiB4cnBjXzEuWFJQQ0Vycm9yKSB7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnUmVwb05vdEZvdW5kJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgUmVwb05vdEZvdW5kRXJyb3IoZSk7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnUmVwb1Rha2VuZG93bicpXG4gICAgICAgICAgICByZXR1cm4gbmV3IFJlcG9UYWtlbmRvd25FcnJvcihlKTtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdSZXBvU3VzcGVuZGVkJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgUmVwb1N1c3BlbmRlZEVycm9yKGUpO1xuICAgICAgICBpZiAoZS5lcnJvciA9PT0gJ1JlcG9EZWFjdGl2YXRlZCcpXG4gICAgICAgICAgICByZXR1cm4gbmV3IFJlcG9EZWFjdGl2YXRlZEVycm9yKGUpO1xuICAgIH1cbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxpc3RCbG9icy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/listBlobs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/listRepos.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/sync/listRepos.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nexports.isRepo = isRepo;\nexports.validateRepo = validateRepo;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction toKnownErr(e) {\n    return e;\n}\nfunction isRepo(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.sync.listRepos#repo');\n}\nfunction validateRepo(v) {\n    return lexicons_1.lexicons.validate('com.atproto.sync.listRepos#repo', v);\n}\n//# sourceMappingURL=listRepos.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3N5bmMvbGlzdFJlcG9zLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQixjQUFjO0FBQ2Qsb0JBQW9CO0FBQ3BCLGVBQWUsbUJBQU8sQ0FBQywrRUFBa0I7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsdUZBQXNCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9jb20vYXRwcm90by9zeW5jL2xpc3RSZXBvcy5qcz84Y2YzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmV4cG9ydHMuaXNSZXBvID0gaXNSZXBvO1xuZXhwb3J0cy52YWxpZGF0ZVJlcG8gPSB2YWxpZGF0ZVJlcG87XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vdXRpbFwiKTtcbmNvbnN0IGxleGljb25zXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbGV4aWNvbnNcIik7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbmZ1bmN0aW9uIGlzUmVwbyh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdjb20uYXRwcm90by5zeW5jLmxpc3RSZXBvcyNyZXBvJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZVJlcG8odikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdjb20uYXRwcm90by5zeW5jLmxpc3RSZXBvcyNyZXBvJywgdik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1saXN0UmVwb3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/listRepos.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/notifyOfUpdate.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/sync/notifyOfUpdate.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=notifyOfUpdate.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3N5bmMvbm90aWZ5T2ZVcGRhdGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3N5bmMvbm90aWZ5T2ZVcGRhdGUuanM/ZmExNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5vdGlmeU9mVXBkYXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/notifyOfUpdate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/requestCrawl.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/sync/requestCrawl.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=requestCrawl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3N5bmMvcmVxdWVzdENyYXdsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9jb20vYXRwcm90by9zeW5jL3JlcXVlc3RDcmF3bC5qcz9hODdmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVxdWVzdENyYXdsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/requestCrawl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/subscribeRepos.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/sync/subscribeRepos.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isCommit = isCommit;\nexports.validateCommit = validateCommit;\nexports.isIdentity = isIdentity;\nexports.validateIdentity = validateIdentity;\nexports.isAccount = isAccount;\nexports.validateAccount = validateAccount;\nexports.isHandle = isHandle;\nexports.validateHandle = validateHandle;\nexports.isMigrate = isMigrate;\nexports.validateMigrate = validateMigrate;\nexports.isTombstone = isTombstone;\nexports.validateTombstone = validateTombstone;\nexports.isInfo = isInfo;\nexports.validateInfo = validateInfo;\nexports.isRepoOp = isRepoOp;\nexports.validateRepoOp = validateRepoOp;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isCommit(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.sync.subscribeRepos#commit');\n}\nfunction validateCommit(v) {\n    return lexicons_1.lexicons.validate('com.atproto.sync.subscribeRepos#commit', v);\n}\nfunction isIdentity(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.sync.subscribeRepos#identity');\n}\nfunction validateIdentity(v) {\n    return lexicons_1.lexicons.validate('com.atproto.sync.subscribeRepos#identity', v);\n}\nfunction isAccount(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.sync.subscribeRepos#account');\n}\nfunction validateAccount(v) {\n    return lexicons_1.lexicons.validate('com.atproto.sync.subscribeRepos#account', v);\n}\nfunction isHandle(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.sync.subscribeRepos#handle');\n}\nfunction validateHandle(v) {\n    return lexicons_1.lexicons.validate('com.atproto.sync.subscribeRepos#handle', v);\n}\nfunction isMigrate(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.sync.subscribeRepos#migrate');\n}\nfunction validateMigrate(v) {\n    return lexicons_1.lexicons.validate('com.atproto.sync.subscribeRepos#migrate', v);\n}\nfunction isTombstone(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.sync.subscribeRepos#tombstone');\n}\nfunction validateTombstone(v) {\n    return lexicons_1.lexicons.validate('com.atproto.sync.subscribeRepos#tombstone', v);\n}\nfunction isInfo(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.sync.subscribeRepos#info');\n}\nfunction validateInfo(v) {\n    return lexicons_1.lexicons.validate('com.atproto.sync.subscribeRepos#info', v);\n}\nfunction isRepoOp(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'com.atproto.sync.subscribeRepos#repoOp');\n}\nfunction validateRepoOp(v) {\n    return lexicons_1.lexicons.validate('com.atproto.sync.subscribeRepos#repoOp', v);\n}\n//# sourceMappingURL=subscribeRepos.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3N5bmMvc3Vic2NyaWJlUmVwb3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCO0FBQ2hCLHNCQUFzQjtBQUN0QixrQkFBa0I7QUFDbEIsd0JBQXdCO0FBQ3hCLGlCQUFpQjtBQUNqQix1QkFBdUI7QUFDdkIsZ0JBQWdCO0FBQ2hCLHNCQUFzQjtBQUN0QixpQkFBaUI7QUFDakIsdUJBQXVCO0FBQ3ZCLG1CQUFtQjtBQUNuQix5QkFBeUI7QUFDekIsY0FBYztBQUNkLG9CQUFvQjtBQUNwQixnQkFBZ0I7QUFDaEIsc0JBQXNCO0FBQ3RCLGVBQWUsbUJBQU8sQ0FBQywrRUFBa0I7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsdUZBQXNCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vc3luYy9zdWJzY3JpYmVSZXBvcy5qcz9jZTVhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc0NvbW1pdCA9IGlzQ29tbWl0O1xuZXhwb3J0cy52YWxpZGF0ZUNvbW1pdCA9IHZhbGlkYXRlQ29tbWl0O1xuZXhwb3J0cy5pc0lkZW50aXR5ID0gaXNJZGVudGl0eTtcbmV4cG9ydHMudmFsaWRhdGVJZGVudGl0eSA9IHZhbGlkYXRlSWRlbnRpdHk7XG5leHBvcnRzLmlzQWNjb3VudCA9IGlzQWNjb3VudDtcbmV4cG9ydHMudmFsaWRhdGVBY2NvdW50ID0gdmFsaWRhdGVBY2NvdW50O1xuZXhwb3J0cy5pc0hhbmRsZSA9IGlzSGFuZGxlO1xuZXhwb3J0cy52YWxpZGF0ZUhhbmRsZSA9IHZhbGlkYXRlSGFuZGxlO1xuZXhwb3J0cy5pc01pZ3JhdGUgPSBpc01pZ3JhdGU7XG5leHBvcnRzLnZhbGlkYXRlTWlncmF0ZSA9IHZhbGlkYXRlTWlncmF0ZTtcbmV4cG9ydHMuaXNUb21ic3RvbmUgPSBpc1RvbWJzdG9uZTtcbmV4cG9ydHMudmFsaWRhdGVUb21ic3RvbmUgPSB2YWxpZGF0ZVRvbWJzdG9uZTtcbmV4cG9ydHMuaXNJbmZvID0gaXNJbmZvO1xuZXhwb3J0cy52YWxpZGF0ZUluZm8gPSB2YWxpZGF0ZUluZm87XG5leHBvcnRzLmlzUmVwb09wID0gaXNSZXBvT3A7XG5leHBvcnRzLnZhbGlkYXRlUmVwb09wID0gdmFsaWRhdGVSZXBvT3A7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vdXRpbFwiKTtcbmNvbnN0IGxleGljb25zXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbGV4aWNvbnNcIik7XG5mdW5jdGlvbiBpc0NvbW1pdCh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdjb20uYXRwcm90by5zeW5jLnN1YnNjcmliZVJlcG9zI2NvbW1pdCcpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVDb21taXQodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdjb20uYXRwcm90by5zeW5jLnN1YnNjcmliZVJlcG9zI2NvbW1pdCcsIHYpO1xufVxuZnVuY3Rpb24gaXNJZGVudGl0eSh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdjb20uYXRwcm90by5zeW5jLnN1YnNjcmliZVJlcG9zI2lkZW50aXR5Jyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZUlkZW50aXR5KHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnY29tLmF0cHJvdG8uc3luYy5zdWJzY3JpYmVSZXBvcyNpZGVudGl0eScsIHYpO1xufVxuZnVuY3Rpb24gaXNBY2NvdW50KHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2NvbS5hdHByb3RvLnN5bmMuc3Vic2NyaWJlUmVwb3MjYWNjb3VudCcpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVBY2NvdW50KHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnY29tLmF0cHJvdG8uc3luYy5zdWJzY3JpYmVSZXBvcyNhY2NvdW50Jywgdik7XG59XG5mdW5jdGlvbiBpc0hhbmRsZSh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdjb20uYXRwcm90by5zeW5jLnN1YnNjcmliZVJlcG9zI2hhbmRsZScpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVIYW5kbGUodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdjb20uYXRwcm90by5zeW5jLnN1YnNjcmliZVJlcG9zI2hhbmRsZScsIHYpO1xufVxuZnVuY3Rpb24gaXNNaWdyYXRlKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2NvbS5hdHByb3RvLnN5bmMuc3Vic2NyaWJlUmVwb3MjbWlncmF0ZScpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVNaWdyYXRlKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnY29tLmF0cHJvdG8uc3luYy5zdWJzY3JpYmVSZXBvcyNtaWdyYXRlJywgdik7XG59XG5mdW5jdGlvbiBpc1RvbWJzdG9uZSh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdjb20uYXRwcm90by5zeW5jLnN1YnNjcmliZVJlcG9zI3RvbWJzdG9uZScpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVUb21ic3RvbmUodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdjb20uYXRwcm90by5zeW5jLnN1YnNjcmliZVJlcG9zI3RvbWJzdG9uZScsIHYpO1xufVxuZnVuY3Rpb24gaXNJbmZvKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ2NvbS5hdHByb3RvLnN5bmMuc3Vic2NyaWJlUmVwb3MjaW5mbycpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVJbmZvKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgnY29tLmF0cHJvdG8uc3luYy5zdWJzY3JpYmVSZXBvcyNpbmZvJywgdik7XG59XG5mdW5jdGlvbiBpc1JlcG9PcCh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICdjb20uYXRwcm90by5zeW5jLnN1YnNjcmliZVJlcG9zI3JlcG9PcCcpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVSZXBvT3Aodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCdjb20uYXRwcm90by5zeW5jLnN1YnNjcmliZVJlcG9zI3JlcG9PcCcsIHYpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3Vic2NyaWJlUmVwb3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/sync/subscribeRepos.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/temp/addReservedHandle.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/temp/addReservedHandle.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=addReservedHandle.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3RlbXAvYWRkUmVzZXJ2ZWRIYW5kbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3RlbXAvYWRkUmVzZXJ2ZWRIYW5kbGUuanM/YTZlMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFkZFJlc2VydmVkSGFuZGxlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/temp/addReservedHandle.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/temp/checkSignupQueue.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/temp/checkSignupQueue.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=checkSignupQueue.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3RlbXAvY2hlY2tTaWdudXBRdWV1ZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvY29tL2F0cHJvdG8vdGVtcC9jaGVja1NpZ251cFF1ZXVlLmpzPzE4ODYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaGVja1NpZ251cFF1ZXVlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/temp/checkSignupQueue.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/temp/fetchLabels.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/temp/fetchLabels.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=fetchLabels.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3RlbXAvZmV0Y2hMYWJlbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3RlbXAvZmV0Y2hMYWJlbHMuanM/NDg4NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZldGNoTGFiZWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/temp/fetchLabels.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/temp/requestPhoneVerification.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/com/atproto/temp/requestPhoneVerification.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=requestPhoneVerification.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL2NvbS9hdHByb3RvL3RlbXAvcmVxdWVzdFBob25lVmVyaWZpY2F0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy9jb20vYXRwcm90by90ZW1wL3JlcXVlc3RQaG9uZVZlcmlmaWNhdGlvbi5qcz9jZmZhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVxdWVzdFBob25lVmVyaWZpY2F0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/com/atproto/temp/requestPhoneVerification.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/communication/createTemplate.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/communication/createTemplate.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DuplicateTemplateNameError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass DuplicateTemplateNameError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.DuplicateTemplateNameError = DuplicateTemplateNameError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'DuplicateTemplateName')\n            return new DuplicateTemplateNameError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=createTemplate.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL2NvbW11bmljYXRpb24vY3JlYXRlVGVtcGxhdGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0NBQWtDO0FBQ2xDLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFPLENBQUMsdUVBQWU7QUFDdEM7QUFDQTtBQUNBLGlFQUFpRSxZQUFZO0FBQzdFO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy90b29scy9vem9uZS9jb21tdW5pY2F0aW9uL2NyZWF0ZVRlbXBsYXRlLmpzP2JkZTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkR1cGxpY2F0ZVRlbXBsYXRlTmFtZUVycm9yID0gdm9pZCAwO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbi8qKlxuICogR0VORVJBVEVEIENPREUgLSBETyBOT1QgTU9ESUZZXG4gKi9cbmNvbnN0IHhycGNfMSA9IHJlcXVpcmUoXCJAYXRwcm90by94cnBjXCIpO1xuY2xhc3MgRHVwbGljYXRlVGVtcGxhdGVOYW1lRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLkR1cGxpY2F0ZVRlbXBsYXRlTmFtZUVycm9yID0gRHVwbGljYXRlVGVtcGxhdGVOYW1lRXJyb3I7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIHhycGNfMS5YUlBDRXJyb3IpIHtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdEdXBsaWNhdGVUZW1wbGF0ZU5hbWUnKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBEdXBsaWNhdGVUZW1wbGF0ZU5hbWVFcnJvcihlKTtcbiAgICB9XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcmVhdGVUZW1wbGF0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/communication/createTemplate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/communication/defs.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/communication/defs.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isTemplateView = isTemplateView;\nexports.validateTemplateView = validateTemplateView;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isTemplateView(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.communication.defs#templateView');\n}\nfunction validateTemplateView(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.communication.defs#templateView', v);\n}\n//# sourceMappingURL=defs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL2NvbW11bmljYXRpb24vZGVmcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxzQkFBc0I7QUFDdEIsNEJBQTRCO0FBQzVCLGVBQWUsbUJBQU8sQ0FBQywrRUFBa0I7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsdUZBQXNCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy90b29scy9vem9uZS9jb21tdW5pY2F0aW9uL2RlZnMuanM/ZTZjYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNUZW1wbGF0ZVZpZXcgPSBpc1RlbXBsYXRlVmlldztcbmV4cG9ydHMudmFsaWRhdGVUZW1wbGF0ZVZpZXcgPSB2YWxpZGF0ZVRlbXBsYXRlVmlldztcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi91dGlsXCIpO1xuY29uc3QgbGV4aWNvbnNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9sZXhpY29uc1wiKTtcbmZ1bmN0aW9uIGlzVGVtcGxhdGVWaWV3KHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ3Rvb2xzLm96b25lLmNvbW11bmljYXRpb24uZGVmcyN0ZW1wbGF0ZVZpZXcnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlVGVtcGxhdGVWaWV3KHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgndG9vbHMub3pvbmUuY29tbXVuaWNhdGlvbi5kZWZzI3RlbXBsYXRlVmlldycsIHYpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVmcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/communication/defs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/communication/deleteTemplate.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/communication/deleteTemplate.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=deleteTemplate.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL2NvbW11bmljYXRpb24vZGVsZXRlVGVtcGxhdGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL2NvbW11bmljYXRpb24vZGVsZXRlVGVtcGxhdGUuanM/MmZjYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlbGV0ZVRlbXBsYXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/communication/deleteTemplate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/communication/listTemplates.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/communication/listTemplates.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=listTemplates.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL2NvbW11bmljYXRpb24vbGlzdFRlbXBsYXRlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvdG9vbHMvb3pvbmUvY29tbXVuaWNhdGlvbi9saXN0VGVtcGxhdGVzLmpzP2JlOTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1saXN0VGVtcGxhdGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/communication/listTemplates.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/communication/updateTemplate.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/communication/updateTemplate.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DuplicateTemplateNameError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass DuplicateTemplateNameError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.DuplicateTemplateNameError = DuplicateTemplateNameError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'DuplicateTemplateName')\n            return new DuplicateTemplateNameError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=updateTemplate.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL2NvbW11bmljYXRpb24vdXBkYXRlVGVtcGxhdGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0NBQWtDO0FBQ2xDLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFPLENBQUMsdUVBQWU7QUFDdEM7QUFDQTtBQUNBLGlFQUFpRSxZQUFZO0FBQzdFO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy90b29scy9vem9uZS9jb21tdW5pY2F0aW9uL3VwZGF0ZVRlbXBsYXRlLmpzPzE3MzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkR1cGxpY2F0ZVRlbXBsYXRlTmFtZUVycm9yID0gdm9pZCAwO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbi8qKlxuICogR0VORVJBVEVEIENPREUgLSBETyBOT1QgTU9ESUZZXG4gKi9cbmNvbnN0IHhycGNfMSA9IHJlcXVpcmUoXCJAYXRwcm90by94cnBjXCIpO1xuY2xhc3MgRHVwbGljYXRlVGVtcGxhdGVOYW1lRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLkR1cGxpY2F0ZVRlbXBsYXRlTmFtZUVycm9yID0gRHVwbGljYXRlVGVtcGxhdGVOYW1lRXJyb3I7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIHhycGNfMS5YUlBDRXJyb3IpIHtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdEdXBsaWNhdGVUZW1wbGF0ZU5hbWUnKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBEdXBsaWNhdGVUZW1wbGF0ZU5hbWVFcnJvcihlKTtcbiAgICB9XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11cGRhdGVUZW1wbGF0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/communication/updateTemplate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/defs.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/defs.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.REVIEWNONE = exports.REVIEWCLOSED = exports.REVIEWESCALATED = exports.REVIEWOPEN = void 0;\nexports.isModEventView = isModEventView;\nexports.validateModEventView = validateModEventView;\nexports.isModEventViewDetail = isModEventViewDetail;\nexports.validateModEventViewDetail = validateModEventViewDetail;\nexports.isSubjectStatusView = isSubjectStatusView;\nexports.validateSubjectStatusView = validateSubjectStatusView;\nexports.isAccountStats = isAccountStats;\nexports.validateAccountStats = validateAccountStats;\nexports.isRecordsStats = isRecordsStats;\nexports.validateRecordsStats = validateRecordsStats;\nexports.isModEventTakedown = isModEventTakedown;\nexports.validateModEventTakedown = validateModEventTakedown;\nexports.isModEventReverseTakedown = isModEventReverseTakedown;\nexports.validateModEventReverseTakedown = validateModEventReverseTakedown;\nexports.isModEventResolveAppeal = isModEventResolveAppeal;\nexports.validateModEventResolveAppeal = validateModEventResolveAppeal;\nexports.isModEventComment = isModEventComment;\nexports.validateModEventComment = validateModEventComment;\nexports.isModEventReport = isModEventReport;\nexports.validateModEventReport = validateModEventReport;\nexports.isModEventLabel = isModEventLabel;\nexports.validateModEventLabel = validateModEventLabel;\nexports.isModEventPriorityScore = isModEventPriorityScore;\nexports.validateModEventPriorityScore = validateModEventPriorityScore;\nexports.isModEventAcknowledge = isModEventAcknowledge;\nexports.validateModEventAcknowledge = validateModEventAcknowledge;\nexports.isModEventEscalate = isModEventEscalate;\nexports.validateModEventEscalate = validateModEventEscalate;\nexports.isModEventMute = isModEventMute;\nexports.validateModEventMute = validateModEventMute;\nexports.isModEventUnmute = isModEventUnmute;\nexports.validateModEventUnmute = validateModEventUnmute;\nexports.isModEventMuteReporter = isModEventMuteReporter;\nexports.validateModEventMuteReporter = validateModEventMuteReporter;\nexports.isModEventUnmuteReporter = isModEventUnmuteReporter;\nexports.validateModEventUnmuteReporter = validateModEventUnmuteReporter;\nexports.isModEventEmail = isModEventEmail;\nexports.validateModEventEmail = validateModEventEmail;\nexports.isModEventDivert = isModEventDivert;\nexports.validateModEventDivert = validateModEventDivert;\nexports.isModEventTag = isModEventTag;\nexports.validateModEventTag = validateModEventTag;\nexports.isAccountEvent = isAccountEvent;\nexports.validateAccountEvent = validateAccountEvent;\nexports.isIdentityEvent = isIdentityEvent;\nexports.validateIdentityEvent = validateIdentityEvent;\nexports.isRecordEvent = isRecordEvent;\nexports.validateRecordEvent = validateRecordEvent;\nexports.isRepoView = isRepoView;\nexports.validateRepoView = validateRepoView;\nexports.isRepoViewDetail = isRepoViewDetail;\nexports.validateRepoViewDetail = validateRepoViewDetail;\nexports.isRepoViewNotFound = isRepoViewNotFound;\nexports.validateRepoViewNotFound = validateRepoViewNotFound;\nexports.isRecordView = isRecordView;\nexports.validateRecordView = validateRecordView;\nexports.isRecordViewDetail = isRecordViewDetail;\nexports.validateRecordViewDetail = validateRecordViewDetail;\nexports.isRecordViewNotFound = isRecordViewNotFound;\nexports.validateRecordViewNotFound = validateRecordViewNotFound;\nexports.isModeration = isModeration;\nexports.validateModeration = validateModeration;\nexports.isModerationDetail = isModerationDetail;\nexports.validateModerationDetail = validateModerationDetail;\nexports.isBlobView = isBlobView;\nexports.validateBlobView = validateBlobView;\nexports.isImageDetails = isImageDetails;\nexports.validateImageDetails = validateImageDetails;\nexports.isVideoDetails = isVideoDetails;\nexports.validateVideoDetails = validateVideoDetails;\nexports.isAccountHosting = isAccountHosting;\nexports.validateAccountHosting = validateAccountHosting;\nexports.isRecordHosting = isRecordHosting;\nexports.validateRecordHosting = validateRecordHosting;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isModEventView(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#modEventView');\n}\nfunction validateModEventView(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#modEventView', v);\n}\nfunction isModEventViewDetail(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#modEventViewDetail');\n}\nfunction validateModEventViewDetail(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#modEventViewDetail', v);\n}\nfunction isSubjectStatusView(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#subjectStatusView');\n}\nfunction validateSubjectStatusView(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#subjectStatusView', v);\n}\nfunction isAccountStats(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#accountStats');\n}\nfunction validateAccountStats(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#accountStats', v);\n}\nfunction isRecordsStats(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#recordsStats');\n}\nfunction validateRecordsStats(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#recordsStats', v);\n}\n/** Moderator review status of a subject: Open. Indicates that the subject needs to be reviewed by a moderator */\nexports.REVIEWOPEN = 'tools.ozone.moderation.defs#reviewOpen';\n/** Moderator review status of a subject: Escalated. Indicates that the subject was escalated for review by a moderator */\nexports.REVIEWESCALATED = 'tools.ozone.moderation.defs#reviewEscalated';\n/** Moderator review status of a subject: Closed. Indicates that the subject was already reviewed and resolved by a moderator */\nexports.REVIEWCLOSED = 'tools.ozone.moderation.defs#reviewClosed';\n/** Moderator review status of a subject: Unnecessary. Indicates that the subject does not need a review at the moment but there is probably some moderation related metadata available for it */\nexports.REVIEWNONE = 'tools.ozone.moderation.defs#reviewNone';\nfunction isModEventTakedown(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#modEventTakedown');\n}\nfunction validateModEventTakedown(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#modEventTakedown', v);\n}\nfunction isModEventReverseTakedown(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#modEventReverseTakedown');\n}\nfunction validateModEventReverseTakedown(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#modEventReverseTakedown', v);\n}\nfunction isModEventResolveAppeal(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#modEventResolveAppeal');\n}\nfunction validateModEventResolveAppeal(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#modEventResolveAppeal', v);\n}\nfunction isModEventComment(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#modEventComment');\n}\nfunction validateModEventComment(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#modEventComment', v);\n}\nfunction isModEventReport(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#modEventReport');\n}\nfunction validateModEventReport(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#modEventReport', v);\n}\nfunction isModEventLabel(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#modEventLabel');\n}\nfunction validateModEventLabel(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#modEventLabel', v);\n}\nfunction isModEventPriorityScore(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#modEventPriorityScore');\n}\nfunction validateModEventPriorityScore(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#modEventPriorityScore', v);\n}\nfunction isModEventAcknowledge(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#modEventAcknowledge');\n}\nfunction validateModEventAcknowledge(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#modEventAcknowledge', v);\n}\nfunction isModEventEscalate(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#modEventEscalate');\n}\nfunction validateModEventEscalate(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#modEventEscalate', v);\n}\nfunction isModEventMute(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#modEventMute');\n}\nfunction validateModEventMute(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#modEventMute', v);\n}\nfunction isModEventUnmute(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#modEventUnmute');\n}\nfunction validateModEventUnmute(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#modEventUnmute', v);\n}\nfunction isModEventMuteReporter(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#modEventMuteReporter');\n}\nfunction validateModEventMuteReporter(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#modEventMuteReporter', v);\n}\nfunction isModEventUnmuteReporter(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#modEventUnmuteReporter');\n}\nfunction validateModEventUnmuteReporter(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#modEventUnmuteReporter', v);\n}\nfunction isModEventEmail(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#modEventEmail');\n}\nfunction validateModEventEmail(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#modEventEmail', v);\n}\nfunction isModEventDivert(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#modEventDivert');\n}\nfunction validateModEventDivert(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#modEventDivert', v);\n}\nfunction isModEventTag(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#modEventTag');\n}\nfunction validateModEventTag(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#modEventTag', v);\n}\nfunction isAccountEvent(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#accountEvent');\n}\nfunction validateAccountEvent(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#accountEvent', v);\n}\nfunction isIdentityEvent(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#identityEvent');\n}\nfunction validateIdentityEvent(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#identityEvent', v);\n}\nfunction isRecordEvent(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#recordEvent');\n}\nfunction validateRecordEvent(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#recordEvent', v);\n}\nfunction isRepoView(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#repoView');\n}\nfunction validateRepoView(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#repoView', v);\n}\nfunction isRepoViewDetail(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#repoViewDetail');\n}\nfunction validateRepoViewDetail(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#repoViewDetail', v);\n}\nfunction isRepoViewNotFound(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#repoViewNotFound');\n}\nfunction validateRepoViewNotFound(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#repoViewNotFound', v);\n}\nfunction isRecordView(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#recordView');\n}\nfunction validateRecordView(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#recordView', v);\n}\nfunction isRecordViewDetail(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#recordViewDetail');\n}\nfunction validateRecordViewDetail(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#recordViewDetail', v);\n}\nfunction isRecordViewNotFound(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#recordViewNotFound');\n}\nfunction validateRecordViewNotFound(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#recordViewNotFound', v);\n}\nfunction isModeration(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#moderation');\n}\nfunction validateModeration(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#moderation', v);\n}\nfunction isModerationDetail(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#moderationDetail');\n}\nfunction validateModerationDetail(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#moderationDetail', v);\n}\nfunction isBlobView(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#blobView');\n}\nfunction validateBlobView(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#blobView', v);\n}\nfunction isImageDetails(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#imageDetails');\n}\nfunction validateImageDetails(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#imageDetails', v);\n}\nfunction isVideoDetails(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#videoDetails');\n}\nfunction validateVideoDetails(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#videoDetails', v);\n}\nfunction isAccountHosting(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#accountHosting');\n}\nfunction validateAccountHosting(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#accountHosting', v);\n}\nfunction isRecordHosting(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.moderation.defs#recordHosting');\n}\nfunction validateRecordHosting(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.moderation.defs#recordHosting', v);\n}\n//# sourceMappingURL=defs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/defs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/emitEvent.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/emitEvent.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SubjectHasActionError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass SubjectHasActionError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.SubjectHasActionError = SubjectHasActionError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'SubjectHasAction')\n            return new SubjectHasActionError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=emitEvent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL21vZGVyYXRpb24vZW1pdEV2ZW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDZCQUE2QjtBQUM3QixrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHVFQUFlO0FBQ3RDO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvdG9vbHMvb3pvbmUvbW9kZXJhdGlvbi9lbWl0RXZlbnQuanM/YWY3NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU3ViamVjdEhhc0FjdGlvbkVycm9yID0gdm9pZCAwO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbi8qKlxuICogR0VORVJBVEVEIENPREUgLSBETyBOT1QgTU9ESUZZXG4gKi9cbmNvbnN0IHhycGNfMSA9IHJlcXVpcmUoXCJAYXRwcm90by94cnBjXCIpO1xuY2xhc3MgU3ViamVjdEhhc0FjdGlvbkVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5TdWJqZWN0SGFzQWN0aW9uRXJyb3IgPSBTdWJqZWN0SGFzQWN0aW9uRXJyb3I7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIHhycGNfMS5YUlBDRXJyb3IpIHtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdTdWJqZWN0SGFzQWN0aW9uJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgU3ViamVjdEhhc0FjdGlvbkVycm9yKGUpO1xuICAgIH1cbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVtaXRFdmVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/emitEvent.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/getEvent.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/getEvent.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getEvent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL21vZGVyYXRpb24vZ2V0RXZlbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL21vZGVyYXRpb24vZ2V0RXZlbnQuanM/N2MzZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldEV2ZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/getEvent.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/getRecord.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/getRecord.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RecordNotFoundError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass RecordNotFoundError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RecordNotFoundError = RecordNotFoundError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'RecordNotFound')\n            return new RecordNotFoundError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=getRecord.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL21vZGVyYXRpb24vZ2V0UmVjb3JkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQjtBQUMzQixrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHVFQUFlO0FBQ3RDO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvdG9vbHMvb3pvbmUvbW9kZXJhdGlvbi9nZXRSZWNvcmQuanM/ZDc0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUmVjb3JkTm90Rm91bmRFcnJvciA9IHZvaWQgMDtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG4vKipcbiAqIEdFTkVSQVRFRCBDT0RFIC0gRE8gTk9UIE1PRElGWVxuICovXG5jb25zdCB4cnBjXzEgPSByZXF1aXJlKFwiQGF0cHJvdG8veHJwY1wiKTtcbmNsYXNzIFJlY29yZE5vdEZvdW5kRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLlJlY29yZE5vdEZvdW5kRXJyb3IgPSBSZWNvcmROb3RGb3VuZEVycm9yO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiB4cnBjXzEuWFJQQ0Vycm9yKSB7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnUmVjb3JkTm90Rm91bmQnKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBSZWNvcmROb3RGb3VuZEVycm9yKGUpO1xuICAgIH1cbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldFJlY29yZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/getRecord.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/getRecords.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/getRecords.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getRecords.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL21vZGVyYXRpb24vZ2V0UmVjb3Jkcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvdG9vbHMvb3pvbmUvbW9kZXJhdGlvbi9nZXRSZWNvcmRzLmpzPzI5NDYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRSZWNvcmRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/getRecords.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/getRepo.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/getRepo.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RepoNotFoundError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass RepoNotFoundError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.RepoNotFoundError = RepoNotFoundError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'RepoNotFound')\n            return new RepoNotFoundError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=getRepo.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL21vZGVyYXRpb24vZ2V0UmVwby5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUI7QUFDekIsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyx1RUFBZTtBQUN0QztBQUNBO0FBQ0EsaUVBQWlFLFlBQVk7QUFDN0U7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL21vZGVyYXRpb24vZ2V0UmVwby5qcz9kZTQ1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5SZXBvTm90Rm91bmRFcnJvciA9IHZvaWQgMDtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG4vKipcbiAqIEdFTkVSQVRFRCBDT0RFIC0gRE8gTk9UIE1PRElGWVxuICovXG5jb25zdCB4cnBjXzEgPSByZXF1aXJlKFwiQGF0cHJvdG8veHJwY1wiKTtcbmNsYXNzIFJlcG9Ob3RGb3VuZEVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5SZXBvTm90Rm91bmRFcnJvciA9IFJlcG9Ob3RGb3VuZEVycm9yO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiB4cnBjXzEuWFJQQ0Vycm9yKSB7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnUmVwb05vdEZvdW5kJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgUmVwb05vdEZvdW5kRXJyb3IoZSk7XG4gICAgfVxuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0UmVwby5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/getRepo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/getRepos.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/getRepos.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=getRepos.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL21vZGVyYXRpb24vZ2V0UmVwb3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL21vZGVyYXRpb24vZ2V0UmVwb3MuanM/N2NiMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldFJlcG9zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/getRepos.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/queryEvents.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/queryEvents.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=queryEvents.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL21vZGVyYXRpb24vcXVlcnlFdmVudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL21vZGVyYXRpb24vcXVlcnlFdmVudHMuanM/YWU4NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXF1ZXJ5RXZlbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/queryEvents.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/queryStatuses.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/queryStatuses.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=queryStatuses.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL21vZGVyYXRpb24vcXVlcnlTdGF0dXNlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvdG9vbHMvb3pvbmUvbW9kZXJhdGlvbi9xdWVyeVN0YXR1c2VzLmpzPzE1NDQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1xdWVyeVN0YXR1c2VzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/queryStatuses.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/searchRepos.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/searchRepos.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=searchRepos.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL21vZGVyYXRpb24vc2VhcmNoUmVwb3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL21vZGVyYXRpb24vc2VhcmNoUmVwb3MuanM/ZDk3OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlYXJjaFJlcG9zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/moderation/searchRepos.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/server/getConfig.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/server/getConfig.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nexports.isServiceConfig = isServiceConfig;\nexports.validateServiceConfig = validateServiceConfig;\nexports.isViewerConfig = isViewerConfig;\nexports.validateViewerConfig = validateViewerConfig;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction toKnownErr(e) {\n    return e;\n}\nfunction isServiceConfig(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.server.getConfig#serviceConfig');\n}\nfunction validateServiceConfig(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.server.getConfig#serviceConfig', v);\n}\nfunction isViewerConfig(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.server.getConfig#viewerConfig');\n}\nfunction validateViewerConfig(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.server.getConfig#viewerConfig', v);\n}\n//# sourceMappingURL=getConfig.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3NlcnZlci9nZXRDb25maWcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCLHVCQUF1QjtBQUN2Qiw2QkFBNkI7QUFDN0Isc0JBQXNCO0FBQ3RCLDRCQUE0QjtBQUM1QixlQUFlLG1CQUFPLENBQUMsK0VBQWtCO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLHVGQUFzQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3NlcnZlci9nZXRDb25maWcuanM/YjM1MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5leHBvcnRzLmlzU2VydmljZUNvbmZpZyA9IGlzU2VydmljZUNvbmZpZztcbmV4cG9ydHMudmFsaWRhdGVTZXJ2aWNlQ29uZmlnID0gdmFsaWRhdGVTZXJ2aWNlQ29uZmlnO1xuZXhwb3J0cy5pc1ZpZXdlckNvbmZpZyA9IGlzVmlld2VyQ29uZmlnO1xuZXhwb3J0cy52YWxpZGF0ZVZpZXdlckNvbmZpZyA9IHZhbGlkYXRlVmlld2VyQ29uZmlnO1xuY29uc3QgdXRpbF8xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL3V0aWxcIik7XG5jb25zdCBsZXhpY29uc18xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL2xleGljb25zXCIpO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG5mdW5jdGlvbiBpc1NlcnZpY2VDb25maWcodikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAndG9vbHMub3pvbmUuc2VydmVyLmdldENvbmZpZyNzZXJ2aWNlQ29uZmlnJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZVNlcnZpY2VDb25maWcodikge1xuICAgIHJldHVybiBsZXhpY29uc18xLmxleGljb25zLnZhbGlkYXRlKCd0b29scy5vem9uZS5zZXJ2ZXIuZ2V0Q29uZmlnI3NlcnZpY2VDb25maWcnLCB2KTtcbn1cbmZ1bmN0aW9uIGlzVmlld2VyQ29uZmlnKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ3Rvb2xzLm96b25lLnNlcnZlci5nZXRDb25maWcjdmlld2VyQ29uZmlnJyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZVZpZXdlckNvbmZpZyh2KSB7XG4gICAgcmV0dXJuIGxleGljb25zXzEubGV4aWNvbnMudmFsaWRhdGUoJ3Rvb2xzLm96b25lLnNlcnZlci5nZXRDb25maWcjdmlld2VyQ29uZmlnJywgdik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRDb25maWcuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/server/getConfig.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/set/addValues.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/set/addValues.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=addValues.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3NldC9hZGRWYWx1ZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3NldC9hZGRWYWx1ZXMuanM/MjMwMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFkZFZhbHVlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/set/addValues.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/set/defs.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/set/defs.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isSet = isSet;\nexports.validateSet = validateSet;\nexports.isSetView = isSetView;\nexports.validateSetView = validateSetView;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isSet(v) {\n    return ((0, util_1.isObj)(v) && (0, util_1.hasProp)(v, '$type') && v.$type === 'tools.ozone.set.defs#set');\n}\nfunction validateSet(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.set.defs#set', v);\n}\nfunction isSetView(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.set.defs#setView');\n}\nfunction validateSetView(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.set.defs#setView', v);\n}\n//# sourceMappingURL=defs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3NldC9kZWZzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWE7QUFDYixtQkFBbUI7QUFDbkIsaUJBQWlCO0FBQ2pCLHVCQUF1QjtBQUN2QixlQUFlLG1CQUFPLENBQUMsK0VBQWtCO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLHVGQUFzQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvdG9vbHMvb3pvbmUvc2V0L2RlZnMuanM/MGZiMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNTZXQgPSBpc1NldDtcbmV4cG9ydHMudmFsaWRhdGVTZXQgPSB2YWxpZGF0ZVNldDtcbmV4cG9ydHMuaXNTZXRWaWV3ID0gaXNTZXRWaWV3O1xuZXhwb3J0cy52YWxpZGF0ZVNldFZpZXcgPSB2YWxpZGF0ZVNldFZpZXc7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vdXRpbFwiKTtcbmNvbnN0IGxleGljb25zXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbGV4aWNvbnNcIik7XG5mdW5jdGlvbiBpc1NldCh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJiAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmIHYuJHR5cGUgPT09ICd0b29scy5vem9uZS5zZXQuZGVmcyNzZXQnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlU2V0KHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgndG9vbHMub3pvbmUuc2V0LmRlZnMjc2V0Jywgdik7XG59XG5mdW5jdGlvbiBpc1NldFZpZXcodikge1xuICAgIHJldHVybiAoKDAsIHV0aWxfMS5pc09iaikodikgJiZcbiAgICAgICAgKDAsIHV0aWxfMS5oYXNQcm9wKSh2LCAnJHR5cGUnKSAmJlxuICAgICAgICB2LiR0eXBlID09PSAndG9vbHMub3pvbmUuc2V0LmRlZnMjc2V0VmlldycpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVTZXRWaWV3KHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgndG9vbHMub3pvbmUuc2V0LmRlZnMjc2V0VmlldycsIHYpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVmcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/set/defs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/set/deleteSet.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/set/deleteSet.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SetNotFoundError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass SetNotFoundError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.SetNotFoundError = SetNotFoundError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'SetNotFound')\n            return new SetNotFoundError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=deleteSet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3NldC9kZWxldGVTZXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFPLENBQUMsdUVBQWU7QUFDdEM7QUFDQTtBQUNBLGlFQUFpRSxZQUFZO0FBQzdFO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy90b29scy9vem9uZS9zZXQvZGVsZXRlU2V0LmpzPzQ3MGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNldE5vdEZvdW5kRXJyb3IgPSB2b2lkIDA7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuLyoqXG4gKiBHRU5FUkFURUQgQ09ERSAtIERPIE5PVCBNT0RJRllcbiAqL1xuY29uc3QgeHJwY18xID0gcmVxdWlyZShcIkBhdHByb3RvL3hycGNcIik7XG5jbGFzcyBTZXROb3RGb3VuZEVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5TZXROb3RGb3VuZEVycm9yID0gU2V0Tm90Rm91bmRFcnJvcjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIGlmIChlIGluc3RhbmNlb2YgeHJwY18xLlhSUENFcnJvcikge1xuICAgICAgICBpZiAoZS5lcnJvciA9PT0gJ1NldE5vdEZvdW5kJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgU2V0Tm90Rm91bmRFcnJvcihlKTtcbiAgICB9XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWxldGVTZXQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/set/deleteSet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/set/deleteValues.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/set/deleteValues.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SetNotFoundError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass SetNotFoundError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.SetNotFoundError = SetNotFoundError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'SetNotFound')\n            return new SetNotFoundError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=deleteValues.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3NldC9kZWxldGVWYWx1ZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFPLENBQUMsdUVBQWU7QUFDdEM7QUFDQTtBQUNBLGlFQUFpRSxZQUFZO0FBQzdFO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy90b29scy9vem9uZS9zZXQvZGVsZXRlVmFsdWVzLmpzPzExNTAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNldE5vdEZvdW5kRXJyb3IgPSB2b2lkIDA7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuLyoqXG4gKiBHRU5FUkFURUQgQ09ERSAtIERPIE5PVCBNT0RJRllcbiAqL1xuY29uc3QgeHJwY18xID0gcmVxdWlyZShcIkBhdHByb3RvL3hycGNcIik7XG5jbGFzcyBTZXROb3RGb3VuZEVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5TZXROb3RGb3VuZEVycm9yID0gU2V0Tm90Rm91bmRFcnJvcjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIGlmIChlIGluc3RhbmNlb2YgeHJwY18xLlhSUENFcnJvcikge1xuICAgICAgICBpZiAoZS5lcnJvciA9PT0gJ1NldE5vdEZvdW5kJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgU2V0Tm90Rm91bmRFcnJvcihlKTtcbiAgICB9XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWxldGVWYWx1ZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/set/deleteValues.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/set/getValues.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/set/getValues.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SetNotFoundError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass SetNotFoundError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.SetNotFoundError = SetNotFoundError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'SetNotFound')\n            return new SetNotFoundError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=getValues.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3NldC9nZXRWYWx1ZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFPLENBQUMsdUVBQWU7QUFDdEM7QUFDQTtBQUNBLGlFQUFpRSxZQUFZO0FBQzdFO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy90b29scy9vem9uZS9zZXQvZ2V0VmFsdWVzLmpzP2NmYjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNldE5vdEZvdW5kRXJyb3IgPSB2b2lkIDA7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuLyoqXG4gKiBHRU5FUkFURUQgQ09ERSAtIERPIE5PVCBNT0RJRllcbiAqL1xuY29uc3QgeHJwY18xID0gcmVxdWlyZShcIkBhdHByb3RvL3hycGNcIik7XG5jbGFzcyBTZXROb3RGb3VuZEVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5TZXROb3RGb3VuZEVycm9yID0gU2V0Tm90Rm91bmRFcnJvcjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIGlmIChlIGluc3RhbmNlb2YgeHJwY18xLlhSUENFcnJvcikge1xuICAgICAgICBpZiAoZS5lcnJvciA9PT0gJ1NldE5vdEZvdW5kJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgU2V0Tm90Rm91bmRFcnJvcihlKTtcbiAgICB9XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRWYWx1ZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/set/getValues.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/set/querySets.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/set/querySets.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=querySets.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3NldC9xdWVyeVNldHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3NldC9xdWVyeVNldHMuanM/NWM4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXF1ZXJ5U2V0cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/set/querySets.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/set/upsertSet.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/set/upsertSet.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=upsertSet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3NldC91cHNlcnRTZXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3NldC91cHNlcnRTZXQuanM/OGU3NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVwc2VydFNldC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/set/upsertSet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/setting/defs.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/setting/defs.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isOption = isOption;\nexports.validateOption = validateOption;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isOption(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.setting.defs#option');\n}\nfunction validateOption(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.setting.defs#option', v);\n}\n//# sourceMappingURL=defs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3NldHRpbmcvZGVmcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEIsc0JBQXNCO0FBQ3RCLGVBQWUsbUJBQU8sQ0FBQywrRUFBa0I7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsdUZBQXNCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy90b29scy9vem9uZS9zZXR0aW5nL2RlZnMuanM/YTZlZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNPcHRpb24gPSBpc09wdGlvbjtcbmV4cG9ydHMudmFsaWRhdGVPcHRpb24gPSB2YWxpZGF0ZU9wdGlvbjtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi91dGlsXCIpO1xuY29uc3QgbGV4aWNvbnNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9sZXhpY29uc1wiKTtcbmZ1bmN0aW9uIGlzT3B0aW9uKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ3Rvb2xzLm96b25lLnNldHRpbmcuZGVmcyNvcHRpb24nKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlT3B0aW9uKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgndG9vbHMub3pvbmUuc2V0dGluZy5kZWZzI29wdGlvbicsIHYpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVmcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/setting/defs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/setting/listOptions.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/setting/listOptions.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=listOptions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3NldHRpbmcvbGlzdE9wdGlvbnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3NldHRpbmcvbGlzdE9wdGlvbnMuanM/MTQ0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxpc3RPcHRpb25zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/setting/listOptions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/setting/removeOptions.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/setting/removeOptions.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=removeOptions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3NldHRpbmcvcmVtb3ZlT3B0aW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvdG9vbHMvb3pvbmUvc2V0dGluZy9yZW1vdmVPcHRpb25zLmpzPzllZmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZW1vdmVPcHRpb25zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/setting/removeOptions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/setting/upsertOption.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/setting/upsertOption.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=upsertOption.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3NldHRpbmcvdXBzZXJ0T3B0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy90b29scy9vem9uZS9zZXR0aW5nL3Vwc2VydE9wdGlvbi5qcz8wN2YyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmZ1bmN0aW9uIHRvS25vd25FcnIoZSkge1xuICAgIHJldHVybiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXBzZXJ0T3B0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/setting/upsertOption.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/signature/defs.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/signature/defs.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isSigDetail = isSigDetail;\nexports.validateSigDetail = validateSigDetail;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isSigDetail(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.signature.defs#sigDetail');\n}\nfunction validateSigDetail(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.signature.defs#sigDetail', v);\n}\n//# sourceMappingURL=defs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3NpZ25hdHVyZS9kZWZzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQjtBQUNuQix5QkFBeUI7QUFDekIsZUFBZSxtQkFBTyxDQUFDLCtFQUFrQjtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBc0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3NpZ25hdHVyZS9kZWZzLmpzP2ZkMWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzU2lnRGV0YWlsID0gaXNTaWdEZXRhaWw7XG5leHBvcnRzLnZhbGlkYXRlU2lnRGV0YWlsID0gdmFsaWRhdGVTaWdEZXRhaWw7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vdXRpbFwiKTtcbmNvbnN0IGxleGljb25zXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbGV4aWNvbnNcIik7XG5mdW5jdGlvbiBpc1NpZ0RldGFpbCh2KSB7XG4gICAgcmV0dXJuICgoMCwgdXRpbF8xLmlzT2JqKSh2KSAmJlxuICAgICAgICAoMCwgdXRpbF8xLmhhc1Byb3ApKHYsICckdHlwZScpICYmXG4gICAgICAgIHYuJHR5cGUgPT09ICd0b29scy5vem9uZS5zaWduYXR1cmUuZGVmcyNzaWdEZXRhaWwnKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlU2lnRGV0YWlsKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgndG9vbHMub3pvbmUuc2lnbmF0dXJlLmRlZnMjc2lnRGV0YWlsJywgdik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWZzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/signature/defs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/signature/findCorrelation.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/signature/findCorrelation.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=findCorrelation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3NpZ25hdHVyZS9maW5kQ29ycmVsYXRpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3NpZ25hdHVyZS9maW5kQ29ycmVsYXRpb24uanM/NDRiYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZpbmRDb3JyZWxhdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/signature/findCorrelation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/signature/findRelatedAccounts.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/signature/findRelatedAccounts.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nexports.isRelatedAccount = isRelatedAccount;\nexports.validateRelatedAccount = validateRelatedAccount;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction toKnownErr(e) {\n    return e;\n}\nfunction isRelatedAccount(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.signature.findRelatedAccounts#relatedAccount');\n}\nfunction validateRelatedAccount(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.signature.findRelatedAccounts#relatedAccount', v);\n}\n//# sourceMappingURL=findRelatedAccounts.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3NpZ25hdHVyZS9maW5kUmVsYXRlZEFjY291bnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQix3QkFBd0I7QUFDeEIsOEJBQThCO0FBQzlCLGVBQWUsbUJBQU8sQ0FBQywrRUFBa0I7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsdUZBQXNCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC90eXBlcy90b29scy9vem9uZS9zaWduYXR1cmUvZmluZFJlbGF0ZWRBY2NvdW50cy5qcz8zNGUwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbmV4cG9ydHMuaXNSZWxhdGVkQWNjb3VudCA9IGlzUmVsYXRlZEFjY291bnQ7XG5leHBvcnRzLnZhbGlkYXRlUmVsYXRlZEFjY291bnQgPSB2YWxpZGF0ZVJlbGF0ZWRBY2NvdW50O1xuY29uc3QgdXRpbF8xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL3V0aWxcIik7XG5jb25zdCBsZXhpY29uc18xID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL2xleGljb25zXCIpO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG5mdW5jdGlvbiBpc1JlbGF0ZWRBY2NvdW50KHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ3Rvb2xzLm96b25lLnNpZ25hdHVyZS5maW5kUmVsYXRlZEFjY291bnRzI3JlbGF0ZWRBY2NvdW50Jyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZVJlbGF0ZWRBY2NvdW50KHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgndG9vbHMub3pvbmUuc2lnbmF0dXJlLmZpbmRSZWxhdGVkQWNjb3VudHMjcmVsYXRlZEFjY291bnQnLCB2KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZpbmRSZWxhdGVkQWNjb3VudHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/signature/findRelatedAccounts.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/signature/searchAccounts.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/signature/searchAccounts.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=searchAccounts.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3NpZ25hdHVyZS9zZWFyY2hBY2NvdW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvdG9vbHMvb3pvbmUvc2lnbmF0dXJlL3NlYXJjaEFjY291bnRzLmpzPzI2MzMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvS25vd25FcnIgPSB0b0tub3duRXJyO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZWFyY2hBY2NvdW50cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/signature/searchAccounts.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/team/addMember.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/team/addMember.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MemberAlreadyExistsError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass MemberAlreadyExistsError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.MemberAlreadyExistsError = MemberAlreadyExistsError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'MemberAlreadyExists')\n            return new MemberAlreadyExistsError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=addMember.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3RlYW0vYWRkTWVtYmVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdDQUFnQztBQUNoQyxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHVFQUFlO0FBQ3RDO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvdG9vbHMvb3pvbmUvdGVhbS9hZGRNZW1iZXIuanM/M2MxOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTWVtYmVyQWxyZWFkeUV4aXN0c0Vycm9yID0gdm9pZCAwO1xuZXhwb3J0cy50b0tub3duRXJyID0gdG9Lbm93bkVycjtcbi8qKlxuICogR0VORVJBVEVEIENPREUgLSBETyBOT1QgTU9ESUZZXG4gKi9cbmNvbnN0IHhycGNfMSA9IHJlcXVpcmUoXCJAYXRwcm90by94cnBjXCIpO1xuY2xhc3MgTWVtYmVyQWxyZWFkeUV4aXN0c0Vycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5NZW1iZXJBbHJlYWR5RXhpc3RzRXJyb3IgPSBNZW1iZXJBbHJlYWR5RXhpc3RzRXJyb3I7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIHhycGNfMS5YUlBDRXJyb3IpIHtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdNZW1iZXJBbHJlYWR5RXhpc3RzJylcbiAgICAgICAgICAgIHJldHVybiBuZXcgTWVtYmVyQWxyZWFkeUV4aXN0c0Vycm9yKGUpO1xuICAgIH1cbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFkZE1lbWJlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/team/addMember.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/team/defs.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/team/defs.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ROLETRIAGE = exports.ROLEMODERATOR = exports.ROLEADMIN = void 0;\nexports.isMember = isMember;\nexports.validateMember = validateMember;\nconst util_1 = __webpack_require__(/*! ../../../../util */ \"(ssr)/./node_modules/@atproto/api/dist/client/util.js\");\nconst lexicons_1 = __webpack_require__(/*! ../../../../lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nfunction isMember(v) {\n    return ((0, util_1.isObj)(v) &&\n        (0, util_1.hasProp)(v, '$type') &&\n        v.$type === 'tools.ozone.team.defs#member');\n}\nfunction validateMember(v) {\n    return lexicons_1.lexicons.validate('tools.ozone.team.defs#member', v);\n}\n/** Admin role. Highest level of access, can perform all actions. */\nexports.ROLEADMIN = 'tools.ozone.team.defs#roleAdmin';\n/** Moderator role. Can perform most actions. */\nexports.ROLEMODERATOR = 'tools.ozone.team.defs#roleModerator';\n/** Triage role. Mostly intended for monitoring and escalating issues. */\nexports.ROLETRIAGE = 'tools.ozone.team.defs#roleTriage';\n//# sourceMappingURL=defs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3RlYW0vZGVmcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0IsR0FBRyxxQkFBcUIsR0FBRyxpQkFBaUI7QUFDOUQsZ0JBQWdCO0FBQ2hCLHNCQUFzQjtBQUN0QixlQUFlLG1CQUFPLENBQUMsK0VBQWtCO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLHVGQUFzQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxxQkFBcUI7QUFDckI7QUFDQSxrQkFBa0I7QUFDbEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvdG9vbHMvb3pvbmUvdGVhbS9kZWZzLmpzP2JkMzUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJPTEVUUklBR0UgPSBleHBvcnRzLlJPTEVNT0RFUkFUT1IgPSBleHBvcnRzLlJPTEVBRE1JTiA9IHZvaWQgMDtcbmV4cG9ydHMuaXNNZW1iZXIgPSBpc01lbWJlcjtcbmV4cG9ydHMudmFsaWRhdGVNZW1iZXIgPSB2YWxpZGF0ZU1lbWJlcjtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi91dGlsXCIpO1xuY29uc3QgbGV4aWNvbnNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9sZXhpY29uc1wiKTtcbmZ1bmN0aW9uIGlzTWVtYmVyKHYpIHtcbiAgICByZXR1cm4gKCgwLCB1dGlsXzEuaXNPYmopKHYpICYmXG4gICAgICAgICgwLCB1dGlsXzEuaGFzUHJvcCkodiwgJyR0eXBlJykgJiZcbiAgICAgICAgdi4kdHlwZSA9PT0gJ3Rvb2xzLm96b25lLnRlYW0uZGVmcyNtZW1iZXInKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlTWVtYmVyKHYpIHtcbiAgICByZXR1cm4gbGV4aWNvbnNfMS5sZXhpY29ucy52YWxpZGF0ZSgndG9vbHMub3pvbmUudGVhbS5kZWZzI21lbWJlcicsIHYpO1xufVxuLyoqIEFkbWluIHJvbGUuIEhpZ2hlc3QgbGV2ZWwgb2YgYWNjZXNzLCBjYW4gcGVyZm9ybSBhbGwgYWN0aW9ucy4gKi9cbmV4cG9ydHMuUk9MRUFETUlOID0gJ3Rvb2xzLm96b25lLnRlYW0uZGVmcyNyb2xlQWRtaW4nO1xuLyoqIE1vZGVyYXRvciByb2xlLiBDYW4gcGVyZm9ybSBtb3N0IGFjdGlvbnMuICovXG5leHBvcnRzLlJPTEVNT0RFUkFUT1IgPSAndG9vbHMub3pvbmUudGVhbS5kZWZzI3JvbGVNb2RlcmF0b3InO1xuLyoqIFRyaWFnZSByb2xlLiBNb3N0bHkgaW50ZW5kZWQgZm9yIG1vbml0b3JpbmcgYW5kIGVzY2FsYXRpbmcgaXNzdWVzLiAqL1xuZXhwb3J0cy5ST0xFVFJJQUdFID0gJ3Rvb2xzLm96b25lLnRlYW0uZGVmcyNyb2xlVHJpYWdlJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlZnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/team/defs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/team/deleteMember.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/team/deleteMember.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CannotDeleteSelfError = exports.MemberNotFoundError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass MemberNotFoundError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.MemberNotFoundError = MemberNotFoundError;\nclass CannotDeleteSelfError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.CannotDeleteSelfError = CannotDeleteSelfError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'MemberNotFound')\n            return new MemberNotFoundError(e);\n        if (e.error === 'CannotDeleteSelf')\n            return new CannotDeleteSelfError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=deleteMember.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3RlYW0vZGVsZXRlTWVtYmVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDZCQUE2QixHQUFHLDJCQUEyQjtBQUMzRCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHVFQUFlO0FBQ3RDO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3RlYW0vZGVsZXRlTWVtYmVyLmpzPzc3MjIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNhbm5vdERlbGV0ZVNlbGZFcnJvciA9IGV4cG9ydHMuTWVtYmVyTm90Rm91bmRFcnJvciA9IHZvaWQgMDtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG4vKipcbiAqIEdFTkVSQVRFRCBDT0RFIC0gRE8gTk9UIE1PRElGWVxuICovXG5jb25zdCB4cnBjXzEgPSByZXF1aXJlKFwiQGF0cHJvdG8veHJwY1wiKTtcbmNsYXNzIE1lbWJlck5vdEZvdW5kRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLk1lbWJlck5vdEZvdW5kRXJyb3IgPSBNZW1iZXJOb3RGb3VuZEVycm9yO1xuY2xhc3MgQ2Fubm90RGVsZXRlU2VsZkVycm9yIGV4dGVuZHMgeHJwY18xLlhSUENFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3JjKSB7XG4gICAgICAgIHN1cGVyKHNyYy5zdGF0dXMsIHNyYy5lcnJvciwgc3JjLm1lc3NhZ2UsIHNyYy5oZWFkZXJzLCB7IGNhdXNlOiBzcmMgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5DYW5ub3REZWxldGVTZWxmRXJyb3IgPSBDYW5ub3REZWxldGVTZWxmRXJyb3I7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIHhycGNfMS5YUlBDRXJyb3IpIHtcbiAgICAgICAgaWYgKGUuZXJyb3IgPT09ICdNZW1iZXJOb3RGb3VuZCcpXG4gICAgICAgICAgICByZXR1cm4gbmV3IE1lbWJlck5vdEZvdW5kRXJyb3IoZSk7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnQ2Fubm90RGVsZXRlU2VsZicpXG4gICAgICAgICAgICByZXR1cm4gbmV3IENhbm5vdERlbGV0ZVNlbGZFcnJvcihlKTtcbiAgICB9XG4gICAgcmV0dXJuIGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWxldGVNZW1iZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/team/deleteMember.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/team/listMembers.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/team/listMembers.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toKnownErr = toKnownErr;\nfunction toKnownErr(e) {\n    return e;\n}\n//# sourceMappingURL=listMembers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3RlYW0vbGlzdE1lbWJlcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3RlYW0vbGlzdE1lbWJlcnMuanM/MTljYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG5mdW5jdGlvbiB0b0tub3duRXJyKGUpIHtcbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxpc3RNZW1iZXJzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/team/listMembers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/team/updateMember.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/types/tools/ozone/team/updateMember.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MemberNotFoundError = void 0;\nexports.toKnownErr = toKnownErr;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nconst xrpc_1 = __webpack_require__(/*! @atproto/xrpc */ \"(ssr)/./node_modules/@atproto/xrpc/dist/index.js\");\nclass MemberNotFoundError extends xrpc_1.XRPCError {\n    constructor(src) {\n        super(src.status, src.error, src.message, src.headers, { cause: src });\n    }\n}\nexports.MemberNotFoundError = MemberNotFoundError;\nfunction toKnownErr(e) {\n    if (e instanceof xrpc_1.XRPCError) {\n        if (e.error === 'MemberNotFound')\n            return new MemberNotFoundError(e);\n    }\n    return e;\n}\n//# sourceMappingURL=updateMember.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3R5cGVzL3Rvb2xzL296b25lL3RlYW0vdXBkYXRlTWVtYmVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQjtBQUMzQixrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHVFQUFlO0FBQ3RDO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9jbGllbnQvdHlwZXMvdG9vbHMvb3pvbmUvdGVhbS91cGRhdGVNZW1iZXIuanM/OGRlNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTWVtYmVyTm90Rm91bmRFcnJvciA9IHZvaWQgMDtcbmV4cG9ydHMudG9Lbm93bkVyciA9IHRvS25vd25FcnI7XG4vKipcbiAqIEdFTkVSQVRFRCBDT0RFIC0gRE8gTk9UIE1PRElGWVxuICovXG5jb25zdCB4cnBjXzEgPSByZXF1aXJlKFwiQGF0cHJvdG8veHJwY1wiKTtcbmNsYXNzIE1lbWJlck5vdEZvdW5kRXJyb3IgZXh0ZW5kcyB4cnBjXzEuWFJQQ0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgc3VwZXIoc3JjLnN0YXR1cywgc3JjLmVycm9yLCBzcmMubWVzc2FnZSwgc3JjLmhlYWRlcnMsIHsgY2F1c2U6IHNyYyB9KTtcbiAgICB9XG59XG5leHBvcnRzLk1lbWJlck5vdEZvdW5kRXJyb3IgPSBNZW1iZXJOb3RGb3VuZEVycm9yO1xuZnVuY3Rpb24gdG9Lbm93bkVycihlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiB4cnBjXzEuWFJQQ0Vycm9yKSB7XG4gICAgICAgIGlmIChlLmVycm9yID09PSAnTWVtYmVyTm90Rm91bmQnKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBNZW1iZXJOb3RGb3VuZEVycm9yKGUpO1xuICAgIH1cbiAgICByZXR1cm4gZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVwZGF0ZU1lbWJlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/types/tools/ozone/team/updateMember.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/client/util.js":
/*!*******************************************************!*\
  !*** ./node_modules/@atproto/api/dist/client/util.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isObj = isObj;\nexports.hasProp = hasProp;\n/**\n * GENERATED CODE - DO NOT MODIFY\n */\nfunction isObj(v) {\n    return typeof v === 'object' && v !== null;\n}\nfunction hasProp(data, prop) {\n    return prop in data;\n}\n//# sourceMappingURL=util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY2xpZW50L3V0aWwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYTtBQUNiLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NsaWVudC91dGlsLmpzP2ViZTAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzT2JqID0gaXNPYmo7XG5leHBvcnRzLmhhc1Byb3AgPSBoYXNQcm9wO1xuLyoqXG4gKiBHRU5FUkFURUQgQ09ERSAtIERPIE5PVCBNT0RJRllcbiAqL1xuZnVuY3Rpb24gaXNPYmoodikge1xuICAgIHJldHVybiB0eXBlb2YgdiA9PT0gJ29iamVjdCcgJiYgdiAhPT0gbnVsbDtcbn1cbmZ1bmN0aW9uIGhhc1Byb3AoZGF0YSwgcHJvcCkge1xuICAgIHJldHVybiBwcm9wIGluIGRhdGE7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/client/util.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/const.js":
/*!*************************************************!*\
  !*** ./node_modules/@atproto/api/dist/const.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BSKY_LABELER_DID = void 0;\nexports.BSKY_LABELER_DID = 'did:plc:ar7c4by46qjdydhdevvrndac';\n//# sourceMappingURL=const.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvY29uc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLHdCQUF3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L2NvbnN0LmpzPzE4NmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkJTS1lfTEFCRUxFUl9ESUQgPSB2b2lkIDA7XG5leHBvcnRzLkJTS1lfTEFCRUxFUl9ESUQgPSAnZGlkOnBsYzphcjdjNGJ5NDZxamR5ZGhkZXZ2cm5kYWMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3QuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/const.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/index.js":
/*!*************************************************!*\
  !*** ./node_modules/@atproto/api/dist/index.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.lexicons = exports[\"default\"] = exports.BskyAgent = exports.CredentialSession = exports.AtpAgent = exports.Agent = exports.LABELS = exports.DEFAULT_LABEL_SETTINGS = exports.schemas = exports.parseLanguage = exports.stringifyLex = exports.lexToJson = exports.jsonToLex = exports.jsonStringToLex = exports.BlobRef = exports.AtUri = void 0;\nconst lexicon_1 = __webpack_require__(/*! @atproto/lexicon */ \"(ssr)/./node_modules/@atproto/lexicon/dist/index.js\");\nconst lexicons_1 = __webpack_require__(/*! ./client/lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nvar syntax_1 = __webpack_require__(/*! @atproto/syntax */ \"(ssr)/./node_modules/@atproto/syntax/dist/index.js\");\nObject.defineProperty(exports, \"AtUri\", ({ enumerable: true, get: function () { return syntax_1.AtUri; } }));\nvar lexicon_2 = __webpack_require__(/*! @atproto/lexicon */ \"(ssr)/./node_modules/@atproto/lexicon/dist/index.js\");\nObject.defineProperty(exports, \"BlobRef\", ({ enumerable: true, get: function () { return lexicon_2.BlobRef; } }));\nObject.defineProperty(exports, \"jsonStringToLex\", ({ enumerable: true, get: function () { return lexicon_2.jsonStringToLex; } }));\nObject.defineProperty(exports, \"jsonToLex\", ({ enumerable: true, get: function () { return lexicon_2.jsonToLex; } }));\nObject.defineProperty(exports, \"lexToJson\", ({ enumerable: true, get: function () { return lexicon_2.lexToJson; } }));\nObject.defineProperty(exports, \"stringifyLex\", ({ enumerable: true, get: function () { return lexicon_2.stringifyLex; } }));\nvar common_web_1 = __webpack_require__(/*! @atproto/common-web */ \"(ssr)/./node_modules/@atproto/common-web/dist/index.js\");\nObject.defineProperty(exports, \"parseLanguage\", ({ enumerable: true, get: function () { return common_web_1.parseLanguage; } }));\n__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@atproto/api/dist/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./const */ \"(ssr)/./node_modules/@atproto/api/dist/const.js\"), exports);\n__exportStar(__webpack_require__(/*! ./util */ \"(ssr)/./node_modules/@atproto/api/dist/util.js\"), exports);\n__exportStar(__webpack_require__(/*! ./client */ \"(ssr)/./node_modules/@atproto/api/dist/client/index.js\"), exports);\nvar lexicons_2 = __webpack_require__(/*! ./client/lexicons */ \"(ssr)/./node_modules/@atproto/api/dist/client/lexicons.js\");\nObject.defineProperty(exports, \"schemas\", ({ enumerable: true, get: function () { return lexicons_2.schemas; } }));\n__exportStar(__webpack_require__(/*! ./rich-text/rich-text */ \"(ssr)/./node_modules/@atproto/api/dist/rich-text/rich-text.js\"), exports);\n__exportStar(__webpack_require__(/*! ./rich-text/sanitization */ \"(ssr)/./node_modules/@atproto/api/dist/rich-text/sanitization.js\"), exports);\n__exportStar(__webpack_require__(/*! ./rich-text/unicode */ \"(ssr)/./node_modules/@atproto/api/dist/rich-text/unicode.js\"), exports);\n__exportStar(__webpack_require__(/*! ./rich-text/util */ \"(ssr)/./node_modules/@atproto/api/dist/rich-text/util.js\"), exports);\n__exportStar(__webpack_require__(/*! ./moderation */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./moderation/types */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./mocker */ \"(ssr)/./node_modules/@atproto/api/dist/mocker.js\"), exports);\nvar labels_1 = __webpack_require__(/*! ./moderation/const/labels */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/const/labels.js\");\nObject.defineProperty(exports, \"DEFAULT_LABEL_SETTINGS\", ({ enumerable: true, get: function () { return labels_1.DEFAULT_LABEL_SETTINGS; } }));\nObject.defineProperty(exports, \"LABELS\", ({ enumerable: true, get: function () { return labels_1.LABELS; } }));\nvar agent_1 = __webpack_require__(/*! ./agent */ \"(ssr)/./node_modules/@atproto/api/dist/agent.js\");\nObject.defineProperty(exports, \"Agent\", ({ enumerable: true, get: function () { return agent_1.Agent; } }));\nvar atp_agent_1 = __webpack_require__(/*! ./atp-agent */ \"(ssr)/./node_modules/@atproto/api/dist/atp-agent.js\");\nObject.defineProperty(exports, \"AtpAgent\", ({ enumerable: true, get: function () { return atp_agent_1.AtpAgent; } }));\nvar atp_agent_2 = __webpack_require__(/*! ./atp-agent */ \"(ssr)/./node_modules/@atproto/api/dist/atp-agent.js\");\nObject.defineProperty(exports, \"CredentialSession\", ({ enumerable: true, get: function () { return atp_agent_2.CredentialSession; } }));\nvar bsky_agent_1 = __webpack_require__(/*! ./bsky-agent */ \"(ssr)/./node_modules/@atproto/api/dist/bsky-agent.js\");\nObject.defineProperty(exports, \"BskyAgent\", ({ enumerable: true, get: function () { return bsky_agent_1.BskyAgent; } }));\nvar atp_agent_3 = __webpack_require__(/*! ./atp-agent */ \"(ssr)/./node_modules/@atproto/api/dist/atp-agent.js\");\n/** @deprecated */\nObject.defineProperty(exports, \"default\", ({ enumerable: true, get: function () { return atp_agent_3.AtpAgent; } }));\n// Expose a copy to prevent alteration of the internal Lexicon instance used by\n// the AtpBaseClient class.\nexports.lexicons = new lexicon_1.Lexicons(lexicons_1.lexicons);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/mocker.js":
/*!**************************************************!*\
  !*** ./node_modules/@atproto/api/dist/mocker.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mock = void 0;\nconst FAKE_CID = 'bafyreiclp443lavogvhj3d2ob2cxbfuscni2k5jk7bebjzg7khl3esabwq';\nexports.mock = {\n    post({ text, facets, reply, embed, }) {\n        return {\n            $type: 'app.bsky.feed.post',\n            text,\n            facets,\n            reply,\n            embed,\n            langs: ['en'],\n            createdAt: new Date().toISOString(),\n        };\n    },\n    postView({ record, author, embed, replyCount, repostCount, likeCount, viewer, labels, }) {\n        return {\n            $type: 'app.bsky.feed.defs#postView',\n            uri: `at://${author.did}/app.bsky.feed.post/fake`,\n            cid: FAKE_CID,\n            author,\n            record,\n            embed,\n            replyCount,\n            repostCount,\n            likeCount,\n            indexedAt: new Date().toISOString(),\n            viewer,\n            labels,\n        };\n    },\n    embedRecordView({ record, author, labels, }) {\n        return {\n            $type: 'app.bsky.embed.record#view',\n            record: {\n                $type: 'app.bsky.embed.record#viewRecord',\n                uri: `at://${author.did}/app.bsky.feed.post/fake`,\n                cid: FAKE_CID,\n                author,\n                value: record,\n                labels,\n                indexedAt: new Date().toISOString(),\n            },\n        };\n    },\n    profileViewBasic({ handle, displayName, description, viewer, labels, }) {\n        return {\n            did: `did:web:${handle}`,\n            handle,\n            displayName,\n            description, // technically not in ProfileViewBasic but useful in some cases\n            viewer,\n            labels,\n        };\n    },\n    actorViewerState({ muted, mutedByList, blockedBy, blocking, blockingByList, following, followedBy, }) {\n        return {\n            muted,\n            mutedByList,\n            blockedBy,\n            blocking,\n            blockingByList,\n            following,\n            followedBy,\n        };\n    },\n    listViewBasic({ name }) {\n        return {\n            uri: 'at://did:plc:fake/app.bsky.graph.list/fake',\n            cid: FAKE_CID,\n            name,\n            purpose: 'app.bsky.graph.defs#modlist',\n            indexedAt: new Date().toISOString(),\n        };\n    },\n    replyNotification({ author, record, labels, }) {\n        return {\n            uri: `at://${author.did}/app.bsky.feed.post/fake`,\n            cid: FAKE_CID,\n            author,\n            reason: 'reply',\n            reasonSubject: `at://${author.did}/app.bsky.feed.post/fake-parent`,\n            record,\n            isRead: false,\n            indexedAt: new Date().toISOString(),\n            labels,\n        };\n    },\n    followNotification({ author, subjectDid, labels, }) {\n        return {\n            uri: `at://${author.did}/app.bsky.graph.follow/fake`,\n            cid: FAKE_CID,\n            author,\n            reason: 'follow',\n            record: {\n                $type: 'app.bsky.graph.follow',\n                createdAt: new Date().toISOString(),\n                subject: subjectDid,\n            },\n            isRead: false,\n            indexedAt: new Date().toISOString(),\n            labels,\n        };\n    },\n    label({ val, uri, src, }) {\n        return {\n            src: src || 'did:plc:fake-labeler',\n            uri,\n            val,\n            cts: new Date().toISOString(),\n        };\n    },\n};\n//# sourceMappingURL=mocker.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvbW9ja2VyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELFlBQVk7QUFDWjtBQUNBLFlBQVk7QUFDWixXQUFXLDZCQUE2QjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsZUFBZSw0RUFBNEU7QUFDM0Y7QUFDQTtBQUNBLHlCQUF5QixXQUFXO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsc0JBQXNCLHlCQUF5QjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixXQUFXO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxLQUFLO0FBQ0wsdUJBQXVCLG1EQUFtRDtBQUMxRTtBQUNBLDRCQUE0QixPQUFPO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCx1QkFBdUIsaUZBQWlGO0FBQ3hHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxvQkFBb0IsTUFBTTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCx3QkFBd0IseUJBQXlCO0FBQ2pEO0FBQ0EseUJBQXlCLFdBQVc7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLFdBQVc7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCx5QkFBeUIsNkJBQTZCO0FBQ3REO0FBQ0EseUJBQXlCLFdBQVc7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWSxnQkFBZ0I7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9tb2NrZXIuanM/YTU3YSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubW9jayA9IHZvaWQgMDtcbmNvbnN0IEZBS0VfQ0lEID0gJ2JhZnlyZWljbHA0NDNsYXZvZ3ZoajNkMm9iMmN4YmZ1c2NuaTJrNWprN2JlYmp6ZzdraGwzZXNhYndxJztcbmV4cG9ydHMubW9jayA9IHtcbiAgICBwb3N0KHsgdGV4dCwgZmFjZXRzLCByZXBseSwgZW1iZWQsIH0pIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICR0eXBlOiAnYXBwLmJza3kuZmVlZC5wb3N0JyxcbiAgICAgICAgICAgIHRleHQsXG4gICAgICAgICAgICBmYWNldHMsXG4gICAgICAgICAgICByZXBseSxcbiAgICAgICAgICAgIGVtYmVkLFxuICAgICAgICAgICAgbGFuZ3M6IFsnZW4nXSxcbiAgICAgICAgICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgICB9O1xuICAgIH0sXG4gICAgcG9zdFZpZXcoeyByZWNvcmQsIGF1dGhvciwgZW1iZWQsIHJlcGx5Q291bnQsIHJlcG9zdENvdW50LCBsaWtlQ291bnQsIHZpZXdlciwgbGFiZWxzLCB9KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAkdHlwZTogJ2FwcC5ic2t5LmZlZWQuZGVmcyNwb3N0VmlldycsXG4gICAgICAgICAgICB1cmk6IGBhdDovLyR7YXV0aG9yLmRpZH0vYXBwLmJza3kuZmVlZC5wb3N0L2Zha2VgLFxuICAgICAgICAgICAgY2lkOiBGQUtFX0NJRCxcbiAgICAgICAgICAgIGF1dGhvcixcbiAgICAgICAgICAgIHJlY29yZCxcbiAgICAgICAgICAgIGVtYmVkLFxuICAgICAgICAgICAgcmVwbHlDb3VudCxcbiAgICAgICAgICAgIHJlcG9zdENvdW50LFxuICAgICAgICAgICAgbGlrZUNvdW50LFxuICAgICAgICAgICAgaW5kZXhlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICAgICAgICB2aWV3ZXIsXG4gICAgICAgICAgICBsYWJlbHMsXG4gICAgICAgIH07XG4gICAgfSxcbiAgICBlbWJlZFJlY29yZFZpZXcoeyByZWNvcmQsIGF1dGhvciwgbGFiZWxzLCB9KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAkdHlwZTogJ2FwcC5ic2t5LmVtYmVkLnJlY29yZCN2aWV3JyxcbiAgICAgICAgICAgIHJlY29yZDoge1xuICAgICAgICAgICAgICAgICR0eXBlOiAnYXBwLmJza3kuZW1iZWQucmVjb3JkI3ZpZXdSZWNvcmQnLFxuICAgICAgICAgICAgICAgIHVyaTogYGF0Oi8vJHthdXRob3IuZGlkfS9hcHAuYnNreS5mZWVkLnBvc3QvZmFrZWAsXG4gICAgICAgICAgICAgICAgY2lkOiBGQUtFX0NJRCxcbiAgICAgICAgICAgICAgICBhdXRob3IsXG4gICAgICAgICAgICAgICAgdmFsdWU6IHJlY29yZCxcbiAgICAgICAgICAgICAgICBsYWJlbHMsXG4gICAgICAgICAgICAgICAgaW5kZXhlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH0sXG4gICAgcHJvZmlsZVZpZXdCYXNpYyh7IGhhbmRsZSwgZGlzcGxheU5hbWUsIGRlc2NyaXB0aW9uLCB2aWV3ZXIsIGxhYmVscywgfSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZGlkOiBgZGlkOndlYjoke2hhbmRsZX1gLFxuICAgICAgICAgICAgaGFuZGxlLFxuICAgICAgICAgICAgZGlzcGxheU5hbWUsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbiwgLy8gdGVjaG5pY2FsbHkgbm90IGluIFByb2ZpbGVWaWV3QmFzaWMgYnV0IHVzZWZ1bCBpbiBzb21lIGNhc2VzXG4gICAgICAgICAgICB2aWV3ZXIsXG4gICAgICAgICAgICBsYWJlbHMsXG4gICAgICAgIH07XG4gICAgfSxcbiAgICBhY3RvclZpZXdlclN0YXRlKHsgbXV0ZWQsIG11dGVkQnlMaXN0LCBibG9ja2VkQnksIGJsb2NraW5nLCBibG9ja2luZ0J5TGlzdCwgZm9sbG93aW5nLCBmb2xsb3dlZEJ5LCB9KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBtdXRlZCxcbiAgICAgICAgICAgIG11dGVkQnlMaXN0LFxuICAgICAgICAgICAgYmxvY2tlZEJ5LFxuICAgICAgICAgICAgYmxvY2tpbmcsXG4gICAgICAgICAgICBibG9ja2luZ0J5TGlzdCxcbiAgICAgICAgICAgIGZvbGxvd2luZyxcbiAgICAgICAgICAgIGZvbGxvd2VkQnksXG4gICAgICAgIH07XG4gICAgfSxcbiAgICBsaXN0Vmlld0Jhc2ljKHsgbmFtZSB9KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB1cmk6ICdhdDovL2RpZDpwbGM6ZmFrZS9hcHAuYnNreS5ncmFwaC5saXN0L2Zha2UnLFxuICAgICAgICAgICAgY2lkOiBGQUtFX0NJRCxcbiAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICBwdXJwb3NlOiAnYXBwLmJza3kuZ3JhcGguZGVmcyNtb2RsaXN0JyxcbiAgICAgICAgICAgIGluZGV4ZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgICB9O1xuICAgIH0sXG4gICAgcmVwbHlOb3RpZmljYXRpb24oeyBhdXRob3IsIHJlY29yZCwgbGFiZWxzLCB9KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB1cmk6IGBhdDovLyR7YXV0aG9yLmRpZH0vYXBwLmJza3kuZmVlZC5wb3N0L2Zha2VgLFxuICAgICAgICAgICAgY2lkOiBGQUtFX0NJRCxcbiAgICAgICAgICAgIGF1dGhvcixcbiAgICAgICAgICAgIHJlYXNvbjogJ3JlcGx5JyxcbiAgICAgICAgICAgIHJlYXNvblN1YmplY3Q6IGBhdDovLyR7YXV0aG9yLmRpZH0vYXBwLmJza3kuZmVlZC5wb3N0L2Zha2UtcGFyZW50YCxcbiAgICAgICAgICAgIHJlY29yZCxcbiAgICAgICAgICAgIGlzUmVhZDogZmFsc2UsXG4gICAgICAgICAgICBpbmRleGVkQXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgICAgICAgIGxhYmVscyxcbiAgICAgICAgfTtcbiAgICB9LFxuICAgIGZvbGxvd05vdGlmaWNhdGlvbih7IGF1dGhvciwgc3ViamVjdERpZCwgbGFiZWxzLCB9KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB1cmk6IGBhdDovLyR7YXV0aG9yLmRpZH0vYXBwLmJza3kuZ3JhcGguZm9sbG93L2Zha2VgLFxuICAgICAgICAgICAgY2lkOiBGQUtFX0NJRCxcbiAgICAgICAgICAgIGF1dGhvcixcbiAgICAgICAgICAgIHJlYXNvbjogJ2ZvbGxvdycsXG4gICAgICAgICAgICByZWNvcmQ6IHtcbiAgICAgICAgICAgICAgICAkdHlwZTogJ2FwcC5ic2t5LmdyYXBoLmZvbGxvdycsXG4gICAgICAgICAgICAgICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICAgICAgICAgICAgc3ViamVjdDogc3ViamVjdERpZCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpc1JlYWQ6IGZhbHNlLFxuICAgICAgICAgICAgaW5kZXhlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICAgICAgICBsYWJlbHMsXG4gICAgICAgIH07XG4gICAgfSxcbiAgICBsYWJlbCh7IHZhbCwgdXJpLCBzcmMsIH0pIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHNyYzogc3JjIHx8ICdkaWQ6cGxjOmZha2UtbGFiZWxlcicsXG4gICAgICAgICAgICB1cmksXG4gICAgICAgICAgICB2YWwsXG4gICAgICAgICAgICBjdHM6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgICAgfTtcbiAgICB9LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1vY2tlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/mocker.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/moderation/const/labels.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/moderation/const/labels.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LABELS = exports.DEFAULT_LABEL_SETTINGS = void 0;\nexports.DEFAULT_LABEL_SETTINGS = {\n    porn: 'hide',\n    sexual: 'warn',\n    nudity: 'ignore',\n    'graphic-media': 'warn',\n};\nexports.LABELS = {\n    '!hide': {\n        identifier: '!hide',\n        configurable: false,\n        defaultSetting: 'hide',\n        flags: ['no-override', 'no-self'],\n        severity: 'alert',\n        blurs: 'content',\n        behaviors: {\n            account: {\n                profileList: 'blur',\n                profileView: 'blur',\n                avatar: 'blur',\n                banner: 'blur',\n                displayName: 'blur',\n                contentList: 'blur',\n                contentView: 'blur',\n            },\n            profile: {\n                avatar: 'blur',\n                banner: 'blur',\n                displayName: 'blur',\n            },\n            content: {\n                contentList: 'blur',\n                contentView: 'blur',\n            },\n        },\n        locales: [],\n    },\n    '!warn': {\n        identifier: '!warn',\n        configurable: false,\n        defaultSetting: 'warn',\n        flags: ['no-self'],\n        severity: 'none',\n        blurs: 'content',\n        behaviors: {\n            account: {\n                profileList: 'blur',\n                profileView: 'blur',\n                avatar: 'blur',\n                banner: 'blur',\n                contentList: 'blur',\n                contentView: 'blur',\n            },\n            profile: {\n                avatar: 'blur',\n                banner: 'blur',\n                displayName: 'blur',\n            },\n            content: {\n                contentList: 'blur',\n                contentView: 'blur',\n            },\n        },\n        locales: [],\n    },\n    '!no-unauthenticated': {\n        identifier: '!no-unauthenticated',\n        configurable: false,\n        defaultSetting: 'hide',\n        flags: ['no-override', 'unauthed'],\n        severity: 'none',\n        blurs: 'content',\n        behaviors: {\n            account: {\n                profileList: 'blur',\n                profileView: 'blur',\n                avatar: 'blur',\n                banner: 'blur',\n                displayName: 'blur',\n                contentList: 'blur',\n                contentView: 'blur',\n            },\n            profile: {\n                avatar: 'blur',\n                banner: 'blur',\n                displayName: 'blur',\n            },\n            content: {\n                contentList: 'blur',\n                contentView: 'blur',\n            },\n        },\n        locales: [],\n    },\n    porn: {\n        identifier: 'porn',\n        configurable: true,\n        defaultSetting: 'hide',\n        flags: ['adult'],\n        severity: 'none',\n        blurs: 'media',\n        behaviors: {\n            account: {\n                avatar: 'blur',\n                banner: 'blur',\n            },\n            profile: {\n                avatar: 'blur',\n                banner: 'blur',\n            },\n            content: {\n                contentMedia: 'blur',\n            },\n        },\n        locales: [],\n    },\n    sexual: {\n        identifier: 'sexual',\n        configurable: true,\n        defaultSetting: 'warn',\n        flags: ['adult'],\n        severity: 'none',\n        blurs: 'media',\n        behaviors: {\n            account: {\n                avatar: 'blur',\n                banner: 'blur',\n            },\n            profile: {\n                avatar: 'blur',\n                banner: 'blur',\n            },\n            content: {\n                contentMedia: 'blur',\n            },\n        },\n        locales: [],\n    },\n    nudity: {\n        identifier: 'nudity',\n        configurable: true,\n        defaultSetting: 'ignore',\n        flags: [],\n        severity: 'none',\n        blurs: 'media',\n        behaviors: {\n            account: {\n                avatar: 'blur',\n                banner: 'blur',\n            },\n            profile: {\n                avatar: 'blur',\n                banner: 'blur',\n            },\n            content: {\n                contentMedia: 'blur',\n            },\n        },\n        locales: [],\n    },\n    'graphic-media': {\n        identifier: 'graphic-media',\n        flags: ['adult'],\n        configurable: true,\n        defaultSetting: 'warn',\n        severity: 'none',\n        blurs: 'media',\n        behaviors: {\n            account: {\n                avatar: 'blur',\n                banner: 'blur',\n            },\n            profile: {\n                avatar: 'blur',\n                banner: 'blur',\n            },\n            content: {\n                contentMedia: 'blur',\n            },\n        },\n        locales: [],\n    },\n    /** @deprecated alias for `graphic-media` */\n    gore: {\n        identifier: 'gore',\n        flags: ['adult'],\n        configurable: true,\n        defaultSetting: 'warn',\n        severity: 'none',\n        blurs: 'media',\n        behaviors: {\n            account: {\n                avatar: 'blur',\n                banner: 'blur',\n            },\n            profile: {\n                avatar: 'blur',\n                banner: 'blur',\n            },\n            content: {\n                contentMedia: 'blur',\n            },\n        },\n        locales: [],\n    },\n};\n//# sourceMappingURL=labels.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/moderation/const/labels.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/moderation/decision.js":
/*!***************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/moderation/decision.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ModerationDecision = void 0;\nconst labels_1 = __webpack_require__(/*! ./const/labels */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/const/labels.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/types.js\");\nconst ui_1 = __webpack_require__(/*! ./ui */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/ui.js\");\nvar ModerationBehaviorSeverity;\n(function (ModerationBehaviorSeverity) {\n    ModerationBehaviorSeverity[ModerationBehaviorSeverity[\"High\"] = 0] = \"High\";\n    ModerationBehaviorSeverity[ModerationBehaviorSeverity[\"Medium\"] = 1] = \"Medium\";\n    ModerationBehaviorSeverity[ModerationBehaviorSeverity[\"Low\"] = 2] = \"Low\";\n})(ModerationBehaviorSeverity || (ModerationBehaviorSeverity = {}));\nclass ModerationDecision {\n    constructor() {\n        Object.defineProperty(this, \"did\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: ''\n        });\n        Object.defineProperty(this, \"isMe\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"causes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n    }\n    static merge(...decisions) {\n        const decisionsFiltered = decisions.filter((v) => !!v);\n        const decision = new ModerationDecision();\n        if (decisionsFiltered[0]) {\n            decision.did = decisionsFiltered[0].did;\n            decision.isMe = decisionsFiltered[0].isMe;\n        }\n        decision.causes = decisionsFiltered.flatMap((d) => d.causes);\n        return decision;\n    }\n    downgrade() {\n        for (const cause of this.causes) {\n            cause.downgraded = true;\n        }\n        return this;\n    }\n    get blocked() {\n        return !!this.blockCause;\n    }\n    get muted() {\n        return !!this.muteCause;\n    }\n    get blockCause() {\n        return this.causes.find((cause) => cause.type === 'blocking' ||\n            cause.type === 'blocked-by' ||\n            cause.type === 'block-other');\n    }\n    get muteCause() {\n        return this.causes.find((cause) => cause.type === 'muted');\n    }\n    get labelCauses() {\n        return this.causes.filter((cause) => cause.type === 'label');\n    }\n    ui(context) {\n        const ui = new ui_1.ModerationUI();\n        for (const cause of this.causes) {\n            if (cause.type === 'blocking' ||\n                cause.type === 'blocked-by' ||\n                cause.type === 'block-other') {\n                if (this.isMe) {\n                    continue;\n                }\n                if (context === 'profileList' || context === 'contentList') {\n                    ui.filters.push(cause);\n                }\n                if (!cause.downgraded) {\n                    if (types_1.BLOCK_BEHAVIOR[context] === 'blur') {\n                        ui.noOverride = true;\n                        ui.blurs.push(cause);\n                    }\n                    else if (types_1.BLOCK_BEHAVIOR[context] === 'alert') {\n                        ui.alerts.push(cause);\n                    }\n                    else if (types_1.BLOCK_BEHAVIOR[context] === 'inform') {\n                        ui.informs.push(cause);\n                    }\n                }\n            }\n            else if (cause.type === 'muted') {\n                if (this.isMe) {\n                    continue;\n                }\n                if (context === 'profileList' || context === 'contentList') {\n                    ui.filters.push(cause);\n                }\n                if (!cause.downgraded) {\n                    if (types_1.MUTE_BEHAVIOR[context] === 'blur') {\n                        ui.blurs.push(cause);\n                    }\n                    else if (types_1.MUTE_BEHAVIOR[context] === 'alert') {\n                        ui.alerts.push(cause);\n                    }\n                    else if (types_1.MUTE_BEHAVIOR[context] === 'inform') {\n                        ui.informs.push(cause);\n                    }\n                }\n            }\n            else if (cause.type === 'mute-word') {\n                if (this.isMe) {\n                    continue;\n                }\n                if (context === 'contentList') {\n                    ui.filters.push(cause);\n                }\n                if (!cause.downgraded) {\n                    if (types_1.MUTEWORD_BEHAVIOR[context] === 'blur') {\n                        ui.blurs.push(cause);\n                    }\n                    else if (types_1.MUTEWORD_BEHAVIOR[context] === 'alert') {\n                        ui.alerts.push(cause);\n                    }\n                    else if (types_1.MUTEWORD_BEHAVIOR[context] === 'inform') {\n                        ui.informs.push(cause);\n                    }\n                }\n            }\n            else if (cause.type === 'hidden') {\n                if (context === 'profileList' || context === 'contentList') {\n                    ui.filters.push(cause);\n                }\n                if (!cause.downgraded) {\n                    if (types_1.HIDE_BEHAVIOR[context] === 'blur') {\n                        ui.blurs.push(cause);\n                    }\n                    else if (types_1.HIDE_BEHAVIOR[context] === 'alert') {\n                        ui.alerts.push(cause);\n                    }\n                    else if (types_1.HIDE_BEHAVIOR[context] === 'inform') {\n                        ui.informs.push(cause);\n                    }\n                }\n            }\n            else if (cause.type === 'label') {\n                if (context === 'profileList' && cause.target === 'account') {\n                    if (cause.setting === 'hide' && !this.isMe) {\n                        ui.filters.push(cause);\n                    }\n                }\n                else if (context === 'contentList' &&\n                    (cause.target === 'account' || cause.target === 'content')) {\n                    if (cause.setting === 'hide' && !this.isMe) {\n                        ui.filters.push(cause);\n                    }\n                }\n                if (!cause.downgraded) {\n                    if (cause.behavior[context] === 'blur') {\n                        ui.blurs.push(cause);\n                        if (cause.noOverride && !this.isMe) {\n                            ui.noOverride = true;\n                        }\n                    }\n                    else if (cause.behavior[context] === 'alert') {\n                        ui.alerts.push(cause);\n                    }\n                    else if (cause.behavior[context] === 'inform') {\n                        ui.informs.push(cause);\n                    }\n                }\n            }\n        }\n        ui.filters.sort(sortByPriority);\n        ui.blurs.sort(sortByPriority);\n        return ui;\n    }\n    setDid(did) {\n        this.did = did;\n    }\n    setIsMe(isMe) {\n        this.isMe = isMe;\n    }\n    addHidden(hidden) {\n        if (hidden) {\n            this.causes.push({\n                type: 'hidden',\n                source: { type: 'user' },\n                priority: 6,\n            });\n        }\n    }\n    addMutedWord(mutedWord) {\n        if (mutedWord) {\n            this.causes.push({\n                type: 'mute-word',\n                source: { type: 'user' },\n                priority: 6,\n            });\n        }\n    }\n    addBlocking(blocking) {\n        if (blocking) {\n            this.causes.push({\n                type: 'blocking',\n                source: { type: 'user' },\n                priority: 3,\n            });\n        }\n    }\n    addBlockingByList(blockingByList) {\n        if (blockingByList) {\n            this.causes.push({\n                type: 'blocking',\n                source: { type: 'list', list: blockingByList },\n                priority: 3,\n            });\n        }\n    }\n    addBlockedBy(blockedBy) {\n        if (blockedBy) {\n            this.causes.push({\n                type: 'blocked-by',\n                source: { type: 'user' },\n                priority: 4,\n            });\n        }\n    }\n    addBlockOther(blockOther) {\n        if (blockOther) {\n            this.causes.push({\n                type: 'block-other',\n                source: { type: 'user' },\n                priority: 4,\n            });\n        }\n    }\n    addLabel(target, label, opts) {\n        // look up the label definition\n        const labelDef = types_1.CUSTOM_LABEL_VALUE_RE.test(label.val)\n            ? opts.labelDefs?.[label.src]?.find((def) => def.identifier === label.val) || labels_1.LABELS[label.val]\n            : labels_1.LABELS[label.val];\n        if (!labelDef) {\n            // ignore labels we don't understand\n            return;\n        }\n        // look up the label preference\n        const isSelf = label.src === this.did;\n        const labeler = isSelf\n            ? undefined\n            : opts.prefs.labelers.find((s) => s.did === label.src);\n        if (!isSelf && !labeler) {\n            return; // skip labelers not configured by the user\n        }\n        if (isSelf && labelDef.flags.includes('no-self')) {\n            return; // skip self-labels that aren't supported\n        }\n        // establish the label preference for interpretation\n        let labelPref = labelDef.defaultSetting || 'ignore';\n        if (!labelDef.configurable) {\n            labelPref = labelDef.defaultSetting || 'hide';\n        }\n        else if (labelDef.flags.includes('adult') &&\n            !opts.prefs.adultContentEnabled) {\n            labelPref = 'hide';\n        }\n        else if (labeler?.labels[labelDef.identifier]) {\n            labelPref = labeler?.labels[labelDef.identifier];\n        }\n        else if (opts.prefs.labels[labelDef.identifier]) {\n            labelPref = opts.prefs.labels[labelDef.identifier];\n        }\n        // ignore labels the user has asked to ignore\n        if (labelPref === 'ignore') {\n            return;\n        }\n        // ignore 'unauthed' labels when the user is authed\n        if (labelDef.flags.includes('unauthed') && !!opts.userDid) {\n            return;\n        }\n        // establish the priority of the label\n        let priority;\n        const severity = measureModerationBehaviorSeverity(labelDef.behaviors[target]);\n        if (labelDef.flags.includes('no-override') ||\n            (labelDef.flags.includes('adult') && !opts.prefs.adultContentEnabled)) {\n            priority = 1;\n        }\n        else if (labelPref === 'hide') {\n            priority = 2;\n        }\n        else if (severity === ModerationBehaviorSeverity.High) {\n            // blurring profile view or content view\n            priority = 5;\n        }\n        else if (severity === ModerationBehaviorSeverity.Medium) {\n            // blurring content list or content media\n            priority = 7;\n        }\n        else {\n            // blurring avatar, adding alerts\n            priority = 8;\n        }\n        let noOverride = false;\n        if (labelDef.flags.includes('no-override')) {\n            noOverride = true;\n        }\n        else if (labelDef.flags.includes('adult') &&\n            !opts.prefs.adultContentEnabled) {\n            noOverride = true;\n        }\n        this.causes.push({\n            type: 'label',\n            source: isSelf || !labeler\n                ? { type: 'user' }\n                : { type: 'labeler', did: labeler.did },\n            label,\n            labelDef,\n            target,\n            setting: labelPref,\n            behavior: labelDef.behaviors[target] || types_1.NOOP_BEHAVIOR,\n            noOverride,\n            priority,\n        });\n    }\n    addMuted(muted) {\n        if (muted) {\n            this.causes.push({\n                type: 'muted',\n                source: { type: 'user' },\n                priority: 6,\n            });\n        }\n    }\n    addMutedByList(mutedByList) {\n        if (mutedByList) {\n            this.causes.push({\n                type: 'muted',\n                source: { type: 'list', list: mutedByList },\n                priority: 6,\n            });\n        }\n    }\n}\nexports.ModerationDecision = ModerationDecision;\nfunction measureModerationBehaviorSeverity(beh) {\n    if (!beh) {\n        return ModerationBehaviorSeverity.Low;\n    }\n    if (beh.profileView === 'blur' || beh.contentView === 'blur') {\n        return ModerationBehaviorSeverity.High;\n    }\n    if (beh.contentList === 'blur' || beh.contentMedia === 'blur') {\n        return ModerationBehaviorSeverity.Medium;\n    }\n    return ModerationBehaviorSeverity.Low;\n}\nfunction sortByPriority(a, b) {\n    return a.priority - b.priority;\n}\n//# sourceMappingURL=decision.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/moderation/decision.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/moderation/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/moderation/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.interpretLabelValueDefinitions = exports.interpretLabelValueDefinition = exports.hasMutedWord = exports.ModerationDecision = exports.ModerationUI = void 0;\nexports.moderateProfile = moderateProfile;\nexports.moderatePost = moderatePost;\nexports.moderateNotification = moderateNotification;\nexports.moderateFeedGenerator = moderateFeedGenerator;\nexports.moderateUserList = moderateUserList;\nconst decision_1 = __webpack_require__(/*! ./decision */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/decision.js\");\nconst account_1 = __webpack_require__(/*! ./subjects/account */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/subjects/account.js\");\nconst feed_generator_1 = __webpack_require__(/*! ./subjects/feed-generator */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/subjects/feed-generator.js\");\nconst notification_1 = __webpack_require__(/*! ./subjects/notification */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/subjects/notification.js\");\nconst post_1 = __webpack_require__(/*! ./subjects/post */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/subjects/post.js\");\nconst profile_1 = __webpack_require__(/*! ./subjects/profile */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/subjects/profile.js\");\nconst user_list_1 = __webpack_require__(/*! ./subjects/user-list */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/subjects/user-list.js\");\nvar ui_1 = __webpack_require__(/*! ./ui */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/ui.js\");\nObject.defineProperty(exports, \"ModerationUI\", ({ enumerable: true, get: function () { return ui_1.ModerationUI; } }));\nvar decision_2 = __webpack_require__(/*! ./decision */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/decision.js\");\nObject.defineProperty(exports, \"ModerationDecision\", ({ enumerable: true, get: function () { return decision_2.ModerationDecision; } }));\nvar mutewords_1 = __webpack_require__(/*! ./mutewords */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/mutewords.js\");\nObject.defineProperty(exports, \"hasMutedWord\", ({ enumerable: true, get: function () { return mutewords_1.hasMutedWord; } }));\nvar util_1 = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/util.js\");\nObject.defineProperty(exports, \"interpretLabelValueDefinition\", ({ enumerable: true, get: function () { return util_1.interpretLabelValueDefinition; } }));\nObject.defineProperty(exports, \"interpretLabelValueDefinitions\", ({ enumerable: true, get: function () { return util_1.interpretLabelValueDefinitions; } }));\nfunction moderateProfile(subject, opts) {\n    return decision_1.ModerationDecision.merge((0, account_1.decideAccount)(subject, opts), (0, profile_1.decideProfile)(subject, opts));\n}\nfunction moderatePost(subject, opts) {\n    return (0, post_1.decidePost)(subject, opts);\n}\nfunction moderateNotification(subject, opts) {\n    return (0, notification_1.decideNotification)(subject, opts);\n}\nfunction moderateFeedGenerator(subject, opts) {\n    return (0, feed_generator_1.decideFeedGenerator)(subject, opts);\n}\nfunction moderateUserList(subject, opts) {\n    return (0, user_list_1.decideUserList)(subject, opts);\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvbW9kZXJhdGlvbi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxzQ0FBc0MsR0FBRyxxQ0FBcUMsR0FBRyxvQkFBb0IsR0FBRywwQkFBMEIsR0FBRyxvQkFBb0I7QUFDekosdUJBQXVCO0FBQ3ZCLG9CQUFvQjtBQUNwQiw0QkFBNEI7QUFDNUIsNkJBQTZCO0FBQzdCLHdCQUF3QjtBQUN4QixtQkFBbUIsbUJBQU8sQ0FBQyxpRkFBWTtBQUN2QyxrQkFBa0IsbUJBQU8sQ0FBQyxpR0FBb0I7QUFDOUMseUJBQXlCLG1CQUFPLENBQUMsK0dBQTJCO0FBQzVELHVCQUF1QixtQkFBTyxDQUFDLDJHQUF5QjtBQUN4RCxlQUFlLG1CQUFPLENBQUMsMkZBQWlCO0FBQ3hDLGtCQUFrQixtQkFBTyxDQUFDLGlHQUFvQjtBQUM5QyxvQkFBb0IsbUJBQU8sQ0FBQyxxR0FBc0I7QUFDbEQsV0FBVyxtQkFBTyxDQUFDLHFFQUFNO0FBQ3pCLGdEQUErQyxFQUFFLHFDQUFxQyw2QkFBNkIsRUFBQztBQUNwSCxpQkFBaUIsbUJBQU8sQ0FBQyxpRkFBWTtBQUNyQyxzREFBcUQsRUFBRSxxQ0FBcUMseUNBQXlDLEVBQUM7QUFDdEksa0JBQWtCLG1CQUFPLENBQUMsbUZBQWE7QUFDdkMsZ0RBQStDLEVBQUUscUNBQXFDLG9DQUFvQyxFQUFDO0FBQzNILGFBQWEsbUJBQU8sQ0FBQyx5RUFBUTtBQUM3QixpRUFBZ0UsRUFBRSxxQ0FBcUMsZ0RBQWdELEVBQUM7QUFDeEosa0VBQWlFLEVBQUUscUNBQXFDLGlEQUFpRCxFQUFDO0FBQzFKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvbW9kZXJhdGlvbi9pbmRleC5qcz9hY2MyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pbnRlcnByZXRMYWJlbFZhbHVlRGVmaW5pdGlvbnMgPSBleHBvcnRzLmludGVycHJldExhYmVsVmFsdWVEZWZpbml0aW9uID0gZXhwb3J0cy5oYXNNdXRlZFdvcmQgPSBleHBvcnRzLk1vZGVyYXRpb25EZWNpc2lvbiA9IGV4cG9ydHMuTW9kZXJhdGlvblVJID0gdm9pZCAwO1xuZXhwb3J0cy5tb2RlcmF0ZVByb2ZpbGUgPSBtb2RlcmF0ZVByb2ZpbGU7XG5leHBvcnRzLm1vZGVyYXRlUG9zdCA9IG1vZGVyYXRlUG9zdDtcbmV4cG9ydHMubW9kZXJhdGVOb3RpZmljYXRpb24gPSBtb2RlcmF0ZU5vdGlmaWNhdGlvbjtcbmV4cG9ydHMubW9kZXJhdGVGZWVkR2VuZXJhdG9yID0gbW9kZXJhdGVGZWVkR2VuZXJhdG9yO1xuZXhwb3J0cy5tb2RlcmF0ZVVzZXJMaXN0ID0gbW9kZXJhdGVVc2VyTGlzdDtcbmNvbnN0IGRlY2lzaW9uXzEgPSByZXF1aXJlKFwiLi9kZWNpc2lvblwiKTtcbmNvbnN0IGFjY291bnRfMSA9IHJlcXVpcmUoXCIuL3N1YmplY3RzL2FjY291bnRcIik7XG5jb25zdCBmZWVkX2dlbmVyYXRvcl8xID0gcmVxdWlyZShcIi4vc3ViamVjdHMvZmVlZC1nZW5lcmF0b3JcIik7XG5jb25zdCBub3RpZmljYXRpb25fMSA9IHJlcXVpcmUoXCIuL3N1YmplY3RzL25vdGlmaWNhdGlvblwiKTtcbmNvbnN0IHBvc3RfMSA9IHJlcXVpcmUoXCIuL3N1YmplY3RzL3Bvc3RcIik7XG5jb25zdCBwcm9maWxlXzEgPSByZXF1aXJlKFwiLi9zdWJqZWN0cy9wcm9maWxlXCIpO1xuY29uc3QgdXNlcl9saXN0XzEgPSByZXF1aXJlKFwiLi9zdWJqZWN0cy91c2VyLWxpc3RcIik7XG52YXIgdWlfMSA9IHJlcXVpcmUoXCIuL3VpXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTW9kZXJhdGlvblVJXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB1aV8xLk1vZGVyYXRpb25VSTsgfSB9KTtcbnZhciBkZWNpc2lvbl8yID0gcmVxdWlyZShcIi4vZGVjaXNpb25cIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJNb2RlcmF0aW9uRGVjaXNpb25cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRlY2lzaW9uXzIuTW9kZXJhdGlvbkRlY2lzaW9uOyB9IH0pO1xudmFyIG11dGV3b3Jkc18xID0gcmVxdWlyZShcIi4vbXV0ZXdvcmRzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaGFzTXV0ZWRXb3JkXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtdXRld29yZHNfMS5oYXNNdXRlZFdvcmQ7IH0gfSk7XG52YXIgdXRpbF8xID0gcmVxdWlyZShcIi4vdXRpbFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImludGVycHJldExhYmVsVmFsdWVEZWZpbml0aW9uXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB1dGlsXzEuaW50ZXJwcmV0TGFiZWxWYWx1ZURlZmluaXRpb247IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpbnRlcnByZXRMYWJlbFZhbHVlRGVmaW5pdGlvbnNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHV0aWxfMS5pbnRlcnByZXRMYWJlbFZhbHVlRGVmaW5pdGlvbnM7IH0gfSk7XG5mdW5jdGlvbiBtb2RlcmF0ZVByb2ZpbGUoc3ViamVjdCwgb3B0cykge1xuICAgIHJldHVybiBkZWNpc2lvbl8xLk1vZGVyYXRpb25EZWNpc2lvbi5tZXJnZSgoMCwgYWNjb3VudF8xLmRlY2lkZUFjY291bnQpKHN1YmplY3QsIG9wdHMpLCAoMCwgcHJvZmlsZV8xLmRlY2lkZVByb2ZpbGUpKHN1YmplY3QsIG9wdHMpKTtcbn1cbmZ1bmN0aW9uIG1vZGVyYXRlUG9zdChzdWJqZWN0LCBvcHRzKSB7XG4gICAgcmV0dXJuICgwLCBwb3N0XzEuZGVjaWRlUG9zdCkoc3ViamVjdCwgb3B0cyk7XG59XG5mdW5jdGlvbiBtb2RlcmF0ZU5vdGlmaWNhdGlvbihzdWJqZWN0LCBvcHRzKSB7XG4gICAgcmV0dXJuICgwLCBub3RpZmljYXRpb25fMS5kZWNpZGVOb3RpZmljYXRpb24pKHN1YmplY3QsIG9wdHMpO1xufVxuZnVuY3Rpb24gbW9kZXJhdGVGZWVkR2VuZXJhdG9yKHN1YmplY3QsIG9wdHMpIHtcbiAgICByZXR1cm4gKDAsIGZlZWRfZ2VuZXJhdG9yXzEuZGVjaWRlRmVlZEdlbmVyYXRvcikoc3ViamVjdCwgb3B0cyk7XG59XG5mdW5jdGlvbiBtb2RlcmF0ZVVzZXJMaXN0KHN1YmplY3QsIG9wdHMpIHtcbiAgICByZXR1cm4gKDAsIHVzZXJfbGlzdF8xLmRlY2lkZVVzZXJMaXN0KShzdWJqZWN0LCBvcHRzKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/moderation/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/moderation/mutewords.js":
/*!****************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/moderation/mutewords.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasMutedWord = hasMutedWord;\nconst client_1 = __webpack_require__(/*! ../client */ \"(ssr)/./node_modules/@atproto/api/dist/client/index.js\");\nconst REGEX = {\n    LEADING_TRAILING_PUNCTUATION: /(?:^\\p{P}+|\\p{P}+$)/gu,\n    ESCAPE: /[[\\]{}()*+?.\\\\^$|\\s]/g,\n    SEPARATORS: /[/\\-–—()[\\]_]+/g,\n    WORD_BOUNDARY: /[\\s\\n\\t\\r\\f\\v]+?/g,\n};\n/**\n * List of 2-letter lang codes for languages that either don't use spaces, or\n * don't use spaces in a way conducive to word-based filtering.\n *\n * For these, we use a simple `String.includes` to check for a match.\n */\nconst LANGUAGE_EXCEPTIONS = [\n    'ja', // Japanese\n    'zh', // Chinese\n    'ko', // Korean\n    'th', // Thai\n    'vi', // Vietnamese\n];\nfunction hasMutedWord({ mutedWords, text, facets, outlineTags, languages, actor, }) {\n    const exception = LANGUAGE_EXCEPTIONS.includes(languages?.[0] || '');\n    const tags = []\n        .concat(outlineTags || [])\n        .concat((facets || []).flatMap((facet) => facet.features.filter(client_1.AppBskyRichtextFacet.isTag).map((tag) => tag.tag)))\n        .map((t) => t.toLowerCase());\n    for (const mute of mutedWords) {\n        const mutedWord = mute.value.toLowerCase();\n        const postText = text.toLowerCase();\n        // expired, ignore\n        if (mute.expiresAt && mute.expiresAt < new Date().toISOString())\n            continue;\n        if (mute.actorTarget === 'exclude-following' &&\n            Boolean(actor?.viewer?.following))\n            continue;\n        // `content` applies to tags as well\n        if (tags.includes(mutedWord))\n            return true;\n        // rest of the checks are for `content` only\n        if (!mute.targets.includes('content'))\n            continue;\n        // single character or other exception, has to use includes\n        if ((mutedWord.length === 1 || exception) && postText.includes(mutedWord))\n            return true;\n        // too long\n        if (mutedWord.length > postText.length)\n            continue;\n        // exact match\n        if (mutedWord === postText)\n            return true;\n        // any muted phrase with space or punctuation\n        if (/(?:\\s|\\p{P})+?/u.test(mutedWord) && postText.includes(mutedWord))\n            return true;\n        // check individual character groups\n        const words = postText.split(REGEX.WORD_BOUNDARY);\n        for (const word of words) {\n            if (word === mutedWord)\n                return true;\n            // compare word without leading/trailing punctuation, but allow internal\n            // punctuation (such as `s@ssy`)\n            const wordTrimmedPunctuation = word.replace(REGEX.LEADING_TRAILING_PUNCTUATION, '');\n            if (mutedWord === wordTrimmedPunctuation)\n                return true;\n            if (mutedWord.length > wordTrimmedPunctuation.length)\n                continue;\n            if (/\\p{P}+/u.test(wordTrimmedPunctuation)) {\n                const spacedWord = wordTrimmedPunctuation.replace(/\\p{P}+/gu, ' ');\n                if (spacedWord === mutedWord)\n                    return true;\n                const contiguousWord = spacedWord.replace(/\\s/gu, '');\n                if (contiguousWord === mutedWord)\n                    return true;\n                const wordParts = wordTrimmedPunctuation.split(/\\p{P}+/u);\n                for (const wordPart of wordParts) {\n                    if (wordPart === mutedWord)\n                        return true;\n                }\n            }\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=mutewords.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvbW9kZXJhdGlvbi9tdXRld29yZHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CO0FBQ3BCLGlCQUFpQixtQkFBTyxDQUFDLHlFQUFXO0FBQ3BDO0FBQ0EsMENBQTBDLEVBQUUsS0FBSyxFQUFFO0FBQ25ELG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiwwREFBMEQ7QUFDbEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLEVBQUU7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsRUFBRTtBQUN0QixzRUFBc0UsRUFBRTtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLEVBQUU7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9tb2RlcmF0aW9uL211dGV3b3Jkcy5qcz9iYzU0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5oYXNNdXRlZFdvcmQgPSBoYXNNdXRlZFdvcmQ7XG5jb25zdCBjbGllbnRfMSA9IHJlcXVpcmUoXCIuLi9jbGllbnRcIik7XG5jb25zdCBSRUdFWCA9IHtcbiAgICBMRUFESU5HX1RSQUlMSU5HX1BVTkNUVUFUSU9OOiAvKD86XlxccHtQfSt8XFxwe1B9KyQpL2d1LFxuICAgIEVTQ0FQRTogL1tbXFxde30oKSorPy5cXFxcXiR8XFxzXS9nLFxuICAgIFNFUEFSQVRPUlM6IC9bL1xcLeKAk+KAlCgpW1xcXV9dKy9nLFxuICAgIFdPUkRfQk9VTkRBUlk6IC9bXFxzXFxuXFx0XFxyXFxmXFx2XSs/L2csXG59O1xuLyoqXG4gKiBMaXN0IG9mIDItbGV0dGVyIGxhbmcgY29kZXMgZm9yIGxhbmd1YWdlcyB0aGF0IGVpdGhlciBkb24ndCB1c2Ugc3BhY2VzLCBvclxuICogZG9uJ3QgdXNlIHNwYWNlcyBpbiBhIHdheSBjb25kdWNpdmUgdG8gd29yZC1iYXNlZCBmaWx0ZXJpbmcuXG4gKlxuICogRm9yIHRoZXNlLCB3ZSB1c2UgYSBzaW1wbGUgYFN0cmluZy5pbmNsdWRlc2AgdG8gY2hlY2sgZm9yIGEgbWF0Y2guXG4gKi9cbmNvbnN0IExBTkdVQUdFX0VYQ0VQVElPTlMgPSBbXG4gICAgJ2phJywgLy8gSmFwYW5lc2VcbiAgICAnemgnLCAvLyBDaGluZXNlXG4gICAgJ2tvJywgLy8gS29yZWFuXG4gICAgJ3RoJywgLy8gVGhhaVxuICAgICd2aScsIC8vIFZpZXRuYW1lc2Vcbl07XG5mdW5jdGlvbiBoYXNNdXRlZFdvcmQoeyBtdXRlZFdvcmRzLCB0ZXh0LCBmYWNldHMsIG91dGxpbmVUYWdzLCBsYW5ndWFnZXMsIGFjdG9yLCB9KSB7XG4gICAgY29uc3QgZXhjZXB0aW9uID0gTEFOR1VBR0VfRVhDRVBUSU9OUy5pbmNsdWRlcyhsYW5ndWFnZXM/LlswXSB8fCAnJyk7XG4gICAgY29uc3QgdGFncyA9IFtdXG4gICAgICAgIC5jb25jYXQob3V0bGluZVRhZ3MgfHwgW10pXG4gICAgICAgIC5jb25jYXQoKGZhY2V0cyB8fCBbXSkuZmxhdE1hcCgoZmFjZXQpID0+IGZhY2V0LmZlYXR1cmVzLmZpbHRlcihjbGllbnRfMS5BcHBCc2t5UmljaHRleHRGYWNldC5pc1RhZykubWFwKCh0YWcpID0+IHRhZy50YWcpKSlcbiAgICAgICAgLm1hcCgodCkgPT4gdC50b0xvd2VyQ2FzZSgpKTtcbiAgICBmb3IgKGNvbnN0IG11dGUgb2YgbXV0ZWRXb3Jkcykge1xuICAgICAgICBjb25zdCBtdXRlZFdvcmQgPSBtdXRlLnZhbHVlLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIGNvbnN0IHBvc3RUZXh0ID0gdGV4dC50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAvLyBleHBpcmVkLCBpZ25vcmVcbiAgICAgICAgaWYgKG11dGUuZXhwaXJlc0F0ICYmIG11dGUuZXhwaXJlc0F0IDwgbmV3IERhdGUoKS50b0lTT1N0cmluZygpKVxuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIGlmIChtdXRlLmFjdG9yVGFyZ2V0ID09PSAnZXhjbHVkZS1mb2xsb3dpbmcnICYmXG4gICAgICAgICAgICBCb29sZWFuKGFjdG9yPy52aWV3ZXI/LmZvbGxvd2luZykpXG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgLy8gYGNvbnRlbnRgIGFwcGxpZXMgdG8gdGFncyBhcyB3ZWxsXG4gICAgICAgIGlmICh0YWdzLmluY2x1ZGVzKG11dGVkV29yZCkpXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgLy8gcmVzdCBvZiB0aGUgY2hlY2tzIGFyZSBmb3IgYGNvbnRlbnRgIG9ubHlcbiAgICAgICAgaWYgKCFtdXRlLnRhcmdldHMuaW5jbHVkZXMoJ2NvbnRlbnQnKSlcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAvLyBzaW5nbGUgY2hhcmFjdGVyIG9yIG90aGVyIGV4Y2VwdGlvbiwgaGFzIHRvIHVzZSBpbmNsdWRlc1xuICAgICAgICBpZiAoKG11dGVkV29yZC5sZW5ndGggPT09IDEgfHwgZXhjZXB0aW9uKSAmJiBwb3N0VGV4dC5pbmNsdWRlcyhtdXRlZFdvcmQpKVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIC8vIHRvbyBsb25nXG4gICAgICAgIGlmIChtdXRlZFdvcmQubGVuZ3RoID4gcG9zdFRleHQubGVuZ3RoKVxuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIC8vIGV4YWN0IG1hdGNoXG4gICAgICAgIGlmIChtdXRlZFdvcmQgPT09IHBvc3RUZXh0KVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIC8vIGFueSBtdXRlZCBwaHJhc2Ugd2l0aCBzcGFjZSBvciBwdW5jdHVhdGlvblxuICAgICAgICBpZiAoLyg/Olxcc3xcXHB7UH0pKz8vdS50ZXN0KG11dGVkV29yZCkgJiYgcG9zdFRleHQuaW5jbHVkZXMobXV0ZWRXb3JkKSlcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAvLyBjaGVjayBpbmRpdmlkdWFsIGNoYXJhY3RlciBncm91cHNcbiAgICAgICAgY29uc3Qgd29yZHMgPSBwb3N0VGV4dC5zcGxpdChSRUdFWC5XT1JEX0JPVU5EQVJZKTtcbiAgICAgICAgZm9yIChjb25zdCB3b3JkIG9mIHdvcmRzKSB7XG4gICAgICAgICAgICBpZiAod29yZCA9PT0gbXV0ZWRXb3JkKVxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgLy8gY29tcGFyZSB3b3JkIHdpdGhvdXQgbGVhZGluZy90cmFpbGluZyBwdW5jdHVhdGlvbiwgYnV0IGFsbG93IGludGVybmFsXG4gICAgICAgICAgICAvLyBwdW5jdHVhdGlvbiAoc3VjaCBhcyBgc0Bzc3lgKVxuICAgICAgICAgICAgY29uc3Qgd29yZFRyaW1tZWRQdW5jdHVhdGlvbiA9IHdvcmQucmVwbGFjZShSRUdFWC5MRUFESU5HX1RSQUlMSU5HX1BVTkNUVUFUSU9OLCAnJyk7XG4gICAgICAgICAgICBpZiAobXV0ZWRXb3JkID09PSB3b3JkVHJpbW1lZFB1bmN0dWF0aW9uKVxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgaWYgKG11dGVkV29yZC5sZW5ndGggPiB3b3JkVHJpbW1lZFB1bmN0dWF0aW9uLmxlbmd0aClcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIGlmICgvXFxwe1B9Ky91LnRlc3Qod29yZFRyaW1tZWRQdW5jdHVhdGlvbikpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBzcGFjZWRXb3JkID0gd29yZFRyaW1tZWRQdW5jdHVhdGlvbi5yZXBsYWNlKC9cXHB7UH0rL2d1LCAnICcpO1xuICAgICAgICAgICAgICAgIGlmIChzcGFjZWRXb3JkID09PSBtdXRlZFdvcmQpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRpZ3VvdXNXb3JkID0gc3BhY2VkV29yZC5yZXBsYWNlKC9cXHMvZ3UsICcnKTtcbiAgICAgICAgICAgICAgICBpZiAoY29udGlndW91c1dvcmQgPT09IG11dGVkV29yZClcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgY29uc3Qgd29yZFBhcnRzID0gd29yZFRyaW1tZWRQdW5jdHVhdGlvbi5zcGxpdCgvXFxwe1B9Ky91KTtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHdvcmRQYXJ0IG9mIHdvcmRQYXJ0cykge1xuICAgICAgICAgICAgICAgICAgICBpZiAod29yZFBhcnQgPT09IG11dGVkV29yZClcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tdXRld29yZHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/moderation/mutewords.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/moderation/subjects/account.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/moderation/subjects/account.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decideAccount = decideAccount;\nexports.filterAccountLabels = filterAccountLabels;\nconst decision_1 = __webpack_require__(/*! ../decision */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/decision.js\");\nfunction decideAccount(subject, opts) {\n    const acc = new decision_1.ModerationDecision();\n    acc.setDid(subject.did);\n    acc.setIsMe(subject.did === opts.userDid);\n    if (subject.viewer?.muted) {\n        if (subject.viewer?.mutedByList) {\n            acc.addMutedByList(subject.viewer?.mutedByList);\n        }\n        else {\n            acc.addMuted(subject.viewer?.muted);\n        }\n    }\n    if (subject.viewer?.blocking) {\n        if (subject.viewer?.blockingByList) {\n            acc.addBlockingByList(subject.viewer?.blockingByList);\n        }\n        else {\n            acc.addBlocking(subject.viewer?.blocking);\n        }\n    }\n    acc.addBlockedBy(subject.viewer?.blockedBy);\n    for (const label of filterAccountLabels(subject.labels)) {\n        acc.addLabel('account', label, opts);\n    }\n    return acc;\n}\nfunction filterAccountLabels(labels) {\n    if (!labels) {\n        return [];\n    }\n    return labels.filter((label) => !label.uri.endsWith('/app.bsky.actor.profile/self') ||\n        label.val === '!no-unauthenticated');\n}\n//# sourceMappingURL=account.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvbW9kZXJhdGlvbi9zdWJqZWN0cy9hY2NvdW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQiwyQkFBMkI7QUFDM0IsbUJBQW1CLG1CQUFPLENBQUMsa0ZBQWE7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9tb2RlcmF0aW9uL3N1YmplY3RzL2FjY291bnQuanM/ZWUwOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVjaWRlQWNjb3VudCA9IGRlY2lkZUFjY291bnQ7XG5leHBvcnRzLmZpbHRlckFjY291bnRMYWJlbHMgPSBmaWx0ZXJBY2NvdW50TGFiZWxzO1xuY29uc3QgZGVjaXNpb25fMSA9IHJlcXVpcmUoXCIuLi9kZWNpc2lvblwiKTtcbmZ1bmN0aW9uIGRlY2lkZUFjY291bnQoc3ViamVjdCwgb3B0cykge1xuICAgIGNvbnN0IGFjYyA9IG5ldyBkZWNpc2lvbl8xLk1vZGVyYXRpb25EZWNpc2lvbigpO1xuICAgIGFjYy5zZXREaWQoc3ViamVjdC5kaWQpO1xuICAgIGFjYy5zZXRJc01lKHN1YmplY3QuZGlkID09PSBvcHRzLnVzZXJEaWQpO1xuICAgIGlmIChzdWJqZWN0LnZpZXdlcj8ubXV0ZWQpIHtcbiAgICAgICAgaWYgKHN1YmplY3Qudmlld2VyPy5tdXRlZEJ5TGlzdCkge1xuICAgICAgICAgICAgYWNjLmFkZE11dGVkQnlMaXN0KHN1YmplY3Qudmlld2VyPy5tdXRlZEJ5TGlzdCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBhY2MuYWRkTXV0ZWQoc3ViamVjdC52aWV3ZXI/Lm11dGVkKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoc3ViamVjdC52aWV3ZXI/LmJsb2NraW5nKSB7XG4gICAgICAgIGlmIChzdWJqZWN0LnZpZXdlcj8uYmxvY2tpbmdCeUxpc3QpIHtcbiAgICAgICAgICAgIGFjYy5hZGRCbG9ja2luZ0J5TGlzdChzdWJqZWN0LnZpZXdlcj8uYmxvY2tpbmdCeUxpc3QpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgYWNjLmFkZEJsb2NraW5nKHN1YmplY3Qudmlld2VyPy5ibG9ja2luZyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYWNjLmFkZEJsb2NrZWRCeShzdWJqZWN0LnZpZXdlcj8uYmxvY2tlZEJ5KTtcbiAgICBmb3IgKGNvbnN0IGxhYmVsIG9mIGZpbHRlckFjY291bnRMYWJlbHMoc3ViamVjdC5sYWJlbHMpKSB7XG4gICAgICAgIGFjYy5hZGRMYWJlbCgnYWNjb3VudCcsIGxhYmVsLCBvcHRzKTtcbiAgICB9XG4gICAgcmV0dXJuIGFjYztcbn1cbmZ1bmN0aW9uIGZpbHRlckFjY291bnRMYWJlbHMobGFiZWxzKSB7XG4gICAgaWYgKCFsYWJlbHMpIHtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbiAgICByZXR1cm4gbGFiZWxzLmZpbHRlcigobGFiZWwpID0+ICFsYWJlbC51cmkuZW5kc1dpdGgoJy9hcHAuYnNreS5hY3Rvci5wcm9maWxlL3NlbGYnKSB8fFxuICAgICAgICBsYWJlbC52YWwgPT09ICchbm8tdW5hdXRoZW50aWNhdGVkJyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hY2NvdW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/moderation/subjects/account.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/moderation/subjects/feed-generator.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/moderation/subjects/feed-generator.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decideFeedGenerator = decideFeedGenerator;\nconst decision_1 = __webpack_require__(/*! ../decision */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/decision.js\");\nconst account_1 = __webpack_require__(/*! ./account */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/subjects/account.js\");\nconst profile_1 = __webpack_require__(/*! ./profile */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/subjects/profile.js\");\nfunction decideFeedGenerator(subject, opts) {\n    const acc = new decision_1.ModerationDecision();\n    acc.setDid(subject.creator.did);\n    acc.setIsMe(subject.creator.did === opts.userDid);\n    if (subject.labels?.length) {\n        for (const label of subject.labels) {\n            acc.addLabel('content', label, opts);\n        }\n    }\n    return decision_1.ModerationDecision.merge(acc, (0, account_1.decideAccount)(subject.creator, opts), (0, profile_1.decideProfile)(subject.creator, opts));\n}\n//# sourceMappingURL=feed-generator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvbW9kZXJhdGlvbi9zdWJqZWN0cy9mZWVkLWdlbmVyYXRvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkI7QUFDM0IsbUJBQW1CLG1CQUFPLENBQUMsa0ZBQWE7QUFDeEMsa0JBQWtCLG1CQUFPLENBQUMsd0ZBQVc7QUFDckMsa0JBQWtCLG1CQUFPLENBQUMsd0ZBQVc7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvbW9kZXJhdGlvbi9zdWJqZWN0cy9mZWVkLWdlbmVyYXRvci5qcz9kY2U0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWNpZGVGZWVkR2VuZXJhdG9yID0gZGVjaWRlRmVlZEdlbmVyYXRvcjtcbmNvbnN0IGRlY2lzaW9uXzEgPSByZXF1aXJlKFwiLi4vZGVjaXNpb25cIik7XG5jb25zdCBhY2NvdW50XzEgPSByZXF1aXJlKFwiLi9hY2NvdW50XCIpO1xuY29uc3QgcHJvZmlsZV8xID0gcmVxdWlyZShcIi4vcHJvZmlsZVwiKTtcbmZ1bmN0aW9uIGRlY2lkZUZlZWRHZW5lcmF0b3Ioc3ViamVjdCwgb3B0cykge1xuICAgIGNvbnN0IGFjYyA9IG5ldyBkZWNpc2lvbl8xLk1vZGVyYXRpb25EZWNpc2lvbigpO1xuICAgIGFjYy5zZXREaWQoc3ViamVjdC5jcmVhdG9yLmRpZCk7XG4gICAgYWNjLnNldElzTWUoc3ViamVjdC5jcmVhdG9yLmRpZCA9PT0gb3B0cy51c2VyRGlkKTtcbiAgICBpZiAoc3ViamVjdC5sYWJlbHM/Lmxlbmd0aCkge1xuICAgICAgICBmb3IgKGNvbnN0IGxhYmVsIG9mIHN1YmplY3QubGFiZWxzKSB7XG4gICAgICAgICAgICBhY2MuYWRkTGFiZWwoJ2NvbnRlbnQnLCBsYWJlbCwgb3B0cyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGRlY2lzaW9uXzEuTW9kZXJhdGlvbkRlY2lzaW9uLm1lcmdlKGFjYywgKDAsIGFjY291bnRfMS5kZWNpZGVBY2NvdW50KShzdWJqZWN0LmNyZWF0b3IsIG9wdHMpLCAoMCwgcHJvZmlsZV8xLmRlY2lkZVByb2ZpbGUpKHN1YmplY3QuY3JlYXRvciwgb3B0cykpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmVlZC1nZW5lcmF0b3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/moderation/subjects/feed-generator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/moderation/subjects/notification.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/moderation/subjects/notification.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decideNotification = decideNotification;\nconst decision_1 = __webpack_require__(/*! ../decision */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/decision.js\");\nconst account_1 = __webpack_require__(/*! ./account */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/subjects/account.js\");\nconst profile_1 = __webpack_require__(/*! ./profile */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/subjects/profile.js\");\nfunction decideNotification(subject, opts) {\n    const acc = new decision_1.ModerationDecision();\n    acc.setDid(subject.author.did);\n    acc.setIsMe(subject.author.did === opts.userDid);\n    if (subject.labels?.length) {\n        for (const label of subject.labels) {\n            acc.addLabel('content', label, opts);\n        }\n    }\n    return decision_1.ModerationDecision.merge(acc, (0, account_1.decideAccount)(subject.author, opts), (0, profile_1.decideProfile)(subject.author, opts));\n}\n//# sourceMappingURL=notification.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvbW9kZXJhdGlvbi9zdWJqZWN0cy9ub3RpZmljYXRpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCO0FBQzFCLG1CQUFtQixtQkFBTyxDQUFDLGtGQUFhO0FBQ3hDLGtCQUFrQixtQkFBTyxDQUFDLHdGQUFXO0FBQ3JDLGtCQUFrQixtQkFBTyxDQUFDLHdGQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L21vZGVyYXRpb24vc3ViamVjdHMvbm90aWZpY2F0aW9uLmpzPzI2ZjMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlY2lkZU5vdGlmaWNhdGlvbiA9IGRlY2lkZU5vdGlmaWNhdGlvbjtcbmNvbnN0IGRlY2lzaW9uXzEgPSByZXF1aXJlKFwiLi4vZGVjaXNpb25cIik7XG5jb25zdCBhY2NvdW50XzEgPSByZXF1aXJlKFwiLi9hY2NvdW50XCIpO1xuY29uc3QgcHJvZmlsZV8xID0gcmVxdWlyZShcIi4vcHJvZmlsZVwiKTtcbmZ1bmN0aW9uIGRlY2lkZU5vdGlmaWNhdGlvbihzdWJqZWN0LCBvcHRzKSB7XG4gICAgY29uc3QgYWNjID0gbmV3IGRlY2lzaW9uXzEuTW9kZXJhdGlvbkRlY2lzaW9uKCk7XG4gICAgYWNjLnNldERpZChzdWJqZWN0LmF1dGhvci5kaWQpO1xuICAgIGFjYy5zZXRJc01lKHN1YmplY3QuYXV0aG9yLmRpZCA9PT0gb3B0cy51c2VyRGlkKTtcbiAgICBpZiAoc3ViamVjdC5sYWJlbHM/Lmxlbmd0aCkge1xuICAgICAgICBmb3IgKGNvbnN0IGxhYmVsIG9mIHN1YmplY3QubGFiZWxzKSB7XG4gICAgICAgICAgICBhY2MuYWRkTGFiZWwoJ2NvbnRlbnQnLCBsYWJlbCwgb3B0cyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGRlY2lzaW9uXzEuTW9kZXJhdGlvbkRlY2lzaW9uLm1lcmdlKGFjYywgKDAsIGFjY291bnRfMS5kZWNpZGVBY2NvdW50KShzdWJqZWN0LmF1dGhvciwgb3B0cyksICgwLCBwcm9maWxlXzEuZGVjaWRlUHJvZmlsZSkoc3ViamVjdC5hdXRob3IsIG9wdHMpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5vdGlmaWNhdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/moderation/subjects/notification.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/moderation/subjects/post.js":
/*!********************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/moderation/subjects/post.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decidePost = decidePost;\nconst client_1 = __webpack_require__(/*! ../../client */ \"(ssr)/./node_modules/@atproto/api/dist/client/index.js\");\nconst decision_1 = __webpack_require__(/*! ../decision */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/decision.js\");\nconst mutewords_1 = __webpack_require__(/*! ../mutewords */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/mutewords.js\");\nconst account_1 = __webpack_require__(/*! ./account */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/subjects/account.js\");\nconst profile_1 = __webpack_require__(/*! ./profile */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/subjects/profile.js\");\nfunction decidePost(subject, opts) {\n    const acc = new decision_1.ModerationDecision();\n    acc.setDid(subject.author.did);\n    acc.setIsMe(subject.author.did === opts.userDid);\n    if (subject.labels?.length) {\n        for (const label of subject.labels) {\n            acc.addLabel('content', label, opts);\n        }\n    }\n    acc.addHidden(checkHiddenPost(subject, opts.prefs.hiddenPosts));\n    if (!acc.isMe) {\n        acc.addMutedWord(checkMutedWords(subject, opts.prefs.mutedWords));\n    }\n    let embedAcc;\n    if (subject.embed) {\n        if (client_1.AppBskyEmbedRecord.isViewRecord(subject.embed.record)) {\n            // quote post\n            embedAcc = decideQuotedPost(subject.embed.record, opts);\n        }\n        else if (client_1.AppBskyEmbedRecordWithMedia.isView(subject.embed) &&\n            client_1.AppBskyEmbedRecord.isViewRecord(subject.embed.record.record)) {\n            // quoted post with media\n            embedAcc = decideQuotedPost(subject.embed.record.record, opts);\n        }\n        else if (client_1.AppBskyEmbedRecord.isViewBlocked(subject.embed.record)) {\n            // blocked quote post\n            embedAcc = decideBlockedQuotedPost(subject.embed.record, opts);\n        }\n        else if (client_1.AppBskyEmbedRecordWithMedia.isView(subject.embed) &&\n            client_1.AppBskyEmbedRecord.isViewBlocked(subject.embed.record.record)) {\n            // blocked quoted post with media\n            embedAcc = decideBlockedQuotedPost(subject.embed.record.record, opts);\n        }\n    }\n    return decision_1.ModerationDecision.merge(acc, embedAcc?.downgrade(), (0, account_1.decideAccount)(subject.author, opts), (0, profile_1.decideProfile)(subject.author, opts));\n}\nfunction decideQuotedPost(subject, opts) {\n    const acc = new decision_1.ModerationDecision();\n    acc.setDid(subject.author.did);\n    acc.setIsMe(subject.author.did === opts.userDid);\n    if (subject.labels?.length) {\n        for (const label of subject.labels) {\n            acc.addLabel('content', label, opts);\n        }\n    }\n    return decision_1.ModerationDecision.merge(acc, (0, account_1.decideAccount)(subject.author, opts), (0, profile_1.decideProfile)(subject.author, opts));\n}\nfunction decideBlockedQuotedPost(subject, opts) {\n    const acc = new decision_1.ModerationDecision();\n    acc.setDid(subject.author.did);\n    acc.setIsMe(subject.author.did === opts.userDid);\n    if (subject.author.viewer?.muted) {\n        if (subject.author.viewer?.mutedByList) {\n            acc.addMutedByList(subject.author.viewer?.mutedByList);\n        }\n        else {\n            acc.addMuted(subject.author.viewer?.muted);\n        }\n    }\n    if (subject.author.viewer?.blocking) {\n        if (subject.author.viewer?.blockingByList) {\n            acc.addBlockingByList(subject.author.viewer?.blockingByList);\n        }\n        else {\n            acc.addBlocking(subject.author.viewer?.blocking);\n        }\n    }\n    acc.addBlockedBy(subject.author.viewer?.blockedBy);\n    return acc;\n}\nfunction checkHiddenPost(subject, hiddenPosts) {\n    if (!hiddenPosts?.length) {\n        return false;\n    }\n    if (hiddenPosts.includes(subject.uri)) {\n        return true;\n    }\n    if (subject.embed) {\n        if (client_1.AppBskyEmbedRecord.isViewRecord(subject.embed.record) &&\n            hiddenPosts.includes(subject.embed.record.uri)) {\n            return true;\n        }\n        if (client_1.AppBskyEmbedRecordWithMedia.isView(subject.embed) &&\n            client_1.AppBskyEmbedRecord.isViewRecord(subject.embed.record.record) &&\n            hiddenPosts.includes(subject.embed.record.record.uri)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction checkMutedWords(subject, mutedWords) {\n    if (!mutedWords?.length) {\n        return false;\n    }\n    const postAuthor = subject.author;\n    if (client_1.AppBskyFeedPost.isRecord(subject.record)) {\n        // post text\n        if ((0, mutewords_1.hasMutedWord)({\n            mutedWords,\n            text: subject.record.text,\n            facets: subject.record.facets,\n            outlineTags: subject.record.tags,\n            languages: subject.record.langs,\n            actor: postAuthor,\n        })) {\n            return true;\n        }\n        if (subject.record.embed &&\n            client_1.AppBskyEmbedImages.isMain(subject.record.embed)) {\n            // post images\n            for (const image of subject.record.embed.images) {\n                if ((0, mutewords_1.hasMutedWord)({\n                    mutedWords,\n                    text: image.alt,\n                    languages: subject.record.langs,\n                    actor: postAuthor,\n                })) {\n                    return true;\n                }\n            }\n        }\n    }\n    if (subject.embed) {\n        // quote post\n        if (client_1.AppBskyEmbedRecord.isViewRecord(subject.embed.record)) {\n            if (client_1.AppBskyFeedPost.isRecord(subject.embed.record.value)) {\n                const embeddedPost = subject.embed.record.value;\n                const embedAuthor = subject.embed.record.author;\n                // quoted post text\n                if ((0, mutewords_1.hasMutedWord)({\n                    mutedWords,\n                    text: embeddedPost.text,\n                    facets: embeddedPost.facets,\n                    outlineTags: embeddedPost.tags,\n                    languages: embeddedPost.langs,\n                    actor: embedAuthor,\n                })) {\n                    return true;\n                }\n                // quoted post's images\n                if (client_1.AppBskyEmbedImages.isMain(embeddedPost.embed)) {\n                    for (const image of embeddedPost.embed.images) {\n                        if ((0, mutewords_1.hasMutedWord)({\n                            mutedWords,\n                            text: image.alt,\n                            languages: embeddedPost.langs,\n                            actor: embedAuthor,\n                        })) {\n                            return true;\n                        }\n                    }\n                }\n                // quoted post's link card\n                if (client_1.AppBskyEmbedExternal.isMain(embeddedPost.embed)) {\n                    const { external } = embeddedPost.embed;\n                    if ((0, mutewords_1.hasMutedWord)({\n                        mutedWords,\n                        text: external.title + ' ' + external.description,\n                        languages: [],\n                        actor: embedAuthor,\n                    })) {\n                        return true;\n                    }\n                }\n                if (client_1.AppBskyEmbedRecordWithMedia.isMain(embeddedPost.embed)) {\n                    // quoted post's link card when it did a quote + media\n                    if (client_1.AppBskyEmbedExternal.isMain(embeddedPost.embed.media)) {\n                        const { external } = embeddedPost.embed.media;\n                        if ((0, mutewords_1.hasMutedWord)({\n                            mutedWords,\n                            text: external.title + ' ' + external.description,\n                            languages: [],\n                            actor: embedAuthor,\n                        })) {\n                            return true;\n                        }\n                    }\n                    // quoted post's images when it did a quote + media\n                    if (client_1.AppBskyEmbedImages.isMain(embeddedPost.embed.media)) {\n                        for (const image of embeddedPost.embed.media.images) {\n                            if ((0, mutewords_1.hasMutedWord)({\n                                mutedWords,\n                                text: image.alt,\n                                languages: client_1.AppBskyFeedPost.isRecord(embeddedPost.record)\n                                    ? embeddedPost.langs\n                                    : [],\n                                actor: embedAuthor,\n                            })) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        // link card\n        else if (client_1.AppBskyEmbedExternal.isView(subject.embed)) {\n            const { external } = subject.embed;\n            if ((0, mutewords_1.hasMutedWord)({\n                mutedWords,\n                text: external.title + ' ' + external.description,\n                languages: [],\n                actor: postAuthor,\n            })) {\n                return true;\n            }\n        }\n        // quote post with media\n        else if (client_1.AppBskyEmbedRecordWithMedia.isView(subject.embed) &&\n            client_1.AppBskyEmbedRecord.isViewRecord(subject.embed.record.record)) {\n            const embedAuthor = subject.embed.record.record.author;\n            // quoted post text\n            if (client_1.AppBskyFeedPost.isRecord(subject.embed.record.record.value)) {\n                const post = subject.embed.record.record.value;\n                if ((0, mutewords_1.hasMutedWord)({\n                    mutedWords,\n                    text: post.text,\n                    facets: post.facets,\n                    outlineTags: post.tags,\n                    languages: post.langs,\n                    actor: embedAuthor,\n                })) {\n                    return true;\n                }\n            }\n            // quoted post images\n            if (client_1.AppBskyEmbedImages.isView(subject.embed.media)) {\n                for (const image of subject.embed.media.images) {\n                    if ((0, mutewords_1.hasMutedWord)({\n                        mutedWords,\n                        text: image.alt,\n                        languages: client_1.AppBskyFeedPost.isRecord(subject.record)\n                            ? subject.record.langs\n                            : [],\n                        actor: embedAuthor,\n                    })) {\n                        return true;\n                    }\n                }\n            }\n            if (client_1.AppBskyEmbedExternal.isView(subject.embed.media)) {\n                const { external } = subject.embed.media;\n                if ((0, mutewords_1.hasMutedWord)({\n                    mutedWords,\n                    text: external.title + ' ' + external.description,\n                    languages: [],\n                    actor: embedAuthor,\n                })) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=post.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/moderation/subjects/post.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/moderation/subjects/profile.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/moderation/subjects/profile.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decideProfile = decideProfile;\nexports.filterProfileLabels = filterProfileLabels;\nconst decision_1 = __webpack_require__(/*! ../decision */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/decision.js\");\nfunction decideProfile(subject, opts) {\n    const acc = new decision_1.ModerationDecision();\n    acc.setDid(subject.did);\n    acc.setIsMe(subject.did === opts.userDid);\n    for (const label of filterProfileLabels(subject.labels)) {\n        acc.addLabel('profile', label, opts);\n    }\n    return acc;\n}\nfunction filterProfileLabels(labels) {\n    if (!labels) {\n        return [];\n    }\n    return labels.filter((label) => label.uri.endsWith('/app.bsky.actor.profile/self'));\n}\n//# sourceMappingURL=profile.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvbW9kZXJhdGlvbi9zdWJqZWN0cy9wcm9maWxlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQiwyQkFBMkI7QUFDM0IsbUJBQW1CLG1CQUFPLENBQUMsa0ZBQWE7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9tb2RlcmF0aW9uL3N1YmplY3RzL3Byb2ZpbGUuanM/OGVhYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVjaWRlUHJvZmlsZSA9IGRlY2lkZVByb2ZpbGU7XG5leHBvcnRzLmZpbHRlclByb2ZpbGVMYWJlbHMgPSBmaWx0ZXJQcm9maWxlTGFiZWxzO1xuY29uc3QgZGVjaXNpb25fMSA9IHJlcXVpcmUoXCIuLi9kZWNpc2lvblwiKTtcbmZ1bmN0aW9uIGRlY2lkZVByb2ZpbGUoc3ViamVjdCwgb3B0cykge1xuICAgIGNvbnN0IGFjYyA9IG5ldyBkZWNpc2lvbl8xLk1vZGVyYXRpb25EZWNpc2lvbigpO1xuICAgIGFjYy5zZXREaWQoc3ViamVjdC5kaWQpO1xuICAgIGFjYy5zZXRJc01lKHN1YmplY3QuZGlkID09PSBvcHRzLnVzZXJEaWQpO1xuICAgIGZvciAoY29uc3QgbGFiZWwgb2YgZmlsdGVyUHJvZmlsZUxhYmVscyhzdWJqZWN0LmxhYmVscykpIHtcbiAgICAgICAgYWNjLmFkZExhYmVsKCdwcm9maWxlJywgbGFiZWwsIG9wdHMpO1xuICAgIH1cbiAgICByZXR1cm4gYWNjO1xufVxuZnVuY3Rpb24gZmlsdGVyUHJvZmlsZUxhYmVscyhsYWJlbHMpIHtcbiAgICBpZiAoIWxhYmVscykge1xuICAgICAgICByZXR1cm4gW107XG4gICAgfVxuICAgIHJldHVybiBsYWJlbHMuZmlsdGVyKChsYWJlbCkgPT4gbGFiZWwudXJpLmVuZHNXaXRoKCcvYXBwLmJza3kuYWN0b3IucHJvZmlsZS9zZWxmJykpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvZmlsZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/moderation/subjects/profile.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/moderation/subjects/user-list.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/moderation/subjects/user-list.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decideUserList = decideUserList;\nconst syntax_1 = __webpack_require__(/*! @atproto/syntax */ \"(ssr)/./node_modules/@atproto/syntax/dist/index.js\");\nconst decision_1 = __webpack_require__(/*! ../decision */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/decision.js\");\nconst account_1 = __webpack_require__(/*! ./account */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/subjects/account.js\");\nconst profile_1 = __webpack_require__(/*! ./profile */ \"(ssr)/./node_modules/@atproto/api/dist/moderation/subjects/profile.js\");\nfunction decideUserList(subject, opts) {\n    const acc = new decision_1.ModerationDecision();\n    const creator = isProfile(subject.creator) ? subject.creator : undefined;\n    if (creator) {\n        acc.setDid(creator.did);\n        acc.setIsMe(creator.did === opts.userDid);\n        if (subject.labels?.length) {\n            for (const label of subject.labels) {\n                acc.addLabel('content', label, opts);\n            }\n        }\n        return decision_1.ModerationDecision.merge(acc, (0, account_1.decideAccount)(creator, opts), (0, profile_1.decideProfile)(creator, opts));\n    }\n    const creatorDid = new syntax_1.AtUri(subject.uri).hostname;\n    acc.setDid(creatorDid);\n    acc.setIsMe(creatorDid === opts.userDid);\n    if (subject.labels?.length) {\n        for (const label of subject.labels) {\n            acc.addLabel('content', label, opts);\n        }\n    }\n    return acc;\n}\nfunction isProfile(v) {\n    return v && typeof v === 'object' && 'did' in v;\n}\n//# sourceMappingURL=user-list.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvbW9kZXJhdGlvbi9zdWJqZWN0cy91c2VyLWxpc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCLGlCQUFpQixtQkFBTyxDQUFDLDJFQUFpQjtBQUMxQyxtQkFBbUIsbUJBQU8sQ0FBQyxrRkFBYTtBQUN4QyxrQkFBa0IsbUJBQU8sQ0FBQyx3RkFBVztBQUNyQyxrQkFBa0IsbUJBQU8sQ0FBQyx3RkFBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC9tb2RlcmF0aW9uL3N1YmplY3RzL3VzZXItbGlzdC5qcz9jN2U3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWNpZGVVc2VyTGlzdCA9IGRlY2lkZVVzZXJMaXN0O1xuY29uc3Qgc3ludGF4XzEgPSByZXF1aXJlKFwiQGF0cHJvdG8vc3ludGF4XCIpO1xuY29uc3QgZGVjaXNpb25fMSA9IHJlcXVpcmUoXCIuLi9kZWNpc2lvblwiKTtcbmNvbnN0IGFjY291bnRfMSA9IHJlcXVpcmUoXCIuL2FjY291bnRcIik7XG5jb25zdCBwcm9maWxlXzEgPSByZXF1aXJlKFwiLi9wcm9maWxlXCIpO1xuZnVuY3Rpb24gZGVjaWRlVXNlckxpc3Qoc3ViamVjdCwgb3B0cykge1xuICAgIGNvbnN0IGFjYyA9IG5ldyBkZWNpc2lvbl8xLk1vZGVyYXRpb25EZWNpc2lvbigpO1xuICAgIGNvbnN0IGNyZWF0b3IgPSBpc1Byb2ZpbGUoc3ViamVjdC5jcmVhdG9yKSA/IHN1YmplY3QuY3JlYXRvciA6IHVuZGVmaW5lZDtcbiAgICBpZiAoY3JlYXRvcikge1xuICAgICAgICBhY2Muc2V0RGlkKGNyZWF0b3IuZGlkKTtcbiAgICAgICAgYWNjLnNldElzTWUoY3JlYXRvci5kaWQgPT09IG9wdHMudXNlckRpZCk7XG4gICAgICAgIGlmIChzdWJqZWN0LmxhYmVscz8ubGVuZ3RoKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGxhYmVsIG9mIHN1YmplY3QubGFiZWxzKSB7XG4gICAgICAgICAgICAgICAgYWNjLmFkZExhYmVsKCdjb250ZW50JywgbGFiZWwsIG9wdHMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkZWNpc2lvbl8xLk1vZGVyYXRpb25EZWNpc2lvbi5tZXJnZShhY2MsICgwLCBhY2NvdW50XzEuZGVjaWRlQWNjb3VudCkoY3JlYXRvciwgb3B0cyksICgwLCBwcm9maWxlXzEuZGVjaWRlUHJvZmlsZSkoY3JlYXRvciwgb3B0cykpO1xuICAgIH1cbiAgICBjb25zdCBjcmVhdG9yRGlkID0gbmV3IHN5bnRheF8xLkF0VXJpKHN1YmplY3QudXJpKS5ob3N0bmFtZTtcbiAgICBhY2Muc2V0RGlkKGNyZWF0b3JEaWQpO1xuICAgIGFjYy5zZXRJc01lKGNyZWF0b3JEaWQgPT09IG9wdHMudXNlckRpZCk7XG4gICAgaWYgKHN1YmplY3QubGFiZWxzPy5sZW5ndGgpIHtcbiAgICAgICAgZm9yIChjb25zdCBsYWJlbCBvZiBzdWJqZWN0LmxhYmVscykge1xuICAgICAgICAgICAgYWNjLmFkZExhYmVsKCdjb250ZW50JywgbGFiZWwsIG9wdHMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBhY2M7XG59XG5mdW5jdGlvbiBpc1Byb2ZpbGUodikge1xuICAgIHJldHVybiB2ICYmIHR5cGVvZiB2ID09PSAnb2JqZWN0JyAmJiAnZGlkJyBpbiB2O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNlci1saXN0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/moderation/subjects/user-list.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/moderation/types.js":
/*!************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/moderation/types.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NOOP_BEHAVIOR = exports.HIDE_BEHAVIOR = exports.MUTEWORD_BEHAVIOR = exports.MUTE_BEHAVIOR = exports.BLOCK_BEHAVIOR = exports.CUSTOM_LABEL_VALUE_RE = void 0;\n// syntax\n// =\nexports.CUSTOM_LABEL_VALUE_RE = /^[a-z-]+$/;\nexports.BLOCK_BEHAVIOR = {\n    profileList: 'blur',\n    profileView: 'alert',\n    avatar: 'blur',\n    banner: 'blur',\n    contentList: 'blur',\n    contentView: 'blur',\n};\nexports.MUTE_BEHAVIOR = {\n    profileList: 'inform',\n    profileView: 'alert',\n    contentList: 'blur',\n    contentView: 'inform',\n};\nexports.MUTEWORD_BEHAVIOR = {\n    contentList: 'blur',\n    contentView: 'blur',\n};\nexports.HIDE_BEHAVIOR = {\n    contentList: 'blur',\n    contentView: 'blur',\n};\nexports.NOOP_BEHAVIOR = {};\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvbW9kZXJhdGlvbi90eXBlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUIsR0FBRyxxQkFBcUIsR0FBRyx5QkFBeUIsR0FBRyxxQkFBcUIsR0FBRyxzQkFBc0IsR0FBRyw2QkFBNkI7QUFDMUo7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QixzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvbW9kZXJhdGlvbi90eXBlcy5qcz8yMTRkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5OT09QX0JFSEFWSU9SID0gZXhwb3J0cy5ISURFX0JFSEFWSU9SID0gZXhwb3J0cy5NVVRFV09SRF9CRUhBVklPUiA9IGV4cG9ydHMuTVVURV9CRUhBVklPUiA9IGV4cG9ydHMuQkxPQ0tfQkVIQVZJT1IgPSBleHBvcnRzLkNVU1RPTV9MQUJFTF9WQUxVRV9SRSA9IHZvaWQgMDtcbi8vIHN5bnRheFxuLy8gPVxuZXhwb3J0cy5DVVNUT01fTEFCRUxfVkFMVUVfUkUgPSAvXlthLXotXSskLztcbmV4cG9ydHMuQkxPQ0tfQkVIQVZJT1IgPSB7XG4gICAgcHJvZmlsZUxpc3Q6ICdibHVyJyxcbiAgICBwcm9maWxlVmlldzogJ2FsZXJ0JyxcbiAgICBhdmF0YXI6ICdibHVyJyxcbiAgICBiYW5uZXI6ICdibHVyJyxcbiAgICBjb250ZW50TGlzdDogJ2JsdXInLFxuICAgIGNvbnRlbnRWaWV3OiAnYmx1cicsXG59O1xuZXhwb3J0cy5NVVRFX0JFSEFWSU9SID0ge1xuICAgIHByb2ZpbGVMaXN0OiAnaW5mb3JtJyxcbiAgICBwcm9maWxlVmlldzogJ2FsZXJ0JyxcbiAgICBjb250ZW50TGlzdDogJ2JsdXInLFxuICAgIGNvbnRlbnRWaWV3OiAnaW5mb3JtJyxcbn07XG5leHBvcnRzLk1VVEVXT1JEX0JFSEFWSU9SID0ge1xuICAgIGNvbnRlbnRMaXN0OiAnYmx1cicsXG4gICAgY29udGVudFZpZXc6ICdibHVyJyxcbn07XG5leHBvcnRzLkhJREVfQkVIQVZJT1IgPSB7XG4gICAgY29udGVudExpc3Q6ICdibHVyJyxcbiAgICBjb250ZW50VmlldzogJ2JsdXInLFxufTtcbmV4cG9ydHMuTk9PUF9CRUhBVklPUiA9IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/moderation/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/moderation/ui.js":
/*!*********************************************************!*\
  !*** ./node_modules/@atproto/api/dist/moderation/ui.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ModerationUI = void 0;\nclass ModerationUI {\n    constructor() {\n        Object.defineProperty(this, \"noOverride\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"filters\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"blurs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"alerts\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"informs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n    }\n    get filter() {\n        return this.filters.length !== 0;\n    }\n    get blur() {\n        return this.blurs.length !== 0;\n    }\n    get alert() {\n        return this.alerts.length !== 0;\n    }\n    get inform() {\n        return this.informs.length !== 0;\n    }\n}\nexports.ModerationUI = ModerationUI;\n//# sourceMappingURL=ui.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvbW9kZXJhdGlvbi91aS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvbW9kZXJhdGlvbi91aS5qcz9hMTAwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Nb2RlcmF0aW9uVUkgPSB2b2lkIDA7XG5jbGFzcyBNb2RlcmF0aW9uVUkge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJub092ZXJyaWRlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBmYWxzZVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiZmlsdGVyc1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogW11cbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImJsdXJzXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBbXVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiYWxlcnRzXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBbXVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiaW5mb3Jtc1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogW11cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGdldCBmaWx0ZXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZpbHRlcnMubGVuZ3RoICE9PSAwO1xuICAgIH1cbiAgICBnZXQgYmx1cigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYmx1cnMubGVuZ3RoICE9PSAwO1xuICAgIH1cbiAgICBnZXQgYWxlcnQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmFsZXJ0cy5sZW5ndGggIT09IDA7XG4gICAgfVxuICAgIGdldCBpbmZvcm0oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmluZm9ybXMubGVuZ3RoICE9PSAwO1xuICAgIH1cbn1cbmV4cG9ydHMuTW9kZXJhdGlvblVJID0gTW9kZXJhdGlvblVJO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dWkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/moderation/ui.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/moderation/util.js":
/*!***********************************************************!*\
  !*** ./node_modules/@atproto/api/dist/moderation/util.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isQuotedPost = isQuotedPost;\nexports.isQuotedPostWithMedia = isQuotedPostWithMedia;\nexports.interpretLabelValueDefinition = interpretLabelValueDefinition;\nexports.interpretLabelValueDefinitions = interpretLabelValueDefinitions;\nconst client_1 = __webpack_require__(/*! ../client */ \"(ssr)/./node_modules/@atproto/api/dist/client/index.js\");\nfunction isQuotedPost(embed) {\n    return Boolean(embed && client_1.AppBskyEmbedRecord.isView(embed));\n}\nfunction isQuotedPostWithMedia(embed) {\n    return Boolean(embed && client_1.AppBskyEmbedRecordWithMedia.isView(embed));\n}\nfunction interpretLabelValueDefinition(def, definedBy) {\n    const behaviors = {\n        account: {},\n        profile: {},\n        content: {},\n    };\n    const alertOrInform = def.severity === 'alert'\n        ? 'alert'\n        : def.severity === 'inform'\n            ? 'inform'\n            : undefined;\n    if (def.blurs === 'content') {\n        // target=account, blurs=content\n        behaviors.account.profileList = alertOrInform;\n        behaviors.account.profileView = alertOrInform;\n        behaviors.account.contentList = 'blur';\n        behaviors.account.contentView = def.adultOnly ? 'blur' : alertOrInform;\n        // target=profile, blurs=content\n        behaviors.profile.profileList = alertOrInform;\n        behaviors.profile.profileView = alertOrInform;\n        // target=content, blurs=content\n        behaviors.content.contentList = 'blur';\n        behaviors.content.contentView = def.adultOnly ? 'blur' : alertOrInform;\n    }\n    else if (def.blurs === 'media') {\n        // target=account, blurs=media\n        behaviors.account.profileList = alertOrInform;\n        behaviors.account.profileView = alertOrInform;\n        behaviors.account.avatar = 'blur';\n        behaviors.account.banner = 'blur';\n        // target=profile, blurs=media\n        behaviors.profile.profileList = alertOrInform;\n        behaviors.profile.profileView = alertOrInform;\n        behaviors.profile.avatar = 'blur';\n        behaviors.profile.banner = 'blur';\n        // target=content, blurs=media\n        behaviors.content.contentMedia = 'blur';\n    }\n    else if (def.blurs === 'none') {\n        // target=account, blurs=none\n        behaviors.account.profileList = alertOrInform;\n        behaviors.account.profileView = alertOrInform;\n        behaviors.account.contentList = alertOrInform;\n        behaviors.account.contentView = alertOrInform;\n        // target=profile, blurs=none\n        behaviors.profile.profileList = alertOrInform;\n        behaviors.profile.profileView = alertOrInform;\n        // target=content, blurs=none\n        behaviors.content.contentList = alertOrInform;\n        behaviors.content.contentView = alertOrInform;\n    }\n    let defaultSetting = 'warn';\n    if (def.defaultSetting === 'hide' || def.defaultSetting === 'ignore') {\n        defaultSetting = def.defaultSetting;\n    }\n    const flags = ['no-self'];\n    if (def.adultOnly) {\n        flags.push('adult');\n    }\n    return {\n        ...def,\n        definedBy,\n        configurable: true,\n        defaultSetting,\n        flags,\n        behaviors,\n    };\n}\nfunction interpretLabelValueDefinitions(labelerView) {\n    return (labelerView.policies?.labelValueDefinitions || [])\n        .filter((labelValDef) => client_1.ComAtprotoLabelDefs.validateLabelValueDefinition(labelValDef).success)\n        .map((labelValDef) => interpretLabelValueDefinition(labelValDef, labelerView.creator.did));\n}\n//# sourceMappingURL=util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvbW9kZXJhdGlvbi91dGlsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQiw2QkFBNkI7QUFDN0IscUNBQXFDO0FBQ3JDLHNDQUFzQztBQUN0QyxpQkFBaUIsbUJBQU8sQ0FBQyx5RUFBVztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CLG1CQUFtQjtBQUNuQixtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvbW9kZXJhdGlvbi91dGlsLmpzPzQ1YzgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzUXVvdGVkUG9zdCA9IGlzUXVvdGVkUG9zdDtcbmV4cG9ydHMuaXNRdW90ZWRQb3N0V2l0aE1lZGlhID0gaXNRdW90ZWRQb3N0V2l0aE1lZGlhO1xuZXhwb3J0cy5pbnRlcnByZXRMYWJlbFZhbHVlRGVmaW5pdGlvbiA9IGludGVycHJldExhYmVsVmFsdWVEZWZpbml0aW9uO1xuZXhwb3J0cy5pbnRlcnByZXRMYWJlbFZhbHVlRGVmaW5pdGlvbnMgPSBpbnRlcnByZXRMYWJlbFZhbHVlRGVmaW5pdGlvbnM7XG5jb25zdCBjbGllbnRfMSA9IHJlcXVpcmUoXCIuLi9jbGllbnRcIik7XG5mdW5jdGlvbiBpc1F1b3RlZFBvc3QoZW1iZWQpIHtcbiAgICByZXR1cm4gQm9vbGVhbihlbWJlZCAmJiBjbGllbnRfMS5BcHBCc2t5RW1iZWRSZWNvcmQuaXNWaWV3KGVtYmVkKSk7XG59XG5mdW5jdGlvbiBpc1F1b3RlZFBvc3RXaXRoTWVkaWEoZW1iZWQpIHtcbiAgICByZXR1cm4gQm9vbGVhbihlbWJlZCAmJiBjbGllbnRfMS5BcHBCc2t5RW1iZWRSZWNvcmRXaXRoTWVkaWEuaXNWaWV3KGVtYmVkKSk7XG59XG5mdW5jdGlvbiBpbnRlcnByZXRMYWJlbFZhbHVlRGVmaW5pdGlvbihkZWYsIGRlZmluZWRCeSkge1xuICAgIGNvbnN0IGJlaGF2aW9ycyA9IHtcbiAgICAgICAgYWNjb3VudDoge30sXG4gICAgICAgIHByb2ZpbGU6IHt9LFxuICAgICAgICBjb250ZW50OiB7fSxcbiAgICB9O1xuICAgIGNvbnN0IGFsZXJ0T3JJbmZvcm0gPSBkZWYuc2V2ZXJpdHkgPT09ICdhbGVydCdcbiAgICAgICAgPyAnYWxlcnQnXG4gICAgICAgIDogZGVmLnNldmVyaXR5ID09PSAnaW5mb3JtJ1xuICAgICAgICAgICAgPyAnaW5mb3JtJ1xuICAgICAgICAgICAgOiB1bmRlZmluZWQ7XG4gICAgaWYgKGRlZi5ibHVycyA9PT0gJ2NvbnRlbnQnKSB7XG4gICAgICAgIC8vIHRhcmdldD1hY2NvdW50LCBibHVycz1jb250ZW50XG4gICAgICAgIGJlaGF2aW9ycy5hY2NvdW50LnByb2ZpbGVMaXN0ID0gYWxlcnRPckluZm9ybTtcbiAgICAgICAgYmVoYXZpb3JzLmFjY291bnQucHJvZmlsZVZpZXcgPSBhbGVydE9ySW5mb3JtO1xuICAgICAgICBiZWhhdmlvcnMuYWNjb3VudC5jb250ZW50TGlzdCA9ICdibHVyJztcbiAgICAgICAgYmVoYXZpb3JzLmFjY291bnQuY29udGVudFZpZXcgPSBkZWYuYWR1bHRPbmx5ID8gJ2JsdXInIDogYWxlcnRPckluZm9ybTtcbiAgICAgICAgLy8gdGFyZ2V0PXByb2ZpbGUsIGJsdXJzPWNvbnRlbnRcbiAgICAgICAgYmVoYXZpb3JzLnByb2ZpbGUucHJvZmlsZUxpc3QgPSBhbGVydE9ySW5mb3JtO1xuICAgICAgICBiZWhhdmlvcnMucHJvZmlsZS5wcm9maWxlVmlldyA9IGFsZXJ0T3JJbmZvcm07XG4gICAgICAgIC8vIHRhcmdldD1jb250ZW50LCBibHVycz1jb250ZW50XG4gICAgICAgIGJlaGF2aW9ycy5jb250ZW50LmNvbnRlbnRMaXN0ID0gJ2JsdXInO1xuICAgICAgICBiZWhhdmlvcnMuY29udGVudC5jb250ZW50VmlldyA9IGRlZi5hZHVsdE9ubHkgPyAnYmx1cicgOiBhbGVydE9ySW5mb3JtO1xuICAgIH1cbiAgICBlbHNlIGlmIChkZWYuYmx1cnMgPT09ICdtZWRpYScpIHtcbiAgICAgICAgLy8gdGFyZ2V0PWFjY291bnQsIGJsdXJzPW1lZGlhXG4gICAgICAgIGJlaGF2aW9ycy5hY2NvdW50LnByb2ZpbGVMaXN0ID0gYWxlcnRPckluZm9ybTtcbiAgICAgICAgYmVoYXZpb3JzLmFjY291bnQucHJvZmlsZVZpZXcgPSBhbGVydE9ySW5mb3JtO1xuICAgICAgICBiZWhhdmlvcnMuYWNjb3VudC5hdmF0YXIgPSAnYmx1cic7XG4gICAgICAgIGJlaGF2aW9ycy5hY2NvdW50LmJhbm5lciA9ICdibHVyJztcbiAgICAgICAgLy8gdGFyZ2V0PXByb2ZpbGUsIGJsdXJzPW1lZGlhXG4gICAgICAgIGJlaGF2aW9ycy5wcm9maWxlLnByb2ZpbGVMaXN0ID0gYWxlcnRPckluZm9ybTtcbiAgICAgICAgYmVoYXZpb3JzLnByb2ZpbGUucHJvZmlsZVZpZXcgPSBhbGVydE9ySW5mb3JtO1xuICAgICAgICBiZWhhdmlvcnMucHJvZmlsZS5hdmF0YXIgPSAnYmx1cic7XG4gICAgICAgIGJlaGF2aW9ycy5wcm9maWxlLmJhbm5lciA9ICdibHVyJztcbiAgICAgICAgLy8gdGFyZ2V0PWNvbnRlbnQsIGJsdXJzPW1lZGlhXG4gICAgICAgIGJlaGF2aW9ycy5jb250ZW50LmNvbnRlbnRNZWRpYSA9ICdibHVyJztcbiAgICB9XG4gICAgZWxzZSBpZiAoZGVmLmJsdXJzID09PSAnbm9uZScpIHtcbiAgICAgICAgLy8gdGFyZ2V0PWFjY291bnQsIGJsdXJzPW5vbmVcbiAgICAgICAgYmVoYXZpb3JzLmFjY291bnQucHJvZmlsZUxpc3QgPSBhbGVydE9ySW5mb3JtO1xuICAgICAgICBiZWhhdmlvcnMuYWNjb3VudC5wcm9maWxlVmlldyA9IGFsZXJ0T3JJbmZvcm07XG4gICAgICAgIGJlaGF2aW9ycy5hY2NvdW50LmNvbnRlbnRMaXN0ID0gYWxlcnRPckluZm9ybTtcbiAgICAgICAgYmVoYXZpb3JzLmFjY291bnQuY29udGVudFZpZXcgPSBhbGVydE9ySW5mb3JtO1xuICAgICAgICAvLyB0YXJnZXQ9cHJvZmlsZSwgYmx1cnM9bm9uZVxuICAgICAgICBiZWhhdmlvcnMucHJvZmlsZS5wcm9maWxlTGlzdCA9IGFsZXJ0T3JJbmZvcm07XG4gICAgICAgIGJlaGF2aW9ycy5wcm9maWxlLnByb2ZpbGVWaWV3ID0gYWxlcnRPckluZm9ybTtcbiAgICAgICAgLy8gdGFyZ2V0PWNvbnRlbnQsIGJsdXJzPW5vbmVcbiAgICAgICAgYmVoYXZpb3JzLmNvbnRlbnQuY29udGVudExpc3QgPSBhbGVydE9ySW5mb3JtO1xuICAgICAgICBiZWhhdmlvcnMuY29udGVudC5jb250ZW50VmlldyA9IGFsZXJ0T3JJbmZvcm07XG4gICAgfVxuICAgIGxldCBkZWZhdWx0U2V0dGluZyA9ICd3YXJuJztcbiAgICBpZiAoZGVmLmRlZmF1bHRTZXR0aW5nID09PSAnaGlkZScgfHwgZGVmLmRlZmF1bHRTZXR0aW5nID09PSAnaWdub3JlJykge1xuICAgICAgICBkZWZhdWx0U2V0dGluZyA9IGRlZi5kZWZhdWx0U2V0dGluZztcbiAgICB9XG4gICAgY29uc3QgZmxhZ3MgPSBbJ25vLXNlbGYnXTtcbiAgICBpZiAoZGVmLmFkdWx0T25seSkge1xuICAgICAgICBmbGFncy5wdXNoKCdhZHVsdCcpO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAuLi5kZWYsXG4gICAgICAgIGRlZmluZWRCeSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICBkZWZhdWx0U2V0dGluZyxcbiAgICAgICAgZmxhZ3MsXG4gICAgICAgIGJlaGF2aW9ycyxcbiAgICB9O1xufVxuZnVuY3Rpb24gaW50ZXJwcmV0TGFiZWxWYWx1ZURlZmluaXRpb25zKGxhYmVsZXJWaWV3KSB7XG4gICAgcmV0dXJuIChsYWJlbGVyVmlldy5wb2xpY2llcz8ubGFiZWxWYWx1ZURlZmluaXRpb25zIHx8IFtdKVxuICAgICAgICAuZmlsdGVyKChsYWJlbFZhbERlZikgPT4gY2xpZW50XzEuQ29tQXRwcm90b0xhYmVsRGVmcy52YWxpZGF0ZUxhYmVsVmFsdWVEZWZpbml0aW9uKGxhYmVsVmFsRGVmKS5zdWNjZXNzKVxuICAgICAgICAubWFwKChsYWJlbFZhbERlZikgPT4gaW50ZXJwcmV0TGFiZWxWYWx1ZURlZmluaXRpb24obGFiZWxWYWxEZWYsIGxhYmVsZXJWaWV3LmNyZWF0b3IuZGlkKSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/moderation/util.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/rich-text/detection.js":
/*!***************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/rich-text/detection.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.detectFacets = detectFacets;\nconst tlds_1 = __importDefault(__webpack_require__(/*! tlds */ \"(ssr)/./node_modules/tlds/index.json\"));\nconst util_1 = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/@atproto/api/dist/rich-text/util.js\");\nfunction detectFacets(text) {\n    let match;\n    const facets = [];\n    {\n        // mentions\n        const re = util_1.MENTION_REGEX;\n        while ((match = re.exec(text.utf16))) {\n            if (!isValidDomain(match[3]) && !match[3].endsWith('.test')) {\n                continue; // probably not a handle\n            }\n            const start = text.utf16.indexOf(match[3], match.index) - 1;\n            facets.push({\n                $type: 'app.bsky.richtext.facet',\n                index: {\n                    byteStart: text.utf16IndexToUtf8Index(start),\n                    byteEnd: text.utf16IndexToUtf8Index(start + match[3].length + 1),\n                },\n                features: [\n                    {\n                        $type: 'app.bsky.richtext.facet#mention',\n                        did: match[3], // must be resolved afterwards\n                    },\n                ],\n            });\n        }\n    }\n    {\n        // links\n        const re = util_1.URL_REGEX;\n        while ((match = re.exec(text.utf16))) {\n            let uri = match[2];\n            if (!uri.startsWith('http')) {\n                const domain = match.groups?.domain;\n                if (!domain || !isValidDomain(domain)) {\n                    continue;\n                }\n                uri = `https://${uri}`;\n            }\n            const start = text.utf16.indexOf(match[2], match.index);\n            const index = { start, end: start + match[2].length };\n            // strip ending puncuation\n            if (/[.,;:!?]$/.test(uri)) {\n                uri = uri.slice(0, -1);\n                index.end--;\n            }\n            if (/[)]$/.test(uri) && !uri.includes('(')) {\n                uri = uri.slice(0, -1);\n                index.end--;\n            }\n            facets.push({\n                index: {\n                    byteStart: text.utf16IndexToUtf8Index(index.start),\n                    byteEnd: text.utf16IndexToUtf8Index(index.end),\n                },\n                features: [\n                    {\n                        $type: 'app.bsky.richtext.facet#link',\n                        uri,\n                    },\n                ],\n            });\n        }\n    }\n    {\n        const re = util_1.TAG_REGEX;\n        while ((match = re.exec(text.utf16))) {\n            const leading = match[1];\n            let tag = match[2];\n            if (!tag)\n                continue;\n            // strip ending punctuation and any spaces\n            tag = tag.trim().replace(util_1.TRAILING_PUNCTUATION_REGEX, '');\n            if (tag.length === 0 || tag.length > 64)\n                continue;\n            const index = match.index + leading.length;\n            facets.push({\n                index: {\n                    byteStart: text.utf16IndexToUtf8Index(index),\n                    byteEnd: text.utf16IndexToUtf8Index(index + 1 + tag.length),\n                },\n                features: [\n                    {\n                        $type: 'app.bsky.richtext.facet#tag',\n                        tag: tag,\n                    },\n                ],\n            });\n        }\n    }\n    return facets.length > 0 ? facets : undefined;\n}\nfunction isValidDomain(str) {\n    return !!tlds_1.default.find((tld) => {\n        const i = str.lastIndexOf(tld);\n        if (i === -1) {\n            return false;\n        }\n        return str.charAt(i - 1) === '.' && i === str.length - tld.length;\n    });\n}\n//# sourceMappingURL=detection.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvcmljaC10ZXh0L2RldGVjdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQiwrQkFBK0IsbUJBQU8sQ0FBQyxrREFBTTtBQUM3QyxlQUFlLG1CQUFPLENBQUMsd0VBQVE7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsSUFBSTtBQUNyQztBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L3JpY2gtdGV4dC9kZXRlY3Rpb24uanM/YjE4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGV0ZWN0RmFjZXRzID0gZGV0ZWN0RmFjZXRzO1xuY29uc3QgdGxkc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJ0bGRzXCIpKTtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuL3V0aWxcIik7XG5mdW5jdGlvbiBkZXRlY3RGYWNldHModGV4dCkge1xuICAgIGxldCBtYXRjaDtcbiAgICBjb25zdCBmYWNldHMgPSBbXTtcbiAgICB7XG4gICAgICAgIC8vIG1lbnRpb25zXG4gICAgICAgIGNvbnN0IHJlID0gdXRpbF8xLk1FTlRJT05fUkVHRVg7XG4gICAgICAgIHdoaWxlICgobWF0Y2ggPSByZS5leGVjKHRleHQudXRmMTYpKSkge1xuICAgICAgICAgICAgaWYgKCFpc1ZhbGlkRG9tYWluKG1hdGNoWzNdKSAmJiAhbWF0Y2hbM10uZW5kc1dpdGgoJy50ZXN0JykpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTsgLy8gcHJvYmFibHkgbm90IGEgaGFuZGxlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBzdGFydCA9IHRleHQudXRmMTYuaW5kZXhPZihtYXRjaFszXSwgbWF0Y2guaW5kZXgpIC0gMTtcbiAgICAgICAgICAgIGZhY2V0cy5wdXNoKHtcbiAgICAgICAgICAgICAgICAkdHlwZTogJ2FwcC5ic2t5LnJpY2h0ZXh0LmZhY2V0JyxcbiAgICAgICAgICAgICAgICBpbmRleDoge1xuICAgICAgICAgICAgICAgICAgICBieXRlU3RhcnQ6IHRleHQudXRmMTZJbmRleFRvVXRmOEluZGV4KHN0YXJ0KSxcbiAgICAgICAgICAgICAgICAgICAgYnl0ZUVuZDogdGV4dC51dGYxNkluZGV4VG9VdGY4SW5kZXgoc3RhcnQgKyBtYXRjaFszXS5sZW5ndGggKyAxKSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGZlYXR1cmVzOiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICR0eXBlOiAnYXBwLmJza3kucmljaHRleHQuZmFjZXQjbWVudGlvbicsXG4gICAgICAgICAgICAgICAgICAgICAgICBkaWQ6IG1hdGNoWzNdLCAvLyBtdXN0IGJlIHJlc29sdmVkIGFmdGVyd2FyZHNcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAge1xuICAgICAgICAvLyBsaW5rc1xuICAgICAgICBjb25zdCByZSA9IHV0aWxfMS5VUkxfUkVHRVg7XG4gICAgICAgIHdoaWxlICgobWF0Y2ggPSByZS5leGVjKHRleHQudXRmMTYpKSkge1xuICAgICAgICAgICAgbGV0IHVyaSA9IG1hdGNoWzJdO1xuICAgICAgICAgICAgaWYgKCF1cmkuc3RhcnRzV2l0aCgnaHR0cCcpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZG9tYWluID0gbWF0Y2guZ3JvdXBzPy5kb21haW47XG4gICAgICAgICAgICAgICAgaWYgKCFkb21haW4gfHwgIWlzVmFsaWREb21haW4oZG9tYWluKSkge1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdXJpID0gYGh0dHBzOi8vJHt1cml9YDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHN0YXJ0ID0gdGV4dC51dGYxNi5pbmRleE9mKG1hdGNoWzJdLCBtYXRjaC5pbmRleCk7XG4gICAgICAgICAgICBjb25zdCBpbmRleCA9IHsgc3RhcnQsIGVuZDogc3RhcnQgKyBtYXRjaFsyXS5sZW5ndGggfTtcbiAgICAgICAgICAgIC8vIHN0cmlwIGVuZGluZyBwdW5jdWF0aW9uXG4gICAgICAgICAgICBpZiAoL1suLDs6IT9dJC8udGVzdCh1cmkpKSB7XG4gICAgICAgICAgICAgICAgdXJpID0gdXJpLnNsaWNlKDAsIC0xKTtcbiAgICAgICAgICAgICAgICBpbmRleC5lbmQtLTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICgvWyldJC8udGVzdCh1cmkpICYmICF1cmkuaW5jbHVkZXMoJygnKSkge1xuICAgICAgICAgICAgICAgIHVyaSA9IHVyaS5zbGljZSgwLCAtMSk7XG4gICAgICAgICAgICAgICAgaW5kZXguZW5kLS07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmYWNldHMucHVzaCh7XG4gICAgICAgICAgICAgICAgaW5kZXg6IHtcbiAgICAgICAgICAgICAgICAgICAgYnl0ZVN0YXJ0OiB0ZXh0LnV0ZjE2SW5kZXhUb1V0ZjhJbmRleChpbmRleC5zdGFydCksXG4gICAgICAgICAgICAgICAgICAgIGJ5dGVFbmQ6IHRleHQudXRmMTZJbmRleFRvVXRmOEluZGV4KGluZGV4LmVuZCksXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBmZWF0dXJlczogW1xuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkdHlwZTogJ2FwcC5ic2t5LnJpY2h0ZXh0LmZhY2V0I2xpbmsnLFxuICAgICAgICAgICAgICAgICAgICAgICAgdXJpLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB7XG4gICAgICAgIGNvbnN0IHJlID0gdXRpbF8xLlRBR19SRUdFWDtcbiAgICAgICAgd2hpbGUgKChtYXRjaCA9IHJlLmV4ZWModGV4dC51dGYxNikpKSB7XG4gICAgICAgICAgICBjb25zdCBsZWFkaW5nID0gbWF0Y2hbMV07XG4gICAgICAgICAgICBsZXQgdGFnID0gbWF0Y2hbMl07XG4gICAgICAgICAgICBpZiAoIXRhZylcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIC8vIHN0cmlwIGVuZGluZyBwdW5jdHVhdGlvbiBhbmQgYW55IHNwYWNlc1xuICAgICAgICAgICAgdGFnID0gdGFnLnRyaW0oKS5yZXBsYWNlKHV0aWxfMS5UUkFJTElOR19QVU5DVFVBVElPTl9SRUdFWCwgJycpO1xuICAgICAgICAgICAgaWYgKHRhZy5sZW5ndGggPT09IDAgfHwgdGFnLmxlbmd0aCA+IDY0KVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgY29uc3QgaW5kZXggPSBtYXRjaC5pbmRleCArIGxlYWRpbmcubGVuZ3RoO1xuICAgICAgICAgICAgZmFjZXRzLnB1c2goe1xuICAgICAgICAgICAgICAgIGluZGV4OiB7XG4gICAgICAgICAgICAgICAgICAgIGJ5dGVTdGFydDogdGV4dC51dGYxNkluZGV4VG9VdGY4SW5kZXgoaW5kZXgpLFxuICAgICAgICAgICAgICAgICAgICBieXRlRW5kOiB0ZXh0LnV0ZjE2SW5kZXhUb1V0ZjhJbmRleChpbmRleCArIDEgKyB0YWcubGVuZ3RoKSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGZlYXR1cmVzOiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICR0eXBlOiAnYXBwLmJza3kucmljaHRleHQuZmFjZXQjdGFnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhZzogdGFnLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmFjZXRzLmxlbmd0aCA+IDAgPyBmYWNldHMgOiB1bmRlZmluZWQ7XG59XG5mdW5jdGlvbiBpc1ZhbGlkRG9tYWluKHN0cikge1xuICAgIHJldHVybiAhIXRsZHNfMS5kZWZhdWx0LmZpbmQoKHRsZCkgPT4ge1xuICAgICAgICBjb25zdCBpID0gc3RyLmxhc3RJbmRleE9mKHRsZCk7XG4gICAgICAgIGlmIChpID09PSAtMSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzdHIuY2hhckF0KGkgLSAxKSA9PT0gJy4nICYmIGkgPT09IHN0ci5sZW5ndGggLSB0bGQubGVuZ3RoO1xuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGV0ZWN0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/rich-text/detection.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/rich-text/rich-text.js":
/*!***************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/rich-text/rich-text.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n= Rich Text Manipulation\n\nWhen we sanitize rich text, we have to update the entity indices as the\ntext is modified. This can be modeled as inserts() and deletes() of the\nrich text string. The possible scenarios are outlined below, along with\ntheir expected behaviors.\n\nNOTE: Slices are start inclusive, end exclusive\n\n== richTextInsert()\n\nTarget string:\n\n   0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l o   w o r l d   // string value\n       ^-------^           // target slice {start: 2, end: 7}\n\nScenarios:\n\nA: ^                       // insert \"test\" at 0\nB:        ^                // insert \"test\" at 4\nC:                 ^       // insert \"test\" at 8\n\nA = before           -> move both by num added\nB = inner            -> move end by num added\nC = after            -> noop\n\nResults:\n\nA: 0 1 2 3 4 5 6 7 8 910   // string indices\n   t e s t h e l l o   w   // string value\n               ^-------^   // target slice {start: 6, end: 11}\n\nB: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l t e s t o   w   // string value\n       ^---------------^   // target slice {start: 2, end: 11}\n\nC: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l o   w o t e s   // string value\n       ^-------^           // target slice {start: 2, end: 7}\n\n== richTextDelete()\n\nTarget string:\n\n   0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l o   w o r l d   // string value\n       ^-------^           // target slice {start: 2, end: 7}\n\nScenarios:\n\nA: ^---------------^       // remove slice {start: 0, end: 9}\nB:               ^-----^   // remove slice {start: 7, end: 11}\nC:         ^-----------^   // remove slice {start: 4, end: 11}\nD:       ^-^               // remove slice {start: 3, end: 5}\nE:   ^-----^               // remove slice {start: 1, end: 5}\nF: ^-^                     // remove slice {start: 0, end: 2}\n\nA = entirely outer   -> delete slice\nB = entirely after   -> noop\nC = partially after  -> move end to remove-start\nD = entirely inner   -> move end by num removed\nE = partially before -> move start to remove-start index, move end by num removed\nF = entirely before  -> move both by num removed\n\nResults:\n\nA: 0 1 2 3 4 5 6 7 8 910   // string indices\n   l d                     // string value\n                           // target slice (deleted)\n\nB: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l o   w           // string value\n       ^-------^           // target slice {start: 2, end: 7}\n\nC: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l                 // string value\n       ^-^                 // target slice {start: 2, end: 4}\n\nD: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l   w o r l d       // string value\n       ^---^               // target slice {start: 2, end: 5}\n\nE: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h   w o r l d           // string value\n     ^-^                   // target slice {start: 1, end: 3}\n\nF: 0 1 2 3 4 5 6 7 8 910   // string indices\n   l l o   w o r l d       // string value\n   ^-------^               // target slice {start: 0, end: 5}\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RichText = exports.RichTextSegment = void 0;\nconst client_1 = __webpack_require__(/*! ../client */ \"(ssr)/./node_modules/@atproto/api/dist/client/index.js\");\nconst detection_1 = __webpack_require__(/*! ./detection */ \"(ssr)/./node_modules/@atproto/api/dist/rich-text/detection.js\");\nconst sanitization_1 = __webpack_require__(/*! ./sanitization */ \"(ssr)/./node_modules/@atproto/api/dist/rich-text/sanitization.js\");\nconst unicode_1 = __webpack_require__(/*! ./unicode */ \"(ssr)/./node_modules/@atproto/api/dist/rich-text/unicode.js\");\nclass RichTextSegment {\n    constructor(text, facet) {\n        Object.defineProperty(this, \"text\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: text\n        });\n        Object.defineProperty(this, \"facet\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: facet\n        });\n    }\n    get link() {\n        const link = this.facet?.features.find(client_1.AppBskyRichtextFacet.isLink);\n        if (client_1.AppBskyRichtextFacet.isLink(link)) {\n            return link;\n        }\n        return undefined;\n    }\n    isLink() {\n        return !!this.link;\n    }\n    get mention() {\n        const mention = this.facet?.features.find(client_1.AppBskyRichtextFacet.isMention);\n        if (client_1.AppBskyRichtextFacet.isMention(mention)) {\n            return mention;\n        }\n        return undefined;\n    }\n    isMention() {\n        return !!this.mention;\n    }\n    get tag() {\n        const tag = this.facet?.features.find(client_1.AppBskyRichtextFacet.isTag);\n        if (client_1.AppBskyRichtextFacet.isTag(tag)) {\n            return tag;\n        }\n        return undefined;\n    }\n    isTag() {\n        return !!this.tag;\n    }\n}\nexports.RichTextSegment = RichTextSegment;\nclass RichText {\n    constructor(props, opts) {\n        Object.defineProperty(this, \"unicodeText\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"facets\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.unicodeText = new unicode_1.UnicodeString(props.text);\n        this.facets = props.facets;\n        if (!this.facets?.length && props.entities?.length) {\n            this.facets = entitiesToFacets(this.unicodeText, props.entities);\n        }\n        if (this.facets) {\n            this.facets = this.facets.filter(facetFilter).sort(facetSort);\n        }\n        if (opts?.cleanNewlines) {\n            (0, sanitization_1.sanitizeRichText)(this, { cleanNewlines: true }).copyInto(this);\n        }\n    }\n    get text() {\n        return this.unicodeText.toString();\n    }\n    get length() {\n        return this.unicodeText.length;\n    }\n    get graphemeLength() {\n        return this.unicodeText.graphemeLength;\n    }\n    clone() {\n        return new RichText({\n            text: this.unicodeText.utf16,\n            facets: cloneDeep(this.facets),\n        });\n    }\n    copyInto(target) {\n        target.unicodeText = this.unicodeText;\n        target.facets = cloneDeep(this.facets);\n    }\n    *segments() {\n        const facets = this.facets || [];\n        if (!facets.length) {\n            yield new RichTextSegment(this.unicodeText.utf16);\n            return;\n        }\n        let textCursor = 0;\n        let facetCursor = 0;\n        do {\n            const currFacet = facets[facetCursor];\n            if (textCursor < currFacet.index.byteStart) {\n                yield new RichTextSegment(this.unicodeText.slice(textCursor, currFacet.index.byteStart));\n            }\n            else if (textCursor > currFacet.index.byteStart) {\n                facetCursor++;\n                continue;\n            }\n            if (currFacet.index.byteStart < currFacet.index.byteEnd) {\n                const subtext = this.unicodeText.slice(currFacet.index.byteStart, currFacet.index.byteEnd);\n                if (!subtext.trim()) {\n                    // dont empty string entities\n                    yield new RichTextSegment(subtext);\n                }\n                else {\n                    yield new RichTextSegment(subtext, currFacet);\n                }\n            }\n            textCursor = currFacet.index.byteEnd;\n            facetCursor++;\n        } while (facetCursor < facets.length);\n        if (textCursor < this.unicodeText.length) {\n            yield new RichTextSegment(this.unicodeText.slice(textCursor, this.unicodeText.length));\n        }\n    }\n    insert(insertIndex, insertText) {\n        this.unicodeText = new unicode_1.UnicodeString(this.unicodeText.slice(0, insertIndex) +\n            insertText +\n            this.unicodeText.slice(insertIndex));\n        if (!this.facets?.length) {\n            return this;\n        }\n        const numCharsAdded = insertText.length;\n        for (const ent of this.facets) {\n            // see comment at top of file for labels of each scenario\n            // scenario A (before)\n            if (insertIndex <= ent.index.byteStart) {\n                // move both by num added\n                ent.index.byteStart += numCharsAdded;\n                ent.index.byteEnd += numCharsAdded;\n            }\n            // scenario B (inner)\n            else if (insertIndex >= ent.index.byteStart &&\n                insertIndex < ent.index.byteEnd) {\n                // move end by num added\n                ent.index.byteEnd += numCharsAdded;\n            }\n            // scenario C (after)\n            // noop\n        }\n        return this;\n    }\n    delete(removeStartIndex, removeEndIndex) {\n        this.unicodeText = new unicode_1.UnicodeString(this.unicodeText.slice(0, removeStartIndex) +\n            this.unicodeText.slice(removeEndIndex));\n        if (!this.facets?.length) {\n            return this;\n        }\n        const numCharsRemoved = removeEndIndex - removeStartIndex;\n        for (const ent of this.facets) {\n            // see comment at top of file for labels of each scenario\n            // scenario A (entirely outer)\n            if (removeStartIndex <= ent.index.byteStart &&\n                removeEndIndex >= ent.index.byteEnd) {\n                // delete slice (will get removed in final pass)\n                ent.index.byteStart = 0;\n                ent.index.byteEnd = 0;\n            }\n            // scenario B (entirely after)\n            else if (removeStartIndex > ent.index.byteEnd) {\n                // noop\n            }\n            // scenario C (partially after)\n            else if (removeStartIndex > ent.index.byteStart &&\n                removeStartIndex <= ent.index.byteEnd &&\n                removeEndIndex > ent.index.byteEnd) {\n                // move end to remove start\n                ent.index.byteEnd = removeStartIndex;\n            }\n            // scenario D (entirely inner)\n            else if (removeStartIndex >= ent.index.byteStart &&\n                removeEndIndex <= ent.index.byteEnd) {\n                // move end by num removed\n                ent.index.byteEnd -= numCharsRemoved;\n            }\n            // scenario E (partially before)\n            else if (removeStartIndex < ent.index.byteStart &&\n                removeEndIndex >= ent.index.byteStart &&\n                removeEndIndex <= ent.index.byteEnd) {\n                // move start to remove-start index, move end by num removed\n                ent.index.byteStart = removeStartIndex;\n                ent.index.byteEnd -= numCharsRemoved;\n            }\n            // scenario F (entirely before)\n            else if (removeEndIndex < ent.index.byteStart) {\n                // move both by num removed\n                ent.index.byteStart -= numCharsRemoved;\n                ent.index.byteEnd -= numCharsRemoved;\n            }\n        }\n        // filter out any facets that were made irrelevant\n        this.facets = this.facets.filter((ent) => ent.index.byteStart < ent.index.byteEnd);\n        return this;\n    }\n    /**\n     * Detects facets such as links and mentions\n     * Note: Overwrites the existing facets with auto-detected facets\n     */\n    async detectFacets(agent) {\n        this.facets = (0, detection_1.detectFacets)(this.unicodeText);\n        if (this.facets) {\n            const promises = [];\n            for (const facet of this.facets) {\n                for (const feature of facet.features) {\n                    if (client_1.AppBskyRichtextFacet.isMention(feature)) {\n                        promises.push(agent.com.atproto.identity\n                            .resolveHandle({ handle: feature.did })\n                            .then((res) => res?.data.did)\n                            .catch((_) => undefined)\n                            .then((did) => {\n                            feature.did = did || '';\n                        }));\n                    }\n                }\n            }\n            await Promise.allSettled(promises);\n            this.facets.sort(facetSort);\n        }\n    }\n    /**\n     * Detects facets such as links and mentions but does not resolve them\n     * Will produce invalid facets! For instance, mentions will not have their DIDs set.\n     * Note: Overwrites the existing facets with auto-detected facets\n     */\n    detectFacetsWithoutResolution() {\n        this.facets = (0, detection_1.detectFacets)(this.unicodeText);\n        if (this.facets) {\n            this.facets.sort(facetSort);\n        }\n    }\n}\nexports.RichText = RichText;\nconst facetSort = (a, b) => a.index.byteStart - b.index.byteStart;\nconst facetFilter = (facet) => \n// discard negative-length facets. zero-length facets are valid\nfacet.index.byteStart <= facet.index.byteEnd;\nfunction entitiesToFacets(text, entities) {\n    const facets = [];\n    for (const ent of entities) {\n        if (ent.type === 'link') {\n            facets.push({\n                $type: 'app.bsky.richtext.facet',\n                index: {\n                    byteStart: text.utf16IndexToUtf8Index(ent.index.start),\n                    byteEnd: text.utf16IndexToUtf8Index(ent.index.end),\n                },\n                features: [{ $type: 'app.bsky.richtext.facet#link', uri: ent.value }],\n            });\n        }\n        else if (ent.type === 'mention') {\n            facets.push({\n                $type: 'app.bsky.richtext.facet',\n                index: {\n                    byteStart: text.utf16IndexToUtf8Index(ent.index.start),\n                    byteEnd: text.utf16IndexToUtf8Index(ent.index.end),\n                },\n                features: [\n                    { $type: 'app.bsky.richtext.facet#mention', did: ent.value },\n                ],\n            });\n        }\n    }\n    return facets;\n}\nfunction cloneDeep(v) {\n    if (typeof v === 'undefined') {\n        return v;\n    }\n    return JSON.parse(JSON.stringify(v));\n}\n//# sourceMappingURL=rich-text.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/rich-text/rich-text.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/rich-text/sanitization.js":
/*!******************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/rich-text/sanitization.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.sanitizeRichText = sanitizeRichText;\nconst unicode_1 = __webpack_require__(/*! ./unicode */ \"(ssr)/./node_modules/@atproto/api/dist/rich-text/unicode.js\");\n// this regex is intentionally matching on the zero-with-separator codepoint\n// eslint-disable-next-line no-misleading-character-class\nconst EXCESS_SPACE_RE = /[\\r\\n]([\\u00AD\\u2060\\u200D\\u200C\\u200B\\s]*[\\r\\n]){2,}/;\nconst REPLACEMENT_STR = '\\n\\n';\nfunction sanitizeRichText(richText, opts) {\n    if (opts.cleanNewlines) {\n        richText = clean(richText, EXCESS_SPACE_RE, REPLACEMENT_STR);\n    }\n    return richText;\n}\nfunction clean(richText, targetRegexp, replacementString) {\n    richText = richText.clone();\n    let match = richText.unicodeText.utf16.match(targetRegexp);\n    while (match && typeof match.index !== 'undefined') {\n        const oldText = richText.unicodeText;\n        const removeStartIndex = richText.unicodeText.utf16IndexToUtf8Index(match.index);\n        const removeEndIndex = removeStartIndex + new unicode_1.UnicodeString(match[0]).length;\n        richText.delete(removeStartIndex, removeEndIndex);\n        if (richText.unicodeText.utf16 === oldText.utf16) {\n            break; // sanity check\n        }\n        richText.insert(removeStartIndex, replacementString);\n        match = richText.unicodeText.utf16.match(targetRegexp);\n    }\n    return richText;\n}\n//# sourceMappingURL=sanitization.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvcmljaC10ZXh0L3Nhbml0aXphdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEIsa0JBQWtCLG1CQUFPLENBQUMsOEVBQVc7QUFDckM7QUFDQTtBQUNBLDJFQUEyRSxHQUFHO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvcmljaC10ZXh0L3Nhbml0aXphdGlvbi5qcz8wZmMyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zYW5pdGl6ZVJpY2hUZXh0ID0gc2FuaXRpemVSaWNoVGV4dDtcbmNvbnN0IHVuaWNvZGVfMSA9IHJlcXVpcmUoXCIuL3VuaWNvZGVcIik7XG4vLyB0aGlzIHJlZ2V4IGlzIGludGVudGlvbmFsbHkgbWF0Y2hpbmcgb24gdGhlIHplcm8td2l0aC1zZXBhcmF0b3IgY29kZXBvaW50XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbWlzbGVhZGluZy1jaGFyYWN0ZXItY2xhc3NcbmNvbnN0IEVYQ0VTU19TUEFDRV9SRSA9IC9bXFxyXFxuXShbXFx1MDBBRFxcdTIwNjBcXHUyMDBEXFx1MjAwQ1xcdTIwMEJcXHNdKltcXHJcXG5dKXsyLH0vO1xuY29uc3QgUkVQTEFDRU1FTlRfU1RSID0gJ1xcblxcbic7XG5mdW5jdGlvbiBzYW5pdGl6ZVJpY2hUZXh0KHJpY2hUZXh0LCBvcHRzKSB7XG4gICAgaWYgKG9wdHMuY2xlYW5OZXdsaW5lcykge1xuICAgICAgICByaWNoVGV4dCA9IGNsZWFuKHJpY2hUZXh0LCBFWENFU1NfU1BBQ0VfUkUsIFJFUExBQ0VNRU5UX1NUUik7XG4gICAgfVxuICAgIHJldHVybiByaWNoVGV4dDtcbn1cbmZ1bmN0aW9uIGNsZWFuKHJpY2hUZXh0LCB0YXJnZXRSZWdleHAsIHJlcGxhY2VtZW50U3RyaW5nKSB7XG4gICAgcmljaFRleHQgPSByaWNoVGV4dC5jbG9uZSgpO1xuICAgIGxldCBtYXRjaCA9IHJpY2hUZXh0LnVuaWNvZGVUZXh0LnV0ZjE2Lm1hdGNoKHRhcmdldFJlZ2V4cCk7XG4gICAgd2hpbGUgKG1hdGNoICYmIHR5cGVvZiBtYXRjaC5pbmRleCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY29uc3Qgb2xkVGV4dCA9IHJpY2hUZXh0LnVuaWNvZGVUZXh0O1xuICAgICAgICBjb25zdCByZW1vdmVTdGFydEluZGV4ID0gcmljaFRleHQudW5pY29kZVRleHQudXRmMTZJbmRleFRvVXRmOEluZGV4KG1hdGNoLmluZGV4KTtcbiAgICAgICAgY29uc3QgcmVtb3ZlRW5kSW5kZXggPSByZW1vdmVTdGFydEluZGV4ICsgbmV3IHVuaWNvZGVfMS5Vbmljb2RlU3RyaW5nKG1hdGNoWzBdKS5sZW5ndGg7XG4gICAgICAgIHJpY2hUZXh0LmRlbGV0ZShyZW1vdmVTdGFydEluZGV4LCByZW1vdmVFbmRJbmRleCk7XG4gICAgICAgIGlmIChyaWNoVGV4dC51bmljb2RlVGV4dC51dGYxNiA9PT0gb2xkVGV4dC51dGYxNikge1xuICAgICAgICAgICAgYnJlYWs7IC8vIHNhbml0eSBjaGVja1xuICAgICAgICB9XG4gICAgICAgIHJpY2hUZXh0Lmluc2VydChyZW1vdmVTdGFydEluZGV4LCByZXBsYWNlbWVudFN0cmluZyk7XG4gICAgICAgIG1hdGNoID0gcmljaFRleHQudW5pY29kZVRleHQudXRmMTYubWF0Y2godGFyZ2V0UmVnZXhwKTtcbiAgICB9XG4gICAgcmV0dXJuIHJpY2hUZXh0O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2FuaXRpemF0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/rich-text/sanitization.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/rich-text/unicode.js":
/*!*************************************************************!*\
  !*** ./node_modules/@atproto/api/dist/rich-text/unicode.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/**\n * Javascript uses utf16-encoded strings while most environments and specs\n * have standardized around utf8 (including JSON).\n *\n * After some lengthy debated we decided that richtext facets need to use\n * utf8 indices. This means we need tools to convert indices between utf8\n * and utf16, and that's precisely what this library handles.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UnicodeString = void 0;\nconst common_web_1 = __webpack_require__(/*! @atproto/common-web */ \"(ssr)/./node_modules/@atproto/common-web/dist/index.js\");\nconst encoder = new TextEncoder();\nconst decoder = new TextDecoder();\nclass UnicodeString {\n    constructor(utf16) {\n        Object.defineProperty(this, \"utf16\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"utf8\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_graphemeLen\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.utf16 = utf16;\n        this.utf8 = encoder.encode(utf16);\n    }\n    get length() {\n        return this.utf8.byteLength;\n    }\n    get graphemeLength() {\n        if (!this._graphemeLen) {\n            this._graphemeLen = (0, common_web_1.graphemeLen)(this.utf16);\n        }\n        return this._graphemeLen;\n    }\n    slice(start, end) {\n        return decoder.decode(this.utf8.slice(start, end));\n    }\n    utf16IndexToUtf8Index(i) {\n        return encoder.encode(this.utf16.slice(0, i)).byteLength;\n    }\n    toString() {\n        return this.utf16;\n    }\n}\nexports.UnicodeString = UnicodeString;\n//# sourceMappingURL=unicode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvcmljaC10ZXh0L3VuaWNvZGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQixxQkFBcUIsbUJBQU8sQ0FBQyxtRkFBcUI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2FwaS9kaXN0L3JpY2gtdGV4dC91bmljb2RlLmpzP2QyOTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIEphdmFzY3JpcHQgdXNlcyB1dGYxNi1lbmNvZGVkIHN0cmluZ3Mgd2hpbGUgbW9zdCBlbnZpcm9ubWVudHMgYW5kIHNwZWNzXG4gKiBoYXZlIHN0YW5kYXJkaXplZCBhcm91bmQgdXRmOCAoaW5jbHVkaW5nIEpTT04pLlxuICpcbiAqIEFmdGVyIHNvbWUgbGVuZ3RoeSBkZWJhdGVkIHdlIGRlY2lkZWQgdGhhdCByaWNodGV4dCBmYWNldHMgbmVlZCB0byB1c2VcbiAqIHV0ZjggaW5kaWNlcy4gVGhpcyBtZWFucyB3ZSBuZWVkIHRvb2xzIHRvIGNvbnZlcnQgaW5kaWNlcyBiZXR3ZWVuIHV0ZjhcbiAqIGFuZCB1dGYxNiwgYW5kIHRoYXQncyBwcmVjaXNlbHkgd2hhdCB0aGlzIGxpYnJhcnkgaGFuZGxlcy5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Vbmljb2RlU3RyaW5nID0gdm9pZCAwO1xuY29uc3QgY29tbW9uX3dlYl8xID0gcmVxdWlyZShcIkBhdHByb3RvL2NvbW1vbi13ZWJcIik7XG5jb25zdCBlbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG5jb25zdCBkZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKCk7XG5jbGFzcyBVbmljb2RlU3RyaW5nIHtcbiAgICBjb25zdHJ1Y3Rvcih1dGYxNikge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJ1dGYxNlwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJ1dGY4XCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIl9ncmFwaGVtZUxlblwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnV0ZjE2ID0gdXRmMTY7XG4gICAgICAgIHRoaXMudXRmOCA9IGVuY29kZXIuZW5jb2RlKHV0ZjE2KTtcbiAgICB9XG4gICAgZ2V0IGxlbmd0aCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudXRmOC5ieXRlTGVuZ3RoO1xuICAgIH1cbiAgICBnZXQgZ3JhcGhlbWVMZW5ndGgoKSB7XG4gICAgICAgIGlmICghdGhpcy5fZ3JhcGhlbWVMZW4pIHtcbiAgICAgICAgICAgIHRoaXMuX2dyYXBoZW1lTGVuID0gKDAsIGNvbW1vbl93ZWJfMS5ncmFwaGVtZUxlbikodGhpcy51dGYxNik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2dyYXBoZW1lTGVuO1xuICAgIH1cbiAgICBzbGljZShzdGFydCwgZW5kKSB7XG4gICAgICAgIHJldHVybiBkZWNvZGVyLmRlY29kZSh0aGlzLnV0Zjguc2xpY2Uoc3RhcnQsIGVuZCkpO1xuICAgIH1cbiAgICB1dGYxNkluZGV4VG9VdGY4SW5kZXgoaSkge1xuICAgICAgICByZXR1cm4gZW5jb2Rlci5lbmNvZGUodGhpcy51dGYxNi5zbGljZSgwLCBpKSkuYnl0ZUxlbmd0aDtcbiAgICB9XG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnV0ZjE2O1xuICAgIH1cbn1cbmV4cG9ydHMuVW5pY29kZVN0cmluZyA9IFVuaWNvZGVTdHJpbmc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11bmljb2RlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/rich-text/unicode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/rich-text/util.js":
/*!**********************************************************!*\
  !*** ./node_modules/@atproto/api/dist/rich-text/util.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TAG_REGEX = exports.TRAILING_PUNCTUATION_REGEX = exports.URL_REGEX = exports.MENTION_REGEX = void 0;\nexports.MENTION_REGEX = /(^|\\s|\\()(@)([a-zA-Z0-9.-]+)(\\b)/g;\nexports.URL_REGEX = /(^|\\s|\\()((https?:\\/\\/[\\S]+)|((?<domain>[a-z][a-z0-9]*(\\.[a-z0-9]+)+)[\\S]*))/gim;\nexports.TRAILING_PUNCTUATION_REGEX = /\\p{P}+$/gu;\n/**\n * `\\ufe0f` emoji modifier\n * `\\u00AD\\u2060\\u200A\\u200B\\u200C\\u200D\\u20e2` zero-width spaces (likely incomplete)\n */\nexports.TAG_REGEX = \n// eslint-disable-next-line no-misleading-character-class\n/(^|\\s)[#＃]((?!\\ufe0f)[^\\s\\u00AD\\u2060\\u200A\\u200B\\u200C\\u200D\\u20e2]*[^\\d\\s\\p{P}\\u00AD\\u2060\\u200A\\u200B\\u200C\\u200D\\u20e2]+[^\\s\\u00AD\\u2060\\u200A\\u200B\\u200C\\u200D\\u20e2]*)?/gu;\n//# sourceMappingURL=util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvcmljaC10ZXh0L3V0aWwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCLEdBQUcsa0NBQWtDLEdBQUcsaUJBQWlCLEdBQUcscUJBQXFCO0FBQ2xHLHFCQUFxQjtBQUNyQixpQkFBaUI7QUFDakIsa0NBQWtDLE9BQU8sRUFBRTtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLCtFQUErRSxFQUFFO0FBQ2pGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvcmljaC10ZXh0L3V0aWwuanM/ZWY4YSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVEFHX1JFR0VYID0gZXhwb3J0cy5UUkFJTElOR19QVU5DVFVBVElPTl9SRUdFWCA9IGV4cG9ydHMuVVJMX1JFR0VYID0gZXhwb3J0cy5NRU5USU9OX1JFR0VYID0gdm9pZCAwO1xuZXhwb3J0cy5NRU5USU9OX1JFR0VYID0gLyhefFxcc3xcXCgpKEApKFthLXpBLVowLTkuLV0rKShcXGIpL2c7XG5leHBvcnRzLlVSTF9SRUdFWCA9IC8oXnxcXHN8XFwoKSgoaHR0cHM/OlxcL1xcL1tcXFNdKyl8KCg/PGRvbWFpbj5bYS16XVthLXowLTldKihcXC5bYS16MC05XSspKylbXFxTXSopKS9naW07XG5leHBvcnRzLlRSQUlMSU5HX1BVTkNUVUFUSU9OX1JFR0VYID0gL1xccHtQfSskL2d1O1xuLyoqXG4gKiBgXFx1ZmUwZmAgZW1vamkgbW9kaWZpZXJcbiAqIGBcXHUwMEFEXFx1MjA2MFxcdTIwMEFcXHUyMDBCXFx1MjAwQ1xcdTIwMERcXHUyMGUyYCB6ZXJvLXdpZHRoIHNwYWNlcyAobGlrZWx5IGluY29tcGxldGUpXG4gKi9cbmV4cG9ydHMuVEFHX1JFR0VYID0gXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbWlzbGVhZGluZy1jaGFyYWN0ZXItY2xhc3Ncbi8oXnxcXHMpWyPvvINdKCg/IVxcdWZlMGYpW15cXHNcXHUwMEFEXFx1MjA2MFxcdTIwMEFcXHUyMDBCXFx1MjAwQ1xcdTIwMERcXHUyMGUyXSpbXlxcZFxcc1xccHtQfVxcdTAwQURcXHUyMDYwXFx1MjAwQVxcdTIwMEJcXHUyMDBDXFx1MjAwRFxcdTIwZTJdK1teXFxzXFx1MDBBRFxcdTIwNjBcXHUyMDBBXFx1MjAwQlxcdTIwMENcXHUyMDBEXFx1MjBlMl0qKT8vZ3U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/rich-text/util.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/types.js":
/*!*************************************************!*\
  !*** ./node_modules/@atproto/api/dist/types.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9hcGkvZGlzdC90eXBlcy5qcz8wNjViIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/api/dist/util.js":
/*!************************************************!*\
  !*** ./node_modules/@atproto/api/dist/util.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.nuxSchema = exports.asDid = exports.isDid = void 0;\nexports.sanitizeMutedWordValue = sanitizeMutedWordValue;\nexports.savedFeedsToUriArrays = savedFeedsToUriArrays;\nexports.getSavedFeedType = getSavedFeedType;\nexports.validateSavedFeed = validateSavedFeed;\nexports.validateNux = validateNux;\nconst zod_1 = __webpack_require__(/*! zod */ \"(ssr)/./node_modules/zod/index.cjs\");\nconst common_web_1 = __webpack_require__(/*! @atproto/common-web */ \"(ssr)/./node_modules/@atproto/common-web/dist/index.js\");\nconst syntax_1 = __webpack_require__(/*! @atproto/syntax */ \"(ssr)/./node_modules/@atproto/syntax/dist/index.js\");\nfunction sanitizeMutedWordValue(value) {\n    return (value\n        .trim()\n        .replace(/^#(?!\\ufe0f)/, '')\n        // eslint-disable-next-line no-misleading-character-class\n        .replace(/[\\r\\n\\u00AD\\u2060\\u200D\\u200C\\u200B]+/, ''));\n}\nfunction savedFeedsToUriArrays(savedFeeds) {\n    const pinned = [];\n    const saved = [];\n    for (const feed of savedFeeds) {\n        if (feed.pinned) {\n            pinned.push(feed.value);\n            // saved in v1 includes pinned\n            saved.push(feed.value);\n        }\n        else {\n            saved.push(feed.value);\n        }\n    }\n    return {\n        pinned,\n        saved,\n    };\n}\n/**\n * Get the type of a saved feed, used by deprecated methods for backwards\n * compat. Should not be used moving forward. *Invalid URIs will throw.*\n *\n * @param uri - The AT URI of the saved feed\n */\nfunction getSavedFeedType(uri) {\n    const urip = new syntax_1.AtUri(uri);\n    switch (urip.collection) {\n        case 'app.bsky.feed.generator':\n            return 'feed';\n        case 'app.bsky.graph.list':\n            return 'list';\n        default:\n            return 'unknown';\n    }\n}\nfunction validateSavedFeed(savedFeed) {\n    new common_web_1.TID(savedFeed.id);\n    if (['feed', 'list'].includes(savedFeed.type)) {\n        const uri = new syntax_1.AtUri(savedFeed.value);\n        const isFeed = uri.collection === 'app.bsky.feed.generator';\n        const isList = uri.collection === 'app.bsky.graph.list';\n        if (savedFeed.type === 'feed' && !isFeed) {\n            throw new Error(`Saved feed of type 'feed' must be a feed, got ${uri.collection}`);\n        }\n        if (savedFeed.type === 'list' && !isList) {\n            throw new Error(`Saved feed of type 'list' must be a list, got ${uri.collection}`);\n        }\n    }\n}\n// @TODO use tools from @atproto/did\nconst isDid = (str) => typeof str === 'string' &&\n    str.startsWith('did:') &&\n    str.includes(':', 4) &&\n    str.length > 8 &&\n    str.length <= 2048;\nexports.isDid = isDid;\nconst asDid = (value) => {\n    if ((0, exports.isDid)(value))\n        return value;\n    throw new TypeError(`Invalid DID: ${value}`);\n};\nexports.asDid = asDid;\nexports.nuxSchema = zod_1.z\n    .object({\n    id: zod_1.z.string().max(64),\n    completed: zod_1.z.boolean(),\n    data: zod_1.z.string().max(300).optional(),\n    expiresAt: zod_1.z.string().datetime().optional(),\n})\n    .strict();\nfunction validateNux(nux) {\n    exports.nuxSchema.parse(nux);\n}\n//# sourceMappingURL=util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvdXRpbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsR0FBRyxhQUFhLEdBQUcsYUFBYTtBQUNqRCw4QkFBOEI7QUFDOUIsNkJBQTZCO0FBQzdCLHdCQUF3QjtBQUN4Qix5QkFBeUI7QUFDekIsbUJBQW1CO0FBQ25CLGNBQWMsbUJBQU8sQ0FBQywrQ0FBSztBQUMzQixxQkFBcUIsbUJBQU8sQ0FBQyxtRkFBcUI7QUFDbEQsaUJBQWlCLG1CQUFPLENBQUMsMkVBQWlCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkVBQTZFLGVBQWU7QUFDNUY7QUFDQTtBQUNBLDZFQUE2RSxlQUFlO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsTUFBTTtBQUM5QztBQUNBLGFBQWE7QUFDYixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vYXBpL2Rpc3QvdXRpbC5qcz8xZWYyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5udXhTY2hlbWEgPSBleHBvcnRzLmFzRGlkID0gZXhwb3J0cy5pc0RpZCA9IHZvaWQgMDtcbmV4cG9ydHMuc2FuaXRpemVNdXRlZFdvcmRWYWx1ZSA9IHNhbml0aXplTXV0ZWRXb3JkVmFsdWU7XG5leHBvcnRzLnNhdmVkRmVlZHNUb1VyaUFycmF5cyA9IHNhdmVkRmVlZHNUb1VyaUFycmF5cztcbmV4cG9ydHMuZ2V0U2F2ZWRGZWVkVHlwZSA9IGdldFNhdmVkRmVlZFR5cGU7XG5leHBvcnRzLnZhbGlkYXRlU2F2ZWRGZWVkID0gdmFsaWRhdGVTYXZlZEZlZWQ7XG5leHBvcnRzLnZhbGlkYXRlTnV4ID0gdmFsaWRhdGVOdXg7XG5jb25zdCB6b2RfMSA9IHJlcXVpcmUoXCJ6b2RcIik7XG5jb25zdCBjb21tb25fd2ViXzEgPSByZXF1aXJlKFwiQGF0cHJvdG8vY29tbW9uLXdlYlwiKTtcbmNvbnN0IHN5bnRheF8xID0gcmVxdWlyZShcIkBhdHByb3RvL3N5bnRheFwiKTtcbmZ1bmN0aW9uIHNhbml0aXplTXV0ZWRXb3JkVmFsdWUodmFsdWUpIHtcbiAgICByZXR1cm4gKHZhbHVlXG4gICAgICAgIC50cmltKClcbiAgICAgICAgLnJlcGxhY2UoL14jKD8hXFx1ZmUwZikvLCAnJylcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW1pc2xlYWRpbmctY2hhcmFjdGVyLWNsYXNzXG4gICAgICAgIC5yZXBsYWNlKC9bXFxyXFxuXFx1MDBBRFxcdTIwNjBcXHUyMDBEXFx1MjAwQ1xcdTIwMEJdKy8sICcnKSk7XG59XG5mdW5jdGlvbiBzYXZlZEZlZWRzVG9VcmlBcnJheXMoc2F2ZWRGZWVkcykge1xuICAgIGNvbnN0IHBpbm5lZCA9IFtdO1xuICAgIGNvbnN0IHNhdmVkID0gW107XG4gICAgZm9yIChjb25zdCBmZWVkIG9mIHNhdmVkRmVlZHMpIHtcbiAgICAgICAgaWYgKGZlZWQucGlubmVkKSB7XG4gICAgICAgICAgICBwaW5uZWQucHVzaChmZWVkLnZhbHVlKTtcbiAgICAgICAgICAgIC8vIHNhdmVkIGluIHYxIGluY2x1ZGVzIHBpbm5lZFxuICAgICAgICAgICAgc2F2ZWQucHVzaChmZWVkLnZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHNhdmVkLnB1c2goZmVlZC52YWx1ZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcGlubmVkLFxuICAgICAgICBzYXZlZCxcbiAgICB9O1xufVxuLyoqXG4gKiBHZXQgdGhlIHR5cGUgb2YgYSBzYXZlZCBmZWVkLCB1c2VkIGJ5IGRlcHJlY2F0ZWQgbWV0aG9kcyBmb3IgYmFja3dhcmRzXG4gKiBjb21wYXQuIFNob3VsZCBub3QgYmUgdXNlZCBtb3ZpbmcgZm9yd2FyZC4gKkludmFsaWQgVVJJcyB3aWxsIHRocm93LipcbiAqXG4gKiBAcGFyYW0gdXJpIC0gVGhlIEFUIFVSSSBvZiB0aGUgc2F2ZWQgZmVlZFxuICovXG5mdW5jdGlvbiBnZXRTYXZlZEZlZWRUeXBlKHVyaSkge1xuICAgIGNvbnN0IHVyaXAgPSBuZXcgc3ludGF4XzEuQXRVcmkodXJpKTtcbiAgICBzd2l0Y2ggKHVyaXAuY29sbGVjdGlvbikge1xuICAgICAgICBjYXNlICdhcHAuYnNreS5mZWVkLmdlbmVyYXRvcic6XG4gICAgICAgICAgICByZXR1cm4gJ2ZlZWQnO1xuICAgICAgICBjYXNlICdhcHAuYnNreS5ncmFwaC5saXN0JzpcbiAgICAgICAgICAgIHJldHVybiAnbGlzdCc7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gJ3Vua25vd24nO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHZhbGlkYXRlU2F2ZWRGZWVkKHNhdmVkRmVlZCkge1xuICAgIG5ldyBjb21tb25fd2ViXzEuVElEKHNhdmVkRmVlZC5pZCk7XG4gICAgaWYgKFsnZmVlZCcsICdsaXN0J10uaW5jbHVkZXMoc2F2ZWRGZWVkLnR5cGUpKSB7XG4gICAgICAgIGNvbnN0IHVyaSA9IG5ldyBzeW50YXhfMS5BdFVyaShzYXZlZEZlZWQudmFsdWUpO1xuICAgICAgICBjb25zdCBpc0ZlZWQgPSB1cmkuY29sbGVjdGlvbiA9PT0gJ2FwcC5ic2t5LmZlZWQuZ2VuZXJhdG9yJztcbiAgICAgICAgY29uc3QgaXNMaXN0ID0gdXJpLmNvbGxlY3Rpb24gPT09ICdhcHAuYnNreS5ncmFwaC5saXN0JztcbiAgICAgICAgaWYgKHNhdmVkRmVlZC50eXBlID09PSAnZmVlZCcgJiYgIWlzRmVlZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBTYXZlZCBmZWVkIG9mIHR5cGUgJ2ZlZWQnIG11c3QgYmUgYSBmZWVkLCBnb3QgJHt1cmkuY29sbGVjdGlvbn1gKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2F2ZWRGZWVkLnR5cGUgPT09ICdsaXN0JyAmJiAhaXNMaXN0KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFNhdmVkIGZlZWQgb2YgdHlwZSAnbGlzdCcgbXVzdCBiZSBhIGxpc3QsIGdvdCAke3VyaS5jb2xsZWN0aW9ufWApO1xuICAgICAgICB9XG4gICAgfVxufVxuLy8gQFRPRE8gdXNlIHRvb2xzIGZyb20gQGF0cHJvdG8vZGlkXG5jb25zdCBpc0RpZCA9IChzdHIpID0+IHR5cGVvZiBzdHIgPT09ICdzdHJpbmcnICYmXG4gICAgc3RyLnN0YXJ0c1dpdGgoJ2RpZDonKSAmJlxuICAgIHN0ci5pbmNsdWRlcygnOicsIDQpICYmXG4gICAgc3RyLmxlbmd0aCA+IDggJiZcbiAgICBzdHIubGVuZ3RoIDw9IDIwNDg7XG5leHBvcnRzLmlzRGlkID0gaXNEaWQ7XG5jb25zdCBhc0RpZCA9ICh2YWx1ZSkgPT4ge1xuICAgIGlmICgoMCwgZXhwb3J0cy5pc0RpZCkodmFsdWUpKVxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgSW52YWxpZCBESUQ6ICR7dmFsdWV9YCk7XG59O1xuZXhwb3J0cy5hc0RpZCA9IGFzRGlkO1xuZXhwb3J0cy5udXhTY2hlbWEgPSB6b2RfMS56XG4gICAgLm9iamVjdCh7XG4gICAgaWQ6IHpvZF8xLnouc3RyaW5nKCkubWF4KDY0KSxcbiAgICBjb21wbGV0ZWQ6IHpvZF8xLnouYm9vbGVhbigpLFxuICAgIGRhdGE6IHpvZF8xLnouc3RyaW5nKCkubWF4KDMwMCkub3B0aW9uYWwoKSxcbiAgICBleHBpcmVzQXQ6IHpvZF8xLnouc3RyaW5nKCkuZGF0ZXRpbWUoKS5vcHRpb25hbCgpLFxufSlcbiAgICAuc3RyaWN0KCk7XG5mdW5jdGlvbiB2YWxpZGF0ZU51eChudXgpIHtcbiAgICBleHBvcnRzLm51eFNjaGVtYS5wYXJzZShudXgpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/api/dist/util.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/common-web/dist/arrays.js":
/*!*********************************************************!*\
  !*** ./node_modules/@atproto/common-web/dist/arrays.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mapDefined = void 0;\nexports.keyBy = keyBy;\nfunction keyBy(arr, key) {\n    return arr.reduce((acc, cur) => {\n        acc.set(cur[key], cur);\n        return acc;\n    }, new Map());\n}\nconst mapDefined = (arr, fn) => {\n    const output = [];\n    for (const item of arr) {\n        const val = fn(item);\n        if (val !== undefined) {\n            output.push(val);\n        }\n    }\n    return output;\n};\nexports.mapDefined = mapDefined;\n//# sourceMappingURL=arrays.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vY29tbW9uLXdlYi9kaXN0L2FycmF5cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9jb21tb24td2ViL2Rpc3QvYXJyYXlzLmpzP2FjYjEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm1hcERlZmluZWQgPSB2b2lkIDA7XG5leHBvcnRzLmtleUJ5ID0ga2V5Qnk7XG5mdW5jdGlvbiBrZXlCeShhcnIsIGtleSkge1xuICAgIHJldHVybiBhcnIucmVkdWNlKChhY2MsIGN1cikgPT4ge1xuICAgICAgICBhY2Muc2V0KGN1cltrZXldLCBjdXIpO1xuICAgICAgICByZXR1cm4gYWNjO1xuICAgIH0sIG5ldyBNYXAoKSk7XG59XG5jb25zdCBtYXBEZWZpbmVkID0gKGFyciwgZm4pID0+IHtcbiAgICBjb25zdCBvdXRwdXQgPSBbXTtcbiAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgYXJyKSB7XG4gICAgICAgIGNvbnN0IHZhbCA9IGZuKGl0ZW0pO1xuICAgICAgICBpZiAodmFsICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIG91dHB1dC5wdXNoKHZhbCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG91dHB1dDtcbn07XG5leHBvcnRzLm1hcERlZmluZWQgPSBtYXBEZWZpbmVkO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXJyYXlzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/common-web/dist/arrays.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/common-web/dist/async.js":
/*!********************************************************!*\
  !*** ./node_modules/@atproto/common-web/dist/async.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AsyncBufferFullError = exports.AsyncBuffer = exports.allComplete = exports.createDeferrables = exports.createDeferrable = exports.readFromGenerator = void 0;\nexports.allFulfilled = allFulfilled;\nexports.handleAllSettledErrors = handleAllSettledErrors;\nexports.isRejectedResult = isRejectedResult;\nexports.isFulfilledResult = isFulfilledResult;\nconst util_1 = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/@atproto/common-web/dist/util.js\");\n// reads values from a generator into a list\n// breaks when isDone signals `true` AND `waitFor` completes OR when a max length is reached\n// NOTE: does not signal generator to close. it *will* continue to produce values\nconst readFromGenerator = async (gen, isDone, waitFor = Promise.resolve(), maxLength = Number.MAX_SAFE_INTEGER) => {\n    const evts = [];\n    let bail;\n    let hasBroke = false;\n    const awaitDone = async () => {\n        if (await isDone(evts.at(-1))) {\n            return true;\n        }\n        const bailable = (0, util_1.bailableWait)(20);\n        await bailable.wait();\n        bail = bailable.bail;\n        if (hasBroke)\n            return false;\n        return await awaitDone();\n    };\n    const breakOn = new Promise((resolve) => {\n        waitFor.then(() => {\n            awaitDone().then(() => resolve());\n        });\n    });\n    try {\n        while (evts.length < maxLength) {\n            const maybeEvt = await Promise.race([gen.next(), breakOn]);\n            if (!maybeEvt)\n                break;\n            const evt = maybeEvt;\n            if (evt.done)\n                break;\n            evts.push(evt.value);\n        }\n    }\n    finally {\n        hasBroke = true;\n        bail && bail();\n    }\n    return evts;\n};\nexports.readFromGenerator = readFromGenerator;\nconst createDeferrable = () => {\n    let resolve;\n    const promise = new Promise((res) => {\n        resolve = () => res();\n    });\n    return { resolve, complete: promise };\n};\nexports.createDeferrable = createDeferrable;\nconst createDeferrables = (count) => {\n    const list = [];\n    for (let i = 0; i < count; i++) {\n        list.push((0, exports.createDeferrable)());\n    }\n    return list;\n};\nexports.createDeferrables = createDeferrables;\nconst allComplete = async (deferrables) => {\n    await Promise.all(deferrables.map((d) => d.complete));\n};\nexports.allComplete = allComplete;\nclass AsyncBuffer {\n    constructor(maxSize) {\n        Object.defineProperty(this, \"maxSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: maxSize\n        });\n        Object.defineProperty(this, \"buffer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"promise\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"resolve\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"closed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"toThrow\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // Initializing to satisfy types/build, immediately reset by resetPromise()\n        this.promise = Promise.resolve();\n        this.resolve = () => null;\n        this.resetPromise();\n    }\n    get curr() {\n        return this.buffer;\n    }\n    get size() {\n        return this.buffer.length;\n    }\n    get isClosed() {\n        return this.closed;\n    }\n    resetPromise() {\n        this.promise = new Promise((r) => (this.resolve = r));\n    }\n    push(item) {\n        this.buffer.push(item);\n        this.resolve();\n    }\n    pushMany(items) {\n        items.forEach((i) => this.buffer.push(i));\n        this.resolve();\n    }\n    async *events() {\n        while (true) {\n            if (this.closed && this.buffer.length === 0) {\n                if (this.toThrow) {\n                    throw this.toThrow;\n                }\n                else {\n                    return;\n                }\n            }\n            await this.promise;\n            if (this.toThrow) {\n                throw this.toThrow;\n            }\n            if (this.maxSize && this.size > this.maxSize) {\n                throw new AsyncBufferFullError(this.maxSize);\n            }\n            const [first, ...rest] = this.buffer;\n            if (first) {\n                this.buffer = rest;\n                yield first;\n            }\n            else {\n                this.resetPromise();\n            }\n        }\n    }\n    throw(err) {\n        this.toThrow = err;\n        this.closed = true;\n        this.resolve();\n    }\n    close() {\n        this.closed = true;\n        this.resolve();\n    }\n}\nexports.AsyncBuffer = AsyncBuffer;\nclass AsyncBufferFullError extends Error {\n    constructor(maxSize) {\n        super(`ReachedMaxBufferSize: ${maxSize}`);\n    }\n}\nexports.AsyncBufferFullError = AsyncBufferFullError;\nfunction allFulfilled(promises) {\n    return Promise.allSettled(promises).then(handleAllSettledErrors);\n}\nfunction handleAllSettledErrors(results) {\n    const errors = results.filter(isRejectedResult).map(extractReason);\n    if (errors.length === 0) {\n        // No need to filter here, it is safe to assume that all promises are fulfilled\n        return results.map(extractValue);\n    }\n    if (errors.length === 1) {\n        throw errors[0];\n    }\n    throw new AggregateError(errors, `Multiple errors: ${errors.map(stringifyReason).join('\\n')}`);\n}\nfunction isRejectedResult(result) {\n    return result.status === 'rejected';\n}\nfunction extractReason(result) {\n    return result.reason;\n}\nfunction isFulfilledResult(result) {\n    return result.status === 'fulfilled';\n}\nfunction extractValue(result) {\n    return result.value;\n}\nfunction stringifyReason(reason) {\n    if (reason instanceof Error) {\n        return reason.message;\n    }\n    return String(reason);\n}\n//# sourceMappingURL=async.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/common-web/dist/async.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/common-web/dist/check.js":
/*!********************************************************!*\
  !*** ./node_modules/@atproto/common-web/dist/check.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Explicitly not using \"zod\" types here to avoid mismatching types due to\n// version differences.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isObject = exports.assure = exports.create = exports.is = void 0;\nconst is = (obj, def) => {\n    return def.safeParse(obj).success;\n};\nexports.is = is;\nconst create = (def) => (v) => def.safeParse(v).success;\nexports.create = create;\nconst assure = (def, obj) => {\n    return def.parse(obj);\n};\nexports.assure = assure;\nconst isObject = (obj) => {\n    return typeof obj === 'object' && obj !== null;\n};\nexports.isObject = isObject;\n//# sourceMappingURL=check.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vY29tbW9uLXdlYi9kaXN0L2NoZWNrLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsR0FBRyxjQUFjLEdBQUcsY0FBYyxHQUFHLFVBQVU7QUFDL0Q7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9jb21tb24td2ViL2Rpc3QvY2hlY2suanM/NDQ5YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIEV4cGxpY2l0bHkgbm90IHVzaW5nIFwiem9kXCIgdHlwZXMgaGVyZSB0byBhdm9pZCBtaXNtYXRjaGluZyB0eXBlcyBkdWUgdG9cbi8vIHZlcnNpb24gZGlmZmVyZW5jZXMuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzT2JqZWN0ID0gZXhwb3J0cy5hc3N1cmUgPSBleHBvcnRzLmNyZWF0ZSA9IGV4cG9ydHMuaXMgPSB2b2lkIDA7XG5jb25zdCBpcyA9IChvYmosIGRlZikgPT4ge1xuICAgIHJldHVybiBkZWYuc2FmZVBhcnNlKG9iaikuc3VjY2Vzcztcbn07XG5leHBvcnRzLmlzID0gaXM7XG5jb25zdCBjcmVhdGUgPSAoZGVmKSA9PiAodikgPT4gZGVmLnNhZmVQYXJzZSh2KS5zdWNjZXNzO1xuZXhwb3J0cy5jcmVhdGUgPSBjcmVhdGU7XG5jb25zdCBhc3N1cmUgPSAoZGVmLCBvYmopID0+IHtcbiAgICByZXR1cm4gZGVmLnBhcnNlKG9iaik7XG59O1xuZXhwb3J0cy5hc3N1cmUgPSBhc3N1cmU7XG5jb25zdCBpc09iamVjdCA9IChvYmopID0+IHtcbiAgICByZXR1cm4gdHlwZW9mIG9iaiA9PT0gJ29iamVjdCcgJiYgb2JqICE9PSBudWxsO1xufTtcbmV4cG9ydHMuaXNPYmplY3QgPSBpc09iamVjdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNoZWNrLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/common-web/dist/check.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/common-web/dist/did-doc.js":
/*!**********************************************************!*\
  !*** ./node_modules/@atproto/common-web/dist/did-doc.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.didDocument = exports.getServiceEndpoint = exports.getNotifEndpoint = exports.getFeedGenEndpoint = exports.getPdsEndpoint = exports.getSigningDidKey = exports.getVerificationMaterial = exports.getSigningKey = exports.getHandle = exports.getDid = exports.isValidDidDoc = void 0;\nconst zod_1 = __webpack_require__(/*! zod */ \"(ssr)/./node_modules/zod/index.cjs\");\n// Parsing atproto data\n// --------\nconst isValidDidDoc = (doc) => {\n    return exports.didDocument.safeParse(doc).success;\n};\nexports.isValidDidDoc = isValidDidDoc;\nconst getDid = (doc) => {\n    const id = doc.id;\n    if (typeof id !== 'string') {\n        throw new Error('No `id` on document');\n    }\n    return id;\n};\nexports.getDid = getDid;\nconst getHandle = (doc) => {\n    const aka = doc.alsoKnownAs;\n    if (aka) {\n        for (let i = 0; i < aka.length; i++) {\n            const alias = aka[i];\n            if (alias.startsWith('at://')) {\n                // strip off \"at://\" prefix\n                return alias.slice(5);\n            }\n        }\n    }\n    return undefined;\n};\nexports.getHandle = getHandle;\n// @NOTE we parse to type/publicKeyMultibase to avoid the dependency on @atproto/crypto\nconst getSigningKey = (doc) => {\n    return (0, exports.getVerificationMaterial)(doc, 'atproto');\n};\nexports.getSigningKey = getSigningKey;\nconst getVerificationMaterial = (doc, keyId) => {\n    // /!\\ Hot path\n    const key = findItemById(doc, 'verificationMethod', `#${keyId}`);\n    if (!key) {\n        return undefined;\n    }\n    if (!key.publicKeyMultibase) {\n        return undefined;\n    }\n    return {\n        type: key.type,\n        publicKeyMultibase: key.publicKeyMultibase,\n    };\n};\nexports.getVerificationMaterial = getVerificationMaterial;\nconst getSigningDidKey = (doc) => {\n    const parsed = (0, exports.getSigningKey)(doc);\n    if (!parsed)\n        return;\n    return `did:key:${parsed.publicKeyMultibase}`;\n};\nexports.getSigningDidKey = getSigningDidKey;\nconst getPdsEndpoint = (doc) => {\n    return (0, exports.getServiceEndpoint)(doc, {\n        id: '#atproto_pds',\n        type: 'AtprotoPersonalDataServer',\n    });\n};\nexports.getPdsEndpoint = getPdsEndpoint;\nconst getFeedGenEndpoint = (doc) => {\n    return (0, exports.getServiceEndpoint)(doc, {\n        id: '#bsky_fg',\n        type: 'BskyFeedGenerator',\n    });\n};\nexports.getFeedGenEndpoint = getFeedGenEndpoint;\nconst getNotifEndpoint = (doc) => {\n    return (0, exports.getServiceEndpoint)(doc, {\n        id: '#bsky_notif',\n        type: 'BskyNotificationService',\n    });\n};\nexports.getNotifEndpoint = getNotifEndpoint;\nconst getServiceEndpoint = (doc, opts) => {\n    // /!\\ Hot path\n    const service = findItemById(doc, 'service', opts.id);\n    if (!service) {\n        return undefined;\n    }\n    if (opts.type && service.type !== opts.type) {\n        return undefined;\n    }\n    if (typeof service.serviceEndpoint !== 'string') {\n        return undefined;\n    }\n    return validateUrl(service.serviceEndpoint);\n};\nexports.getServiceEndpoint = getServiceEndpoint;\nfunction findItemById(doc, type, id) {\n    // /!\\ Hot path\n    const items = doc[type];\n    if (items) {\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i];\n            const itemId = item.id;\n            if (itemId[0] === '#'\n                ? itemId === id\n                : // Optimized version of: itemId === `${doc.id}${id}`\n                    itemId.length === doc.id.length + id.length &&\n                        itemId[doc.id.length] === '#' &&\n                        itemId.endsWith(id) &&\n                        itemId.startsWith(doc.id) // <== We could probably skip this check\n            ) {\n                return item;\n            }\n        }\n    }\n    return undefined;\n}\n// Check protocol and hostname to prevent potential SSRF\nconst validateUrl = (urlStr) => {\n    if (!urlStr.startsWith('http://') && !urlStr.startsWith('https://')) {\n        return undefined;\n    }\n    if (!canParseUrl(urlStr)) {\n        return undefined;\n    }\n    return urlStr;\n};\nconst canParseUrl = URL.canParse ??\n    // URL.canParse is not available in Node.js < 18.17.0\n    ((urlStr) => {\n        try {\n            new URL(urlStr);\n            return true;\n        }\n        catch {\n            return false;\n        }\n    });\n// Types\n// --------\nconst verificationMethod = zod_1.z.object({\n    id: zod_1.z.string(),\n    type: zod_1.z.string(),\n    controller: zod_1.z.string(),\n    publicKeyMultibase: zod_1.z.string().optional(),\n});\nconst service = zod_1.z.object({\n    id: zod_1.z.string(),\n    type: zod_1.z.string(),\n    serviceEndpoint: zod_1.z.union([zod_1.z.string(), zod_1.z.record(zod_1.z.unknown())]),\n});\nexports.didDocument = zod_1.z.object({\n    id: zod_1.z.string(),\n    alsoKnownAs: zod_1.z.array(zod_1.z.string()).optional(),\n    verificationMethod: zod_1.z.array(verificationMethod).optional(),\n    service: zod_1.z.array(service).optional(),\n});\n//# sourceMappingURL=did-doc.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/common-web/dist/did-doc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/common-web/dist/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@atproto/common-web/dist/index.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.util = exports.check = void 0;\nexports.check = __importStar(__webpack_require__(/*! ./check */ \"(ssr)/./node_modules/@atproto/common-web/dist/check.js\"));\nexports.util = __importStar(__webpack_require__(/*! ./util */ \"(ssr)/./node_modules/@atproto/common-web/dist/util.js\"));\n__exportStar(__webpack_require__(/*! ./arrays */ \"(ssr)/./node_modules/@atproto/common-web/dist/arrays.js\"), exports);\n__exportStar(__webpack_require__(/*! ./async */ \"(ssr)/./node_modules/@atproto/common-web/dist/async.js\"), exports);\n__exportStar(__webpack_require__(/*! ./util */ \"(ssr)/./node_modules/@atproto/common-web/dist/util.js\"), exports);\n__exportStar(__webpack_require__(/*! ./tid */ \"(ssr)/./node_modules/@atproto/common-web/dist/tid.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ipld */ \"(ssr)/./node_modules/@atproto/common-web/dist/ipld.js\"), exports);\n__exportStar(__webpack_require__(/*! ./retry */ \"(ssr)/./node_modules/@atproto/common-web/dist/retry.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@atproto/common-web/dist/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./times */ \"(ssr)/./node_modules/@atproto/common-web/dist/times.js\"), exports);\n__exportStar(__webpack_require__(/*! ./strings */ \"(ssr)/./node_modules/@atproto/common-web/dist/strings.js\"), exports);\n__exportStar(__webpack_require__(/*! ./did-doc */ \"(ssr)/./node_modules/@atproto/common-web/dist/did-doc.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vY29tbW9uLXdlYi9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwwQ0FBMEMsNEJBQTRCO0FBQ3RFLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQsY0FBYztBQUN6RTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELFlBQVksR0FBRyxhQUFhO0FBQzVCLGFBQWEsZ0JBQWdCLG1CQUFPLENBQUMsdUVBQVM7QUFDOUMsWUFBWSxnQkFBZ0IsbUJBQU8sQ0FBQyxxRUFBUTtBQUM1QyxhQUFhLG1CQUFPLENBQUMseUVBQVU7QUFDL0IsYUFBYSxtQkFBTyxDQUFDLHVFQUFTO0FBQzlCLGFBQWEsbUJBQU8sQ0FBQyxxRUFBUTtBQUM3QixhQUFhLG1CQUFPLENBQUMsbUVBQU87QUFDNUIsYUFBYSxtQkFBTyxDQUFDLHFFQUFRO0FBQzdCLGFBQWEsbUJBQU8sQ0FBQyx1RUFBUztBQUM5QixhQUFhLG1CQUFPLENBQUMsdUVBQVM7QUFDOUIsYUFBYSxtQkFBTyxDQUFDLHVFQUFTO0FBQzlCLGFBQWEsbUJBQU8sQ0FBQywyRUFBVztBQUNoQyxhQUFhLG1CQUFPLENBQUMsMkVBQVc7QUFDaEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9jb21tb24td2ViL2Rpc3QvaW5kZXguanM/MTAzZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgb3duS2V5cyA9IGZ1bmN0aW9uKG8pIHtcbiAgICAgICAgb3duS2V5cyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzIHx8IGZ1bmN0aW9uIChvKSB7XG4gICAgICAgICAgICB2YXIgYXIgPSBbXTtcbiAgICAgICAgICAgIGZvciAodmFyIGsgaW4gbykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvLCBrKSkgYXJbYXIubGVuZ3RoXSA9IGs7XG4gICAgICAgICAgICByZXR1cm4gYXI7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBvd25LZXlzKG8pO1xuICAgIH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChtb2QpIHtcbiAgICAgICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgICAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgPSBvd25LZXlzKG1vZCksIGkgPSAwOyBpIDwgay5sZW5ndGg7IGkrKykgaWYgKGtbaV0gIT09IFwiZGVmYXVsdFwiKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGtbaV0pO1xuICAgICAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH07XG59KSgpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudXRpbCA9IGV4cG9ydHMuY2hlY2sgPSB2b2lkIDA7XG5leHBvcnRzLmNoZWNrID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuL2NoZWNrXCIpKTtcbmV4cG9ydHMudXRpbCA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi91dGlsXCIpKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hcnJheXNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FzeW5jXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91dGlsXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90aWRcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2lwbGRcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3JldHJ5XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdGltZXNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3N0cmluZ3NcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2RpZC1kb2NcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/common-web/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/common-web/dist/ipld.js":
/*!*******************************************************!*\
  !*** ./node_modules/@atproto/common-web/dist/ipld.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ipldEquals = exports.ipldToJson = exports.jsonToIpld = void 0;\nconst cid_1 = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/multiformats/cjs/src/cid.js\");\nconst ui8 = __importStar(__webpack_require__(/*! uint8arrays */ \"(ssr)/./node_modules/uint8arrays/cjs/src/index.js\"));\n// @NOTE avoiding use of check.is() here only because it makes\n// these implementations slow, and they often live in hot paths.\nconst jsonToIpld = (val) => {\n    // walk arrays\n    if (Array.isArray(val)) {\n        return val.map((item) => (0, exports.jsonToIpld)(item));\n    }\n    // objects\n    if (val && typeof val === 'object') {\n        // check for dag json values\n        if (typeof val['$link'] === 'string' && Object.keys(val).length === 1) {\n            return cid_1.CID.parse(val['$link']);\n        }\n        if (typeof val['$bytes'] === 'string' && Object.keys(val).length === 1) {\n            return ui8.fromString(val['$bytes'], 'base64');\n        }\n        // walk plain objects\n        const toReturn = {};\n        for (const key of Object.keys(val)) {\n            toReturn[key] = (0, exports.jsonToIpld)(val[key]);\n        }\n        return toReturn;\n    }\n    // pass through\n    return val;\n};\nexports.jsonToIpld = jsonToIpld;\nconst ipldToJson = (val) => {\n    // walk arrays\n    if (Array.isArray(val)) {\n        return val.map((item) => (0, exports.ipldToJson)(item));\n    }\n    // objects\n    if (val && typeof val === 'object') {\n        // convert bytes\n        if (val instanceof Uint8Array) {\n            return {\n                $bytes: ui8.toString(val, 'base64'),\n            };\n        }\n        // convert cids\n        if (cid_1.CID.asCID(val)) {\n            return {\n                $link: val.toString(),\n            };\n        }\n        // walk plain objects\n        const toReturn = {};\n        for (const key of Object.keys(val)) {\n            toReturn[key] = (0, exports.ipldToJson)(val[key]);\n        }\n        return toReturn;\n    }\n    // pass through\n    return val;\n};\nexports.ipldToJson = ipldToJson;\nconst ipldEquals = (a, b) => {\n    // walk arrays\n    if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length)\n            return false;\n        for (let i = 0; i < a.length; i++) {\n            if (!(0, exports.ipldEquals)(a[i], b[i]))\n                return false;\n        }\n        return true;\n    }\n    // objects\n    if (a && b && typeof a === 'object' && typeof b === 'object') {\n        // check bytes\n        if (a instanceof Uint8Array && b instanceof Uint8Array) {\n            return ui8.equals(a, b);\n        }\n        // check cids\n        if (cid_1.CID.asCID(a) && cid_1.CID.asCID(b)) {\n            return cid_1.CID.asCID(a)?.equals(cid_1.CID.asCID(b));\n        }\n        // walk plain objects\n        if (Object.keys(a).length !== Object.keys(b).length)\n            return false;\n        for (const key of Object.keys(a)) {\n            if (!(0, exports.ipldEquals)(a[key], b[key]))\n                return false;\n        }\n        return true;\n    }\n    return a === b;\n};\nexports.ipldEquals = ipldEquals;\n//# sourceMappingURL=ipld.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vY29tbW9uLXdlYi9kaXN0L2lwbGQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDBDQUEwQyw0QkFBNEI7QUFDdEUsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCxjQUFjO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCLEdBQUcsa0JBQWtCLEdBQUcsa0JBQWtCO0FBQzVELGNBQWMsbUJBQU8sQ0FBQywwRUFBa0I7QUFDeEMseUJBQXlCLG1CQUFPLENBQUMsc0VBQWE7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsY0FBYztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vY29tbW9uLXdlYi9kaXN0L2lwbGQuanM/MDhlNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgb3duS2V5cyA9IGZ1bmN0aW9uKG8pIHtcbiAgICAgICAgb3duS2V5cyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzIHx8IGZ1bmN0aW9uIChvKSB7XG4gICAgICAgICAgICB2YXIgYXIgPSBbXTtcbiAgICAgICAgICAgIGZvciAodmFyIGsgaW4gbykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvLCBrKSkgYXJbYXIubGVuZ3RoXSA9IGs7XG4gICAgICAgICAgICByZXR1cm4gYXI7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBvd25LZXlzKG8pO1xuICAgIH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChtb2QpIHtcbiAgICAgICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgICAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgPSBvd25LZXlzKG1vZCksIGkgPSAwOyBpIDwgay5sZW5ndGg7IGkrKykgaWYgKGtbaV0gIT09IFwiZGVmYXVsdFwiKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGtbaV0pO1xuICAgICAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH07XG59KSgpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pcGxkRXF1YWxzID0gZXhwb3J0cy5pcGxkVG9Kc29uID0gZXhwb3J0cy5qc29uVG9JcGxkID0gdm9pZCAwO1xuY29uc3QgY2lkXzEgPSByZXF1aXJlKFwibXVsdGlmb3JtYXRzL2NpZFwiKTtcbmNvbnN0IHVpOCA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwidWludDhhcnJheXNcIikpO1xuLy8gQE5PVEUgYXZvaWRpbmcgdXNlIG9mIGNoZWNrLmlzKCkgaGVyZSBvbmx5IGJlY2F1c2UgaXQgbWFrZXNcbi8vIHRoZXNlIGltcGxlbWVudGF0aW9ucyBzbG93LCBhbmQgdGhleSBvZnRlbiBsaXZlIGluIGhvdCBwYXRocy5cbmNvbnN0IGpzb25Ub0lwbGQgPSAodmFsKSA9PiB7XG4gICAgLy8gd2FsayBhcnJheXNcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWwpKSB7XG4gICAgICAgIHJldHVybiB2YWwubWFwKChpdGVtKSA9PiAoMCwgZXhwb3J0cy5qc29uVG9JcGxkKShpdGVtKSk7XG4gICAgfVxuICAgIC8vIG9iamVjdHNcbiAgICBpZiAodmFsICYmIHR5cGVvZiB2YWwgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIC8vIGNoZWNrIGZvciBkYWcganNvbiB2YWx1ZXNcbiAgICAgICAgaWYgKHR5cGVvZiB2YWxbJyRsaW5rJ10gPT09ICdzdHJpbmcnICYmIE9iamVjdC5rZXlzKHZhbCkubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgICByZXR1cm4gY2lkXzEuQ0lELnBhcnNlKHZhbFsnJGxpbmsnXSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiB2YWxbJyRieXRlcyddID09PSAnc3RyaW5nJyAmJiBPYmplY3Qua2V5cyh2YWwpLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgcmV0dXJuIHVpOC5mcm9tU3RyaW5nKHZhbFsnJGJ5dGVzJ10sICdiYXNlNjQnKTtcbiAgICAgICAgfVxuICAgICAgICAvLyB3YWxrIHBsYWluIG9iamVjdHNcbiAgICAgICAgY29uc3QgdG9SZXR1cm4gPSB7fTtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXModmFsKSkge1xuICAgICAgICAgICAgdG9SZXR1cm5ba2V5XSA9ICgwLCBleHBvcnRzLmpzb25Ub0lwbGQpKHZhbFtrZXldKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdG9SZXR1cm47XG4gICAgfVxuICAgIC8vIHBhc3MgdGhyb3VnaFxuICAgIHJldHVybiB2YWw7XG59O1xuZXhwb3J0cy5qc29uVG9JcGxkID0ganNvblRvSXBsZDtcbmNvbnN0IGlwbGRUb0pzb24gPSAodmFsKSA9PiB7XG4gICAgLy8gd2FsayBhcnJheXNcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWwpKSB7XG4gICAgICAgIHJldHVybiB2YWwubWFwKChpdGVtKSA9PiAoMCwgZXhwb3J0cy5pcGxkVG9Kc29uKShpdGVtKSk7XG4gICAgfVxuICAgIC8vIG9iamVjdHNcbiAgICBpZiAodmFsICYmIHR5cGVvZiB2YWwgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIC8vIGNvbnZlcnQgYnl0ZXNcbiAgICAgICAgaWYgKHZhbCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgJGJ5dGVzOiB1aTgudG9TdHJpbmcodmFsLCAnYmFzZTY0JyksXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIC8vIGNvbnZlcnQgY2lkc1xuICAgICAgICBpZiAoY2lkXzEuQ0lELmFzQ0lEKHZhbCkpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgJGxpbms6IHZhbC50b1N0cmluZygpLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICAvLyB3YWxrIHBsYWluIG9iamVjdHNcbiAgICAgICAgY29uc3QgdG9SZXR1cm4gPSB7fTtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXModmFsKSkge1xuICAgICAgICAgICAgdG9SZXR1cm5ba2V5XSA9ICgwLCBleHBvcnRzLmlwbGRUb0pzb24pKHZhbFtrZXldKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdG9SZXR1cm47XG4gICAgfVxuICAgIC8vIHBhc3MgdGhyb3VnaFxuICAgIHJldHVybiB2YWw7XG59O1xuZXhwb3J0cy5pcGxkVG9Kc29uID0gaXBsZFRvSnNvbjtcbmNvbnN0IGlwbGRFcXVhbHMgPSAoYSwgYikgPT4ge1xuICAgIC8vIHdhbGsgYXJyYXlzXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoYSkgJiYgQXJyYXkuaXNBcnJheShiKSkge1xuICAgICAgICBpZiAoYS5sZW5ndGggIT09IGIubGVuZ3RoKVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmICghKDAsIGV4cG9ydHMuaXBsZEVxdWFscykoYVtpXSwgYltpXSkpXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICAvLyBvYmplY3RzXG4gICAgaWYgKGEgJiYgYiAmJiB0eXBlb2YgYSA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIGIgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIC8vIGNoZWNrIGJ5dGVzXG4gICAgICAgIGlmIChhIGluc3RhbmNlb2YgVWludDhBcnJheSAmJiBiIGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICAgICAgcmV0dXJuIHVpOC5lcXVhbHMoYSwgYik7XG4gICAgICAgIH1cbiAgICAgICAgLy8gY2hlY2sgY2lkc1xuICAgICAgICBpZiAoY2lkXzEuQ0lELmFzQ0lEKGEpICYmIGNpZF8xLkNJRC5hc0NJRChiKSkge1xuICAgICAgICAgICAgcmV0dXJuIGNpZF8xLkNJRC5hc0NJRChhKT8uZXF1YWxzKGNpZF8xLkNJRC5hc0NJRChiKSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gd2FsayBwbGFpbiBvYmplY3RzXG4gICAgICAgIGlmIChPYmplY3Qua2V5cyhhKS5sZW5ndGggIT09IE9iamVjdC5rZXlzKGIpLmxlbmd0aClcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXMoYSkpIHtcbiAgICAgICAgICAgIGlmICghKDAsIGV4cG9ydHMuaXBsZEVxdWFscykoYVtrZXldLCBiW2tleV0pKVxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGEgPT09IGI7XG59O1xuZXhwb3J0cy5pcGxkRXF1YWxzID0gaXBsZEVxdWFscztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlwbGQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/common-web/dist/ipld.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/common-web/dist/retry.js":
/*!********************************************************!*\
  !*** ./node_modules/@atproto/common-web/dist/retry.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.retry = retry;\nexports.createRetryable = createRetryable;\nexports.backoffMs = backoffMs;\nconst util_1 = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/@atproto/common-web/dist/util.js\");\nasync function retry(fn, opts = {}) {\n    const { maxRetries = 3, retryable = () => true, getWaitMs = backoffMs } = opts;\n    let retries = 0;\n    let doneError;\n    while (!doneError) {\n        try {\n            return await fn();\n        }\n        catch (err) {\n            const waitMs = getWaitMs(retries);\n            const willRetry = retries < maxRetries && waitMs !== null && retryable(err);\n            if (willRetry) {\n                retries += 1;\n                if (waitMs !== 0) {\n                    await (0, util_1.wait)(waitMs);\n                }\n            }\n            else {\n                doneError = err;\n            }\n        }\n    }\n    throw doneError;\n}\nfunction createRetryable(retryable) {\n    return async (fn, opts) => retry(fn, { ...opts, retryable });\n}\n// Waits exponential backoff with max and jitter: ~100, ~200, ~400, ~800, ~1000, ~1000, ...\nfunction backoffMs(n, multiplier = 100, max = 1000) {\n    const exponentialMs = Math.pow(2, n) * multiplier;\n    const ms = Math.min(exponentialMs, max);\n    return jitter(ms);\n}\n// Adds randomness +/-15% of value\nfunction jitter(value) {\n    const delta = value * 0.15;\n    return value + randomRange(-delta, delta);\n}\nfunction randomRange(from, to) {\n    const rand = Math.random() * (to - from);\n    return rand + from;\n}\n//# sourceMappingURL=retry.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vY29tbW9uLXdlYi9kaXN0L3JldHJ5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWE7QUFDYix1QkFBdUI7QUFDdkIsaUJBQWlCO0FBQ2pCLGVBQWUsbUJBQU8sQ0FBQyxxRUFBUTtBQUMvQixrQ0FBa0M7QUFDbEMsWUFBWSxnRUFBZ0U7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxvQkFBb0I7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2NvbW1vbi13ZWIvZGlzdC9yZXRyeS5qcz85OTU3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5yZXRyeSA9IHJldHJ5O1xuZXhwb3J0cy5jcmVhdGVSZXRyeWFibGUgPSBjcmVhdGVSZXRyeWFibGU7XG5leHBvcnRzLmJhY2tvZmZNcyA9IGJhY2tvZmZNcztcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuL3V0aWxcIik7XG5hc3luYyBmdW5jdGlvbiByZXRyeShmbiwgb3B0cyA9IHt9KSB7XG4gICAgY29uc3QgeyBtYXhSZXRyaWVzID0gMywgcmV0cnlhYmxlID0gKCkgPT4gdHJ1ZSwgZ2V0V2FpdE1zID0gYmFja29mZk1zIH0gPSBvcHRzO1xuICAgIGxldCByZXRyaWVzID0gMDtcbiAgICBsZXQgZG9uZUVycm9yO1xuICAgIHdoaWxlICghZG9uZUVycm9yKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgZm4oKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBjb25zdCB3YWl0TXMgPSBnZXRXYWl0TXMocmV0cmllcyk7XG4gICAgICAgICAgICBjb25zdCB3aWxsUmV0cnkgPSByZXRyaWVzIDwgbWF4UmV0cmllcyAmJiB3YWl0TXMgIT09IG51bGwgJiYgcmV0cnlhYmxlKGVycik7XG4gICAgICAgICAgICBpZiAod2lsbFJldHJ5KSB7XG4gICAgICAgICAgICAgICAgcmV0cmllcyArPSAxO1xuICAgICAgICAgICAgICAgIGlmICh3YWl0TXMgIT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgYXdhaXQgKDAsIHV0aWxfMS53YWl0KSh3YWl0TXMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGRvbmVFcnJvciA9IGVycjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICB0aHJvdyBkb25lRXJyb3I7XG59XG5mdW5jdGlvbiBjcmVhdGVSZXRyeWFibGUocmV0cnlhYmxlKSB7XG4gICAgcmV0dXJuIGFzeW5jIChmbiwgb3B0cykgPT4gcmV0cnkoZm4sIHsgLi4ub3B0cywgcmV0cnlhYmxlIH0pO1xufVxuLy8gV2FpdHMgZXhwb25lbnRpYWwgYmFja29mZiB3aXRoIG1heCBhbmQgaml0dGVyOiB+MTAwLCB+MjAwLCB+NDAwLCB+ODAwLCB+MTAwMCwgfjEwMDAsIC4uLlxuZnVuY3Rpb24gYmFja29mZk1zKG4sIG11bHRpcGxpZXIgPSAxMDAsIG1heCA9IDEwMDApIHtcbiAgICBjb25zdCBleHBvbmVudGlhbE1zID0gTWF0aC5wb3coMiwgbikgKiBtdWx0aXBsaWVyO1xuICAgIGNvbnN0IG1zID0gTWF0aC5taW4oZXhwb25lbnRpYWxNcywgbWF4KTtcbiAgICByZXR1cm4gaml0dGVyKG1zKTtcbn1cbi8vIEFkZHMgcmFuZG9tbmVzcyArLy0xNSUgb2YgdmFsdWVcbmZ1bmN0aW9uIGppdHRlcih2YWx1ZSkge1xuICAgIGNvbnN0IGRlbHRhID0gdmFsdWUgKiAwLjE1O1xuICAgIHJldHVybiB2YWx1ZSArIHJhbmRvbVJhbmdlKC1kZWx0YSwgZGVsdGEpO1xufVxuZnVuY3Rpb24gcmFuZG9tUmFuZ2UoZnJvbSwgdG8pIHtcbiAgICBjb25zdCByYW5kID0gTWF0aC5yYW5kb20oKSAqICh0byAtIGZyb20pO1xuICAgIHJldHVybiByYW5kICsgZnJvbTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJldHJ5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/common-web/dist/retry.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/common-web/dist/strings.js":
/*!**********************************************************!*\
  !*** ./node_modules/@atproto/common-web/dist/strings.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.validateLanguage = exports.parseLanguage = exports.b64UrlToUtf8 = exports.utf8ToB64Url = exports.graphemeLen = exports.utf8Len = void 0;\nconst graphemer_1 = __importDefault(__webpack_require__(/*! graphemer */ \"(ssr)/./node_modules/graphemer/lib/index.js\"));\nconst ui8 = __importStar(__webpack_require__(/*! uint8arrays */ \"(ssr)/./node_modules/uint8arrays/cjs/src/index.js\"));\n// counts the number of bytes in a utf8 string\nconst utf8Len = (str) => {\n    return new TextEncoder().encode(str).byteLength;\n};\nexports.utf8Len = utf8Len;\n// counts the number of graphemes (user-displayed characters) in a string\nconst graphemeLen = (str) => {\n    const splitter = new graphemer_1.default();\n    return splitter.countGraphemes(str);\n};\nexports.graphemeLen = graphemeLen;\nconst utf8ToB64Url = (utf8) => {\n    return ui8.toString(ui8.fromString(utf8, 'utf8'), 'base64url');\n};\nexports.utf8ToB64Url = utf8ToB64Url;\nconst b64UrlToUtf8 = (b64) => {\n    return ui8.toString(ui8.fromString(b64, 'base64url'), 'utf8');\n};\nexports.b64UrlToUtf8 = b64UrlToUtf8;\nconst parseLanguage = (langTag) => {\n    const parsed = langTag.match(bcp47Regexp);\n    if (!parsed?.groups)\n        return null;\n    const parts = parsed.groups;\n    return {\n        grandfathered: parts.grandfathered,\n        language: parts.language,\n        extlang: parts.extlang,\n        script: parts.script,\n        region: parts.region,\n        variant: parts.variant,\n        extension: parts.extension,\n        privateUse: parts.privateUseA || parts.privateUseB,\n    };\n};\nexports.parseLanguage = parseLanguage;\nconst validateLanguage = (langTag) => {\n    return bcp47Regexp.test(langTag);\n};\nexports.validateLanguage = validateLanguage;\n// Validates well-formed BCP 47 syntax: https://www.rfc-editor.org/rfc/rfc5646.html#section-2.1\nconst bcp47Regexp = /^((?<grandfathered>(en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))|((?<language>([A-Za-z]{2,3}(-(?<extlang>[A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-(?<script>[A-Za-z]{4}))?(-(?<region>[A-Za-z]{2}|[0-9]{3}))?(-(?<variant>[A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-(?<extension>[0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(?<privateUseA>x(-[A-Za-z0-9]{1,8})+))?)|(?<privateUseB>x(-[A-Za-z0-9]{1,8})+))$/;\n//# sourceMappingURL=strings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vY29tbW9uLXdlYi9kaXN0L3N0cmluZ3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDBDQUEwQyw0QkFBNEI7QUFDdEUsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCxjQUFjO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0IsR0FBRyxxQkFBcUIsR0FBRyxvQkFBb0IsR0FBRyxvQkFBb0IsR0FBRyxtQkFBbUIsR0FBRyxlQUFlO0FBQ3RJLG9DQUFvQyxtQkFBTyxDQUFDLDhEQUFXO0FBQ3ZELHlCQUF5QixtQkFBTyxDQUFDLHNFQUFhO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQSw4UkFBOFIsSUFBSSxzQkFBc0IsRUFBRSxXQUFXLEVBQUUsRUFBRSxJQUFJLGNBQWMsRUFBRSxVQUFVLElBQUksc0JBQXNCLEVBQUUsd0JBQXdCLEVBQUUsT0FBTyxFQUFFLDRCQUE0QixJQUFJLGtCQUFrQixFQUFFLGlEQUFpRCxJQUFJLHFDQUFxQyxJQUFJLHFDQUFxQyxJQUFJO0FBQ2ptQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2NvbW1vbi13ZWIvZGlzdC9zdHJpbmdzLmpzPzA4NDQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIG93bktleXMgPSBmdW5jdGlvbihvKSB7XG4gICAgICAgIG93bktleXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyB8fCBmdW5jdGlvbiAobykge1xuICAgICAgICAgICAgdmFyIGFyID0gW107XG4gICAgICAgICAgICBmb3IgKHZhciBrIGluIG8pIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobywgaykpIGFyW2FyLmxlbmd0aF0gPSBrO1xuICAgICAgICAgICAgcmV0dXJuIGFyO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gb3duS2V5cyhvKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAobW9kKSB7XG4gICAgICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICAgICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrID0gb3duS2V5cyhtb2QpLCBpID0gMDsgaSA8IGsubGVuZ3RoOyBpKyspIGlmIChrW2ldICE9PSBcImRlZmF1bHRcIikgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrW2ldKTtcbiAgICAgICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xufSkoKTtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudmFsaWRhdGVMYW5ndWFnZSA9IGV4cG9ydHMucGFyc2VMYW5ndWFnZSA9IGV4cG9ydHMuYjY0VXJsVG9VdGY4ID0gZXhwb3J0cy51dGY4VG9CNjRVcmwgPSBleHBvcnRzLmdyYXBoZW1lTGVuID0gZXhwb3J0cy51dGY4TGVuID0gdm9pZCAwO1xuY29uc3QgZ3JhcGhlbWVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImdyYXBoZW1lclwiKSk7XG5jb25zdCB1aTggPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcInVpbnQ4YXJyYXlzXCIpKTtcbi8vIGNvdW50cyB0aGUgbnVtYmVyIG9mIGJ5dGVzIGluIGEgdXRmOCBzdHJpbmdcbmNvbnN0IHV0ZjhMZW4gPSAoc3RyKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZShzdHIpLmJ5dGVMZW5ndGg7XG59O1xuZXhwb3J0cy51dGY4TGVuID0gdXRmOExlbjtcbi8vIGNvdW50cyB0aGUgbnVtYmVyIG9mIGdyYXBoZW1lcyAodXNlci1kaXNwbGF5ZWQgY2hhcmFjdGVycykgaW4gYSBzdHJpbmdcbmNvbnN0IGdyYXBoZW1lTGVuID0gKHN0cikgPT4ge1xuICAgIGNvbnN0IHNwbGl0dGVyID0gbmV3IGdyYXBoZW1lcl8xLmRlZmF1bHQoKTtcbiAgICByZXR1cm4gc3BsaXR0ZXIuY291bnRHcmFwaGVtZXMoc3RyKTtcbn07XG5leHBvcnRzLmdyYXBoZW1lTGVuID0gZ3JhcGhlbWVMZW47XG5jb25zdCB1dGY4VG9CNjRVcmwgPSAodXRmOCkgPT4ge1xuICAgIHJldHVybiB1aTgudG9TdHJpbmcodWk4LmZyb21TdHJpbmcodXRmOCwgJ3V0ZjgnKSwgJ2Jhc2U2NHVybCcpO1xufTtcbmV4cG9ydHMudXRmOFRvQjY0VXJsID0gdXRmOFRvQjY0VXJsO1xuY29uc3QgYjY0VXJsVG9VdGY4ID0gKGI2NCkgPT4ge1xuICAgIHJldHVybiB1aTgudG9TdHJpbmcodWk4LmZyb21TdHJpbmcoYjY0LCAnYmFzZTY0dXJsJyksICd1dGY4Jyk7XG59O1xuZXhwb3J0cy5iNjRVcmxUb1V0ZjggPSBiNjRVcmxUb1V0Zjg7XG5jb25zdCBwYXJzZUxhbmd1YWdlID0gKGxhbmdUYWcpID0+IHtcbiAgICBjb25zdCBwYXJzZWQgPSBsYW5nVGFnLm1hdGNoKGJjcDQ3UmVnZXhwKTtcbiAgICBpZiAoIXBhcnNlZD8uZ3JvdXBzKVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICBjb25zdCBwYXJ0cyA9IHBhcnNlZC5ncm91cHM7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZ3JhbmRmYXRoZXJlZDogcGFydHMuZ3JhbmRmYXRoZXJlZCxcbiAgICAgICAgbGFuZ3VhZ2U6IHBhcnRzLmxhbmd1YWdlLFxuICAgICAgICBleHRsYW5nOiBwYXJ0cy5leHRsYW5nLFxuICAgICAgICBzY3JpcHQ6IHBhcnRzLnNjcmlwdCxcbiAgICAgICAgcmVnaW9uOiBwYXJ0cy5yZWdpb24sXG4gICAgICAgIHZhcmlhbnQ6IHBhcnRzLnZhcmlhbnQsXG4gICAgICAgIGV4dGVuc2lvbjogcGFydHMuZXh0ZW5zaW9uLFxuICAgICAgICBwcml2YXRlVXNlOiBwYXJ0cy5wcml2YXRlVXNlQSB8fCBwYXJ0cy5wcml2YXRlVXNlQixcbiAgICB9O1xufTtcbmV4cG9ydHMucGFyc2VMYW5ndWFnZSA9IHBhcnNlTGFuZ3VhZ2U7XG5jb25zdCB2YWxpZGF0ZUxhbmd1YWdlID0gKGxhbmdUYWcpID0+IHtcbiAgICByZXR1cm4gYmNwNDdSZWdleHAudGVzdChsYW5nVGFnKTtcbn07XG5leHBvcnRzLnZhbGlkYXRlTGFuZ3VhZ2UgPSB2YWxpZGF0ZUxhbmd1YWdlO1xuLy8gVmFsaWRhdGVzIHdlbGwtZm9ybWVkIEJDUCA0NyBzeW50YXg6IGh0dHBzOi8vd3d3LnJmYy1lZGl0b3Iub3JnL3JmYy9yZmM1NjQ2Lmh0bWwjc2VjdGlvbi0yLjFcbmNvbnN0IGJjcDQ3UmVnZXhwID0gL14oKD88Z3JhbmRmYXRoZXJlZD4oZW4tR0Itb2VkfGktYW1pfGktYm5ufGktZGVmYXVsdHxpLWVub2NoaWFufGktaGFrfGkta2xpbmdvbnxpLWx1eHxpLW1pbmdvfGktbmF2YWpvfGktcHdufGktdGFvfGktdGF5fGktdHN1fHNnbi1CRS1GUnxzZ24tQkUtTkx8c2duLUNILURFKXwoYXJ0LWxvamJhbnxjZWwtZ2F1bGlzaHxuby1ib2t8bm8tbnlufHpoLWd1b3l1fHpoLWhha2thfHpoLW1pbnx6aC1taW4tbmFufHpoLXhpYW5nKSl8KCg/PGxhbmd1YWdlPihbQS1aYS16XXsyLDN9KC0oPzxleHRsYW5nPltBLVphLXpdezN9KC1bQS1aYS16XXszfSl7MCwyfSkpPyl8W0EtWmEtel17NH18W0EtWmEtel17NSw4fSkoLSg/PHNjcmlwdD5bQS1aYS16XXs0fSkpPygtKD88cmVnaW9uPltBLVphLXpdezJ9fFswLTldezN9KSk/KC0oPzx2YXJpYW50PltBLVphLXowLTldezUsOH18WzAtOV1bQS1aYS16MC05XXszfSkpKigtKD88ZXh0ZW5zaW9uPlswLTlBLVdZLVphLXd5LXpdKC1bQS1aYS16MC05XXsyLDh9KSspKSooLSg/PHByaXZhdGVVc2VBPngoLVtBLVphLXowLTldezEsOH0pKykpPyl8KD88cHJpdmF0ZVVzZUI+eCgtW0EtWmEtejAtOV17MSw4fSkrKSkkLztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0cmluZ3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/common-web/dist/strings.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/common-web/dist/tid.js":
/*!******************************************************!*\
  !*** ./node_modules/@atproto/common-web/dist/tid.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TID = void 0;\nconst util_1 = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/@atproto/common-web/dist/util.js\");\nconst TID_LEN = 13;\nlet lastTimestamp = 0;\nlet timestampCount = 0;\nlet clockid = null;\nfunction dedash(str) {\n    return str.replaceAll('-', '');\n}\nclass TID {\n    constructor(str) {\n        Object.defineProperty(this, \"str\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const noDashes = dedash(str);\n        if (noDashes.length !== TID_LEN) {\n            throw new Error(`Poorly formatted TID: ${noDashes.length} length`);\n        }\n        this.str = noDashes;\n    }\n    static next(prev) {\n        // javascript does not have microsecond precision\n        // instead, we append a counter to the timestamp to indicate if multiple timestamps were created within the same millisecond\n        // take max of current time & last timestamp to prevent tids moving backwards if system clock drifts backwards\n        const time = Math.max(Date.now(), lastTimestamp);\n        if (time === lastTimestamp) {\n            timestampCount++;\n        }\n        lastTimestamp = time;\n        const timestamp = time * 1000 + timestampCount;\n        // the bottom 32 clock ids can be randomized & are not guaranteed to be collision resistant\n        // we use the same clockid for all tids coming from this machine\n        if (clockid === null) {\n            clockid = Math.floor(Math.random() * 32);\n        }\n        const tid = TID.fromTime(timestamp, clockid);\n        if (!prev || tid.newerThan(prev)) {\n            return tid;\n        }\n        return TID.fromTime(prev.timestamp() + 1, clockid);\n    }\n    static nextStr(prev) {\n        return TID.next(prev ? new TID(prev) : undefined).toString();\n    }\n    static fromTime(timestamp, clockid) {\n        // base32 encode with encoding variant sort (s32)\n        const str = `${(0, util_1.s32encode)(timestamp)}${(0, util_1.s32encode)(clockid).padStart(2, '2')}`;\n        return new TID(str);\n    }\n    static fromStr(str) {\n        return new TID(str);\n    }\n    static oldestFirst(a, b) {\n        return a.compareTo(b);\n    }\n    static newestFirst(a, b) {\n        return b.compareTo(a);\n    }\n    static is(str) {\n        return dedash(str).length === TID_LEN;\n    }\n    timestamp() {\n        return (0, util_1.s32decode)(this.str.slice(0, 11));\n    }\n    clockid() {\n        return (0, util_1.s32decode)(this.str.slice(11, 13));\n    }\n    formatted() {\n        const str = this.toString();\n        return `${str.slice(0, 4)}-${str.slice(4, 7)}-${str.slice(7, 11)}-${str.slice(11, 13)}`;\n    }\n    toString() {\n        return this.str;\n    }\n    // newer > older\n    compareTo(other) {\n        if (this.str > other.str)\n            return 1;\n        if (this.str < other.str)\n            return -1;\n        return 0;\n    }\n    equals(other) {\n        return this.str === other.str;\n    }\n    newerThan(other) {\n        return this.compareTo(other) > 0;\n    }\n    olderThan(other) {\n        return this.compareTo(other) < 0;\n    }\n}\nexports.TID = TID;\n//# sourceMappingURL=tid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vY29tbW9uLXdlYi9kaXN0L3RpZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxXQUFXO0FBQ1gsZUFBZSxtQkFBTyxDQUFDLHFFQUFRO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHFEQUFxRCxpQkFBaUI7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixpQ0FBaUMsRUFBRSxnREFBZ0Q7QUFDMUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsZ0JBQWdCLEdBQUcsZ0JBQWdCLEdBQUcsaUJBQWlCLEdBQUcsa0JBQWtCO0FBQzlGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vY29tbW9uLXdlYi9kaXN0L3RpZC5qcz83MTNlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5USUQgPSB2b2lkIDA7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi91dGlsXCIpO1xuY29uc3QgVElEX0xFTiA9IDEzO1xubGV0IGxhc3RUaW1lc3RhbXAgPSAwO1xubGV0IHRpbWVzdGFtcENvdW50ID0gMDtcbmxldCBjbG9ja2lkID0gbnVsbDtcbmZ1bmN0aW9uIGRlZGFzaChzdHIpIHtcbiAgICByZXR1cm4gc3RyLnJlcGxhY2VBbGwoJy0nLCAnJyk7XG59XG5jbGFzcyBUSUQge1xuICAgIGNvbnN0cnVjdG9yKHN0cikge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJzdHJcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgY29uc3Qgbm9EYXNoZXMgPSBkZWRhc2goc3RyKTtcbiAgICAgICAgaWYgKG5vRGFzaGVzLmxlbmd0aCAhPT0gVElEX0xFTikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBQb29ybHkgZm9ybWF0dGVkIFRJRDogJHtub0Rhc2hlcy5sZW5ndGh9IGxlbmd0aGApO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc3RyID0gbm9EYXNoZXM7XG4gICAgfVxuICAgIHN0YXRpYyBuZXh0KHByZXYpIHtcbiAgICAgICAgLy8gamF2YXNjcmlwdCBkb2VzIG5vdCBoYXZlIG1pY3Jvc2Vjb25kIHByZWNpc2lvblxuICAgICAgICAvLyBpbnN0ZWFkLCB3ZSBhcHBlbmQgYSBjb3VudGVyIHRvIHRoZSB0aW1lc3RhbXAgdG8gaW5kaWNhdGUgaWYgbXVsdGlwbGUgdGltZXN0YW1wcyB3ZXJlIGNyZWF0ZWQgd2l0aGluIHRoZSBzYW1lIG1pbGxpc2Vjb25kXG4gICAgICAgIC8vIHRha2UgbWF4IG9mIGN1cnJlbnQgdGltZSAmIGxhc3QgdGltZXN0YW1wIHRvIHByZXZlbnQgdGlkcyBtb3ZpbmcgYmFja3dhcmRzIGlmIHN5c3RlbSBjbG9jayBkcmlmdHMgYmFja3dhcmRzXG4gICAgICAgIGNvbnN0IHRpbWUgPSBNYXRoLm1heChEYXRlLm5vdygpLCBsYXN0VGltZXN0YW1wKTtcbiAgICAgICAgaWYgKHRpbWUgPT09IGxhc3RUaW1lc3RhbXApIHtcbiAgICAgICAgICAgIHRpbWVzdGFtcENvdW50Kys7XG4gICAgICAgIH1cbiAgICAgICAgbGFzdFRpbWVzdGFtcCA9IHRpbWU7XG4gICAgICAgIGNvbnN0IHRpbWVzdGFtcCA9IHRpbWUgKiAxMDAwICsgdGltZXN0YW1wQ291bnQ7XG4gICAgICAgIC8vIHRoZSBib3R0b20gMzIgY2xvY2sgaWRzIGNhbiBiZSByYW5kb21pemVkICYgYXJlIG5vdCBndWFyYW50ZWVkIHRvIGJlIGNvbGxpc2lvbiByZXNpc3RhbnRcbiAgICAgICAgLy8gd2UgdXNlIHRoZSBzYW1lIGNsb2NraWQgZm9yIGFsbCB0aWRzIGNvbWluZyBmcm9tIHRoaXMgbWFjaGluZVxuICAgICAgICBpZiAoY2xvY2tpZCA9PT0gbnVsbCkge1xuICAgICAgICAgICAgY2xvY2tpZCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDMyKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB0aWQgPSBUSUQuZnJvbVRpbWUodGltZXN0YW1wLCBjbG9ja2lkKTtcbiAgICAgICAgaWYgKCFwcmV2IHx8IHRpZC5uZXdlclRoYW4ocHJldikpIHtcbiAgICAgICAgICAgIHJldHVybiB0aWQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFRJRC5mcm9tVGltZShwcmV2LnRpbWVzdGFtcCgpICsgMSwgY2xvY2tpZCk7XG4gICAgfVxuICAgIHN0YXRpYyBuZXh0U3RyKHByZXYpIHtcbiAgICAgICAgcmV0dXJuIFRJRC5uZXh0KHByZXYgPyBuZXcgVElEKHByZXYpIDogdW5kZWZpbmVkKS50b1N0cmluZygpO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbVRpbWUodGltZXN0YW1wLCBjbG9ja2lkKSB7XG4gICAgICAgIC8vIGJhc2UzMiBlbmNvZGUgd2l0aCBlbmNvZGluZyB2YXJpYW50IHNvcnQgKHMzMilcbiAgICAgICAgY29uc3Qgc3RyID0gYCR7KDAsIHV0aWxfMS5zMzJlbmNvZGUpKHRpbWVzdGFtcCl9JHsoMCwgdXRpbF8xLnMzMmVuY29kZSkoY2xvY2tpZCkucGFkU3RhcnQoMiwgJzInKX1gO1xuICAgICAgICByZXR1cm4gbmV3IFRJRChzdHIpO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbVN0cihzdHIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBUSUQoc3RyKTtcbiAgICB9XG4gICAgc3RhdGljIG9sZGVzdEZpcnN0KGEsIGIpIHtcbiAgICAgICAgcmV0dXJuIGEuY29tcGFyZVRvKGIpO1xuICAgIH1cbiAgICBzdGF0aWMgbmV3ZXN0Rmlyc3QoYSwgYikge1xuICAgICAgICByZXR1cm4gYi5jb21wYXJlVG8oYSk7XG4gICAgfVxuICAgIHN0YXRpYyBpcyhzdHIpIHtcbiAgICAgICAgcmV0dXJuIGRlZGFzaChzdHIpLmxlbmd0aCA9PT0gVElEX0xFTjtcbiAgICB9XG4gICAgdGltZXN0YW1wKCkge1xuICAgICAgICByZXR1cm4gKDAsIHV0aWxfMS5zMzJkZWNvZGUpKHRoaXMuc3RyLnNsaWNlKDAsIDExKSk7XG4gICAgfVxuICAgIGNsb2NraWQoKSB7XG4gICAgICAgIHJldHVybiAoMCwgdXRpbF8xLnMzMmRlY29kZSkodGhpcy5zdHIuc2xpY2UoMTEsIDEzKSk7XG4gICAgfVxuICAgIGZvcm1hdHRlZCgpIHtcbiAgICAgICAgY29uc3Qgc3RyID0gdGhpcy50b1N0cmluZygpO1xuICAgICAgICByZXR1cm4gYCR7c3RyLnNsaWNlKDAsIDQpfS0ke3N0ci5zbGljZSg0LCA3KX0tJHtzdHIuc2xpY2UoNywgMTEpfS0ke3N0ci5zbGljZSgxMSwgMTMpfWA7XG4gICAgfVxuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdHI7XG4gICAgfVxuICAgIC8vIG5ld2VyID4gb2xkZXJcbiAgICBjb21wYXJlVG8ob3RoZXIpIHtcbiAgICAgICAgaWYgKHRoaXMuc3RyID4gb3RoZXIuc3RyKVxuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgIGlmICh0aGlzLnN0ciA8IG90aGVyLnN0cilcbiAgICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuICAgIGVxdWFscyhvdGhlcikge1xuICAgICAgICByZXR1cm4gdGhpcy5zdHIgPT09IG90aGVyLnN0cjtcbiAgICB9XG4gICAgbmV3ZXJUaGFuKG90aGVyKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBhcmVUbyhvdGhlcikgPiAwO1xuICAgIH1cbiAgICBvbGRlclRoYW4ob3RoZXIpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcGFyZVRvKG90aGVyKSA8IDA7XG4gICAgfVxufVxuZXhwb3J0cy5USUQgPSBUSUQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10aWQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/common-web/dist/tid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/common-web/dist/times.js":
/*!********************************************************!*\
  !*** ./node_modules/@atproto/common-web/dist/times.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.addHoursToDate = exports.lessThanAgoMs = exports.DAY = exports.HOUR = exports.MINUTE = exports.SECOND = void 0;\nexports.SECOND = 1000;\nexports.MINUTE = exports.SECOND * 60;\nexports.HOUR = exports.MINUTE * 60;\nexports.DAY = exports.HOUR * 24;\nconst lessThanAgoMs = (time, range) => {\n    return Date.now() < time.getTime() + range;\n};\nexports.lessThanAgoMs = lessThanAgoMs;\nconst addHoursToDate = (hours, startingDate) => {\n    // When date is passed, clone before calling `setHours()` so that we are not mutating the original date\n    const currentDate = startingDate ? new Date(startingDate) : new Date();\n    currentDate.setHours(currentDate.getHours() + hours);\n    return currentDate;\n};\nexports.addHoursToDate = addHoursToDate;\n//# sourceMappingURL=times.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vY29tbW9uLXdlYi9kaXN0L3RpbWVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQixHQUFHLHFCQUFxQixHQUFHLFdBQVcsR0FBRyxZQUFZLEdBQUcsY0FBYyxHQUFHLGNBQWM7QUFDN0csY0FBYztBQUNkLGNBQWM7QUFDZCxZQUFZO0FBQ1osV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9jb21tb24td2ViL2Rpc3QvdGltZXMuanM/M2I4NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYWRkSG91cnNUb0RhdGUgPSBleHBvcnRzLmxlc3NUaGFuQWdvTXMgPSBleHBvcnRzLkRBWSA9IGV4cG9ydHMuSE9VUiA9IGV4cG9ydHMuTUlOVVRFID0gZXhwb3J0cy5TRUNPTkQgPSB2b2lkIDA7XG5leHBvcnRzLlNFQ09ORCA9IDEwMDA7XG5leHBvcnRzLk1JTlVURSA9IGV4cG9ydHMuU0VDT05EICogNjA7XG5leHBvcnRzLkhPVVIgPSBleHBvcnRzLk1JTlVURSAqIDYwO1xuZXhwb3J0cy5EQVkgPSBleHBvcnRzLkhPVVIgKiAyNDtcbmNvbnN0IGxlc3NUaGFuQWdvTXMgPSAodGltZSwgcmFuZ2UpID0+IHtcbiAgICByZXR1cm4gRGF0ZS5ub3coKSA8IHRpbWUuZ2V0VGltZSgpICsgcmFuZ2U7XG59O1xuZXhwb3J0cy5sZXNzVGhhbkFnb01zID0gbGVzc1RoYW5BZ29NcztcbmNvbnN0IGFkZEhvdXJzVG9EYXRlID0gKGhvdXJzLCBzdGFydGluZ0RhdGUpID0+IHtcbiAgICAvLyBXaGVuIGRhdGUgaXMgcGFzc2VkLCBjbG9uZSBiZWZvcmUgY2FsbGluZyBgc2V0SG91cnMoKWAgc28gdGhhdCB3ZSBhcmUgbm90IG11dGF0aW5nIHRoZSBvcmlnaW5hbCBkYXRlXG4gICAgY29uc3QgY3VycmVudERhdGUgPSBzdGFydGluZ0RhdGUgPyBuZXcgRGF0ZShzdGFydGluZ0RhdGUpIDogbmV3IERhdGUoKTtcbiAgICBjdXJyZW50RGF0ZS5zZXRIb3VycyhjdXJyZW50RGF0ZS5nZXRIb3VycygpICsgaG91cnMpO1xuICAgIHJldHVybiBjdXJyZW50RGF0ZTtcbn07XG5leHBvcnRzLmFkZEhvdXJzVG9EYXRlID0gYWRkSG91cnNUb0RhdGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10aW1lcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/common-web/dist/times.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/common-web/dist/types.js":
/*!********************************************************!*\
  !*** ./node_modules/@atproto/common-web/dist/types.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.def = exports.schema = void 0;\nconst cid_1 = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/multiformats/cjs/src/cid.js\");\nconst zod_1 = __webpack_require__(/*! zod */ \"(ssr)/./node_modules/zod/index.cjs\");\nconst cidSchema = zod_1.z.unknown().transform((obj, ctx) => {\n    const cid = cid_1.CID.asCID(obj);\n    if (cid == null) {\n        ctx.addIssue({\n            code: zod_1.z.ZodIssueCode.custom,\n            message: 'Not a valid CID',\n        });\n        return zod_1.z.NEVER;\n    }\n    return cid;\n});\nconst carHeader = zod_1.z.object({\n    version: zod_1.z.literal(1),\n    roots: zod_1.z.array(cidSchema),\n});\nexports.schema = {\n    cid: cidSchema,\n    carHeader,\n    bytes: zod_1.z.instanceof(Uint8Array),\n    string: zod_1.z.string(),\n    array: zod_1.z.array(zod_1.z.unknown()),\n    map: zod_1.z.record(zod_1.z.string(), zod_1.z.unknown()),\n    unknown: zod_1.z.unknown(),\n};\nexports.def = {\n    cid: {\n        name: 'cid',\n        schema: exports.schema.cid,\n    },\n    carHeader: {\n        name: 'CAR header',\n        schema: exports.schema.carHeader,\n    },\n    bytes: {\n        name: 'bytes',\n        schema: exports.schema.bytes,\n    },\n    string: {\n        name: 'string',\n        schema: exports.schema.string,\n    },\n    map: {\n        name: 'map',\n        schema: exports.schema.map,\n    },\n    unknown: {\n        name: 'unknown',\n        schema: exports.schema.unknown,\n    },\n};\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vY29tbW9uLXdlYi9kaXN0L3R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELFdBQVcsR0FBRyxjQUFjO0FBQzVCLGNBQWMsbUJBQU8sQ0FBQywwRUFBa0I7QUFDeEMsY0FBYyxtQkFBTyxDQUFDLCtDQUFLO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9jb21tb24td2ViL2Rpc3QvdHlwZXMuanM/YWY1NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVmID0gZXhwb3J0cy5zY2hlbWEgPSB2b2lkIDA7XG5jb25zdCBjaWRfMSA9IHJlcXVpcmUoXCJtdWx0aWZvcm1hdHMvY2lkXCIpO1xuY29uc3Qgem9kXzEgPSByZXF1aXJlKFwiem9kXCIpO1xuY29uc3QgY2lkU2NoZW1hID0gem9kXzEuei51bmtub3duKCkudHJhbnNmb3JtKChvYmosIGN0eCkgPT4ge1xuICAgIGNvbnN0IGNpZCA9IGNpZF8xLkNJRC5hc0NJRChvYmopO1xuICAgIGlmIChjaWQgPT0gbnVsbCkge1xuICAgICAgICBjdHguYWRkSXNzdWUoe1xuICAgICAgICAgICAgY29kZTogem9kXzEuei5ab2RJc3N1ZUNvZGUuY3VzdG9tLFxuICAgICAgICAgICAgbWVzc2FnZTogJ05vdCBhIHZhbGlkIENJRCcsXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gem9kXzEuei5ORVZFUjtcbiAgICB9XG4gICAgcmV0dXJuIGNpZDtcbn0pO1xuY29uc3QgY2FySGVhZGVyID0gem9kXzEuei5vYmplY3Qoe1xuICAgIHZlcnNpb246IHpvZF8xLnoubGl0ZXJhbCgxKSxcbiAgICByb290czogem9kXzEuei5hcnJheShjaWRTY2hlbWEpLFxufSk7XG5leHBvcnRzLnNjaGVtYSA9IHtcbiAgICBjaWQ6IGNpZFNjaGVtYSxcbiAgICBjYXJIZWFkZXIsXG4gICAgYnl0ZXM6IHpvZF8xLnouaW5zdGFuY2VvZihVaW50OEFycmF5KSxcbiAgICBzdHJpbmc6IHpvZF8xLnouc3RyaW5nKCksXG4gICAgYXJyYXk6IHpvZF8xLnouYXJyYXkoem9kXzEuei51bmtub3duKCkpLFxuICAgIG1hcDogem9kXzEuei5yZWNvcmQoem9kXzEuei5zdHJpbmcoKSwgem9kXzEuei51bmtub3duKCkpLFxuICAgIHVua25vd246IHpvZF8xLnoudW5rbm93bigpLFxufTtcbmV4cG9ydHMuZGVmID0ge1xuICAgIGNpZDoge1xuICAgICAgICBuYW1lOiAnY2lkJyxcbiAgICAgICAgc2NoZW1hOiBleHBvcnRzLnNjaGVtYS5jaWQsXG4gICAgfSxcbiAgICBjYXJIZWFkZXI6IHtcbiAgICAgICAgbmFtZTogJ0NBUiBoZWFkZXInLFxuICAgICAgICBzY2hlbWE6IGV4cG9ydHMuc2NoZW1hLmNhckhlYWRlcixcbiAgICB9LFxuICAgIGJ5dGVzOiB7XG4gICAgICAgIG5hbWU6ICdieXRlcycsXG4gICAgICAgIHNjaGVtYTogZXhwb3J0cy5zY2hlbWEuYnl0ZXMsXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgICAgbmFtZTogJ3N0cmluZycsXG4gICAgICAgIHNjaGVtYTogZXhwb3J0cy5zY2hlbWEuc3RyaW5nLFxuICAgIH0sXG4gICAgbWFwOiB7XG4gICAgICAgIG5hbWU6ICdtYXAnLFxuICAgICAgICBzY2hlbWE6IGV4cG9ydHMuc2NoZW1hLm1hcCxcbiAgICB9LFxuICAgIHVua25vd246IHtcbiAgICAgICAgbmFtZTogJ3Vua25vd24nLFxuICAgICAgICBzY2hlbWE6IGV4cG9ydHMuc2NoZW1hLnVua25vd24sXG4gICAgfSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/common-web/dist/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/common-web/dist/util.js":
/*!*******************************************************!*\
  !*** ./node_modules/@atproto/common-web/dist/util.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseIntWithFallback = exports.dedupeStrs = exports.range = exports.chunkArray = exports.errHasMsg = exports.isErrnoException = exports.asyncFilter = exports.s32decode = exports.s32encode = exports.streamToBuffer = exports.flattenUint8Arrays = exports.bailableWait = exports.wait = exports.jitter = exports.noUndefinedVals = void 0;\nexports.omit = omit;\nconst noUndefinedVals = (obj) => {\n    Object.keys(obj).forEach((k) => {\n        if (obj[k] === undefined) {\n            delete obj[k];\n        }\n    });\n    return obj;\n};\nexports.noUndefinedVals = noUndefinedVals;\nfunction omit(src, rejectedKeys) {\n    // Hot path\n    if (!src)\n        return src;\n    const dst = {};\n    const srcKeys = Object.keys(src);\n    for (let i = 0; i < srcKeys.length; i++) {\n        const key = srcKeys[i];\n        if (!rejectedKeys.includes(key)) {\n            dst[key] = src[key];\n        }\n    }\n    return dst;\n}\nconst jitter = (maxMs) => {\n    return Math.round((Math.random() - 0.5) * maxMs * 2);\n};\nexports.jitter = jitter;\nconst wait = (ms) => {\n    return new Promise((res) => setTimeout(res, ms));\n};\nexports.wait = wait;\nconst bailableWait = (ms) => {\n    let bail;\n    const waitPromise = new Promise((res) => {\n        const timeout = setTimeout(res, ms);\n        bail = () => {\n            clearTimeout(timeout);\n            res();\n        };\n    });\n    return { bail, wait: () => waitPromise };\n};\nexports.bailableWait = bailableWait;\nconst flattenUint8Arrays = (arrs) => {\n    const length = arrs.reduce((acc, cur) => {\n        return acc + cur.length;\n    }, 0);\n    const flattened = new Uint8Array(length);\n    let offset = 0;\n    arrs.forEach((arr) => {\n        flattened.set(arr, offset);\n        offset += arr.length;\n    });\n    return flattened;\n};\nexports.flattenUint8Arrays = flattenUint8Arrays;\nconst streamToBuffer = async (stream) => {\n    const arrays = [];\n    for await (const chunk of stream) {\n        arrays.push(chunk);\n    }\n    return (0, exports.flattenUint8Arrays)(arrays);\n};\nexports.streamToBuffer = streamToBuffer;\nconst S32_CHAR = '234567abcdefghijklmnopqrstuvwxyz';\nconst s32encode = (i) => {\n    let s = '';\n    while (i) {\n        const c = i % 32;\n        i = Math.floor(i / 32);\n        s = S32_CHAR.charAt(c) + s;\n    }\n    return s;\n};\nexports.s32encode = s32encode;\nconst s32decode = (s) => {\n    let i = 0;\n    for (const c of s) {\n        i = i * 32 + S32_CHAR.indexOf(c);\n    }\n    return i;\n};\nexports.s32decode = s32decode;\nconst asyncFilter = async (arr, fn) => {\n    const results = await Promise.all(arr.map((t) => fn(t)));\n    return arr.filter((_, i) => results[i]);\n};\nexports.asyncFilter = asyncFilter;\nconst isErrnoException = (err) => {\n    return !!err && err['code'];\n};\nexports.isErrnoException = isErrnoException;\nconst errHasMsg = (err, msg) => {\n    return !!err && typeof err === 'object' && err['message'] === msg;\n};\nexports.errHasMsg = errHasMsg;\nconst chunkArray = (arr, chunkSize) => {\n    return arr.reduce((acc, cur, i) => {\n        const chunkI = Math.floor(i / chunkSize);\n        if (!acc[chunkI]) {\n            acc[chunkI] = [];\n        }\n        acc[chunkI].push(cur);\n        return acc;\n    }, []);\n};\nexports.chunkArray = chunkArray;\nconst range = (num) => {\n    const nums = [];\n    for (let i = 0; i < num; i++) {\n        nums.push(i);\n    }\n    return nums;\n};\nexports.range = range;\nconst dedupeStrs = (strs) => {\n    return [...new Set(strs)];\n};\nexports.dedupeStrs = dedupeStrs;\nconst parseIntWithFallback = (value, fallback) => {\n    const parsed = parseInt(value || '', 10);\n    return isNaN(parsed) ? fallback : parsed;\n};\nexports.parseIntWithFallback = parseIntWithFallback;\n//# sourceMappingURL=util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vY29tbW9uLXdlYi9kaXN0L3V0aWwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCLEdBQUcsa0JBQWtCLEdBQUcsYUFBYSxHQUFHLGtCQUFrQixHQUFHLGlCQUFpQixHQUFHLHdCQUF3QixHQUFHLG1CQUFtQixHQUFHLGlCQUFpQixHQUFHLGlCQUFpQixHQUFHLHNCQUFzQixHQUFHLDBCQUEwQixHQUFHLG9CQUFvQixHQUFHLFlBQVksR0FBRyxjQUFjLEdBQUcsdUJBQXVCO0FBQzFVLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG9CQUFvQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxhQUFhO0FBQ2I7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBLG9CQUFvQixTQUFTO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2NvbW1vbi13ZWIvZGlzdC91dGlsLmpzPzcwOTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnBhcnNlSW50V2l0aEZhbGxiYWNrID0gZXhwb3J0cy5kZWR1cGVTdHJzID0gZXhwb3J0cy5yYW5nZSA9IGV4cG9ydHMuY2h1bmtBcnJheSA9IGV4cG9ydHMuZXJySGFzTXNnID0gZXhwb3J0cy5pc0Vycm5vRXhjZXB0aW9uID0gZXhwb3J0cy5hc3luY0ZpbHRlciA9IGV4cG9ydHMuczMyZGVjb2RlID0gZXhwb3J0cy5zMzJlbmNvZGUgPSBleHBvcnRzLnN0cmVhbVRvQnVmZmVyID0gZXhwb3J0cy5mbGF0dGVuVWludDhBcnJheXMgPSBleHBvcnRzLmJhaWxhYmxlV2FpdCA9IGV4cG9ydHMud2FpdCA9IGV4cG9ydHMuaml0dGVyID0gZXhwb3J0cy5ub1VuZGVmaW5lZFZhbHMgPSB2b2lkIDA7XG5leHBvcnRzLm9taXQgPSBvbWl0O1xuY29uc3Qgbm9VbmRlZmluZWRWYWxzID0gKG9iaikgPT4ge1xuICAgIE9iamVjdC5rZXlzKG9iaikuZm9yRWFjaCgoaykgPT4ge1xuICAgICAgICBpZiAob2JqW2tdID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGRlbGV0ZSBvYmpba107XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gb2JqO1xufTtcbmV4cG9ydHMubm9VbmRlZmluZWRWYWxzID0gbm9VbmRlZmluZWRWYWxzO1xuZnVuY3Rpb24gb21pdChzcmMsIHJlamVjdGVkS2V5cykge1xuICAgIC8vIEhvdCBwYXRoXG4gICAgaWYgKCFzcmMpXG4gICAgICAgIHJldHVybiBzcmM7XG4gICAgY29uc3QgZHN0ID0ge307XG4gICAgY29uc3Qgc3JjS2V5cyA9IE9iamVjdC5rZXlzKHNyYyk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzcmNLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGtleSA9IHNyY0tleXNbaV07XG4gICAgICAgIGlmICghcmVqZWN0ZWRLZXlzLmluY2x1ZGVzKGtleSkpIHtcbiAgICAgICAgICAgIGRzdFtrZXldID0gc3JjW2tleV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGRzdDtcbn1cbmNvbnN0IGppdHRlciA9IChtYXhNcykgPT4ge1xuICAgIHJldHVybiBNYXRoLnJvdW5kKChNYXRoLnJhbmRvbSgpIC0gMC41KSAqIG1heE1zICogMik7XG59O1xuZXhwb3J0cy5qaXR0ZXIgPSBqaXR0ZXI7XG5jb25zdCB3YWl0ID0gKG1zKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXMpID0+IHNldFRpbWVvdXQocmVzLCBtcykpO1xufTtcbmV4cG9ydHMud2FpdCA9IHdhaXQ7XG5jb25zdCBiYWlsYWJsZVdhaXQgPSAobXMpID0+IHtcbiAgICBsZXQgYmFpbDtcbiAgICBjb25zdCB3YWl0UHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXMpID0+IHtcbiAgICAgICAgY29uc3QgdGltZW91dCA9IHNldFRpbWVvdXQocmVzLCBtcyk7XG4gICAgICAgIGJhaWwgPSAoKSA9PiB7XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gICAgICAgICAgICByZXMoKTtcbiAgICAgICAgfTtcbiAgICB9KTtcbiAgICByZXR1cm4geyBiYWlsLCB3YWl0OiAoKSA9PiB3YWl0UHJvbWlzZSB9O1xufTtcbmV4cG9ydHMuYmFpbGFibGVXYWl0ID0gYmFpbGFibGVXYWl0O1xuY29uc3QgZmxhdHRlblVpbnQ4QXJyYXlzID0gKGFycnMpID0+IHtcbiAgICBjb25zdCBsZW5ndGggPSBhcnJzLnJlZHVjZSgoYWNjLCBjdXIpID0+IHtcbiAgICAgICAgcmV0dXJuIGFjYyArIGN1ci5sZW5ndGg7XG4gICAgfSwgMCk7XG4gICAgY29uc3QgZmxhdHRlbmVkID0gbmV3IFVpbnQ4QXJyYXkobGVuZ3RoKTtcbiAgICBsZXQgb2Zmc2V0ID0gMDtcbiAgICBhcnJzLmZvckVhY2goKGFycikgPT4ge1xuICAgICAgICBmbGF0dGVuZWQuc2V0KGFyciwgb2Zmc2V0KTtcbiAgICAgICAgb2Zmc2V0ICs9IGFyci5sZW5ndGg7XG4gICAgfSk7XG4gICAgcmV0dXJuIGZsYXR0ZW5lZDtcbn07XG5leHBvcnRzLmZsYXR0ZW5VaW50OEFycmF5cyA9IGZsYXR0ZW5VaW50OEFycmF5cztcbmNvbnN0IHN0cmVhbVRvQnVmZmVyID0gYXN5bmMgKHN0cmVhbSkgPT4ge1xuICAgIGNvbnN0IGFycmF5cyA9IFtdO1xuICAgIGZvciBhd2FpdCAoY29uc3QgY2h1bmsgb2Ygc3RyZWFtKSB7XG4gICAgICAgIGFycmF5cy5wdXNoKGNodW5rKTtcbiAgICB9XG4gICAgcmV0dXJuICgwLCBleHBvcnRzLmZsYXR0ZW5VaW50OEFycmF5cykoYXJyYXlzKTtcbn07XG5leHBvcnRzLnN0cmVhbVRvQnVmZmVyID0gc3RyZWFtVG9CdWZmZXI7XG5jb25zdCBTMzJfQ0hBUiA9ICcyMzQ1NjdhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5eic7XG5jb25zdCBzMzJlbmNvZGUgPSAoaSkgPT4ge1xuICAgIGxldCBzID0gJyc7XG4gICAgd2hpbGUgKGkpIHtcbiAgICAgICAgY29uc3QgYyA9IGkgJSAzMjtcbiAgICAgICAgaSA9IE1hdGguZmxvb3IoaSAvIDMyKTtcbiAgICAgICAgcyA9IFMzMl9DSEFSLmNoYXJBdChjKSArIHM7XG4gICAgfVxuICAgIHJldHVybiBzO1xufTtcbmV4cG9ydHMuczMyZW5jb2RlID0gczMyZW5jb2RlO1xuY29uc3QgczMyZGVjb2RlID0gKHMpID0+IHtcbiAgICBsZXQgaSA9IDA7XG4gICAgZm9yIChjb25zdCBjIG9mIHMpIHtcbiAgICAgICAgaSA9IGkgKiAzMiArIFMzMl9DSEFSLmluZGV4T2YoYyk7XG4gICAgfVxuICAgIHJldHVybiBpO1xufTtcbmV4cG9ydHMuczMyZGVjb2RlID0gczMyZGVjb2RlO1xuY29uc3QgYXN5bmNGaWx0ZXIgPSBhc3luYyAoYXJyLCBmbikgPT4ge1xuICAgIGNvbnN0IHJlc3VsdHMgPSBhd2FpdCBQcm9taXNlLmFsbChhcnIubWFwKCh0KSA9PiBmbih0KSkpO1xuICAgIHJldHVybiBhcnIuZmlsdGVyKChfLCBpKSA9PiByZXN1bHRzW2ldKTtcbn07XG5leHBvcnRzLmFzeW5jRmlsdGVyID0gYXN5bmNGaWx0ZXI7XG5jb25zdCBpc0Vycm5vRXhjZXB0aW9uID0gKGVycikgPT4ge1xuICAgIHJldHVybiAhIWVyciAmJiBlcnJbJ2NvZGUnXTtcbn07XG5leHBvcnRzLmlzRXJybm9FeGNlcHRpb24gPSBpc0Vycm5vRXhjZXB0aW9uO1xuY29uc3QgZXJySGFzTXNnID0gKGVyciwgbXNnKSA9PiB7XG4gICAgcmV0dXJuICEhZXJyICYmIHR5cGVvZiBlcnIgPT09ICdvYmplY3QnICYmIGVyclsnbWVzc2FnZSddID09PSBtc2c7XG59O1xuZXhwb3J0cy5lcnJIYXNNc2cgPSBlcnJIYXNNc2c7XG5jb25zdCBjaHVua0FycmF5ID0gKGFyciwgY2h1bmtTaXplKSA9PiB7XG4gICAgcmV0dXJuIGFyci5yZWR1Y2UoKGFjYywgY3VyLCBpKSA9PiB7XG4gICAgICAgIGNvbnN0IGNodW5rSSA9IE1hdGguZmxvb3IoaSAvIGNodW5rU2l6ZSk7XG4gICAgICAgIGlmICghYWNjW2NodW5rSV0pIHtcbiAgICAgICAgICAgIGFjY1tjaHVua0ldID0gW107XG4gICAgICAgIH1cbiAgICAgICAgYWNjW2NodW5rSV0ucHVzaChjdXIpO1xuICAgICAgICByZXR1cm4gYWNjO1xuICAgIH0sIFtdKTtcbn07XG5leHBvcnRzLmNodW5rQXJyYXkgPSBjaHVua0FycmF5O1xuY29uc3QgcmFuZ2UgPSAobnVtKSA9PiB7XG4gICAgY29uc3QgbnVtcyA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtOyBpKyspIHtcbiAgICAgICAgbnVtcy5wdXNoKGkpO1xuICAgIH1cbiAgICByZXR1cm4gbnVtcztcbn07XG5leHBvcnRzLnJhbmdlID0gcmFuZ2U7XG5jb25zdCBkZWR1cGVTdHJzID0gKHN0cnMpID0+IHtcbiAgICByZXR1cm4gWy4uLm5ldyBTZXQoc3RycyldO1xufTtcbmV4cG9ydHMuZGVkdXBlU3RycyA9IGRlZHVwZVN0cnM7XG5jb25zdCBwYXJzZUludFdpdGhGYWxsYmFjayA9ICh2YWx1ZSwgZmFsbGJhY2spID0+IHtcbiAgICBjb25zdCBwYXJzZWQgPSBwYXJzZUludCh2YWx1ZSB8fCAnJywgMTApO1xuICAgIHJldHVybiBpc05hTihwYXJzZWQpID8gZmFsbGJhY2sgOiBwYXJzZWQ7XG59O1xuZXhwb3J0cy5wYXJzZUludFdpdGhGYWxsYmFjayA9IHBhcnNlSW50V2l0aEZhbGxiYWNrO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/common-web/dist/util.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/lexicon/dist/blob-refs.js":
/*!*********************************************************!*\
  !*** ./node_modules/@atproto/lexicon/dist/blob-refs.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BlobRef = exports.jsonBlobRef = exports.untypedJsonBlobRef = exports.typedJsonBlobRef = void 0;\nconst cid_1 = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/multiformats/cjs/src/cid.js\");\nconst zod_1 = __webpack_require__(/*! zod */ \"(ssr)/./node_modules/zod/index.cjs\");\nconst common_web_1 = __webpack_require__(/*! @atproto/common-web */ \"(ssr)/./node_modules/@atproto/common-web/dist/index.js\");\nexports.typedJsonBlobRef = zod_1.z\n    .object({\n    $type: zod_1.z.literal('blob'),\n    ref: common_web_1.schema.cid,\n    mimeType: zod_1.z.string(),\n    size: zod_1.z.number(),\n})\n    .strict();\nexports.untypedJsonBlobRef = zod_1.z\n    .object({\n    cid: zod_1.z.string(),\n    mimeType: zod_1.z.string(),\n})\n    .strict();\nexports.jsonBlobRef = zod_1.z.union([exports.typedJsonBlobRef, exports.untypedJsonBlobRef]);\nclass BlobRef {\n    constructor(ref, mimeType, size, original) {\n        Object.defineProperty(this, \"ref\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: ref\n        });\n        Object.defineProperty(this, \"mimeType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: mimeType\n        });\n        Object.defineProperty(this, \"size\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: size\n        });\n        Object.defineProperty(this, \"original\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.original = original ?? {\n            $type: 'blob',\n            ref,\n            mimeType,\n            size,\n        };\n    }\n    static asBlobRef(obj) {\n        if (common_web_1.check.is(obj, exports.jsonBlobRef)) {\n            return BlobRef.fromJsonRef(obj);\n        }\n        return null;\n    }\n    static fromJsonRef(json) {\n        if (common_web_1.check.is(json, exports.typedJsonBlobRef)) {\n            return new BlobRef(json.ref, json.mimeType, json.size);\n        }\n        else {\n            return new BlobRef(cid_1.CID.parse(json.cid), json.mimeType, -1, json);\n        }\n    }\n    ipld() {\n        return {\n            $type: 'blob',\n            ref: this.ref,\n            mimeType: this.mimeType,\n            size: this.size,\n        };\n    }\n    toJSON() {\n        return (0, common_web_1.ipldToJson)(this.ipld());\n    }\n}\nexports.BlobRef = BlobRef;\n//# sourceMappingURL=blob-refs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vbGV4aWNvbi9kaXN0L2Jsb2ItcmVmcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlLEdBQUcsbUJBQW1CLEdBQUcsMEJBQTBCLEdBQUcsd0JBQXdCO0FBQzdGLGNBQWMsbUJBQU8sQ0FBQywwRUFBa0I7QUFDeEMsY0FBYyxtQkFBTyxDQUFDLCtDQUFLO0FBQzNCLHFCQUFxQixtQkFBTyxDQUFDLG1GQUFxQjtBQUNsRCx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vbGV4aWNvbi9kaXN0L2Jsb2ItcmVmcy5qcz81Y2Y0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CbG9iUmVmID0gZXhwb3J0cy5qc29uQmxvYlJlZiA9IGV4cG9ydHMudW50eXBlZEpzb25CbG9iUmVmID0gZXhwb3J0cy50eXBlZEpzb25CbG9iUmVmID0gdm9pZCAwO1xuY29uc3QgY2lkXzEgPSByZXF1aXJlKFwibXVsdGlmb3JtYXRzL2NpZFwiKTtcbmNvbnN0IHpvZF8xID0gcmVxdWlyZShcInpvZFwiKTtcbmNvbnN0IGNvbW1vbl93ZWJfMSA9IHJlcXVpcmUoXCJAYXRwcm90by9jb21tb24td2ViXCIpO1xuZXhwb3J0cy50eXBlZEpzb25CbG9iUmVmID0gem9kXzEuelxuICAgIC5vYmplY3Qoe1xuICAgICR0eXBlOiB6b2RfMS56LmxpdGVyYWwoJ2Jsb2InKSxcbiAgICByZWY6IGNvbW1vbl93ZWJfMS5zY2hlbWEuY2lkLFxuICAgIG1pbWVUeXBlOiB6b2RfMS56LnN0cmluZygpLFxuICAgIHNpemU6IHpvZF8xLnoubnVtYmVyKCksXG59KVxuICAgIC5zdHJpY3QoKTtcbmV4cG9ydHMudW50eXBlZEpzb25CbG9iUmVmID0gem9kXzEuelxuICAgIC5vYmplY3Qoe1xuICAgIGNpZDogem9kXzEuei5zdHJpbmcoKSxcbiAgICBtaW1lVHlwZTogem9kXzEuei5zdHJpbmcoKSxcbn0pXG4gICAgLnN0cmljdCgpO1xuZXhwb3J0cy5qc29uQmxvYlJlZiA9IHpvZF8xLnoudW5pb24oW2V4cG9ydHMudHlwZWRKc29uQmxvYlJlZiwgZXhwb3J0cy51bnR5cGVkSnNvbkJsb2JSZWZdKTtcbmNsYXNzIEJsb2JSZWYge1xuICAgIGNvbnN0cnVjdG9yKHJlZiwgbWltZVR5cGUsIHNpemUsIG9yaWdpbmFsKSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInJlZlwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogcmVmXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJtaW1lVHlwZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogbWltZVR5cGVcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInNpemVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHNpemVcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm9yaWdpbmFsXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMub3JpZ2luYWwgPSBvcmlnaW5hbCA/PyB7XG4gICAgICAgICAgICAkdHlwZTogJ2Jsb2InLFxuICAgICAgICAgICAgcmVmLFxuICAgICAgICAgICAgbWltZVR5cGUsXG4gICAgICAgICAgICBzaXplLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBzdGF0aWMgYXNCbG9iUmVmKG9iaikge1xuICAgICAgICBpZiAoY29tbW9uX3dlYl8xLmNoZWNrLmlzKG9iaiwgZXhwb3J0cy5qc29uQmxvYlJlZikpIHtcbiAgICAgICAgICAgIHJldHVybiBCbG9iUmVmLmZyb21Kc29uUmVmKG9iaik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tSnNvblJlZihqc29uKSB7XG4gICAgICAgIGlmIChjb21tb25fd2ViXzEuY2hlY2suaXMoanNvbiwgZXhwb3J0cy50eXBlZEpzb25CbG9iUmVmKSkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBCbG9iUmVmKGpzb24ucmVmLCBqc29uLm1pbWVUeXBlLCBqc29uLnNpemUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBCbG9iUmVmKGNpZF8xLkNJRC5wYXJzZShqc29uLmNpZCksIGpzb24ubWltZVR5cGUsIC0xLCBqc29uKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpcGxkKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgJHR5cGU6ICdibG9iJyxcbiAgICAgICAgICAgIHJlZjogdGhpcy5yZWYsXG4gICAgICAgICAgICBtaW1lVHlwZTogdGhpcy5taW1lVHlwZSxcbiAgICAgICAgICAgIHNpemU6IHRoaXMuc2l6ZSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgdG9KU09OKCkge1xuICAgICAgICByZXR1cm4gKDAsIGNvbW1vbl93ZWJfMS5pcGxkVG9Kc29uKSh0aGlzLmlwbGQoKSk7XG4gICAgfVxufVxuZXhwb3J0cy5CbG9iUmVmID0gQmxvYlJlZjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJsb2ItcmVmcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/lexicon/dist/blob-refs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/lexicon/dist/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@atproto/lexicon/dist/index.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@atproto/lexicon/dist/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./lexicons */ \"(ssr)/./node_modules/@atproto/lexicon/dist/lexicons.js\"), exports);\n__exportStar(__webpack_require__(/*! ./blob-refs */ \"(ssr)/./node_modules/@atproto/lexicon/dist/blob-refs.js\"), exports);\n__exportStar(__webpack_require__(/*! ./serialize */ \"(ssr)/./node_modules/@atproto/lexicon/dist/serialize.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vbGV4aWNvbi9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWEsbUJBQU8sQ0FBQyxvRUFBUztBQUM5QixhQUFhLG1CQUFPLENBQUMsMEVBQVk7QUFDakMsYUFBYSxtQkFBTyxDQUFDLDRFQUFhO0FBQ2xDLGFBQWEsbUJBQU8sQ0FBQyw0RUFBYTtBQUNsQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2xleGljb24vZGlzdC9pbmRleC5qcz9iMjlhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZXNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2xleGljb25zXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9ibG9iLXJlZnNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3NlcmlhbGl6ZVwiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/lexicon/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/lexicon/dist/lexicons.js":
/*!********************************************************!*\
  !*** ./node_modules/@atproto/lexicon/dist/lexicons.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Lexicons = void 0;\nconst types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@atproto/lexicon/dist/types.js\");\nconst util_1 = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/@atproto/lexicon/dist/util.js\");\nconst validation_1 = __webpack_require__(/*! ./validation */ \"(ssr)/./node_modules/@atproto/lexicon/dist/validation.js\");\nconst complex_1 = __webpack_require__(/*! ./validators/complex */ \"(ssr)/./node_modules/@atproto/lexicon/dist/validators/complex.js\");\n/**\n * A collection of compiled lexicons.\n */\nclass Lexicons {\n    constructor(docs) {\n        Object.defineProperty(this, \"docs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        Object.defineProperty(this, \"defs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        if (docs) {\n            for (const doc of docs) {\n                this.add(doc);\n            }\n        }\n    }\n    /**\n     * @example clone a lexicon:\n     * ```ts\n     * const clone = new Lexicons(originalLexicon)\n     * ```\n     *\n     * @example get docs array:\n     * ```ts\n     * const docs = Array.from(lexicons)\n     * ```\n     */\n    [Symbol.iterator]() {\n        return this.docs.values();\n    }\n    /**\n     * Add a lexicon doc.\n     */\n    add(doc) {\n        const uri = (0, util_1.toLexUri)(doc.id);\n        if (this.docs.has(uri)) {\n            throw new Error(`${uri} has already been registered`);\n        }\n        // WARNING\n        // mutates the object\n        // -prf\n        resolveRefUris(doc, uri);\n        this.docs.set(uri, doc);\n        for (const [defUri, def] of iterDefs(doc)) {\n            this.defs.set(defUri, def);\n        }\n    }\n    /**\n     * Remove a lexicon doc.\n     */\n    remove(uri) {\n        uri = (0, util_1.toLexUri)(uri);\n        const doc = this.docs.get(uri);\n        if (!doc) {\n            throw new Error(`Unable to remove \"${uri}\": does not exist`);\n        }\n        for (const [defUri, _def] of iterDefs(doc)) {\n            this.defs.delete(defUri);\n        }\n        this.docs.delete(uri);\n    }\n    /**\n     * Get a lexicon doc.\n     */\n    get(uri) {\n        uri = (0, util_1.toLexUri)(uri);\n        return this.docs.get(uri);\n    }\n    /**\n     * Get a definition.\n     */\n    getDef(uri) {\n        uri = (0, util_1.toLexUri)(uri);\n        return this.defs.get(uri);\n    }\n    getDefOrThrow(uri, types) {\n        const def = this.getDef(uri);\n        if (!def) {\n            throw new types_1.LexiconDefNotFoundError(`Lexicon not found: ${uri}`);\n        }\n        if (types && !types.includes(def.type)) {\n            throw new types_1.InvalidLexiconError(`Not a ${types.join(' or ')} lexicon: ${uri}`);\n        }\n        return def;\n    }\n    /**\n     * Validate a record or object.\n     */\n    validate(lexUri, value) {\n        if (!(0, types_1.isObj)(value)) {\n            throw new types_1.ValidationError(`Value must be an object`);\n        }\n        const lexUriNormalized = (0, util_1.toLexUri)(lexUri);\n        const def = this.getDefOrThrow(lexUriNormalized, ['record', 'object']);\n        if (def.type === 'record') {\n            return (0, complex_1.object)(this, 'Record', def.record, value);\n        }\n        else if (def.type === 'object') {\n            return (0, complex_1.object)(this, 'Object', def, value);\n        }\n        else {\n            // shouldn't happen\n            throw new types_1.InvalidLexiconError('Definition must be a record or object');\n        }\n    }\n    /**\n     * Validate a record and throw on any error.\n     */\n    assertValidRecord(lexUri, value) {\n        if (!(0, types_1.isObj)(value)) {\n            throw new types_1.ValidationError(`Record must be an object`);\n        }\n        if (!('$type' in value)) {\n            throw new types_1.ValidationError(`Record/$type must be a string`);\n        }\n        const { $type } = value;\n        if (typeof $type !== 'string') {\n            throw new types_1.ValidationError(`Record/$type must be a string`);\n        }\n        const lexUriNormalized = (0, util_1.toLexUri)(lexUri);\n        if ((0, util_1.toLexUri)($type) !== lexUriNormalized) {\n            throw new types_1.ValidationError(`Invalid $type: must be ${lexUriNormalized}, got ${$type}`);\n        }\n        const def = this.getDefOrThrow(lexUriNormalized, ['record']);\n        return (0, validation_1.assertValidRecord)(this, def, value);\n    }\n    /**\n     * Validate xrpc query params and throw on any error.\n     */\n    assertValidXrpcParams(lexUri, value) {\n        lexUri = (0, util_1.toLexUri)(lexUri);\n        const def = this.getDefOrThrow(lexUri, [\n            'query',\n            'procedure',\n            'subscription',\n        ]);\n        return (0, validation_1.assertValidXrpcParams)(this, def, value);\n    }\n    /**\n     * Validate xrpc input body and throw on any error.\n     */\n    assertValidXrpcInput(lexUri, value) {\n        lexUri = (0, util_1.toLexUri)(lexUri);\n        const def = this.getDefOrThrow(lexUri, ['procedure']);\n        return (0, validation_1.assertValidXrpcInput)(this, def, value);\n    }\n    /**\n     * Validate xrpc output body and throw on any error.\n     */\n    assertValidXrpcOutput(lexUri, value) {\n        lexUri = (0, util_1.toLexUri)(lexUri);\n        const def = this.getDefOrThrow(lexUri, ['query', 'procedure']);\n        return (0, validation_1.assertValidXrpcOutput)(this, def, value);\n    }\n    /**\n     * Validate xrpc subscription message and throw on any error.\n     */\n    assertValidXrpcMessage(lexUri, value) {\n        lexUri = (0, util_1.toLexUri)(lexUri);\n        const def = this.getDefOrThrow(lexUri, ['subscription']);\n        return (0, validation_1.assertValidXrpcMessage)(this, def, value);\n    }\n    /**\n     * Resolve a lex uri given a ref\n     */\n    resolveLexUri(lexUri, ref) {\n        lexUri = (0, util_1.toLexUri)(lexUri);\n        return (0, util_1.toLexUri)(ref, lexUri);\n    }\n}\nexports.Lexicons = Lexicons;\nfunction* iterDefs(doc) {\n    for (const defId in doc.defs) {\n        yield [`lex:${doc.id}#${defId}`, doc.defs[defId]];\n        if (defId === 'main') {\n            yield [`lex:${doc.id}`, doc.defs[defId]];\n        }\n    }\n}\n// WARNING\n// this method mutates objects\n// -prf\nfunction resolveRefUris(obj, baseUri) {\n    for (const k in obj) {\n        if (obj.type === 'ref') {\n            obj.ref = (0, util_1.toLexUri)(obj.ref, baseUri);\n        }\n        else if (obj.type === 'union') {\n            obj.refs = obj.refs.map((ref) => (0, util_1.toLexUri)(ref, baseUri));\n        }\n        else if (Array.isArray(obj[k])) {\n            obj[k] = obj[k].map((item) => {\n                if (typeof item === 'string') {\n                    return item.startsWith('#') ? (0, util_1.toLexUri)(item, baseUri) : item;\n                }\n                else if (item && typeof item === 'object') {\n                    return resolveRefUris(item, baseUri);\n                }\n                return item;\n            });\n        }\n        else if (obj[k] && typeof obj[k] === 'object') {\n            obj[k] = resolveRefUris(obj[k], baseUri);\n        }\n    }\n    return obj;\n}\n//# sourceMappingURL=lexicons.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/lexicon/dist/lexicons.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/lexicon/dist/serialize.js":
/*!*********************************************************!*\
  !*** ./node_modules/@atproto/lexicon/dist/serialize.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.jsonStringToLex = exports.jsonToLex = exports.stringifyLex = exports.lexToJson = exports.ipldToLex = exports.lexToIpld = void 0;\nconst cid_1 = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/multiformats/cjs/src/cid.js\");\nconst common_web_1 = __webpack_require__(/*! @atproto/common-web */ \"(ssr)/./node_modules/@atproto/common-web/dist/index.js\");\nconst blob_refs_1 = __webpack_require__(/*! ./blob-refs */ \"(ssr)/./node_modules/@atproto/lexicon/dist/blob-refs.js\");\n// @NOTE avoiding use of check.is() here only because it makes\n// these implementations slow, and they often live in hot paths.\nconst lexToIpld = (val) => {\n    // walk arrays\n    if (Array.isArray(val)) {\n        return val.map((item) => (0, exports.lexToIpld)(item));\n    }\n    // objects\n    if (val && typeof val === 'object') {\n        // convert blobs, leaving the original encoding so that we don't change CIDs on re-encode\n        if (val instanceof blob_refs_1.BlobRef) {\n            return val.original;\n        }\n        // retain cids & bytes\n        if (cid_1.CID.asCID(val) || val instanceof Uint8Array) {\n            return val;\n        }\n        // walk plain objects\n        const toReturn = {};\n        for (const key of Object.keys(val)) {\n            toReturn[key] = (0, exports.lexToIpld)(val[key]);\n        }\n        return toReturn;\n    }\n    // pass through\n    return val;\n};\nexports.lexToIpld = lexToIpld;\nconst ipldToLex = (val) => {\n    // map arrays\n    if (Array.isArray(val)) {\n        return val.map((item) => (0, exports.ipldToLex)(item));\n    }\n    // objects\n    if (val && typeof val === 'object') {\n        // convert blobs, using hints to avoid expensive is() check\n        if ((val['$type'] === 'blob' ||\n            (typeof val['cid'] === 'string' &&\n                typeof val['mimeType'] === 'string')) &&\n            common_web_1.check.is(val, blob_refs_1.jsonBlobRef)) {\n            return blob_refs_1.BlobRef.fromJsonRef(val);\n        }\n        // retain cids, bytes\n        if (cid_1.CID.asCID(val) || val instanceof Uint8Array) {\n            return val;\n        }\n        // map plain objects\n        const toReturn = {};\n        for (const key of Object.keys(val)) {\n            toReturn[key] = (0, exports.ipldToLex)(val[key]);\n        }\n        return toReturn;\n    }\n    // pass through\n    return val;\n};\nexports.ipldToLex = ipldToLex;\nconst lexToJson = (val) => {\n    return (0, common_web_1.ipldToJson)((0, exports.lexToIpld)(val));\n};\nexports.lexToJson = lexToJson;\nconst stringifyLex = (val) => {\n    return JSON.stringify((0, exports.lexToJson)(val));\n};\nexports.stringifyLex = stringifyLex;\nconst jsonToLex = (val) => {\n    return (0, exports.ipldToLex)((0, common_web_1.jsonToIpld)(val));\n};\nexports.jsonToLex = jsonToLex;\nconst jsonStringToLex = (val) => {\n    return (0, exports.jsonToLex)(JSON.parse(val));\n};\nexports.jsonStringToLex = jsonStringToLex;\n//# sourceMappingURL=serialize.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vbGV4aWNvbi9kaXN0L3NlcmlhbGl6ZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUIsR0FBRyxpQkFBaUIsR0FBRyxvQkFBb0IsR0FBRyxpQkFBaUIsR0FBRyxpQkFBaUIsR0FBRyxpQkFBaUI7QUFDOUgsY0FBYyxtQkFBTyxDQUFDLDBFQUFrQjtBQUN4QyxxQkFBcUIsbUJBQU8sQ0FBQyxtRkFBcUI7QUFDbEQsb0JBQW9CLG1CQUFPLENBQUMsNEVBQWE7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2xleGljb24vZGlzdC9zZXJpYWxpemUuanM/MzRlNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuanNvblN0cmluZ1RvTGV4ID0gZXhwb3J0cy5qc29uVG9MZXggPSBleHBvcnRzLnN0cmluZ2lmeUxleCA9IGV4cG9ydHMubGV4VG9Kc29uID0gZXhwb3J0cy5pcGxkVG9MZXggPSBleHBvcnRzLmxleFRvSXBsZCA9IHZvaWQgMDtcbmNvbnN0IGNpZF8xID0gcmVxdWlyZShcIm11bHRpZm9ybWF0cy9jaWRcIik7XG5jb25zdCBjb21tb25fd2ViXzEgPSByZXF1aXJlKFwiQGF0cHJvdG8vY29tbW9uLXdlYlwiKTtcbmNvbnN0IGJsb2JfcmVmc18xID0gcmVxdWlyZShcIi4vYmxvYi1yZWZzXCIpO1xuLy8gQE5PVEUgYXZvaWRpbmcgdXNlIG9mIGNoZWNrLmlzKCkgaGVyZSBvbmx5IGJlY2F1c2UgaXQgbWFrZXNcbi8vIHRoZXNlIGltcGxlbWVudGF0aW9ucyBzbG93LCBhbmQgdGhleSBvZnRlbiBsaXZlIGluIGhvdCBwYXRocy5cbmNvbnN0IGxleFRvSXBsZCA9ICh2YWwpID0+IHtcbiAgICAvLyB3YWxrIGFycmF5c1xuICAgIGlmIChBcnJheS5pc0FycmF5KHZhbCkpIHtcbiAgICAgICAgcmV0dXJuIHZhbC5tYXAoKGl0ZW0pID0+ICgwLCBleHBvcnRzLmxleFRvSXBsZCkoaXRlbSkpO1xuICAgIH1cbiAgICAvLyBvYmplY3RzXG4gICAgaWYgKHZhbCAmJiB0eXBlb2YgdmFsID09PSAnb2JqZWN0Jykge1xuICAgICAgICAvLyBjb252ZXJ0IGJsb2JzLCBsZWF2aW5nIHRoZSBvcmlnaW5hbCBlbmNvZGluZyBzbyB0aGF0IHdlIGRvbid0IGNoYW5nZSBDSURzIG9uIHJlLWVuY29kZVxuICAgICAgICBpZiAodmFsIGluc3RhbmNlb2YgYmxvYl9yZWZzXzEuQmxvYlJlZikge1xuICAgICAgICAgICAgcmV0dXJuIHZhbC5vcmlnaW5hbDtcbiAgICAgICAgfVxuICAgICAgICAvLyByZXRhaW4gY2lkcyAmIGJ5dGVzXG4gICAgICAgIGlmIChjaWRfMS5DSUQuYXNDSUQodmFsKSB8fCB2YWwgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsO1xuICAgICAgICB9XG4gICAgICAgIC8vIHdhbGsgcGxhaW4gb2JqZWN0c1xuICAgICAgICBjb25zdCB0b1JldHVybiA9IHt9O1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyh2YWwpKSB7XG4gICAgICAgICAgICB0b1JldHVybltrZXldID0gKDAsIGV4cG9ydHMubGV4VG9JcGxkKSh2YWxba2V5XSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRvUmV0dXJuO1xuICAgIH1cbiAgICAvLyBwYXNzIHRocm91Z2hcbiAgICByZXR1cm4gdmFsO1xufTtcbmV4cG9ydHMubGV4VG9JcGxkID0gbGV4VG9JcGxkO1xuY29uc3QgaXBsZFRvTGV4ID0gKHZhbCkgPT4ge1xuICAgIC8vIG1hcCBhcnJheXNcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWwpKSB7XG4gICAgICAgIHJldHVybiB2YWwubWFwKChpdGVtKSA9PiAoMCwgZXhwb3J0cy5pcGxkVG9MZXgpKGl0ZW0pKTtcbiAgICB9XG4gICAgLy8gb2JqZWN0c1xuICAgIGlmICh2YWwgJiYgdHlwZW9mIHZhbCA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgLy8gY29udmVydCBibG9icywgdXNpbmcgaGludHMgdG8gYXZvaWQgZXhwZW5zaXZlIGlzKCkgY2hlY2tcbiAgICAgICAgaWYgKCh2YWxbJyR0eXBlJ10gPT09ICdibG9iJyB8fFxuICAgICAgICAgICAgKHR5cGVvZiB2YWxbJ2NpZCddID09PSAnc3RyaW5nJyAmJlxuICAgICAgICAgICAgICAgIHR5cGVvZiB2YWxbJ21pbWVUeXBlJ10gPT09ICdzdHJpbmcnKSkgJiZcbiAgICAgICAgICAgIGNvbW1vbl93ZWJfMS5jaGVjay5pcyh2YWwsIGJsb2JfcmVmc18xLmpzb25CbG9iUmVmKSkge1xuICAgICAgICAgICAgcmV0dXJuIGJsb2JfcmVmc18xLkJsb2JSZWYuZnJvbUpzb25SZWYodmFsKTtcbiAgICAgICAgfVxuICAgICAgICAvLyByZXRhaW4gY2lkcywgYnl0ZXNcbiAgICAgICAgaWYgKGNpZF8xLkNJRC5hc0NJRCh2YWwpIHx8IHZhbCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWw7XG4gICAgICAgIH1cbiAgICAgICAgLy8gbWFwIHBsYWluIG9iamVjdHNcbiAgICAgICAgY29uc3QgdG9SZXR1cm4gPSB7fTtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXModmFsKSkge1xuICAgICAgICAgICAgdG9SZXR1cm5ba2V5XSA9ICgwLCBleHBvcnRzLmlwbGRUb0xleCkodmFsW2tleV0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0b1JldHVybjtcbiAgICB9XG4gICAgLy8gcGFzcyB0aHJvdWdoXG4gICAgcmV0dXJuIHZhbDtcbn07XG5leHBvcnRzLmlwbGRUb0xleCA9IGlwbGRUb0xleDtcbmNvbnN0IGxleFRvSnNvbiA9ICh2YWwpID0+IHtcbiAgICByZXR1cm4gKDAsIGNvbW1vbl93ZWJfMS5pcGxkVG9Kc29uKSgoMCwgZXhwb3J0cy5sZXhUb0lwbGQpKHZhbCkpO1xufTtcbmV4cG9ydHMubGV4VG9Kc29uID0gbGV4VG9Kc29uO1xuY29uc3Qgc3RyaW5naWZ5TGV4ID0gKHZhbCkgPT4ge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSgoMCwgZXhwb3J0cy5sZXhUb0pzb24pKHZhbCkpO1xufTtcbmV4cG9ydHMuc3RyaW5naWZ5TGV4ID0gc3RyaW5naWZ5TGV4O1xuY29uc3QganNvblRvTGV4ID0gKHZhbCkgPT4ge1xuICAgIHJldHVybiAoMCwgZXhwb3J0cy5pcGxkVG9MZXgpKCgwLCBjb21tb25fd2ViXzEuanNvblRvSXBsZCkodmFsKSk7XG59O1xuZXhwb3J0cy5qc29uVG9MZXggPSBqc29uVG9MZXg7XG5jb25zdCBqc29uU3RyaW5nVG9MZXggPSAodmFsKSA9PiB7XG4gICAgcmV0dXJuICgwLCBleHBvcnRzLmpzb25Ub0xleCkoSlNPTi5wYXJzZSh2YWwpKTtcbn07XG5leHBvcnRzLmpzb25TdHJpbmdUb0xleCA9IGpzb25TdHJpbmdUb0xleDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlcmlhbGl6ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/lexicon/dist/serialize.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/lexicon/dist/types.js":
/*!*****************************************************!*\
  !*** ./node_modules/@atproto/lexicon/dist/types.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LexiconDefNotFoundError = exports.InvalidLexiconError = exports.ValidationError = exports.lexiconDoc = exports.lexUserType = exports.lexRecord = exports.lexXrpcSubscription = exports.lexXrpcProcedure = exports.lexXrpcQuery = exports.lexXrpcError = exports.lexXrpcSubscriptionMessage = exports.lexXrpcBody = exports.lexXrpcParameters = exports.lexObject = exports.lexToken = exports.lexPrimitiveArray = exports.lexArray = exports.lexBlob = exports.lexRefVariant = exports.lexRefUnion = exports.lexRef = exports.lexIpldType = exports.lexCidLink = exports.lexBytes = exports.lexPrimitive = exports.lexUnknown = exports.lexString = exports.lexStringFormat = exports.lexInteger = exports.lexBoolean = void 0;\nexports.isValidLexiconDoc = isValidLexiconDoc;\nexports.isObj = isObj;\nexports.isDiscriminatedObject = isDiscriminatedObject;\nexports.parseLexiconDoc = parseLexiconDoc;\nconst zod_1 = __webpack_require__(/*! zod */ \"(ssr)/./node_modules/zod/index.cjs\");\nconst syntax_1 = __webpack_require__(/*! @atproto/syntax */ \"(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/index.js\");\nconst util_1 = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/@atproto/lexicon/dist/util.js\");\n// primitives\n// =\nexports.lexBoolean = zod_1.z\n    .object({\n    type: zod_1.z.literal('boolean'),\n    description: zod_1.z.string().optional(),\n    default: zod_1.z.boolean().optional(),\n    const: zod_1.z.boolean().optional(),\n})\n    .strict();\nexports.lexInteger = zod_1.z\n    .object({\n    type: zod_1.z.literal('integer'),\n    description: zod_1.z.string().optional(),\n    default: zod_1.z.number().int().optional(),\n    minimum: zod_1.z.number().int().optional(),\n    maximum: zod_1.z.number().int().optional(),\n    enum: zod_1.z.number().int().array().optional(),\n    const: zod_1.z.number().int().optional(),\n})\n    .strict();\nexports.lexStringFormat = zod_1.z.enum([\n    'datetime',\n    'uri',\n    'at-uri',\n    'did',\n    'handle',\n    'at-identifier',\n    'nsid',\n    'cid',\n    'language',\n    'tid',\n    'record-key',\n]);\nexports.lexString = zod_1.z\n    .object({\n    type: zod_1.z.literal('string'),\n    format: exports.lexStringFormat.optional(),\n    description: zod_1.z.string().optional(),\n    default: zod_1.z.string().optional(),\n    minLength: zod_1.z.number().int().optional(),\n    maxLength: zod_1.z.number().int().optional(),\n    minGraphemes: zod_1.z.number().int().optional(),\n    maxGraphemes: zod_1.z.number().int().optional(),\n    enum: zod_1.z.string().array().optional(),\n    const: zod_1.z.string().optional(),\n    knownValues: zod_1.z.string().array().optional(),\n})\n    .strict();\nexports.lexUnknown = zod_1.z\n    .object({\n    type: zod_1.z.literal('unknown'),\n    description: zod_1.z.string().optional(),\n})\n    .strict();\nexports.lexPrimitive = zod_1.z.discriminatedUnion('type', [\n    exports.lexBoolean,\n    exports.lexInteger,\n    exports.lexString,\n    exports.lexUnknown,\n]);\n// ipld types\n// =\nexports.lexBytes = zod_1.z\n    .object({\n    type: zod_1.z.literal('bytes'),\n    description: zod_1.z.string().optional(),\n    maxLength: zod_1.z.number().optional(),\n    minLength: zod_1.z.number().optional(),\n})\n    .strict();\nexports.lexCidLink = zod_1.z\n    .object({\n    type: zod_1.z.literal('cid-link'),\n    description: zod_1.z.string().optional(),\n})\n    .strict();\nexports.lexIpldType = zod_1.z.discriminatedUnion('type', [exports.lexBytes, exports.lexCidLink]);\n// references\n// =\nexports.lexRef = zod_1.z\n    .object({\n    type: zod_1.z.literal('ref'),\n    description: zod_1.z.string().optional(),\n    ref: zod_1.z.string(),\n})\n    .strict();\nexports.lexRefUnion = zod_1.z\n    .object({\n    type: zod_1.z.literal('union'),\n    description: zod_1.z.string().optional(),\n    refs: zod_1.z.string().array(),\n    closed: zod_1.z.boolean().optional(),\n})\n    .strict();\nexports.lexRefVariant = zod_1.z.discriminatedUnion('type', [exports.lexRef, exports.lexRefUnion]);\n// blobs\n// =\nexports.lexBlob = zod_1.z\n    .object({\n    type: zod_1.z.literal('blob'),\n    description: zod_1.z.string().optional(),\n    accept: zod_1.z.string().array().optional(),\n    maxSize: zod_1.z.number().optional(),\n})\n    .strict();\n// complex types\n// =\nexports.lexArray = zod_1.z\n    .object({\n    type: zod_1.z.literal('array'),\n    description: zod_1.z.string().optional(),\n    items: zod_1.z.discriminatedUnion('type', [\n        // lexPrimitive\n        exports.lexBoolean,\n        exports.lexInteger,\n        exports.lexString,\n        exports.lexUnknown,\n        // lexIpldType\n        exports.lexBytes,\n        exports.lexCidLink,\n        // lexRefVariant\n        exports.lexRef,\n        exports.lexRefUnion,\n        // other\n        exports.lexBlob,\n    ]),\n    minLength: zod_1.z.number().int().optional(),\n    maxLength: zod_1.z.number().int().optional(),\n})\n    .strict();\nexports.lexPrimitiveArray = exports.lexArray.merge(zod_1.z\n    .object({\n    items: exports.lexPrimitive,\n})\n    .strict());\nexports.lexToken = zod_1.z\n    .object({\n    type: zod_1.z.literal('token'),\n    description: zod_1.z.string().optional(),\n})\n    .strict();\nexports.lexObject = zod_1.z\n    .object({\n    type: zod_1.z.literal('object'),\n    description: zod_1.z.string().optional(),\n    required: zod_1.z.string().array().optional(),\n    nullable: zod_1.z.string().array().optional(),\n    properties: zod_1.z.record(zod_1.z.discriminatedUnion('type', [\n        exports.lexArray,\n        // lexPrimitive\n        exports.lexBoolean,\n        exports.lexInteger,\n        exports.lexString,\n        exports.lexUnknown,\n        // lexIpldType\n        exports.lexBytes,\n        exports.lexCidLink,\n        // lexRefVariant\n        exports.lexRef,\n        exports.lexRefUnion,\n        // other\n        exports.lexBlob,\n    ])),\n})\n    .strict()\n    .superRefine(util_1.requiredPropertiesRefinement);\n// xrpc\n// =\nexports.lexXrpcParameters = zod_1.z\n    .object({\n    type: zod_1.z.literal('params'),\n    description: zod_1.z.string().optional(),\n    required: zod_1.z.string().array().optional(),\n    properties: zod_1.z.record(zod_1.z.discriminatedUnion('type', [\n        exports.lexPrimitiveArray,\n        // lexPrimitive\n        exports.lexBoolean,\n        exports.lexInteger,\n        exports.lexString,\n        exports.lexUnknown,\n    ])),\n})\n    .strict()\n    .superRefine(util_1.requiredPropertiesRefinement);\nexports.lexXrpcBody = zod_1.z\n    .object({\n    description: zod_1.z.string().optional(),\n    encoding: zod_1.z.string(),\n    // @NOTE using discriminatedUnion with a refined schema requires zod >= 4\n    schema: zod_1.z.union([exports.lexRefVariant, exports.lexObject]).optional(),\n})\n    .strict();\nexports.lexXrpcSubscriptionMessage = zod_1.z\n    .object({\n    description: zod_1.z.string().optional(),\n    // @NOTE using discriminatedUnion with a refined schema requires zod >= 4\n    schema: zod_1.z.union([exports.lexRefVariant, exports.lexObject]).optional(),\n})\n    .strict();\nexports.lexXrpcError = zod_1.z\n    .object({\n    name: zod_1.z.string(),\n    description: zod_1.z.string().optional(),\n})\n    .strict();\nexports.lexXrpcQuery = zod_1.z\n    .object({\n    type: zod_1.z.literal('query'),\n    description: zod_1.z.string().optional(),\n    parameters: exports.lexXrpcParameters.optional(),\n    output: exports.lexXrpcBody.optional(),\n    errors: exports.lexXrpcError.array().optional(),\n})\n    .strict();\nexports.lexXrpcProcedure = zod_1.z\n    .object({\n    type: zod_1.z.literal('procedure'),\n    description: zod_1.z.string().optional(),\n    parameters: exports.lexXrpcParameters.optional(),\n    input: exports.lexXrpcBody.optional(),\n    output: exports.lexXrpcBody.optional(),\n    errors: exports.lexXrpcError.array().optional(),\n})\n    .strict();\nexports.lexXrpcSubscription = zod_1.z\n    .object({\n    type: zod_1.z.literal('subscription'),\n    description: zod_1.z.string().optional(),\n    parameters: exports.lexXrpcParameters.optional(),\n    message: exports.lexXrpcSubscriptionMessage.optional(),\n    errors: exports.lexXrpcError.array().optional(),\n})\n    .strict();\n// database\n// =\nexports.lexRecord = zod_1.z\n    .object({\n    type: zod_1.z.literal('record'),\n    description: zod_1.z.string().optional(),\n    key: zod_1.z.string().optional(),\n    record: exports.lexObject,\n})\n    .strict();\n// core\n// =\n// We need to use `z.custom` here because\n// lexXrpcProperty and lexObject are refined\n// `z.union` would work, but it's too slow\n// see #915 for details\nexports.lexUserType = zod_1.z.custom((val) => {\n    if (!val || typeof val !== 'object') {\n        return;\n    }\n    if (val['type'] === undefined) {\n        return;\n    }\n    switch (val['type']) {\n        case 'record':\n            return exports.lexRecord.parse(val);\n        case 'query':\n            return exports.lexXrpcQuery.parse(val);\n        case 'procedure':\n            return exports.lexXrpcProcedure.parse(val);\n        case 'subscription':\n            return exports.lexXrpcSubscription.parse(val);\n        case 'blob':\n            return exports.lexBlob.parse(val);\n        case 'array':\n            return exports.lexArray.parse(val);\n        case 'token':\n            return exports.lexToken.parse(val);\n        case 'object':\n            return exports.lexObject.parse(val);\n        case 'boolean':\n            return exports.lexBoolean.parse(val);\n        case 'integer':\n            return exports.lexInteger.parse(val);\n        case 'string':\n            return exports.lexString.parse(val);\n        case 'bytes':\n            return exports.lexBytes.parse(val);\n        case 'cid-link':\n            return exports.lexCidLink.parse(val);\n        case 'unknown':\n            return exports.lexUnknown.parse(val);\n    }\n}, (val) => {\n    if (!val || typeof val !== 'object') {\n        return {\n            message: 'Must be an object',\n            fatal: true,\n        };\n    }\n    if (val['type'] === undefined) {\n        return {\n            message: 'Must have a type',\n            fatal: true,\n        };\n    }\n    if (typeof val['type'] !== 'string') {\n        return {\n            message: 'Type property must be a string',\n            fatal: true,\n        };\n    }\n    return {\n        message: `Invalid type: ${val['type']} must be one of: record, query, procedure, subscription, blob, array, token, object, boolean, integer, string, bytes, cid-link, unknown`,\n        fatal: true,\n    };\n});\nexports.lexiconDoc = zod_1.z\n    .object({\n    lexicon: zod_1.z.literal(1),\n    id: zod_1.z.string().refine((v) => syntax_1.NSID.isValid(v), {\n        message: 'Must be a valid NSID',\n    }),\n    revision: zod_1.z.number().optional(),\n    description: zod_1.z.string().optional(),\n    defs: zod_1.z.record(exports.lexUserType),\n})\n    .strict()\n    .superRefine((doc, ctx) => {\n    for (const defId in doc.defs) {\n        const def = doc.defs[defId];\n        if (defId !== 'main' &&\n            (def.type === 'record' ||\n                def.type === 'procedure' ||\n                def.type === 'query' ||\n                def.type === 'subscription')) {\n            ctx.addIssue({\n                code: zod_1.z.ZodIssueCode.custom,\n                message: `Records, procedures, queries, and subscriptions must be the main definition.`,\n            });\n        }\n    }\n});\n// helpers\n// =\nfunction isValidLexiconDoc(v) {\n    return exports.lexiconDoc.safeParse(v).success;\n}\nfunction isObj(v) {\n    return v != null && typeof v === 'object';\n}\nfunction isDiscriminatedObject(v) {\n    return isObj(v) && '$type' in v && typeof v.$type === 'string';\n}\nfunction parseLexiconDoc(v) {\n    exports.lexiconDoc.parse(v);\n    return v;\n}\nclass ValidationError extends Error {\n}\nexports.ValidationError = ValidationError;\nclass InvalidLexiconError extends Error {\n}\nexports.InvalidLexiconError = InvalidLexiconError;\nclass LexiconDefNotFoundError extends Error {\n}\nexports.LexiconDefNotFoundError = LexiconDefNotFoundError;\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/lexicon/dist/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/lexicon/dist/util.js":
/*!****************************************************!*\
  !*** ./node_modules/@atproto/lexicon/dist/util.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toLexUri = toLexUri;\nexports.requiredPropertiesRefinement = requiredPropertiesRefinement;\nconst zod_1 = __webpack_require__(/*! zod */ \"(ssr)/./node_modules/zod/index.cjs\");\nfunction toLexUri(str, baseUri) {\n    if (str.split('#').length > 2) {\n        throw new Error('Uri can only have one hash segment');\n    }\n    if (str.startsWith('lex:')) {\n        return str;\n    }\n    if (str.startsWith('#')) {\n        if (!baseUri) {\n            throw new Error(`Unable to resolve uri without anchor: ${str}`);\n        }\n        return `${baseUri}${str}`;\n    }\n    return `lex:${str}`;\n}\nfunction requiredPropertiesRefinement(object, ctx) {\n    // Required fields check\n    if (object.required === undefined) {\n        return;\n    }\n    if (!Array.isArray(object.required)) {\n        ctx.addIssue({\n            code: zod_1.z.ZodIssueCode.invalid_type,\n            received: typeof object.required,\n            expected: 'array',\n        });\n        return;\n    }\n    if (object.properties === undefined) {\n        if (object.required.length > 0) {\n            ctx.addIssue({\n                code: zod_1.z.ZodIssueCode.custom,\n                message: `Required fields defined but no properties defined`,\n            });\n        }\n        return;\n    }\n    for (const field of object.required) {\n        if (object.properties[field] === undefined) {\n            ctx.addIssue({\n                code: zod_1.z.ZodIssueCode.custom,\n                message: `Required field \"${field}\" not defined`,\n            });\n        }\n    }\n}\n//# sourceMappingURL=util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vbGV4aWNvbi9kaXN0L3V0aWwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCO0FBQ2hCLG9DQUFvQztBQUNwQyxjQUFjLG1CQUFPLENBQUMsK0NBQUs7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUVBQXFFLElBQUk7QUFDekU7QUFDQSxrQkFBa0IsUUFBUSxFQUFFLElBQUk7QUFDaEM7QUFDQSxrQkFBa0IsSUFBSTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLE1BQU07QUFDbEQsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vbGV4aWNvbi9kaXN0L3V0aWwuanM/ODc1MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9MZXhVcmkgPSB0b0xleFVyaTtcbmV4cG9ydHMucmVxdWlyZWRQcm9wZXJ0aWVzUmVmaW5lbWVudCA9IHJlcXVpcmVkUHJvcGVydGllc1JlZmluZW1lbnQ7XG5jb25zdCB6b2RfMSA9IHJlcXVpcmUoXCJ6b2RcIik7XG5mdW5jdGlvbiB0b0xleFVyaShzdHIsIGJhc2VVcmkpIHtcbiAgICBpZiAoc3RyLnNwbGl0KCcjJykubGVuZ3RoID4gMikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VyaSBjYW4gb25seSBoYXZlIG9uZSBoYXNoIHNlZ21lbnQnKTtcbiAgICB9XG4gICAgaWYgKHN0ci5zdGFydHNXaXRoKCdsZXg6JykpIHtcbiAgICAgICAgcmV0dXJuIHN0cjtcbiAgICB9XG4gICAgaWYgKHN0ci5zdGFydHNXaXRoKCcjJykpIHtcbiAgICAgICAgaWYgKCFiYXNlVXJpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuYWJsZSB0byByZXNvbHZlIHVyaSB3aXRob3V0IGFuY2hvcjogJHtzdHJ9YCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGAke2Jhc2VVcml9JHtzdHJ9YDtcbiAgICB9XG4gICAgcmV0dXJuIGBsZXg6JHtzdHJ9YDtcbn1cbmZ1bmN0aW9uIHJlcXVpcmVkUHJvcGVydGllc1JlZmluZW1lbnQob2JqZWN0LCBjdHgpIHtcbiAgICAvLyBSZXF1aXJlZCBmaWVsZHMgY2hlY2tcbiAgICBpZiAob2JqZWN0LnJlcXVpcmVkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoIUFycmF5LmlzQXJyYXkob2JqZWN0LnJlcXVpcmVkKSkge1xuICAgICAgICBjdHguYWRkSXNzdWUoe1xuICAgICAgICAgICAgY29kZTogem9kXzEuei5ab2RJc3N1ZUNvZGUuaW52YWxpZF90eXBlLFxuICAgICAgICAgICAgcmVjZWl2ZWQ6IHR5cGVvZiBvYmplY3QucmVxdWlyZWQsXG4gICAgICAgICAgICBleHBlY3RlZDogJ2FycmF5JyxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKG9iamVjdC5wcm9wZXJ0aWVzID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgaWYgKG9iamVjdC5yZXF1aXJlZC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBjdHguYWRkSXNzdWUoe1xuICAgICAgICAgICAgICAgIGNvZGU6IHpvZF8xLnouWm9kSXNzdWVDb2RlLmN1c3RvbSxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBgUmVxdWlyZWQgZmllbGRzIGRlZmluZWQgYnV0IG5vIHByb3BlcnRpZXMgZGVmaW5lZGAsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGZvciAoY29uc3QgZmllbGQgb2Ygb2JqZWN0LnJlcXVpcmVkKSB7XG4gICAgICAgIGlmIChvYmplY3QucHJvcGVydGllc1tmaWVsZF0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgY3R4LmFkZElzc3VlKHtcbiAgICAgICAgICAgICAgICBjb2RlOiB6b2RfMS56LlpvZElzc3VlQ29kZS5jdXN0b20sXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogYFJlcXVpcmVkIGZpZWxkIFwiJHtmaWVsZH1cIiBub3QgZGVmaW5lZGAsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/lexicon/dist/util.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/lexicon/dist/validation.js":
/*!**********************************************************!*\
  !*** ./node_modules/@atproto/lexicon/dist/validation.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.assertValidRecord = assertValidRecord;\nexports.assertValidXrpcParams = assertValidXrpcParams;\nexports.assertValidXrpcInput = assertValidXrpcInput;\nexports.assertValidXrpcOutput = assertValidXrpcOutput;\nexports.assertValidXrpcMessage = assertValidXrpcMessage;\nconst complex_1 = __webpack_require__(/*! ./validators/complex */ \"(ssr)/./node_modules/@atproto/lexicon/dist/validators/complex.js\");\nconst xrpc_1 = __webpack_require__(/*! ./validators/xrpc */ \"(ssr)/./node_modules/@atproto/lexicon/dist/validators/xrpc.js\");\nfunction assertValidRecord(lexicons, def, value) {\n    const res = (0, complex_1.object)(lexicons, 'Record', def.record, value);\n    if (!res.success)\n        throw res.error;\n    return res.value;\n}\nfunction assertValidXrpcParams(lexicons, def, value) {\n    if (def.parameters) {\n        const res = (0, xrpc_1.params)(lexicons, 'Params', def.parameters, value);\n        if (!res.success)\n            throw res.error;\n        return res.value;\n    }\n}\nfunction assertValidXrpcInput(lexicons, def, value) {\n    if (def.input?.schema) {\n        // loop: all input schema definitions\n        return assertValidOneOf(lexicons, 'Input', def.input.schema, value, true);\n    }\n}\nfunction assertValidXrpcOutput(lexicons, def, value) {\n    if (def.output?.schema) {\n        // loop: all output schema definitions\n        return assertValidOneOf(lexicons, 'Output', def.output.schema, value, true);\n    }\n}\nfunction assertValidXrpcMessage(lexicons, def, value) {\n    if (def.message?.schema) {\n        // loop: all output schema definitions\n        return assertValidOneOf(lexicons, 'Message', def.message.schema, value, true);\n    }\n}\nfunction assertValidOneOf(lexicons, path, def, value, mustBeObj = false) {\n    const res = (0, complex_1.validateOneOf)(lexicons, path, def, value, mustBeObj);\n    if (!res.success)\n        throw res.error;\n    return res.value;\n}\n//# sourceMappingURL=validation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vbGV4aWNvbi9kaXN0L3ZhbGlkYXRpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QseUJBQXlCO0FBQ3pCLDZCQUE2QjtBQUM3Qiw0QkFBNEI7QUFDNUIsNkJBQTZCO0FBQzdCLDhCQUE4QjtBQUM5QixrQkFBa0IsbUJBQU8sQ0FBQyw4RkFBc0I7QUFDaEQsZUFBZSxtQkFBTyxDQUFDLHdGQUFtQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9sZXhpY29uL2Rpc3QvdmFsaWRhdGlvbi5qcz9mMzVjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5hc3NlcnRWYWxpZFJlY29yZCA9IGFzc2VydFZhbGlkUmVjb3JkO1xuZXhwb3J0cy5hc3NlcnRWYWxpZFhycGNQYXJhbXMgPSBhc3NlcnRWYWxpZFhycGNQYXJhbXM7XG5leHBvcnRzLmFzc2VydFZhbGlkWHJwY0lucHV0ID0gYXNzZXJ0VmFsaWRYcnBjSW5wdXQ7XG5leHBvcnRzLmFzc2VydFZhbGlkWHJwY091dHB1dCA9IGFzc2VydFZhbGlkWHJwY091dHB1dDtcbmV4cG9ydHMuYXNzZXJ0VmFsaWRYcnBjTWVzc2FnZSA9IGFzc2VydFZhbGlkWHJwY01lc3NhZ2U7XG5jb25zdCBjb21wbGV4XzEgPSByZXF1aXJlKFwiLi92YWxpZGF0b3JzL2NvbXBsZXhcIik7XG5jb25zdCB4cnBjXzEgPSByZXF1aXJlKFwiLi92YWxpZGF0b3JzL3hycGNcIik7XG5mdW5jdGlvbiBhc3NlcnRWYWxpZFJlY29yZChsZXhpY29ucywgZGVmLCB2YWx1ZSkge1xuICAgIGNvbnN0IHJlcyA9ICgwLCBjb21wbGV4XzEub2JqZWN0KShsZXhpY29ucywgJ1JlY29yZCcsIGRlZi5yZWNvcmQsIHZhbHVlKTtcbiAgICBpZiAoIXJlcy5zdWNjZXNzKVxuICAgICAgICB0aHJvdyByZXMuZXJyb3I7XG4gICAgcmV0dXJuIHJlcy52YWx1ZTtcbn1cbmZ1bmN0aW9uIGFzc2VydFZhbGlkWHJwY1BhcmFtcyhsZXhpY29ucywgZGVmLCB2YWx1ZSkge1xuICAgIGlmIChkZWYucGFyYW1ldGVycykge1xuICAgICAgICBjb25zdCByZXMgPSAoMCwgeHJwY18xLnBhcmFtcykobGV4aWNvbnMsICdQYXJhbXMnLCBkZWYucGFyYW1ldGVycywgdmFsdWUpO1xuICAgICAgICBpZiAoIXJlcy5zdWNjZXNzKVxuICAgICAgICAgICAgdGhyb3cgcmVzLmVycm9yO1xuICAgICAgICByZXR1cm4gcmVzLnZhbHVlO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGFzc2VydFZhbGlkWHJwY0lucHV0KGxleGljb25zLCBkZWYsIHZhbHVlKSB7XG4gICAgaWYgKGRlZi5pbnB1dD8uc2NoZW1hKSB7XG4gICAgICAgIC8vIGxvb3A6IGFsbCBpbnB1dCBzY2hlbWEgZGVmaW5pdGlvbnNcbiAgICAgICAgcmV0dXJuIGFzc2VydFZhbGlkT25lT2YobGV4aWNvbnMsICdJbnB1dCcsIGRlZi5pbnB1dC5zY2hlbWEsIHZhbHVlLCB0cnVlKTtcbiAgICB9XG59XG5mdW5jdGlvbiBhc3NlcnRWYWxpZFhycGNPdXRwdXQobGV4aWNvbnMsIGRlZiwgdmFsdWUpIHtcbiAgICBpZiAoZGVmLm91dHB1dD8uc2NoZW1hKSB7XG4gICAgICAgIC8vIGxvb3A6IGFsbCBvdXRwdXQgc2NoZW1hIGRlZmluaXRpb25zXG4gICAgICAgIHJldHVybiBhc3NlcnRWYWxpZE9uZU9mKGxleGljb25zLCAnT3V0cHV0JywgZGVmLm91dHB1dC5zY2hlbWEsIHZhbHVlLCB0cnVlKTtcbiAgICB9XG59XG5mdW5jdGlvbiBhc3NlcnRWYWxpZFhycGNNZXNzYWdlKGxleGljb25zLCBkZWYsIHZhbHVlKSB7XG4gICAgaWYgKGRlZi5tZXNzYWdlPy5zY2hlbWEpIHtcbiAgICAgICAgLy8gbG9vcDogYWxsIG91dHB1dCBzY2hlbWEgZGVmaW5pdGlvbnNcbiAgICAgICAgcmV0dXJuIGFzc2VydFZhbGlkT25lT2YobGV4aWNvbnMsICdNZXNzYWdlJywgZGVmLm1lc3NhZ2Uuc2NoZW1hLCB2YWx1ZSwgdHJ1ZSk7XG4gICAgfVxufVxuZnVuY3Rpb24gYXNzZXJ0VmFsaWRPbmVPZihsZXhpY29ucywgcGF0aCwgZGVmLCB2YWx1ZSwgbXVzdEJlT2JqID0gZmFsc2UpIHtcbiAgICBjb25zdCByZXMgPSAoMCwgY29tcGxleF8xLnZhbGlkYXRlT25lT2YpKGxleGljb25zLCBwYXRoLCBkZWYsIHZhbHVlLCBtdXN0QmVPYmopO1xuICAgIGlmICghcmVzLnN1Y2Nlc3MpXG4gICAgICAgIHRocm93IHJlcy5lcnJvcjtcbiAgICByZXR1cm4gcmVzLnZhbHVlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmFsaWRhdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/lexicon/dist/validation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/lexicon/dist/validators/blob.js":
/*!***************************************************************!*\
  !*** ./node_modules/@atproto/lexicon/dist/validators/blob.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.blob = blob;\nconst blob_refs_1 = __webpack_require__(/*! ../blob-refs */ \"(ssr)/./node_modules/@atproto/lexicon/dist/blob-refs.js\");\nconst types_1 = __webpack_require__(/*! ../types */ \"(ssr)/./node_modules/@atproto/lexicon/dist/types.js\");\nfunction blob(lexicons, path, def, value) {\n    // check\n    if (!value || !(value instanceof blob_refs_1.BlobRef)) {\n        return {\n            success: false,\n            error: new types_1.ValidationError(`${path} should be a blob ref`),\n        };\n    }\n    return { success: true, value };\n}\n//# sourceMappingURL=blob.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vbGV4aWNvbi9kaXN0L3ZhbGlkYXRvcnMvYmxvYi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxZQUFZO0FBQ1osb0JBQW9CLG1CQUFPLENBQUMsNkVBQWM7QUFDMUMsZ0JBQWdCLG1CQUFPLENBQUMscUVBQVU7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxNQUFNO0FBQ3hEO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2xleGljb24vZGlzdC92YWxpZGF0b3JzL2Jsb2IuanM/YzI4YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYmxvYiA9IGJsb2I7XG5jb25zdCBibG9iX3JlZnNfMSA9IHJlcXVpcmUoXCIuLi9ibG9iLXJlZnNcIik7XG5jb25zdCB0eXBlc18xID0gcmVxdWlyZShcIi4uL3R5cGVzXCIpO1xuZnVuY3Rpb24gYmxvYihsZXhpY29ucywgcGF0aCwgZGVmLCB2YWx1ZSkge1xuICAgIC8vIGNoZWNrXG4gICAgaWYgKCF2YWx1ZSB8fCAhKHZhbHVlIGluc3RhbmNlb2YgYmxvYl9yZWZzXzEuQmxvYlJlZikpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgZXJyb3I6IG5ldyB0eXBlc18xLlZhbGlkYXRpb25FcnJvcihgJHtwYXRofSBzaG91bGQgYmUgYSBibG9iIHJlZmApLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCB2YWx1ZSB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmxvYi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/lexicon/dist/validators/blob.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/lexicon/dist/validators/complex.js":
/*!******************************************************************!*\
  !*** ./node_modules/@atproto/lexicon/dist/validators/complex.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.validate = validate;\nexports.array = array;\nexports.object = object;\nexports.validateOneOf = validateOneOf;\nconst types_1 = __webpack_require__(/*! ../types */ \"(ssr)/./node_modules/@atproto/lexicon/dist/types.js\");\nconst util_1 = __webpack_require__(/*! ../util */ \"(ssr)/./node_modules/@atproto/lexicon/dist/util.js\");\nconst blob_1 = __webpack_require__(/*! ./blob */ \"(ssr)/./node_modules/@atproto/lexicon/dist/validators/blob.js\");\nconst primitives_1 = __webpack_require__(/*! ./primitives */ \"(ssr)/./node_modules/@atproto/lexicon/dist/validators/primitives.js\");\nfunction validate(lexicons, path, def, value) {\n    switch (def.type) {\n        case 'object':\n            return object(lexicons, path, def, value);\n        case 'array':\n            return array(lexicons, path, def, value);\n        case 'blob':\n            return (0, blob_1.blob)(lexicons, path, def, value);\n        default:\n            return (0, primitives_1.validate)(lexicons, path, def, value);\n    }\n}\nfunction array(lexicons, path, def, value) {\n    // type\n    if (!Array.isArray(value)) {\n        return {\n            success: false,\n            error: new types_1.ValidationError(`${path} must be an array`),\n        };\n    }\n    // maxLength\n    if (typeof def.maxLength === 'number') {\n        if (value.length > def.maxLength) {\n            return {\n                success: false,\n                error: new types_1.ValidationError(`${path} must not have more than ${def.maxLength} elements`),\n            };\n        }\n    }\n    // minLength\n    if (typeof def.minLength === 'number') {\n        if (value.length < def.minLength) {\n            return {\n                success: false,\n                error: new types_1.ValidationError(`${path} must not have fewer than ${def.minLength} elements`),\n            };\n        }\n    }\n    // items\n    const itemsDef = def.items;\n    for (let i = 0; i < value.length; i++) {\n        const itemValue = value[i];\n        const itemPath = `${path}/${i}`;\n        const res = validateOneOf(lexicons, itemPath, itemsDef, itemValue);\n        if (!res.success) {\n            return res;\n        }\n    }\n    return { success: true, value };\n}\nfunction object(lexicons, path, def, value) {\n    // type\n    if (!(0, types_1.isObj)(value)) {\n        return {\n            success: false,\n            error: new types_1.ValidationError(`${path} must be an object`),\n        };\n    }\n    // properties\n    let resultValue = value;\n    if ('properties' in def && def.properties != null) {\n        for (const key in def.properties) {\n            const keyValue = value[key];\n            if (keyValue === null && def.nullable?.includes(key)) {\n                continue;\n            }\n            const propDef = def.properties[key];\n            if (keyValue === undefined && !def.required?.includes(key)) {\n                // Fast path for non-required undefined props.\n                if (propDef.type === 'integer' ||\n                    propDef.type === 'boolean' ||\n                    propDef.type === 'string') {\n                    if (propDef.default === undefined) {\n                        continue;\n                    }\n                }\n                else {\n                    // Other types have no defaults.\n                    continue;\n                }\n            }\n            const propPath = `${path}/${key}`;\n            const validated = validateOneOf(lexicons, propPath, propDef, keyValue);\n            const propValue = validated.success ? validated.value : keyValue;\n            // Return error for bad validation, giving required rule precedence\n            if (propValue === undefined) {\n                if (def.required?.includes(key)) {\n                    return {\n                        success: false,\n                        error: new types_1.ValidationError(`${path} must have the property \"${key}\"`),\n                    };\n                }\n            }\n            else {\n                if (!validated.success) {\n                    return validated;\n                }\n            }\n            // Adjust value based on e.g. applied defaults, cloning shallowly if there was a changed value\n            if (propValue !== keyValue) {\n                if (resultValue === value) {\n                    // Lazy shallow clone\n                    resultValue = { ...value };\n                }\n                resultValue[key] = propValue;\n            }\n        }\n    }\n    return { success: true, value: resultValue };\n}\nfunction validateOneOf(lexicons, path, def, value, mustBeObj = false) {\n    let concreteDef;\n    if (def.type === 'union') {\n        if (!(0, types_1.isDiscriminatedObject)(value)) {\n            return {\n                success: false,\n                error: new types_1.ValidationError(`${path} must be an object which includes the \"$type\" property`),\n            };\n        }\n        if (!refsContainType(def.refs, value.$type)) {\n            if (def.closed) {\n                return {\n                    success: false,\n                    error: new types_1.ValidationError(`${path} $type must be one of ${def.refs.join(', ')}`),\n                };\n            }\n            return { success: true, value };\n        }\n        else {\n            concreteDef = lexicons.getDefOrThrow(value.$type);\n        }\n    }\n    else if (def.type === 'ref') {\n        concreteDef = lexicons.getDefOrThrow(def.ref);\n    }\n    else {\n        concreteDef = def;\n    }\n    return mustBeObj\n        ? object(lexicons, path, concreteDef, value)\n        : validate(lexicons, path, concreteDef, value);\n}\n// to avoid bugs like #0189 this needs to handle both\n// explicit and implicit #main\nconst refsContainType = (refs, type) => {\n    const lexUri = (0, util_1.toLexUri)(type);\n    if (refs.includes(lexUri)) {\n        return true;\n    }\n    if (lexUri.endsWith('#main')) {\n        return refs.includes(lexUri.slice(0, -5));\n    }\n    else {\n        return !lexUri.includes('#') && refs.includes(`${lexUri}#main`);\n    }\n};\n//# sourceMappingURL=complex.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/lexicon/dist/validators/complex.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/lexicon/dist/validators/formats.js":
/*!******************************************************************!*\
  !*** ./node_modules/@atproto/lexicon/dist/validators/formats.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.datetime = datetime;\nexports.uri = uri;\nexports.atUri = atUri;\nexports.did = did;\nexports.handle = handle;\nexports.atIdentifier = atIdentifier;\nexports.nsid = nsid;\nexports.cid = cid;\nexports.language = language;\nexports.tid = tid;\nexports.recordKey = recordKey;\nconst iso_datestring_validator_1 = __webpack_require__(/*! iso-datestring-validator */ \"(ssr)/./node_modules/iso-datestring-validator/dist/index.js\");\nconst cid_1 = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/multiformats/cjs/src/cid.js\");\nconst common_web_1 = __webpack_require__(/*! @atproto/common-web */ \"(ssr)/./node_modules/@atproto/common-web/dist/index.js\");\nconst syntax_1 = __webpack_require__(/*! @atproto/syntax */ \"(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/index.js\");\nconst types_1 = __webpack_require__(/*! ../types */ \"(ssr)/./node_modules/@atproto/lexicon/dist/types.js\");\nfunction datetime(path, value) {\n    try {\n        if (!(0, iso_datestring_validator_1.isValidISODateString)(value)) {\n            throw new Error();\n        }\n    }\n    catch {\n        return {\n            success: false,\n            error: new types_1.ValidationError(`${path} must be an valid atproto datetime (both RFC-3339 and ISO-8601)`),\n        };\n    }\n    return { success: true, value };\n}\nfunction uri(path, value) {\n    const isUri = value.match(/^\\w+:(?:\\/\\/)?[^\\s/][^\\s]*$/) !== null;\n    if (!isUri) {\n        return {\n            success: false,\n            error: new types_1.ValidationError(`${path} must be a uri`),\n        };\n    }\n    return { success: true, value };\n}\nfunction atUri(path, value) {\n    try {\n        (0, syntax_1.ensureValidAtUri)(value);\n    }\n    catch {\n        return {\n            success: false,\n            error: new types_1.ValidationError(`${path} must be a valid at-uri`),\n        };\n    }\n    return { success: true, value };\n}\nfunction did(path, value) {\n    try {\n        (0, syntax_1.ensureValidDid)(value);\n    }\n    catch {\n        return {\n            success: false,\n            error: new types_1.ValidationError(`${path} must be a valid did`),\n        };\n    }\n    return { success: true, value };\n}\nfunction handle(path, value) {\n    try {\n        (0, syntax_1.ensureValidHandle)(value);\n    }\n    catch {\n        return {\n            success: false,\n            error: new types_1.ValidationError(`${path} must be a valid handle`),\n        };\n    }\n    return { success: true, value };\n}\nfunction atIdentifier(path, value) {\n    // We can discriminate based on the \"did:\" prefix\n    if (value.startsWith('did:')) {\n        const didResult = did(path, value);\n        if (didResult.success)\n            return didResult;\n    }\n    else {\n        const handleResult = handle(path, value);\n        if (handleResult.success)\n            return handleResult;\n    }\n    return {\n        success: false,\n        error: new types_1.ValidationError(`${path} must be a valid did or a handle`),\n    };\n}\nfunction nsid(path, value) {\n    try {\n        (0, syntax_1.ensureValidNsid)(value);\n    }\n    catch {\n        return {\n            success: false,\n            error: new types_1.ValidationError(`${path} must be a valid nsid`),\n        };\n    }\n    return { success: true, value };\n}\nfunction cid(path, value) {\n    try {\n        cid_1.CID.parse(value);\n    }\n    catch {\n        return {\n            success: false,\n            error: new types_1.ValidationError(`${path} must be a cid string`),\n        };\n    }\n    return { success: true, value };\n}\n// The language format validates well-formed BCP 47 language tags: https://www.rfc-editor.org/info/bcp47\nfunction language(path, value) {\n    if ((0, common_web_1.validateLanguage)(value)) {\n        return { success: true, value };\n    }\n    return {\n        success: false,\n        error: new types_1.ValidationError(`${path} must be a well-formed BCP 47 language tag`),\n    };\n}\nfunction tid(path, value) {\n    if ((0, syntax_1.isValidTid)(value)) {\n        return { success: true, value };\n    }\n    return {\n        success: false,\n        error: new types_1.ValidationError(`${path} must be a valid TID`),\n    };\n}\nfunction recordKey(path, value) {\n    try {\n        (0, syntax_1.ensureValidRecordKey)(value);\n    }\n    catch {\n        return {\n            success: false,\n            error: new types_1.ValidationError(`${path} must be a valid Record Key`),\n        };\n    }\n    return { success: true, value };\n}\n//# sourceMappingURL=formats.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vbGV4aWNvbi9kaXN0L3ZhbGlkYXRvcnMvZm9ybWF0cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEIsV0FBVztBQUNYLGFBQWE7QUFDYixXQUFXO0FBQ1gsY0FBYztBQUNkLG9CQUFvQjtBQUNwQixZQUFZO0FBQ1osV0FBVztBQUNYLGdCQUFnQjtBQUNoQixXQUFXO0FBQ1gsaUJBQWlCO0FBQ2pCLG1DQUFtQyxtQkFBTyxDQUFDLDZGQUEwQjtBQUNyRSxjQUFjLG1CQUFPLENBQUMsMEVBQWtCO0FBQ3hDLHFCQUFxQixtQkFBTyxDQUFDLG1GQUFxQjtBQUNsRCxpQkFBaUIsbUJBQU8sQ0FBQyx5R0FBaUI7QUFDMUMsZ0JBQWdCLG1CQUFPLENBQUMscUVBQVU7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELE1BQU07QUFDeEQ7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsTUFBTTtBQUN4RDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsTUFBTTtBQUN4RDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsTUFBTTtBQUN4RDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsTUFBTTtBQUN4RDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxNQUFNO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxNQUFNO0FBQ3hEO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxNQUFNO0FBQ3hEO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsOENBQThDLE1BQU07QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsOENBQThDLE1BQU07QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELE1BQU07QUFDeEQ7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vbGV4aWNvbi9kaXN0L3ZhbGlkYXRvcnMvZm9ybWF0cy5qcz84ZjQ5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kYXRldGltZSA9IGRhdGV0aW1lO1xuZXhwb3J0cy51cmkgPSB1cmk7XG5leHBvcnRzLmF0VXJpID0gYXRVcmk7XG5leHBvcnRzLmRpZCA9IGRpZDtcbmV4cG9ydHMuaGFuZGxlID0gaGFuZGxlO1xuZXhwb3J0cy5hdElkZW50aWZpZXIgPSBhdElkZW50aWZpZXI7XG5leHBvcnRzLm5zaWQgPSBuc2lkO1xuZXhwb3J0cy5jaWQgPSBjaWQ7XG5leHBvcnRzLmxhbmd1YWdlID0gbGFuZ3VhZ2U7XG5leHBvcnRzLnRpZCA9IHRpZDtcbmV4cG9ydHMucmVjb3JkS2V5ID0gcmVjb3JkS2V5O1xuY29uc3QgaXNvX2RhdGVzdHJpbmdfdmFsaWRhdG9yXzEgPSByZXF1aXJlKFwiaXNvLWRhdGVzdHJpbmctdmFsaWRhdG9yXCIpO1xuY29uc3QgY2lkXzEgPSByZXF1aXJlKFwibXVsdGlmb3JtYXRzL2NpZFwiKTtcbmNvbnN0IGNvbW1vbl93ZWJfMSA9IHJlcXVpcmUoXCJAYXRwcm90by9jb21tb24td2ViXCIpO1xuY29uc3Qgc3ludGF4XzEgPSByZXF1aXJlKFwiQGF0cHJvdG8vc3ludGF4XCIpO1xuY29uc3QgdHlwZXNfMSA9IHJlcXVpcmUoXCIuLi90eXBlc1wiKTtcbmZ1bmN0aW9uIGRhdGV0aW1lKHBhdGgsIHZhbHVlKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKCEoMCwgaXNvX2RhdGVzdHJpbmdfdmFsaWRhdG9yXzEuaXNWYWxpZElTT0RhdGVTdHJpbmcpKHZhbHVlKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2F0Y2gge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgICBlcnJvcjogbmV3IHR5cGVzXzEuVmFsaWRhdGlvbkVycm9yKGAke3BhdGh9IG11c3QgYmUgYW4gdmFsaWQgYXRwcm90byBkYXRldGltZSAoYm90aCBSRkMtMzMzOSBhbmQgSVNPLTg2MDEpYCksXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUsIHZhbHVlIH07XG59XG5mdW5jdGlvbiB1cmkocGF0aCwgdmFsdWUpIHtcbiAgICBjb25zdCBpc1VyaSA9IHZhbHVlLm1hdGNoKC9eXFx3KzooPzpcXC9cXC8pP1teXFxzL11bXlxcc10qJC8pICE9PSBudWxsO1xuICAgIGlmICghaXNVcmkpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgZXJyb3I6IG5ldyB0eXBlc18xLlZhbGlkYXRpb25FcnJvcihgJHtwYXRofSBtdXN0IGJlIGEgdXJpYCksXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUsIHZhbHVlIH07XG59XG5mdW5jdGlvbiBhdFVyaShwYXRoLCB2YWx1ZSkge1xuICAgIHRyeSB7XG4gICAgICAgICgwLCBzeW50YXhfMS5lbnN1cmVWYWxpZEF0VXJpKSh2YWx1ZSk7XG4gICAgfVxuICAgIGNhdGNoIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgZXJyb3I6IG5ldyB0eXBlc18xLlZhbGlkYXRpb25FcnJvcihgJHtwYXRofSBtdXN0IGJlIGEgdmFsaWQgYXQtdXJpYCksXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUsIHZhbHVlIH07XG59XG5mdW5jdGlvbiBkaWQocGF0aCwgdmFsdWUpIHtcbiAgICB0cnkge1xuICAgICAgICAoMCwgc3ludGF4XzEuZW5zdXJlVmFsaWREaWQpKHZhbHVlKTtcbiAgICB9XG4gICAgY2F0Y2gge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgICBlcnJvcjogbmV3IHR5cGVzXzEuVmFsaWRhdGlvbkVycm9yKGAke3BhdGh9IG11c3QgYmUgYSB2YWxpZCBkaWRgKSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSwgdmFsdWUgfTtcbn1cbmZ1bmN0aW9uIGhhbmRsZShwYXRoLCB2YWx1ZSkge1xuICAgIHRyeSB7XG4gICAgICAgICgwLCBzeW50YXhfMS5lbnN1cmVWYWxpZEhhbmRsZSkodmFsdWUpO1xuICAgIH1cbiAgICBjYXRjaCB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICAgIGVycm9yOiBuZXcgdHlwZXNfMS5WYWxpZGF0aW9uRXJyb3IoYCR7cGF0aH0gbXVzdCBiZSBhIHZhbGlkIGhhbmRsZWApLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCB2YWx1ZSB9O1xufVxuZnVuY3Rpb24gYXRJZGVudGlmaWVyKHBhdGgsIHZhbHVlKSB7XG4gICAgLy8gV2UgY2FuIGRpc2NyaW1pbmF0ZSBiYXNlZCBvbiB0aGUgXCJkaWQ6XCIgcHJlZml4XG4gICAgaWYgKHZhbHVlLnN0YXJ0c1dpdGgoJ2RpZDonKSkge1xuICAgICAgICBjb25zdCBkaWRSZXN1bHQgPSBkaWQocGF0aCwgdmFsdWUpO1xuICAgICAgICBpZiAoZGlkUmVzdWx0LnN1Y2Nlc3MpXG4gICAgICAgICAgICByZXR1cm4gZGlkUmVzdWx0O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY29uc3QgaGFuZGxlUmVzdWx0ID0gaGFuZGxlKHBhdGgsIHZhbHVlKTtcbiAgICAgICAgaWYgKGhhbmRsZVJlc3VsdC5zdWNjZXNzKVxuICAgICAgICAgICAgcmV0dXJuIGhhbmRsZVJlc3VsdDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIGVycm9yOiBuZXcgdHlwZXNfMS5WYWxpZGF0aW9uRXJyb3IoYCR7cGF0aH0gbXVzdCBiZSBhIHZhbGlkIGRpZCBvciBhIGhhbmRsZWApLFxuICAgIH07XG59XG5mdW5jdGlvbiBuc2lkKHBhdGgsIHZhbHVlKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgKDAsIHN5bnRheF8xLmVuc3VyZVZhbGlkTnNpZCkodmFsdWUpO1xuICAgIH1cbiAgICBjYXRjaCB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICAgIGVycm9yOiBuZXcgdHlwZXNfMS5WYWxpZGF0aW9uRXJyb3IoYCR7cGF0aH0gbXVzdCBiZSBhIHZhbGlkIG5zaWRgKSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSwgdmFsdWUgfTtcbn1cbmZ1bmN0aW9uIGNpZChwYXRoLCB2YWx1ZSkge1xuICAgIHRyeSB7XG4gICAgICAgIGNpZF8xLkNJRC5wYXJzZSh2YWx1ZSk7XG4gICAgfVxuICAgIGNhdGNoIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgZXJyb3I6IG5ldyB0eXBlc18xLlZhbGlkYXRpb25FcnJvcihgJHtwYXRofSBtdXN0IGJlIGEgY2lkIHN0cmluZ2ApLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCB2YWx1ZSB9O1xufVxuLy8gVGhlIGxhbmd1YWdlIGZvcm1hdCB2YWxpZGF0ZXMgd2VsbC1mb3JtZWQgQkNQIDQ3IGxhbmd1YWdlIHRhZ3M6IGh0dHBzOi8vd3d3LnJmYy1lZGl0b3Iub3JnL2luZm8vYmNwNDdcbmZ1bmN0aW9uIGxhbmd1YWdlKHBhdGgsIHZhbHVlKSB7XG4gICAgaWYgKCgwLCBjb21tb25fd2ViXzEudmFsaWRhdGVMYW5ndWFnZSkodmFsdWUpKSB7XG4gICAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUsIHZhbHVlIH07XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBlcnJvcjogbmV3IHR5cGVzXzEuVmFsaWRhdGlvbkVycm9yKGAke3BhdGh9IG11c3QgYmUgYSB3ZWxsLWZvcm1lZCBCQ1AgNDcgbGFuZ3VhZ2UgdGFnYCksXG4gICAgfTtcbn1cbmZ1bmN0aW9uIHRpZChwYXRoLCB2YWx1ZSkge1xuICAgIGlmICgoMCwgc3ludGF4XzEuaXNWYWxpZFRpZCkodmFsdWUpKSB7XG4gICAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUsIHZhbHVlIH07XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBlcnJvcjogbmV3IHR5cGVzXzEuVmFsaWRhdGlvbkVycm9yKGAke3BhdGh9IG11c3QgYmUgYSB2YWxpZCBUSURgKSxcbiAgICB9O1xufVxuZnVuY3Rpb24gcmVjb3JkS2V5KHBhdGgsIHZhbHVlKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgKDAsIHN5bnRheF8xLmVuc3VyZVZhbGlkUmVjb3JkS2V5KSh2YWx1ZSk7XG4gICAgfVxuICAgIGNhdGNoIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgZXJyb3I6IG5ldyB0eXBlc18xLlZhbGlkYXRpb25FcnJvcihgJHtwYXRofSBtdXN0IGJlIGEgdmFsaWQgUmVjb3JkIEtleWApLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCB2YWx1ZSB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Zm9ybWF0cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/lexicon/dist/validators/formats.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/lexicon/dist/validators/primitives.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@atproto/lexicon/dist/validators/primitives.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.validate = validate;\nconst cid_1 = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/multiformats/cjs/src/cid.js\");\nconst common_web_1 = __webpack_require__(/*! @atproto/common-web */ \"(ssr)/./node_modules/@atproto/common-web/dist/index.js\");\nconst types_1 = __webpack_require__(/*! ../types */ \"(ssr)/./node_modules/@atproto/lexicon/dist/types.js\");\nconst formats = __importStar(__webpack_require__(/*! ./formats */ \"(ssr)/./node_modules/@atproto/lexicon/dist/validators/formats.js\"));\nfunction validate(lexicons, path, def, value) {\n    switch (def.type) {\n        case 'boolean':\n            return boolean(lexicons, path, def, value);\n        case 'integer':\n            return integer(lexicons, path, def, value);\n        case 'string':\n            return string(lexicons, path, def, value);\n        case 'bytes':\n            return bytes(lexicons, path, def, value);\n        case 'cid-link':\n            return cidLink(lexicons, path, def, value);\n        case 'unknown':\n            return unknown(lexicons, path, def, value);\n        default:\n            return {\n                success: false,\n                error: new types_1.ValidationError(`Unexpected lexicon type: ${def.type}`),\n            };\n    }\n}\nfunction boolean(lexicons, path, def, value) {\n    def = def;\n    // type\n    const type = typeof value;\n    if (type === 'undefined') {\n        if (typeof def.default === 'boolean') {\n            return { success: true, value: def.default };\n        }\n        return {\n            success: false,\n            error: new types_1.ValidationError(`${path} must be a boolean`),\n        };\n    }\n    else if (type !== 'boolean') {\n        return {\n            success: false,\n            error: new types_1.ValidationError(`${path} must be a boolean`),\n        };\n    }\n    // const\n    if (typeof def.const === 'boolean') {\n        if (value !== def.const) {\n            return {\n                success: false,\n                error: new types_1.ValidationError(`${path} must be ${def.const}`),\n            };\n        }\n    }\n    return { success: true, value };\n}\nfunction integer(lexicons, path, def, value) {\n    def = def;\n    // type\n    const type = typeof value;\n    if (type === 'undefined') {\n        if (typeof def.default === 'number') {\n            return { success: true, value: def.default };\n        }\n        return {\n            success: false,\n            error: new types_1.ValidationError(`${path} must be an integer`),\n        };\n    }\n    else if (!Number.isInteger(value)) {\n        return {\n            success: false,\n            error: new types_1.ValidationError(`${path} must be an integer`),\n        };\n    }\n    // const\n    if (typeof def.const === 'number') {\n        if (value !== def.const) {\n            return {\n                success: false,\n                error: new types_1.ValidationError(`${path} must be ${def.const}`),\n            };\n        }\n    }\n    // enum\n    if (Array.isArray(def.enum)) {\n        if (!def.enum.includes(value)) {\n            return {\n                success: false,\n                error: new types_1.ValidationError(`${path} must be one of (${def.enum.join('|')})`),\n            };\n        }\n    }\n    // maximum\n    if (typeof def.maximum === 'number') {\n        if (value > def.maximum) {\n            return {\n                success: false,\n                error: new types_1.ValidationError(`${path} can not be greater than ${def.maximum}`),\n            };\n        }\n    }\n    // minimum\n    if (typeof def.minimum === 'number') {\n        if (value < def.minimum) {\n            return {\n                success: false,\n                error: new types_1.ValidationError(`${path} can not be less than ${def.minimum}`),\n            };\n        }\n    }\n    return { success: true, value };\n}\nfunction string(lexicons, path, def, value) {\n    def = def;\n    // type\n    if (typeof value === 'undefined') {\n        if (typeof def.default === 'string') {\n            return { success: true, value: def.default };\n        }\n        return {\n            success: false,\n            error: new types_1.ValidationError(`${path} must be a string`),\n        };\n    }\n    else if (typeof value !== 'string') {\n        return {\n            success: false,\n            error: new types_1.ValidationError(`${path} must be a string`),\n        };\n    }\n    // const\n    if (typeof def.const === 'string') {\n        if (value !== def.const) {\n            return {\n                success: false,\n                error: new types_1.ValidationError(`${path} must be ${def.const}`),\n            };\n        }\n    }\n    // enum\n    if (Array.isArray(def.enum)) {\n        if (!def.enum.includes(value)) {\n            return {\n                success: false,\n                error: new types_1.ValidationError(`${path} must be one of (${def.enum.join('|')})`),\n            };\n        }\n    }\n    // maxLength and minLength\n    if (typeof def.minLength === 'number' || typeof def.maxLength === 'number') {\n        // If the JavaScript string length * 3 is below the maximum limit,\n        // its UTF8 length (which <= .length * 3) will also be below.\n        if (typeof def.minLength === 'number' && value.length * 3 < def.minLength) {\n            return {\n                success: false,\n                error: new types_1.ValidationError(`${path} must not be shorter than ${def.minLength} characters`),\n            };\n        }\n        // If the JavaScript string length * 3 is within the maximum limit,\n        // its UTF8 length (which <= .length * 3) will also be within.\n        // When there's no minimal length, this lets us skip the UTF8 length check.\n        let canSkipUtf8LenChecks = false;\n        if (typeof def.minLength === 'undefined' &&\n            typeof def.maxLength === 'number' &&\n            value.length * 3 <= def.maxLength) {\n            canSkipUtf8LenChecks = true;\n        }\n        if (!canSkipUtf8LenChecks) {\n            const len = (0, common_web_1.utf8Len)(value);\n            if (typeof def.maxLength === 'number') {\n                if (len > def.maxLength) {\n                    return {\n                        success: false,\n                        error: new types_1.ValidationError(`${path} must not be longer than ${def.maxLength} characters`),\n                    };\n                }\n            }\n            if (typeof def.minLength === 'number') {\n                if (len < def.minLength) {\n                    return {\n                        success: false,\n                        error: new types_1.ValidationError(`${path} must not be shorter than ${def.minLength} characters`),\n                    };\n                }\n            }\n        }\n    }\n    // maxGraphemes and minGraphemes\n    if (typeof def.maxGraphemes === 'number' ||\n        typeof def.minGraphemes === 'number') {\n        let needsMaxGraphemesCheck = false;\n        let needsMinGraphemesCheck = false;\n        if (typeof def.maxGraphemes === 'number') {\n            if (value.length <= def.maxGraphemes) {\n                // If the JavaScript string length (UTF-16) is within the maximum limit,\n                // its grapheme length (which <= .length) will also be within.\n                needsMaxGraphemesCheck = false;\n            }\n            else {\n                needsMaxGraphemesCheck = true;\n            }\n        }\n        if (typeof def.minGraphemes === 'number') {\n            if (value.length < def.minGraphemes) {\n                // If the JavaScript string length (UTF-16) is below the minimal limit,\n                // its grapheme length (which <= .length) will also be below.\n                // Fail early.\n                return {\n                    success: false,\n                    error: new types_1.ValidationError(`${path} must not be shorter than ${def.minGraphemes} graphemes`),\n                };\n            }\n            else {\n                needsMinGraphemesCheck = true;\n            }\n        }\n        if (needsMaxGraphemesCheck || needsMinGraphemesCheck) {\n            const len = (0, common_web_1.graphemeLen)(value);\n            if (typeof def.maxGraphemes === 'number') {\n                if (len > def.maxGraphemes) {\n                    return {\n                        success: false,\n                        error: new types_1.ValidationError(`${path} must not be longer than ${def.maxGraphemes} graphemes`),\n                    };\n                }\n            }\n            if (typeof def.minGraphemes === 'number') {\n                if (len < def.minGraphemes) {\n                    return {\n                        success: false,\n                        error: new types_1.ValidationError(`${path} must not be shorter than ${def.minGraphemes} graphemes`),\n                    };\n                }\n            }\n        }\n    }\n    if (typeof def.format === 'string') {\n        switch (def.format) {\n            case 'datetime':\n                return formats.datetime(path, value);\n            case 'uri':\n                return formats.uri(path, value);\n            case 'at-uri':\n                return formats.atUri(path, value);\n            case 'did':\n                return formats.did(path, value);\n            case 'handle':\n                return formats.handle(path, value);\n            case 'at-identifier':\n                return formats.atIdentifier(path, value);\n            case 'nsid':\n                return formats.nsid(path, value);\n            case 'cid':\n                return formats.cid(path, value);\n            case 'language':\n                return formats.language(path, value);\n            case 'tid':\n                return formats.tid(path, value);\n            case 'record-key':\n                return formats.recordKey(path, value);\n        }\n    }\n    return { success: true, value };\n}\nfunction bytes(lexicons, path, def, value) {\n    def = def;\n    if (!value || !(value instanceof Uint8Array)) {\n        return {\n            success: false,\n            error: new types_1.ValidationError(`${path} must be a byte array`),\n        };\n    }\n    // maxLength\n    if (typeof def.maxLength === 'number') {\n        if (value.byteLength > def.maxLength) {\n            return {\n                success: false,\n                error: new types_1.ValidationError(`${path} must not be larger than ${def.maxLength} bytes`),\n            };\n        }\n    }\n    // minLength\n    if (typeof def.minLength === 'number') {\n        if (value.byteLength < def.minLength) {\n            return {\n                success: false,\n                error: new types_1.ValidationError(`${path} must not be smaller than ${def.minLength} bytes`),\n            };\n        }\n    }\n    return { success: true, value };\n}\nfunction cidLink(lexicons, path, def, value) {\n    if (cid_1.CID.asCID(value) === null) {\n        return {\n            success: false,\n            error: new types_1.ValidationError(`${path} must be a CID`),\n        };\n    }\n    return { success: true, value };\n}\nfunction unknown(lexicons, path, def, value) {\n    // type\n    if (!value || typeof value !== 'object') {\n        return {\n            success: false,\n            error: new types_1.ValidationError(`${path} must be an object`),\n        };\n    }\n    return { success: true, value };\n}\n//# sourceMappingURL=primitives.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vbGV4aWNvbi9kaXN0L3ZhbGlkYXRvcnMvcHJpbWl0aXZlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsMENBQTBDLDRCQUE0QjtBQUN0RSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELGNBQWM7QUFDekU7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEIsY0FBYyxtQkFBTyxDQUFDLDBFQUFrQjtBQUN4QyxxQkFBcUIsbUJBQU8sQ0FBQyxtRkFBcUI7QUFDbEQsZ0JBQWdCLG1CQUFPLENBQUMscUVBQVU7QUFDbEMsNkJBQTZCLG1CQUFPLENBQUMsbUZBQVc7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtFQUErRSxTQUFTO0FBQ3hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsTUFBTTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELE1BQU07QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsTUFBTSxVQUFVLFVBQVU7QUFDaEY7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxNQUFNO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsTUFBTTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxNQUFNLFVBQVUsVUFBVTtBQUNoRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELE1BQU0sa0JBQWtCLG1CQUFtQjtBQUNqRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELE1BQU0sMEJBQTBCLFlBQVk7QUFDbEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxNQUFNLHVCQUF1QixZQUFZO0FBQy9GO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELE1BQU07QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxNQUFNO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELE1BQU0sVUFBVSxVQUFVO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsTUFBTSxrQkFBa0IsbUJBQW1CO0FBQ2pHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELE1BQU0sMkJBQTJCLGVBQWU7QUFDdEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RCxNQUFNLDBCQUEwQixlQUFlO0FBQzdHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThELE1BQU0sMkJBQTJCLGVBQWU7QUFDOUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBELE1BQU0sMkJBQTJCLGtCQUFrQjtBQUM3RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQsTUFBTSwwQkFBMEIsa0JBQWtCO0FBQ2hIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThELE1BQU0sMkJBQTJCLGtCQUFrQjtBQUNqSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsTUFBTTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxNQUFNLDBCQUEwQixlQUFlO0FBQ3JHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsTUFBTSwyQkFBMkIsZUFBZTtBQUN0RztBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxNQUFNO0FBQ3hEO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELE1BQU07QUFDeEQ7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vbGV4aWNvbi9kaXN0L3ZhbGlkYXRvcnMvcHJpbWl0aXZlcy5qcz83MDdmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBvd25LZXlzID0gZnVuY3Rpb24obykge1xuICAgICAgICBvd25LZXlzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMgfHwgZnVuY3Rpb24gKG8pIHtcbiAgICAgICAgICAgIHZhciBhciA9IFtdO1xuICAgICAgICAgICAgZm9yICh2YXIgayBpbiBvKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG8sIGspKSBhclthci5sZW5ndGhdID0gaztcbiAgICAgICAgICAgIHJldHVybiBhcjtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIG93bktleXMobyk7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKG1vZCkge1xuICAgICAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgICAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayA9IG93bktleXMobW9kKSwgaSA9IDA7IGkgPCBrLmxlbmd0aDsgaSsrKSBpZiAoa1tpXSAhPT0gXCJkZWZhdWx0XCIpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwga1tpXSk7XG4gICAgICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbn0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnZhbGlkYXRlID0gdmFsaWRhdGU7XG5jb25zdCBjaWRfMSA9IHJlcXVpcmUoXCJtdWx0aWZvcm1hdHMvY2lkXCIpO1xuY29uc3QgY29tbW9uX3dlYl8xID0gcmVxdWlyZShcIkBhdHByb3RvL2NvbW1vbi13ZWJcIik7XG5jb25zdCB0eXBlc18xID0gcmVxdWlyZShcIi4uL3R5cGVzXCIpO1xuY29uc3QgZm9ybWF0cyA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9mb3JtYXRzXCIpKTtcbmZ1bmN0aW9uIHZhbGlkYXRlKGxleGljb25zLCBwYXRoLCBkZWYsIHZhbHVlKSB7XG4gICAgc3dpdGNoIChkZWYudHlwZSkge1xuICAgICAgICBjYXNlICdib29sZWFuJzpcbiAgICAgICAgICAgIHJldHVybiBib29sZWFuKGxleGljb25zLCBwYXRoLCBkZWYsIHZhbHVlKTtcbiAgICAgICAgY2FzZSAnaW50ZWdlcic6XG4gICAgICAgICAgICByZXR1cm4gaW50ZWdlcihsZXhpY29ucywgcGF0aCwgZGVmLCB2YWx1ZSk7XG4gICAgICAgIGNhc2UgJ3N0cmluZyc6XG4gICAgICAgICAgICByZXR1cm4gc3RyaW5nKGxleGljb25zLCBwYXRoLCBkZWYsIHZhbHVlKTtcbiAgICAgICAgY2FzZSAnYnl0ZXMnOlxuICAgICAgICAgICAgcmV0dXJuIGJ5dGVzKGxleGljb25zLCBwYXRoLCBkZWYsIHZhbHVlKTtcbiAgICAgICAgY2FzZSAnY2lkLWxpbmsnOlxuICAgICAgICAgICAgcmV0dXJuIGNpZExpbmsobGV4aWNvbnMsIHBhdGgsIGRlZiwgdmFsdWUpO1xuICAgICAgICBjYXNlICd1bmtub3duJzpcbiAgICAgICAgICAgIHJldHVybiB1bmtub3duKGxleGljb25zLCBwYXRoLCBkZWYsIHZhbHVlKTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgICAgICAgZXJyb3I6IG5ldyB0eXBlc18xLlZhbGlkYXRpb25FcnJvcihgVW5leHBlY3RlZCBsZXhpY29uIHR5cGU6ICR7ZGVmLnR5cGV9YCksXG4gICAgICAgICAgICB9O1xuICAgIH1cbn1cbmZ1bmN0aW9uIGJvb2xlYW4obGV4aWNvbnMsIHBhdGgsIGRlZiwgdmFsdWUpIHtcbiAgICBkZWYgPSBkZWY7XG4gICAgLy8gdHlwZVxuICAgIGNvbnN0IHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gICAgaWYgKHR5cGUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZGVmLmRlZmF1bHQgPT09ICdib29sZWFuJykge1xuICAgICAgICAgICAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSwgdmFsdWU6IGRlZi5kZWZhdWx0IH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgZXJyb3I6IG5ldyB0eXBlc18xLlZhbGlkYXRpb25FcnJvcihgJHtwYXRofSBtdXN0IGJlIGEgYm9vbGVhbmApLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlICE9PSAnYm9vbGVhbicpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgZXJyb3I6IG5ldyB0eXBlc18xLlZhbGlkYXRpb25FcnJvcihgJHtwYXRofSBtdXN0IGJlIGEgYm9vbGVhbmApLFxuICAgICAgICB9O1xuICAgIH1cbiAgICAvLyBjb25zdFxuICAgIGlmICh0eXBlb2YgZGVmLmNvbnN0ID09PSAnYm9vbGVhbicpIHtcbiAgICAgICAgaWYgKHZhbHVlICE9PSBkZWYuY29uc3QpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgICAgICAgZXJyb3I6IG5ldyB0eXBlc18xLlZhbGlkYXRpb25FcnJvcihgJHtwYXRofSBtdXN0IGJlICR7ZGVmLmNvbnN0fWApLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCB2YWx1ZSB9O1xufVxuZnVuY3Rpb24gaW50ZWdlcihsZXhpY29ucywgcGF0aCwgZGVmLCB2YWx1ZSkge1xuICAgIGRlZiA9IGRlZjtcbiAgICAvLyB0eXBlXG4gICAgY29uc3QgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcbiAgICBpZiAodHlwZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBkZWYuZGVmYXVsdCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUsIHZhbHVlOiBkZWYuZGVmYXVsdCB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICAgIGVycm9yOiBuZXcgdHlwZXNfMS5WYWxpZGF0aW9uRXJyb3IoYCR7cGF0aH0gbXVzdCBiZSBhbiBpbnRlZ2VyYCksXG4gICAgICAgIH07XG4gICAgfVxuICAgIGVsc2UgaWYgKCFOdW1iZXIuaXNJbnRlZ2VyKHZhbHVlKSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgICBlcnJvcjogbmV3IHR5cGVzXzEuVmFsaWRhdGlvbkVycm9yKGAke3BhdGh9IG11c3QgYmUgYW4gaW50ZWdlcmApLFxuICAgICAgICB9O1xuICAgIH1cbiAgICAvLyBjb25zdFxuICAgIGlmICh0eXBlb2YgZGVmLmNvbnN0ID09PSAnbnVtYmVyJykge1xuICAgICAgICBpZiAodmFsdWUgIT09IGRlZi5jb25zdCkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBlcnJvcjogbmV3IHR5cGVzXzEuVmFsaWRhdGlvbkVycm9yKGAke3BhdGh9IG11c3QgYmUgJHtkZWYuY29uc3R9YCksXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIGVudW1cbiAgICBpZiAoQXJyYXkuaXNBcnJheShkZWYuZW51bSkpIHtcbiAgICAgICAgaWYgKCFkZWYuZW51bS5pbmNsdWRlcyh2YWx1ZSkpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgICAgICAgZXJyb3I6IG5ldyB0eXBlc18xLlZhbGlkYXRpb25FcnJvcihgJHtwYXRofSBtdXN0IGJlIG9uZSBvZiAoJHtkZWYuZW51bS5qb2luKCd8Jyl9KWApLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBtYXhpbXVtXG4gICAgaWYgKHR5cGVvZiBkZWYubWF4aW11bSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgaWYgKHZhbHVlID4gZGVmLm1heGltdW0pIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgICAgICAgZXJyb3I6IG5ldyB0eXBlc18xLlZhbGlkYXRpb25FcnJvcihgJHtwYXRofSBjYW4gbm90IGJlIGdyZWF0ZXIgdGhhbiAke2RlZi5tYXhpbXVtfWApLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBtaW5pbXVtXG4gICAgaWYgKHR5cGVvZiBkZWYubWluaW11bSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgaWYgKHZhbHVlIDwgZGVmLm1pbmltdW0pIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgICAgICAgZXJyb3I6IG5ldyB0eXBlc18xLlZhbGlkYXRpb25FcnJvcihgJHtwYXRofSBjYW4gbm90IGJlIGxlc3MgdGhhbiAke2RlZi5taW5pbXVtfWApLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCB2YWx1ZSB9O1xufVxuZnVuY3Rpb24gc3RyaW5nKGxleGljb25zLCBwYXRoLCBkZWYsIHZhbHVlKSB7XG4gICAgZGVmID0gZGVmO1xuICAgIC8vIHR5cGVcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICBpZiAodHlwZW9mIGRlZi5kZWZhdWx0ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSwgdmFsdWU6IGRlZi5kZWZhdWx0IH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgZXJyb3I6IG5ldyB0eXBlc18xLlZhbGlkYXRpb25FcnJvcihgJHtwYXRofSBtdXN0IGJlIGEgc3RyaW5nYCksXG4gICAgICAgIH07XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgZXJyb3I6IG5ldyB0eXBlc18xLlZhbGlkYXRpb25FcnJvcihgJHtwYXRofSBtdXN0IGJlIGEgc3RyaW5nYCksXG4gICAgICAgIH07XG4gICAgfVxuICAgIC8vIGNvbnN0XG4gICAgaWYgKHR5cGVvZiBkZWYuY29uc3QgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGlmICh2YWx1ZSAhPT0gZGVmLmNvbnN0KSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGVycm9yOiBuZXcgdHlwZXNfMS5WYWxpZGF0aW9uRXJyb3IoYCR7cGF0aH0gbXVzdCBiZSAke2RlZi5jb25zdH1gKSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gZW51bVxuICAgIGlmIChBcnJheS5pc0FycmF5KGRlZi5lbnVtKSkge1xuICAgICAgICBpZiAoIWRlZi5lbnVtLmluY2x1ZGVzKHZhbHVlKSkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBlcnJvcjogbmV3IHR5cGVzXzEuVmFsaWRhdGlvbkVycm9yKGAke3BhdGh9IG11c3QgYmUgb25lIG9mICgke2RlZi5lbnVtLmpvaW4oJ3wnKX0pYCksXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIG1heExlbmd0aCBhbmQgbWluTGVuZ3RoXG4gICAgaWYgKHR5cGVvZiBkZWYubWluTGVuZ3RoID09PSAnbnVtYmVyJyB8fCB0eXBlb2YgZGVmLm1heExlbmd0aCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgLy8gSWYgdGhlIEphdmFTY3JpcHQgc3RyaW5nIGxlbmd0aCAqIDMgaXMgYmVsb3cgdGhlIG1heGltdW0gbGltaXQsXG4gICAgICAgIC8vIGl0cyBVVEY4IGxlbmd0aCAod2hpY2ggPD0gLmxlbmd0aCAqIDMpIHdpbGwgYWxzbyBiZSBiZWxvdy5cbiAgICAgICAgaWYgKHR5cGVvZiBkZWYubWluTGVuZ3RoID09PSAnbnVtYmVyJyAmJiB2YWx1ZS5sZW5ndGggKiAzIDwgZGVmLm1pbkxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBlcnJvcjogbmV3IHR5cGVzXzEuVmFsaWRhdGlvbkVycm9yKGAke3BhdGh9IG11c3Qgbm90IGJlIHNob3J0ZXIgdGhhbiAke2RlZi5taW5MZW5ndGh9IGNoYXJhY3RlcnNgKSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgLy8gSWYgdGhlIEphdmFTY3JpcHQgc3RyaW5nIGxlbmd0aCAqIDMgaXMgd2l0aGluIHRoZSBtYXhpbXVtIGxpbWl0LFxuICAgICAgICAvLyBpdHMgVVRGOCBsZW5ndGggKHdoaWNoIDw9IC5sZW5ndGggKiAzKSB3aWxsIGFsc28gYmUgd2l0aGluLlxuICAgICAgICAvLyBXaGVuIHRoZXJlJ3Mgbm8gbWluaW1hbCBsZW5ndGgsIHRoaXMgbGV0cyB1cyBza2lwIHRoZSBVVEY4IGxlbmd0aCBjaGVjay5cbiAgICAgICAgbGV0IGNhblNraXBVdGY4TGVuQ2hlY2tzID0gZmFsc2U7XG4gICAgICAgIGlmICh0eXBlb2YgZGVmLm1pbkxlbmd0aCA9PT0gJ3VuZGVmaW5lZCcgJiZcbiAgICAgICAgICAgIHR5cGVvZiBkZWYubWF4TGVuZ3RoID09PSAnbnVtYmVyJyAmJlxuICAgICAgICAgICAgdmFsdWUubGVuZ3RoICogMyA8PSBkZWYubWF4TGVuZ3RoKSB7XG4gICAgICAgICAgICBjYW5Ta2lwVXRmOExlbkNoZWNrcyA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFjYW5Ta2lwVXRmOExlbkNoZWNrcykge1xuICAgICAgICAgICAgY29uc3QgbGVuID0gKDAsIGNvbW1vbl93ZWJfMS51dGY4TGVuKSh2YWx1ZSk7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGRlZi5tYXhMZW5ndGggPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgaWYgKGxlbiA+IGRlZi5tYXhMZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IG5ldyB0eXBlc18xLlZhbGlkYXRpb25FcnJvcihgJHtwYXRofSBtdXN0IG5vdCBiZSBsb25nZXIgdGhhbiAke2RlZi5tYXhMZW5ndGh9IGNoYXJhY3RlcnNgKSxcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodHlwZW9mIGRlZi5taW5MZW5ndGggPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgaWYgKGxlbiA8IGRlZi5taW5MZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IG5ldyB0eXBlc18xLlZhbGlkYXRpb25FcnJvcihgJHtwYXRofSBtdXN0IG5vdCBiZSBzaG9ydGVyIHRoYW4gJHtkZWYubWluTGVuZ3RofSBjaGFyYWN0ZXJzYCksXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC8vIG1heEdyYXBoZW1lcyBhbmQgbWluR3JhcGhlbWVzXG4gICAgaWYgKHR5cGVvZiBkZWYubWF4R3JhcGhlbWVzID09PSAnbnVtYmVyJyB8fFxuICAgICAgICB0eXBlb2YgZGVmLm1pbkdyYXBoZW1lcyA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgbGV0IG5lZWRzTWF4R3JhcGhlbWVzQ2hlY2sgPSBmYWxzZTtcbiAgICAgICAgbGV0IG5lZWRzTWluR3JhcGhlbWVzQ2hlY2sgPSBmYWxzZTtcbiAgICAgICAgaWYgKHR5cGVvZiBkZWYubWF4R3JhcGhlbWVzID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgaWYgKHZhbHVlLmxlbmd0aCA8PSBkZWYubWF4R3JhcGhlbWVzKSB7XG4gICAgICAgICAgICAgICAgLy8gSWYgdGhlIEphdmFTY3JpcHQgc3RyaW5nIGxlbmd0aCAoVVRGLTE2KSBpcyB3aXRoaW4gdGhlIG1heGltdW0gbGltaXQsXG4gICAgICAgICAgICAgICAgLy8gaXRzIGdyYXBoZW1lIGxlbmd0aCAod2hpY2ggPD0gLmxlbmd0aCkgd2lsbCBhbHNvIGJlIHdpdGhpbi5cbiAgICAgICAgICAgICAgICBuZWVkc01heEdyYXBoZW1lc0NoZWNrID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBuZWVkc01heEdyYXBoZW1lc0NoZWNrID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIGRlZi5taW5HcmFwaGVtZXMgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUubGVuZ3RoIDwgZGVmLm1pbkdyYXBoZW1lcykge1xuICAgICAgICAgICAgICAgIC8vIElmIHRoZSBKYXZhU2NyaXB0IHN0cmluZyBsZW5ndGggKFVURi0xNikgaXMgYmVsb3cgdGhlIG1pbmltYWwgbGltaXQsXG4gICAgICAgICAgICAgICAgLy8gaXRzIGdyYXBoZW1lIGxlbmd0aCAod2hpY2ggPD0gLmxlbmd0aCkgd2lsbCBhbHNvIGJlIGJlbG93LlxuICAgICAgICAgICAgICAgIC8vIEZhaWwgZWFybHkuXG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGVycm9yOiBuZXcgdHlwZXNfMS5WYWxpZGF0aW9uRXJyb3IoYCR7cGF0aH0gbXVzdCBub3QgYmUgc2hvcnRlciB0aGFuICR7ZGVmLm1pbkdyYXBoZW1lc30gZ3JhcGhlbWVzYCksXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIG5lZWRzTWluR3JhcGhlbWVzQ2hlY2sgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChuZWVkc01heEdyYXBoZW1lc0NoZWNrIHx8IG5lZWRzTWluR3JhcGhlbWVzQ2hlY2spIHtcbiAgICAgICAgICAgIGNvbnN0IGxlbiA9ICgwLCBjb21tb25fd2ViXzEuZ3JhcGhlbWVMZW4pKHZhbHVlKTtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgZGVmLm1heEdyYXBoZW1lcyA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgICAgICBpZiAobGVuID4gZGVmLm1heEdyYXBoZW1lcykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogbmV3IHR5cGVzXzEuVmFsaWRhdGlvbkVycm9yKGAke3BhdGh9IG11c3Qgbm90IGJlIGxvbmdlciB0aGFuICR7ZGVmLm1heEdyYXBoZW1lc30gZ3JhcGhlbWVzYCksXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHR5cGVvZiBkZWYubWluR3JhcGhlbWVzID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgICAgIGlmIChsZW4gPCBkZWYubWluR3JhcGhlbWVzKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBuZXcgdHlwZXNfMS5WYWxpZGF0aW9uRXJyb3IoYCR7cGF0aH0gbXVzdCBub3QgYmUgc2hvcnRlciB0aGFuICR7ZGVmLm1pbkdyYXBoZW1lc30gZ3JhcGhlbWVzYCksXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGlmICh0eXBlb2YgZGVmLmZvcm1hdCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgc3dpdGNoIChkZWYuZm9ybWF0KSB7XG4gICAgICAgICAgICBjYXNlICdkYXRldGltZSc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZvcm1hdHMuZGF0ZXRpbWUocGF0aCwgdmFsdWUpO1xuICAgICAgICAgICAgY2FzZSAndXJpJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gZm9ybWF0cy51cmkocGF0aCwgdmFsdWUpO1xuICAgICAgICAgICAgY2FzZSAnYXQtdXJpJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gZm9ybWF0cy5hdFVyaShwYXRoLCB2YWx1ZSk7XG4gICAgICAgICAgICBjYXNlICdkaWQnOlxuICAgICAgICAgICAgICAgIHJldHVybiBmb3JtYXRzLmRpZChwYXRoLCB2YWx1ZSk7XG4gICAgICAgICAgICBjYXNlICdoYW5kbGUnOlxuICAgICAgICAgICAgICAgIHJldHVybiBmb3JtYXRzLmhhbmRsZShwYXRoLCB2YWx1ZSk7XG4gICAgICAgICAgICBjYXNlICdhdC1pZGVudGlmaWVyJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gZm9ybWF0cy5hdElkZW50aWZpZXIocGF0aCwgdmFsdWUpO1xuICAgICAgICAgICAgY2FzZSAnbnNpZCc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZvcm1hdHMubnNpZChwYXRoLCB2YWx1ZSk7XG4gICAgICAgICAgICBjYXNlICdjaWQnOlxuICAgICAgICAgICAgICAgIHJldHVybiBmb3JtYXRzLmNpZChwYXRoLCB2YWx1ZSk7XG4gICAgICAgICAgICBjYXNlICdsYW5ndWFnZSc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZvcm1hdHMubGFuZ3VhZ2UocGF0aCwgdmFsdWUpO1xuICAgICAgICAgICAgY2FzZSAndGlkJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gZm9ybWF0cy50aWQocGF0aCwgdmFsdWUpO1xuICAgICAgICAgICAgY2FzZSAncmVjb3JkLWtleSc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZvcm1hdHMucmVjb3JkS2V5KHBhdGgsIHZhbHVlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCB2YWx1ZSB9O1xufVxuZnVuY3Rpb24gYnl0ZXMobGV4aWNvbnMsIHBhdGgsIGRlZiwgdmFsdWUpIHtcbiAgICBkZWYgPSBkZWY7XG4gICAgaWYgKCF2YWx1ZSB8fCAhKHZhbHVlIGluc3RhbmNlb2YgVWludDhBcnJheSkpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgZXJyb3I6IG5ldyB0eXBlc18xLlZhbGlkYXRpb25FcnJvcihgJHtwYXRofSBtdXN0IGJlIGEgYnl0ZSBhcnJheWApLFxuICAgICAgICB9O1xuICAgIH1cbiAgICAvLyBtYXhMZW5ndGhcbiAgICBpZiAodHlwZW9mIGRlZi5tYXhMZW5ndGggPT09ICdudW1iZXInKSB7XG4gICAgICAgIGlmICh2YWx1ZS5ieXRlTGVuZ3RoID4gZGVmLm1heExlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBlcnJvcjogbmV3IHR5cGVzXzEuVmFsaWRhdGlvbkVycm9yKGAke3BhdGh9IG11c3Qgbm90IGJlIGxhcmdlciB0aGFuICR7ZGVmLm1heExlbmd0aH0gYnl0ZXNgKSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gbWluTGVuZ3RoXG4gICAgaWYgKHR5cGVvZiBkZWYubWluTGVuZ3RoID09PSAnbnVtYmVyJykge1xuICAgICAgICBpZiAodmFsdWUuYnl0ZUxlbmd0aCA8IGRlZi5taW5MZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgICAgICAgZXJyb3I6IG5ldyB0eXBlc18xLlZhbGlkYXRpb25FcnJvcihgJHtwYXRofSBtdXN0IG5vdCBiZSBzbWFsbGVyIHRoYW4gJHtkZWYubWluTGVuZ3RofSBieXRlc2ApLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCB2YWx1ZSB9O1xufVxuZnVuY3Rpb24gY2lkTGluayhsZXhpY29ucywgcGF0aCwgZGVmLCB2YWx1ZSkge1xuICAgIGlmIChjaWRfMS5DSUQuYXNDSUQodmFsdWUpID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICAgIGVycm9yOiBuZXcgdHlwZXNfMS5WYWxpZGF0aW9uRXJyb3IoYCR7cGF0aH0gbXVzdCBiZSBhIENJRGApLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCB2YWx1ZSB9O1xufVxuZnVuY3Rpb24gdW5rbm93bihsZXhpY29ucywgcGF0aCwgZGVmLCB2YWx1ZSkge1xuICAgIC8vIHR5cGVcbiAgICBpZiAoIXZhbHVlIHx8IHR5cGVvZiB2YWx1ZSAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgZXJyb3I6IG5ldyB0eXBlc18xLlZhbGlkYXRpb25FcnJvcihgJHtwYXRofSBtdXN0IGJlIGFuIG9iamVjdGApLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCB2YWx1ZSB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJpbWl0aXZlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/lexicon/dist/validators/primitives.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/lexicon/dist/validators/xrpc.js":
/*!***************************************************************!*\
  !*** ./node_modules/@atproto/lexicon/dist/validators/xrpc.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.params = params;\nconst types_1 = __webpack_require__(/*! ../types */ \"(ssr)/./node_modules/@atproto/lexicon/dist/types.js\");\nconst complex_1 = __webpack_require__(/*! ./complex */ \"(ssr)/./node_modules/@atproto/lexicon/dist/validators/complex.js\");\nconst PrimitiveValidators = __importStar(__webpack_require__(/*! ./primitives */ \"(ssr)/./node_modules/@atproto/lexicon/dist/validators/primitives.js\"));\nfunction params(lexicons, path, def, val) {\n    // type\n    const value = val && typeof val === 'object' ? val : {};\n    const requiredProps = new Set(def.required ?? []);\n    // properties\n    let resultValue = value;\n    if (typeof def.properties === 'object') {\n        for (const key in def.properties) {\n            const propDef = def.properties[key];\n            const validated = propDef.type === 'array'\n                ? (0, complex_1.array)(lexicons, key, propDef, value[key])\n                : PrimitiveValidators.validate(lexicons, key, propDef, value[key]);\n            const propValue = validated.success ? validated.value : value[key];\n            const propIsUndefined = typeof propValue === 'undefined';\n            // Return error for bad validation, giving required rule precedence\n            if (propIsUndefined && requiredProps.has(key)) {\n                return {\n                    success: false,\n                    error: new types_1.ValidationError(`${path} must have the property \"${key}\"`),\n                };\n            }\n            else if (!propIsUndefined && !validated.success) {\n                return validated;\n            }\n            // Adjust value based on e.g. applied defaults, cloning shallowly if there was a changed value\n            if (propValue !== value[key]) {\n                if (resultValue === value) {\n                    // Lazy shallow clone\n                    resultValue = { ...value };\n                }\n                resultValue[key] = propValue;\n            }\n        }\n    }\n    return { success: true, value: resultValue };\n}\n//# sourceMappingURL=xrpc.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vbGV4aWNvbi9kaXN0L3ZhbGlkYXRvcnMveHJwYy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsMENBQTBDLDRCQUE0QjtBQUN0RSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELGNBQWM7QUFDekU7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2QsZ0JBQWdCLG1CQUFPLENBQUMscUVBQVU7QUFDbEMsa0JBQWtCLG1CQUFPLENBQUMsbUZBQVc7QUFDckMseUNBQXlDLG1CQUFPLENBQUMseUZBQWM7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBELE1BQU0sMEJBQTBCLElBQUk7QUFDOUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2xleGljb24vZGlzdC92YWxpZGF0b3JzL3hycGMuanM/OTZlZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgb3duS2V5cyA9IGZ1bmN0aW9uKG8pIHtcbiAgICAgICAgb3duS2V5cyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzIHx8IGZ1bmN0aW9uIChvKSB7XG4gICAgICAgICAgICB2YXIgYXIgPSBbXTtcbiAgICAgICAgICAgIGZvciAodmFyIGsgaW4gbykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvLCBrKSkgYXJbYXIubGVuZ3RoXSA9IGs7XG4gICAgICAgICAgICByZXR1cm4gYXI7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBvd25LZXlzKG8pO1xuICAgIH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChtb2QpIHtcbiAgICAgICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgICAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgPSBvd25LZXlzKG1vZCksIGkgPSAwOyBpIDwgay5sZW5ndGg7IGkrKykgaWYgKGtbaV0gIT09IFwiZGVmYXVsdFwiKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGtbaV0pO1xuICAgICAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH07XG59KSgpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5wYXJhbXMgPSBwYXJhbXM7XG5jb25zdCB0eXBlc18xID0gcmVxdWlyZShcIi4uL3R5cGVzXCIpO1xuY29uc3QgY29tcGxleF8xID0gcmVxdWlyZShcIi4vY29tcGxleFwiKTtcbmNvbnN0IFByaW1pdGl2ZVZhbGlkYXRvcnMgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vcHJpbWl0aXZlc1wiKSk7XG5mdW5jdGlvbiBwYXJhbXMobGV4aWNvbnMsIHBhdGgsIGRlZiwgdmFsKSB7XG4gICAgLy8gdHlwZVxuICAgIGNvbnN0IHZhbHVlID0gdmFsICYmIHR5cGVvZiB2YWwgPT09ICdvYmplY3QnID8gdmFsIDoge307XG4gICAgY29uc3QgcmVxdWlyZWRQcm9wcyA9IG5ldyBTZXQoZGVmLnJlcXVpcmVkID8/IFtdKTtcbiAgICAvLyBwcm9wZXJ0aWVzXG4gICAgbGV0IHJlc3VsdFZhbHVlID0gdmFsdWU7XG4gICAgaWYgKHR5cGVvZiBkZWYucHJvcGVydGllcyA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gZGVmLnByb3BlcnRpZXMpIHtcbiAgICAgICAgICAgIGNvbnN0IHByb3BEZWYgPSBkZWYucHJvcGVydGllc1trZXldO1xuICAgICAgICAgICAgY29uc3QgdmFsaWRhdGVkID0gcHJvcERlZi50eXBlID09PSAnYXJyYXknXG4gICAgICAgICAgICAgICAgPyAoMCwgY29tcGxleF8xLmFycmF5KShsZXhpY29ucywga2V5LCBwcm9wRGVmLCB2YWx1ZVtrZXldKVxuICAgICAgICAgICAgICAgIDogUHJpbWl0aXZlVmFsaWRhdG9ycy52YWxpZGF0ZShsZXhpY29ucywga2V5LCBwcm9wRGVmLCB2YWx1ZVtrZXldKTtcbiAgICAgICAgICAgIGNvbnN0IHByb3BWYWx1ZSA9IHZhbGlkYXRlZC5zdWNjZXNzID8gdmFsaWRhdGVkLnZhbHVlIDogdmFsdWVba2V5XTtcbiAgICAgICAgICAgIGNvbnN0IHByb3BJc1VuZGVmaW5lZCA9IHR5cGVvZiBwcm9wVmFsdWUgPT09ICd1bmRlZmluZWQnO1xuICAgICAgICAgICAgLy8gUmV0dXJuIGVycm9yIGZvciBiYWQgdmFsaWRhdGlvbiwgZ2l2aW5nIHJlcXVpcmVkIHJ1bGUgcHJlY2VkZW5jZVxuICAgICAgICAgICAgaWYgKHByb3BJc1VuZGVmaW5lZCAmJiByZXF1aXJlZFByb3BzLmhhcyhrZXkpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGVycm9yOiBuZXcgdHlwZXNfMS5WYWxpZGF0aW9uRXJyb3IoYCR7cGF0aH0gbXVzdCBoYXZlIHRoZSBwcm9wZXJ0eSBcIiR7a2V5fVwiYCksXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKCFwcm9wSXNVbmRlZmluZWQgJiYgIXZhbGlkYXRlZC5zdWNjZXNzKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbGlkYXRlZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIEFkanVzdCB2YWx1ZSBiYXNlZCBvbiBlLmcuIGFwcGxpZWQgZGVmYXVsdHMsIGNsb25pbmcgc2hhbGxvd2x5IGlmIHRoZXJlIHdhcyBhIGNoYW5nZWQgdmFsdWVcbiAgICAgICAgICAgIGlmIChwcm9wVmFsdWUgIT09IHZhbHVlW2tleV0pIHtcbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0VmFsdWUgPT09IHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIExhenkgc2hhbGxvdyBjbG9uZVxuICAgICAgICAgICAgICAgICAgICByZXN1bHRWYWx1ZSA9IHsgLi4udmFsdWUgfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmVzdWx0VmFsdWVba2V5XSA9IHByb3BWYWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCB2YWx1ZTogcmVzdWx0VmFsdWUgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXhycGMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/lexicon/dist/validators/xrpc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/aturi.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/aturi.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AtUri = exports.ATP_URI_REGEX = void 0;\n__exportStar(__webpack_require__(/*! ./aturi_validation */ \"(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/aturi_validation.js\"), exports);\nexports.ATP_URI_REGEX = \n// proto-    --did--------------   --name----------------   --path----   --query--   --hash--\n/^(at:\\/\\/)?((?:did:[a-z0-9:%-]+)|(?:[a-z0-9][a-z0-9.:-]*))(\\/[^?#\\s]*)?(\\?[^#\\s]+)?(#[^\\s]+)?$/i;\n//                       --path-----   --query--  --hash--\nconst RELATIVE_REGEX = /^(\\/[^?#\\s]*)?(\\?[^#\\s]+)?(#[^\\s]+)?$/i;\nclass AtUri {\n    constructor(uri, base) {\n        Object.defineProperty(this, \"hash\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"host\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"pathname\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"searchParams\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        let parsed;\n        if (base) {\n            parsed = parse(base);\n            if (!parsed) {\n                throw new Error(`Invalid at uri: ${base}`);\n            }\n            const relativep = parseRelative(uri);\n            if (!relativep) {\n                throw new Error(`Invalid path: ${uri}`);\n            }\n            Object.assign(parsed, relativep);\n        }\n        else {\n            parsed = parse(uri);\n            if (!parsed) {\n                throw new Error(`Invalid at uri: ${uri}`);\n            }\n        }\n        this.hash = parsed.hash;\n        this.host = parsed.host;\n        this.pathname = parsed.pathname;\n        this.searchParams = parsed.searchParams;\n    }\n    static make(handleOrDid, collection, rkey) {\n        let str = handleOrDid;\n        if (collection)\n            str += '/' + collection;\n        if (rkey)\n            str += '/' + rkey;\n        return new AtUri(str);\n    }\n    get protocol() {\n        return 'at:';\n    }\n    get origin() {\n        return `at://${this.host}`;\n    }\n    get hostname() {\n        return this.host;\n    }\n    set hostname(v) {\n        this.host = v;\n    }\n    get search() {\n        return this.searchParams.toString();\n    }\n    set search(v) {\n        this.searchParams = new URLSearchParams(v);\n    }\n    get collection() {\n        return this.pathname.split('/').filter(Boolean)[0] || '';\n    }\n    set collection(v) {\n        const parts = this.pathname.split('/').filter(Boolean);\n        parts[0] = v;\n        this.pathname = parts.join('/');\n    }\n    get rkey() {\n        return this.pathname.split('/').filter(Boolean)[1] || '';\n    }\n    set rkey(v) {\n        const parts = this.pathname.split('/').filter(Boolean);\n        if (!parts[0])\n            parts[0] = 'undefined';\n        parts[1] = v;\n        this.pathname = parts.join('/');\n    }\n    get href() {\n        return this.toString();\n    }\n    toString() {\n        let path = this.pathname || '/';\n        if (!path.startsWith('/')) {\n            path = `/${path}`;\n        }\n        let qs = this.searchParams.toString();\n        if (qs && !qs.startsWith('?')) {\n            qs = `?${qs}`;\n        }\n        let hash = this.hash;\n        if (hash && !hash.startsWith('#')) {\n            hash = `#${hash}`;\n        }\n        return `at://${this.host}${path}${qs}${hash}`;\n    }\n}\nexports.AtUri = AtUri;\nfunction parse(str) {\n    const match = exports.ATP_URI_REGEX.exec(str);\n    if (match) {\n        return {\n            hash: match[5] || '',\n            host: match[2] || '',\n            pathname: match[3] || '',\n            searchParams: new URLSearchParams(match[4] || ''),\n        };\n    }\n    return undefined;\n}\nfunction parseRelative(str) {\n    const match = RELATIVE_REGEX.exec(str);\n    if (match) {\n        return {\n            hash: match[3] || '',\n            pathname: match[1] || '',\n            searchParams: new URLSearchParams(match[2] || ''),\n        };\n    }\n    return undefined;\n}\n//# sourceMappingURL=aturi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/aturi.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/aturi_validation.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/aturi_validation.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ensureValidAtUriRegex = exports.ensureValidAtUri = void 0;\nconst did_1 = __webpack_require__(/*! ./did */ \"(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/did.js\");\nconst handle_1 = __webpack_require__(/*! ./handle */ \"(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/handle.js\");\nconst nsid_1 = __webpack_require__(/*! ./nsid */ \"(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/nsid.js\");\n// Human-readable constraints on ATURI:\n//   - following regular URLs, a 8KByte hard total length limit\n//   - follows ATURI docs on website\n//      - all ASCII characters, no whitespace. non-ASCII could be URL-encoded\n//      - starts \"at://\"\n//      - \"authority\" is a valid DID or a valid handle\n//      - optionally, follow \"authority\" with \"/\" and valid NSID as start of path\n//      - optionally, if NSID given, follow that with \"/\" and rkey\n//      - rkey path component can include URL-encoded (\"percent encoded\"), or:\n//          ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\" / \":\" / \"@\" / \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n//          [a-zA-Z0-9._~:@!$&'\\(\\)*+,;=-]\n//      - rkey must have at least one char\n//      - regardless of path component, a fragment can follow  as \"#\" and then a JSON pointer (RFC-6901)\nconst ensureValidAtUri = (uri) => {\n    // JSON pointer is pretty different from rest of URI, so split that out first\n    const uriParts = uri.split('#');\n    if (uriParts.length > 2) {\n        throw new Error('ATURI can have at most one \"#\", separating fragment out');\n    }\n    const fragmentPart = uriParts[1] || null;\n    uri = uriParts[0];\n    // check that all chars are boring ASCII\n    if (!/^[a-zA-Z0-9._~:@!$&')(*+,;=%/-]*$/.test(uri)) {\n        throw new Error('Disallowed characters in ATURI (ASCII)');\n    }\n    const parts = uri.split('/');\n    if (parts.length >= 3 && (parts[0] !== 'at:' || parts[1].length !== 0)) {\n        throw new Error('ATURI must start with \"at://\"');\n    }\n    if (parts.length < 3) {\n        throw new Error('ATURI requires at least method and authority sections');\n    }\n    try {\n        if (parts[2].startsWith('did:')) {\n            (0, did_1.ensureValidDid)(parts[2]);\n        }\n        else {\n            (0, handle_1.ensureValidHandle)(parts[2]);\n        }\n    }\n    catch {\n        throw new Error('ATURI authority must be a valid handle or DID');\n    }\n    if (parts.length >= 4) {\n        if (parts[3].length === 0) {\n            throw new Error('ATURI can not have a slash after authority without a path segment');\n        }\n        try {\n            (0, nsid_1.ensureValidNsid)(parts[3]);\n        }\n        catch {\n            throw new Error('ATURI requires first path segment (if supplied) to be valid NSID');\n        }\n    }\n    if (parts.length >= 5) {\n        if (parts[4].length === 0) {\n            throw new Error('ATURI can not have a slash after collection, unless record key is provided');\n        }\n        // would validate rkey here, but there are basically no constraints!\n    }\n    if (parts.length >= 6) {\n        throw new Error('ATURI path can have at most two parts, and no trailing slash');\n    }\n    if (uriParts.length >= 2 && fragmentPart == null) {\n        throw new Error('ATURI fragment must be non-empty and start with slash');\n    }\n    if (fragmentPart != null) {\n        if (fragmentPart.length === 0 || fragmentPart[0] !== '/') {\n            throw new Error('ATURI fragment must be non-empty and start with slash');\n        }\n        // NOTE: enforcing *some* checks here for sanity. Eg, at least no whitespace\n        if (!/^\\/[a-zA-Z0-9._~:@!$&')(*+,;=%[\\]/-]*$/.test(fragmentPart)) {\n            throw new Error('Disallowed characters in ATURI fragment (ASCII)');\n        }\n    }\n    if (uri.length > 8 * 1024) {\n        throw new Error('ATURI is far too long');\n    }\n};\nexports.ensureValidAtUri = ensureValidAtUri;\nconst ensureValidAtUriRegex = (uri) => {\n    // simple regex to enforce most constraints via just regex and length.\n    // hand wrote this regex based on above constraints. whew!\n    const aturiRegex = /^at:\\/\\/(?<authority>[a-zA-Z0-9._:%-]+)(\\/(?<collection>[a-zA-Z0-9-.]+)(\\/(?<rkey>[a-zA-Z0-9._~:@!$&%')(*+,;=-]+))?)?(#(?<fragment>\\/[a-zA-Z0-9._~:@!$&%')(*+,;=\\-[\\]/\\\\]*))?$/;\n    const rm = uri.match(aturiRegex);\n    if (!rm || !rm.groups) {\n        throw new Error(\"ATURI didn't validate via regex\");\n    }\n    const groups = rm.groups;\n    try {\n        (0, handle_1.ensureValidHandleRegex)(groups.authority);\n    }\n    catch {\n        try {\n            (0, did_1.ensureValidDidRegex)(groups.authority);\n        }\n        catch {\n            throw new Error('ATURI authority must be a valid handle or DID');\n        }\n    }\n    if (groups.collection) {\n        try {\n            (0, nsid_1.ensureValidNsidRegex)(groups.collection);\n        }\n        catch {\n            throw new Error('ATURI collection path segment must be a valid NSID');\n        }\n    }\n    if (uri.length > 8 * 1024) {\n        throw new Error('ATURI is far too long');\n    }\n};\nexports.ensureValidAtUriRegex = ensureValidAtUriRegex;\n//# sourceMappingURL=aturi_validation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/aturi_validation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/datetime.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/datetime.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InvalidDatetimeError = exports.normalizeDatetimeAlways = exports.normalizeDatetime = exports.isValidDatetime = exports.ensureValidDatetime = void 0;\n/* Validates datetime string against atproto Lexicon 'datetime' format.\n * Syntax is described at: https://atproto.com/specs/lexicon#datetime\n */\nconst ensureValidDatetime = (dtStr) => {\n    const date = new Date(dtStr);\n    // must parse as ISO 8601; this also verifies semantics like month is not 13 or 00\n    if (isNaN(date.getTime())) {\n        throw new InvalidDatetimeError('datetime did not parse as ISO 8601');\n    }\n    if (date.toISOString().startsWith('-')) {\n        throw new InvalidDatetimeError('datetime normalized to a negative time');\n    }\n    // regex and other checks for RFC-3339\n    if (!/^[0-9]{4}-[01][0-9]-[0-3][0-9]T[0-2][0-9]:[0-6][0-9]:[0-6][0-9](.[0-9]{1,20})?(Z|([+-][0-2][0-9]:[0-5][0-9]))$/.test(dtStr)) {\n        throw new InvalidDatetimeError(\"datetime didn't validate via regex\");\n    }\n    if (dtStr.length > 64) {\n        throw new InvalidDatetimeError('datetime is too long (64 chars max)');\n    }\n    if (dtStr.endsWith('-00:00')) {\n        throw new InvalidDatetimeError('datetime can not use \"-00:00\" for UTC timezone');\n    }\n    if (dtStr.startsWith('000')) {\n        throw new InvalidDatetimeError('datetime so close to year zero not allowed');\n    }\n};\nexports.ensureValidDatetime = ensureValidDatetime;\n/* Same logic as ensureValidDatetime(), but returns a boolean instead of throwing an exception.\n */\nconst isValidDatetime = (dtStr) => {\n    try {\n        (0, exports.ensureValidDatetime)(dtStr);\n    }\n    catch (err) {\n        if (err instanceof InvalidDatetimeError) {\n            return false;\n        }\n        throw err;\n    }\n    return true;\n};\nexports.isValidDatetime = isValidDatetime;\n/* Takes a flexible datetime string and normalizes representation.\n *\n * This function will work with any valid atproto datetime (eg, anything which isValidDatetime() is true for). It *additionally* is more flexible about accepting datetimes that don't comply to RFC 3339, or are missing timezone information, and normalizing them to a valid datetime.\n *\n * One use-case is a consistent, sortable string. Another is to work with older invalid createdAt datetimes.\n *\n * Successful output will be a valid atproto datetime with millisecond precision (3 sub-second digits) and UTC timezone with trailing 'Z' syntax. Throws `InvalidDatetimeError` if the input string could not be parsed as a datetime, even with permissive parsing.\n *\n * Expected output format: YYYY-MM-DDTHH:mm:ss.sssZ\n */\nconst normalizeDatetime = (dtStr) => {\n    if ((0, exports.isValidDatetime)(dtStr)) {\n        const outStr = new Date(dtStr).toISOString();\n        if ((0, exports.isValidDatetime)(outStr)) {\n            return outStr;\n        }\n    }\n    // check if this permissive datetime is missing a timezone\n    if (!/.*(([+-]\\d\\d:?\\d\\d)|[a-zA-Z])$/.test(dtStr)) {\n        const date = new Date(dtStr + 'Z');\n        if (!isNaN(date.getTime())) {\n            const tzStr = date.toISOString();\n            if ((0, exports.isValidDatetime)(tzStr)) {\n                return tzStr;\n            }\n        }\n    }\n    // finally try parsing as simple datetime\n    const date = new Date(dtStr);\n    if (isNaN(date.getTime())) {\n        throw new InvalidDatetimeError('datetime did not parse as any timestamp format');\n    }\n    const isoStr = date.toISOString();\n    if ((0, exports.isValidDatetime)(isoStr)) {\n        return isoStr;\n    }\n    else {\n        throw new InvalidDatetimeError('datetime normalized to invalid timestamp string');\n    }\n};\nexports.normalizeDatetime = normalizeDatetime;\n/* Variant of normalizeDatetime() which always returns a valid datetime strings.\n *\n * If a InvalidDatetimeError is encountered, returns the UNIX epoch time as a UTC datetime (1970-01-01T00:00:00.000Z).\n */\nconst normalizeDatetimeAlways = (dtStr) => {\n    try {\n        return (0, exports.normalizeDatetime)(dtStr);\n    }\n    catch (err) {\n        if (err instanceof InvalidDatetimeError) {\n            return new Date(0).toISOString();\n        }\n        throw err;\n    }\n};\nexports.normalizeDatetimeAlways = normalizeDatetimeAlways;\n/* Indicates a datetime string did not pass full atproto Lexicon datetime string format checks.\n */\nclass InvalidDatetimeError extends Error {\n}\nexports.InvalidDatetimeError = InvalidDatetimeError;\n//# sourceMappingURL=datetime.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vbGV4aWNvbi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vc3ludGF4L2Rpc3QvZGF0ZXRpbWUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCLEdBQUcsK0JBQStCLEdBQUcseUJBQXlCLEdBQUcsdUJBQXVCLEdBQUcsMkJBQTJCO0FBQ2xKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsRUFBRSw4REFBOEQsS0FBSztBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9sZXhpY29uL25vZGVfbW9kdWxlcy9AYXRwcm90by9zeW50YXgvZGlzdC9kYXRldGltZS5qcz81OWYxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JbnZhbGlkRGF0ZXRpbWVFcnJvciA9IGV4cG9ydHMubm9ybWFsaXplRGF0ZXRpbWVBbHdheXMgPSBleHBvcnRzLm5vcm1hbGl6ZURhdGV0aW1lID0gZXhwb3J0cy5pc1ZhbGlkRGF0ZXRpbWUgPSBleHBvcnRzLmVuc3VyZVZhbGlkRGF0ZXRpbWUgPSB2b2lkIDA7XG4vKiBWYWxpZGF0ZXMgZGF0ZXRpbWUgc3RyaW5nIGFnYWluc3QgYXRwcm90byBMZXhpY29uICdkYXRldGltZScgZm9ybWF0LlxuICogU3ludGF4IGlzIGRlc2NyaWJlZCBhdDogaHR0cHM6Ly9hdHByb3RvLmNvbS9zcGVjcy9sZXhpY29uI2RhdGV0aW1lXG4gKi9cbmNvbnN0IGVuc3VyZVZhbGlkRGF0ZXRpbWUgPSAoZHRTdHIpID0+IHtcbiAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoZHRTdHIpO1xuICAgIC8vIG11c3QgcGFyc2UgYXMgSVNPIDg2MDE7IHRoaXMgYWxzbyB2ZXJpZmllcyBzZW1hbnRpY3MgbGlrZSBtb250aCBpcyBub3QgMTMgb3IgMDBcbiAgICBpZiAoaXNOYU4oZGF0ZS5nZXRUaW1lKCkpKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkRGF0ZXRpbWVFcnJvcignZGF0ZXRpbWUgZGlkIG5vdCBwYXJzZSBhcyBJU08gODYwMScpO1xuICAgIH1cbiAgICBpZiAoZGF0ZS50b0lTT1N0cmluZygpLnN0YXJ0c1dpdGgoJy0nKSkge1xuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZERhdGV0aW1lRXJyb3IoJ2RhdGV0aW1lIG5vcm1hbGl6ZWQgdG8gYSBuZWdhdGl2ZSB0aW1lJyk7XG4gICAgfVxuICAgIC8vIHJlZ2V4IGFuZCBvdGhlciBjaGVja3MgZm9yIFJGQy0zMzM5XG4gICAgaWYgKCEvXlswLTldezR9LVswMV1bMC05XS1bMC0zXVswLTldVFswLTJdWzAtOV06WzAtNl1bMC05XTpbMC02XVswLTldKC5bMC05XXsxLDIwfSk/KFp8KFsrLV1bMC0yXVswLTldOlswLTVdWzAtOV0pKSQvLnRlc3QoZHRTdHIpKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkRGF0ZXRpbWVFcnJvcihcImRhdGV0aW1lIGRpZG4ndCB2YWxpZGF0ZSB2aWEgcmVnZXhcIik7XG4gICAgfVxuICAgIGlmIChkdFN0ci5sZW5ndGggPiA2NCkge1xuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZERhdGV0aW1lRXJyb3IoJ2RhdGV0aW1lIGlzIHRvbyBsb25nICg2NCBjaGFycyBtYXgpJyk7XG4gICAgfVxuICAgIGlmIChkdFN0ci5lbmRzV2l0aCgnLTAwOjAwJykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEludmFsaWREYXRldGltZUVycm9yKCdkYXRldGltZSBjYW4gbm90IHVzZSBcIi0wMDowMFwiIGZvciBVVEMgdGltZXpvbmUnKTtcbiAgICB9XG4gICAgaWYgKGR0U3RyLnN0YXJ0c1dpdGgoJzAwMCcpKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkRGF0ZXRpbWVFcnJvcignZGF0ZXRpbWUgc28gY2xvc2UgdG8geWVhciB6ZXJvIG5vdCBhbGxvd2VkJyk7XG4gICAgfVxufTtcbmV4cG9ydHMuZW5zdXJlVmFsaWREYXRldGltZSA9IGVuc3VyZVZhbGlkRGF0ZXRpbWU7XG4vKiBTYW1lIGxvZ2ljIGFzIGVuc3VyZVZhbGlkRGF0ZXRpbWUoKSwgYnV0IHJldHVybnMgYSBib29sZWFuIGluc3RlYWQgb2YgdGhyb3dpbmcgYW4gZXhjZXB0aW9uLlxuICovXG5jb25zdCBpc1ZhbGlkRGF0ZXRpbWUgPSAoZHRTdHIpID0+IHtcbiAgICB0cnkge1xuICAgICAgICAoMCwgZXhwb3J0cy5lbnN1cmVWYWxpZERhdGV0aW1lKShkdFN0cik7XG4gICAgfVxuICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgaWYgKGVyciBpbnN0YW5jZW9mIEludmFsaWREYXRldGltZUVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgZXJyO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn07XG5leHBvcnRzLmlzVmFsaWREYXRldGltZSA9IGlzVmFsaWREYXRldGltZTtcbi8qIFRha2VzIGEgZmxleGlibGUgZGF0ZXRpbWUgc3RyaW5nIGFuZCBub3JtYWxpemVzIHJlcHJlc2VudGF0aW9uLlxuICpcbiAqIFRoaXMgZnVuY3Rpb24gd2lsbCB3b3JrIHdpdGggYW55IHZhbGlkIGF0cHJvdG8gZGF0ZXRpbWUgKGVnLCBhbnl0aGluZyB3aGljaCBpc1ZhbGlkRGF0ZXRpbWUoKSBpcyB0cnVlIGZvcikuIEl0ICphZGRpdGlvbmFsbHkqIGlzIG1vcmUgZmxleGlibGUgYWJvdXQgYWNjZXB0aW5nIGRhdGV0aW1lcyB0aGF0IGRvbid0IGNvbXBseSB0byBSRkMgMzMzOSwgb3IgYXJlIG1pc3NpbmcgdGltZXpvbmUgaW5mb3JtYXRpb24sIGFuZCBub3JtYWxpemluZyB0aGVtIHRvIGEgdmFsaWQgZGF0ZXRpbWUuXG4gKlxuICogT25lIHVzZS1jYXNlIGlzIGEgY29uc2lzdGVudCwgc29ydGFibGUgc3RyaW5nLiBBbm90aGVyIGlzIHRvIHdvcmsgd2l0aCBvbGRlciBpbnZhbGlkIGNyZWF0ZWRBdCBkYXRldGltZXMuXG4gKlxuICogU3VjY2Vzc2Z1bCBvdXRwdXQgd2lsbCBiZSBhIHZhbGlkIGF0cHJvdG8gZGF0ZXRpbWUgd2l0aCBtaWxsaXNlY29uZCBwcmVjaXNpb24gKDMgc3ViLXNlY29uZCBkaWdpdHMpIGFuZCBVVEMgdGltZXpvbmUgd2l0aCB0cmFpbGluZyAnWicgc3ludGF4LiBUaHJvd3MgYEludmFsaWREYXRldGltZUVycm9yYCBpZiB0aGUgaW5wdXQgc3RyaW5nIGNvdWxkIG5vdCBiZSBwYXJzZWQgYXMgYSBkYXRldGltZSwgZXZlbiB3aXRoIHBlcm1pc3NpdmUgcGFyc2luZy5cbiAqXG4gKiBFeHBlY3RlZCBvdXRwdXQgZm9ybWF0OiBZWVlZLU1NLUREVEhIOm1tOnNzLnNzc1pcbiAqL1xuY29uc3Qgbm9ybWFsaXplRGF0ZXRpbWUgPSAoZHRTdHIpID0+IHtcbiAgICBpZiAoKDAsIGV4cG9ydHMuaXNWYWxpZERhdGV0aW1lKShkdFN0cikpIHtcbiAgICAgICAgY29uc3Qgb3V0U3RyID0gbmV3IERhdGUoZHRTdHIpLnRvSVNPU3RyaW5nKCk7XG4gICAgICAgIGlmICgoMCwgZXhwb3J0cy5pc1ZhbGlkRGF0ZXRpbWUpKG91dFN0cikpIHtcbiAgICAgICAgICAgIHJldHVybiBvdXRTdHI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gY2hlY2sgaWYgdGhpcyBwZXJtaXNzaXZlIGRhdGV0aW1lIGlzIG1pc3NpbmcgYSB0aW1lem9uZVxuICAgIGlmICghLy4qKChbKy1dXFxkXFxkOj9cXGRcXGQpfFthLXpBLVpdKSQvLnRlc3QoZHRTdHIpKSB7XG4gICAgICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShkdFN0ciArICdaJyk7XG4gICAgICAgIGlmICghaXNOYU4oZGF0ZS5nZXRUaW1lKCkpKSB7XG4gICAgICAgICAgICBjb25zdCB0elN0ciA9IGRhdGUudG9JU09TdHJpbmcoKTtcbiAgICAgICAgICAgIGlmICgoMCwgZXhwb3J0cy5pc1ZhbGlkRGF0ZXRpbWUpKHR6U3RyKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0elN0cjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBmaW5hbGx5IHRyeSBwYXJzaW5nIGFzIHNpbXBsZSBkYXRldGltZVxuICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShkdFN0cik7XG4gICAgaWYgKGlzTmFOKGRhdGUuZ2V0VGltZSgpKSkge1xuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZERhdGV0aW1lRXJyb3IoJ2RhdGV0aW1lIGRpZCBub3QgcGFyc2UgYXMgYW55IHRpbWVzdGFtcCBmb3JtYXQnKTtcbiAgICB9XG4gICAgY29uc3QgaXNvU3RyID0gZGF0ZS50b0lTT1N0cmluZygpO1xuICAgIGlmICgoMCwgZXhwb3J0cy5pc1ZhbGlkRGF0ZXRpbWUpKGlzb1N0cikpIHtcbiAgICAgICAgcmV0dXJuIGlzb1N0cjtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkRGF0ZXRpbWVFcnJvcignZGF0ZXRpbWUgbm9ybWFsaXplZCB0byBpbnZhbGlkIHRpbWVzdGFtcCBzdHJpbmcnKTtcbiAgICB9XG59O1xuZXhwb3J0cy5ub3JtYWxpemVEYXRldGltZSA9IG5vcm1hbGl6ZURhdGV0aW1lO1xuLyogVmFyaWFudCBvZiBub3JtYWxpemVEYXRldGltZSgpIHdoaWNoIGFsd2F5cyByZXR1cm5zIGEgdmFsaWQgZGF0ZXRpbWUgc3RyaW5ncy5cbiAqXG4gKiBJZiBhIEludmFsaWREYXRldGltZUVycm9yIGlzIGVuY291bnRlcmVkLCByZXR1cm5zIHRoZSBVTklYIGVwb2NoIHRpbWUgYXMgYSBVVEMgZGF0ZXRpbWUgKDE5NzAtMDEtMDFUMDA6MDA6MDAuMDAwWikuXG4gKi9cbmNvbnN0IG5vcm1hbGl6ZURhdGV0aW1lQWx3YXlzID0gKGR0U3RyKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuICgwLCBleHBvcnRzLm5vcm1hbGl6ZURhdGV0aW1lKShkdFN0cik7XG4gICAgfVxuICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgaWYgKGVyciBpbnN0YW5jZW9mIEludmFsaWREYXRldGltZUVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IERhdGUoMCkudG9JU09TdHJpbmcoKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBlcnI7XG4gICAgfVxufTtcbmV4cG9ydHMubm9ybWFsaXplRGF0ZXRpbWVBbHdheXMgPSBub3JtYWxpemVEYXRldGltZUFsd2F5cztcbi8qIEluZGljYXRlcyBhIGRhdGV0aW1lIHN0cmluZyBkaWQgbm90IHBhc3MgZnVsbCBhdHByb3RvIExleGljb24gZGF0ZXRpbWUgc3RyaW5nIGZvcm1hdCBjaGVja3MuXG4gKi9cbmNsYXNzIEludmFsaWREYXRldGltZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xufVxuZXhwb3J0cy5JbnZhbGlkRGF0ZXRpbWVFcnJvciA9IEludmFsaWREYXRldGltZUVycm9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0ZXRpbWUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/datetime.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/did.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/did.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InvalidDidError = exports.ensureValidDidRegex = exports.ensureValidDid = void 0;\n// Human-readable constraints:\n//   - valid W3C DID (https://www.w3.org/TR/did-core/#did-syntax)\n//      - entire URI is ASCII: [a-zA-Z0-9._:%-]\n//      - always starts \"did:\" (lower-case)\n//      - method name is one or more lower-case letters, followed by \":\"\n//      - remaining identifier can have any of the above chars, but can not end in \":\"\n//      - it seems that a bunch of \":\" can be included, and don't need spaces between\n//      - \"%\" is used only for \"percent encoding\" and must be followed by two hex characters (and thus can't end in \"%\")\n//      - query (\"?\") and fragment (\"#\") stuff is defined for \"DID URIs\", but not as part of identifier itself\n//      - \"The current specification does not take a position on the maximum length of a DID\"\n//   - in current atproto, only allowing did:plc and did:web. But not *forcing* this at lexicon layer\n//   - hard length limit of 8KBytes\n//   - not going to validate \"percent encoding\" here\nconst ensureValidDid = (did) => {\n    if (!did.startsWith('did:')) {\n        throw new InvalidDidError('DID requires \"did:\" prefix');\n    }\n    // check that all chars are boring ASCII\n    if (!/^[a-zA-Z0-9._:%-]*$/.test(did)) {\n        throw new InvalidDidError('Disallowed characters in DID (ASCII letters, digits, and a couple other characters only)');\n    }\n    const { length, 1: method } = did.split(':');\n    if (length < 3) {\n        throw new InvalidDidError('DID requires prefix, method, and method-specific content');\n    }\n    if (!/^[a-z]+$/.test(method)) {\n        throw new InvalidDidError('DID method must be lower-case letters');\n    }\n    if (did.endsWith(':') || did.endsWith('%')) {\n        throw new InvalidDidError('DID can not end with \":\" or \"%\"');\n    }\n    if (did.length > 2 * 1024) {\n        throw new InvalidDidError('DID is too long (2048 chars max)');\n    }\n};\nexports.ensureValidDid = ensureValidDid;\nconst ensureValidDidRegex = (did) => {\n    // simple regex to enforce most constraints via just regex and length.\n    // hand wrote this regex based on above constraints\n    if (!/^did:[a-z]+:[a-zA-Z0-9._:%-]*[a-zA-Z0-9._-]$/.test(did)) {\n        throw new InvalidDidError(\"DID didn't validate via regex\");\n    }\n    if (did.length > 2 * 1024) {\n        throw new InvalidDidError('DID is too long (2048 chars max)');\n    }\n};\nexports.ensureValidDidRegex = ensureValidDidRegex;\nclass InvalidDidError extends Error {\n}\nexports.InvalidDidError = InvalidDidError;\n//# sourceMappingURL=did.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vbGV4aWNvbi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vc3ludGF4L2Rpc3QvZGlkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QixHQUFHLDJCQUEyQixHQUFHLHNCQUFzQjtBQUM5RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG9CQUFvQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vbGV4aWNvbi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vc3ludGF4L2Rpc3QvZGlkLmpzP2I2ZDEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkludmFsaWREaWRFcnJvciA9IGV4cG9ydHMuZW5zdXJlVmFsaWREaWRSZWdleCA9IGV4cG9ydHMuZW5zdXJlVmFsaWREaWQgPSB2b2lkIDA7XG4vLyBIdW1hbi1yZWFkYWJsZSBjb25zdHJhaW50czpcbi8vICAgLSB2YWxpZCBXM0MgRElEIChodHRwczovL3d3dy53My5vcmcvVFIvZGlkLWNvcmUvI2RpZC1zeW50YXgpXG4vLyAgICAgIC0gZW50aXJlIFVSSSBpcyBBU0NJSTogW2EtekEtWjAtOS5fOiUtXVxuLy8gICAgICAtIGFsd2F5cyBzdGFydHMgXCJkaWQ6XCIgKGxvd2VyLWNhc2UpXG4vLyAgICAgIC0gbWV0aG9kIG5hbWUgaXMgb25lIG9yIG1vcmUgbG93ZXItY2FzZSBsZXR0ZXJzLCBmb2xsb3dlZCBieSBcIjpcIlxuLy8gICAgICAtIHJlbWFpbmluZyBpZGVudGlmaWVyIGNhbiBoYXZlIGFueSBvZiB0aGUgYWJvdmUgY2hhcnMsIGJ1dCBjYW4gbm90IGVuZCBpbiBcIjpcIlxuLy8gICAgICAtIGl0IHNlZW1zIHRoYXQgYSBidW5jaCBvZiBcIjpcIiBjYW4gYmUgaW5jbHVkZWQsIGFuZCBkb24ndCBuZWVkIHNwYWNlcyBiZXR3ZWVuXG4vLyAgICAgIC0gXCIlXCIgaXMgdXNlZCBvbmx5IGZvciBcInBlcmNlbnQgZW5jb2RpbmdcIiBhbmQgbXVzdCBiZSBmb2xsb3dlZCBieSB0d28gaGV4IGNoYXJhY3RlcnMgKGFuZCB0aHVzIGNhbid0IGVuZCBpbiBcIiVcIilcbi8vICAgICAgLSBxdWVyeSAoXCI/XCIpIGFuZCBmcmFnbWVudCAoXCIjXCIpIHN0dWZmIGlzIGRlZmluZWQgZm9yIFwiRElEIFVSSXNcIiwgYnV0IG5vdCBhcyBwYXJ0IG9mIGlkZW50aWZpZXIgaXRzZWxmXG4vLyAgICAgIC0gXCJUaGUgY3VycmVudCBzcGVjaWZpY2F0aW9uIGRvZXMgbm90IHRha2UgYSBwb3NpdGlvbiBvbiB0aGUgbWF4aW11bSBsZW5ndGggb2YgYSBESURcIlxuLy8gICAtIGluIGN1cnJlbnQgYXRwcm90bywgb25seSBhbGxvd2luZyBkaWQ6cGxjIGFuZCBkaWQ6d2ViLiBCdXQgbm90ICpmb3JjaW5nKiB0aGlzIGF0IGxleGljb24gbGF5ZXJcbi8vICAgLSBoYXJkIGxlbmd0aCBsaW1pdCBvZiA4S0J5dGVzXG4vLyAgIC0gbm90IGdvaW5nIHRvIHZhbGlkYXRlIFwicGVyY2VudCBlbmNvZGluZ1wiIGhlcmVcbmNvbnN0IGVuc3VyZVZhbGlkRGlkID0gKGRpZCkgPT4ge1xuICAgIGlmICghZGlkLnN0YXJ0c1dpdGgoJ2RpZDonKSkge1xuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZERpZEVycm9yKCdESUQgcmVxdWlyZXMgXCJkaWQ6XCIgcHJlZml4Jyk7XG4gICAgfVxuICAgIC8vIGNoZWNrIHRoYXQgYWxsIGNoYXJzIGFyZSBib3JpbmcgQVNDSUlcbiAgICBpZiAoIS9eW2EtekEtWjAtOS5fOiUtXSokLy50ZXN0KGRpZCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEludmFsaWREaWRFcnJvcignRGlzYWxsb3dlZCBjaGFyYWN0ZXJzIGluIERJRCAoQVNDSUkgbGV0dGVycywgZGlnaXRzLCBhbmQgYSBjb3VwbGUgb3RoZXIgY2hhcmFjdGVycyBvbmx5KScpO1xuICAgIH1cbiAgICBjb25zdCB7IGxlbmd0aCwgMTogbWV0aG9kIH0gPSBkaWQuc3BsaXQoJzonKTtcbiAgICBpZiAobGVuZ3RoIDwgMykge1xuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZERpZEVycm9yKCdESUQgcmVxdWlyZXMgcHJlZml4LCBtZXRob2QsIGFuZCBtZXRob2Qtc3BlY2lmaWMgY29udGVudCcpO1xuICAgIH1cbiAgICBpZiAoIS9eW2Etel0rJC8udGVzdChtZXRob2QpKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkRGlkRXJyb3IoJ0RJRCBtZXRob2QgbXVzdCBiZSBsb3dlci1jYXNlIGxldHRlcnMnKTtcbiAgICB9XG4gICAgaWYgKGRpZC5lbmRzV2l0aCgnOicpIHx8IGRpZC5lbmRzV2l0aCgnJScpKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkRGlkRXJyb3IoJ0RJRCBjYW4gbm90IGVuZCB3aXRoIFwiOlwiIG9yIFwiJVwiJyk7XG4gICAgfVxuICAgIGlmIChkaWQubGVuZ3RoID4gMiAqIDEwMjQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEludmFsaWREaWRFcnJvcignRElEIGlzIHRvbyBsb25nICgyMDQ4IGNoYXJzIG1heCknKTtcbiAgICB9XG59O1xuZXhwb3J0cy5lbnN1cmVWYWxpZERpZCA9IGVuc3VyZVZhbGlkRGlkO1xuY29uc3QgZW5zdXJlVmFsaWREaWRSZWdleCA9IChkaWQpID0+IHtcbiAgICAvLyBzaW1wbGUgcmVnZXggdG8gZW5mb3JjZSBtb3N0IGNvbnN0cmFpbnRzIHZpYSBqdXN0IHJlZ2V4IGFuZCBsZW5ndGguXG4gICAgLy8gaGFuZCB3cm90ZSB0aGlzIHJlZ2V4IGJhc2VkIG9uIGFib3ZlIGNvbnN0cmFpbnRzXG4gICAgaWYgKCEvXmRpZDpbYS16XSs6W2EtekEtWjAtOS5fOiUtXSpbYS16QS1aMC05Ll8tXSQvLnRlc3QoZGlkKSkge1xuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZERpZEVycm9yKFwiRElEIGRpZG4ndCB2YWxpZGF0ZSB2aWEgcmVnZXhcIik7XG4gICAgfVxuICAgIGlmIChkaWQubGVuZ3RoID4gMiAqIDEwMjQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEludmFsaWREaWRFcnJvcignRElEIGlzIHRvbyBsb25nICgyMDQ4IGNoYXJzIG1heCknKTtcbiAgICB9XG59O1xuZXhwb3J0cy5lbnN1cmVWYWxpZERpZFJlZ2V4ID0gZW5zdXJlVmFsaWREaWRSZWdleDtcbmNsYXNzIEludmFsaWREaWRFcnJvciBleHRlbmRzIEVycm9yIHtcbn1cbmV4cG9ydHMuSW52YWxpZERpZEVycm9yID0gSW52YWxpZERpZEVycm9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGlkLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/did.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/handle.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/handle.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DisallowedDomainError = exports.UnsupportedDomainError = exports.ReservedHandleError = exports.InvalidHandleError = exports.isValidTld = exports.isValidHandle = exports.normalizeAndEnsureValidHandle = exports.normalizeHandle = exports.ensureValidHandleRegex = exports.ensureValidHandle = exports.DISALLOWED_TLDS = exports.INVALID_HANDLE = void 0;\nexports.INVALID_HANDLE = 'handle.invalid';\n// Currently these are registration-time restrictions, not protocol-level\n// restrictions. We have a couple accounts in the wild that we need to clean up\n// before hard-disallow.\n// See also: https://en.wikipedia.org/wiki/Top-level_domain#Reserved_domains\nexports.DISALLOWED_TLDS = [\n    '.local',\n    '.arpa',\n    '.invalid',\n    '.localhost',\n    '.internal',\n    '.example',\n    '.alt',\n    // policy could concievably change on \".onion\" some day\n    '.onion',\n    // NOTE: .test is allowed in testing and devopment. In practical terms\n    // \"should\" \"never\" actually resolve and get registered in production\n];\n// Handle constraints, in English:\n//  - must be a possible domain name\n//    - RFC-1035 is commonly referenced, but has been updated. eg, RFC-3696,\n//      section 2. and RFC-3986, section 3. can now have leading numbers (eg,\n//      4chan.org)\n//    - \"labels\" (sub-names) are made of ASCII letters, digits, hyphens\n//    - can not start or end with a hyphen\n//    - TLD (last component) should not start with a digit\n//    - can't end with a hyphen (can end with digit)\n//    - each segment must be between 1 and 63 characters (not including any periods)\n//    - overall length can't be more than 253 characters\n//    - separated by (ASCII) periods; does not start or end with period\n//    - case insensitive\n//    - domains (handles) are equal if they are the same lower-case\n//    - punycode allowed for internationalization\n//  - no whitespace, null bytes, joining chars, etc\n//  - does not validate whether domain or TLD exists, or is a reserved or\n//    special TLD (eg, .onion or .local)\n//  - does not validate punycode\nconst ensureValidHandle = (handle) => {\n    // check that all chars are boring ASCII\n    if (!/^[a-zA-Z0-9.-]*$/.test(handle)) {\n        throw new InvalidHandleError('Disallowed characters in handle (ASCII letters, digits, dashes, periods only)');\n    }\n    if (handle.length > 253) {\n        throw new InvalidHandleError('Handle is too long (253 chars max)');\n    }\n    const labels = handle.split('.');\n    if (labels.length < 2) {\n        throw new InvalidHandleError('Handle domain needs at least two parts');\n    }\n    for (let i = 0; i < labels.length; i++) {\n        const l = labels[i];\n        if (l.length < 1) {\n            throw new InvalidHandleError('Handle parts can not be empty');\n        }\n        if (l.length > 63) {\n            throw new InvalidHandleError('Handle part too long (max 63 chars)');\n        }\n        if (l.endsWith('-') || l.startsWith('-')) {\n            throw new InvalidHandleError('Handle parts can not start or end with hyphens');\n        }\n        if (i + 1 === labels.length && !/^[a-zA-Z]/.test(l)) {\n            throw new InvalidHandleError('Handle final component (TLD) must start with ASCII letter');\n        }\n    }\n};\nexports.ensureValidHandle = ensureValidHandle;\n// simple regex translation of above constraints\nconst ensureValidHandleRegex = (handle) => {\n    if (!/^([a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?$/.test(handle)) {\n        throw new InvalidHandleError(\"Handle didn't validate via regex\");\n    }\n    if (handle.length > 253) {\n        throw new InvalidHandleError('Handle is too long (253 chars max)');\n    }\n};\nexports.ensureValidHandleRegex = ensureValidHandleRegex;\nconst normalizeHandle = (handle) => {\n    return handle.toLowerCase();\n};\nexports.normalizeHandle = normalizeHandle;\nconst normalizeAndEnsureValidHandle = (handle) => {\n    const normalized = (0, exports.normalizeHandle)(handle);\n    (0, exports.ensureValidHandle)(normalized);\n    return normalized;\n};\nexports.normalizeAndEnsureValidHandle = normalizeAndEnsureValidHandle;\nconst isValidHandle = (handle) => {\n    try {\n        (0, exports.ensureValidHandle)(handle);\n    }\n    catch (err) {\n        if (err instanceof InvalidHandleError) {\n            return false;\n        }\n        throw err;\n    }\n    return true;\n};\nexports.isValidHandle = isValidHandle;\nconst isValidTld = (handle) => {\n    return !exports.DISALLOWED_TLDS.some((domain) => handle.endsWith(domain));\n};\nexports.isValidTld = isValidTld;\nclass InvalidHandleError extends Error {\n}\nexports.InvalidHandleError = InvalidHandleError;\n/** @deprecated Never used */\nclass ReservedHandleError extends Error {\n}\nexports.ReservedHandleError = ReservedHandleError;\n/** @deprecated Never used */\nclass UnsupportedDomainError extends Error {\n}\nexports.UnsupportedDomainError = UnsupportedDomainError;\n/** @deprecated Never used */\nclass DisallowedDomainError extends Error {\n}\nexports.DisallowedDomainError = DisallowedDomainError;\n//# sourceMappingURL=handle.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/handle.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/index.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./handle */ \"(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/handle.js\"), exports);\n__exportStar(__webpack_require__(/*! ./did */ \"(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/did.js\"), exports);\n__exportStar(__webpack_require__(/*! ./nsid */ \"(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/nsid.js\"), exports);\n__exportStar(__webpack_require__(/*! ./aturi */ \"(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/aturi.js\"), exports);\n__exportStar(__webpack_require__(/*! ./tid */ \"(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/tid.js\"), exports);\n__exportStar(__webpack_require__(/*! ./recordkey */ \"(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/recordkey.js\"), exports);\n__exportStar(__webpack_require__(/*! ./datetime */ \"(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/datetime.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vbGV4aWNvbi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vc3ludGF4L2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxtQkFBTyxDQUFDLG1HQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyw2RkFBTztBQUM1QixhQUFhLG1CQUFPLENBQUMsK0ZBQVE7QUFDN0IsYUFBYSxtQkFBTyxDQUFDLGlHQUFTO0FBQzlCLGFBQWEsbUJBQU8sQ0FBQyw2RkFBTztBQUM1QixhQUFhLG1CQUFPLENBQUMseUdBQWE7QUFDbEMsYUFBYSxtQkFBTyxDQUFDLHVHQUFZO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vbGV4aWNvbi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vc3ludGF4L2Rpc3QvaW5kZXguanM/Y2Y1NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2hhbmRsZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZGlkXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9uc2lkXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hdHVyaVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdGlkXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9yZWNvcmRrZXlcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2RhdGV0aW1lXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/nsid.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/nsid.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\nGrammar:\n\nalpha     = \"a\" / \"b\" / \"c\" / \"d\" / \"e\" / \"f\" / \"g\" / \"h\" / \"i\" / \"j\" / \"k\" / \"l\" / \"m\" / \"n\" / \"o\" / \"p\" / \"q\" / \"r\" / \"s\" / \"t\" / \"u\" / \"v\" / \"w\" / \"x\" / \"y\" / \"z\" / \"A\" / \"B\" / \"C\" / \"D\" / \"E\" / \"F\" / \"G\" / \"H\" / \"I\" / \"J\" / \"K\" / \"L\" / \"M\" / \"N\" / \"O\" / \"P\" / \"Q\" / \"R\" / \"S\" / \"T\" / \"U\" / \"V\" / \"W\" / \"X\" / \"Y\" / \"Z\"\nnumber    = \"1\" / \"2\" / \"3\" / \"4\" / \"5\" / \"6\" / \"7\" / \"8\" / \"9\" / \"0\"\ndelim     = \".\"\nsegment   = alpha *( alpha / number / \"-\" )\nauthority = segment *( delim segment )\nname      = alpha *( alpha )\nnsid      = authority delim name\n\n*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InvalidNsidError = exports.ensureValidNsidRegex = exports.ensureValidNsid = exports.NSID = void 0;\nclass NSID {\n    static parse(nsid) {\n        return new NSID(nsid);\n    }\n    static create(authority, name) {\n        const segments = [...authority.split('.').reverse(), name].join('.');\n        return new NSID(segments);\n    }\n    static isValid(nsid) {\n        try {\n            NSID.parse(nsid);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    constructor(nsid) {\n        Object.defineProperty(this, \"segments\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        (0, exports.ensureValidNsid)(nsid);\n        this.segments = nsid.split('.');\n    }\n    get authority() {\n        return this.segments\n            .slice(0, this.segments.length - 1)\n            .reverse()\n            .join('.');\n    }\n    get name() {\n        return this.segments.at(this.segments.length - 1);\n    }\n    toString() {\n        return this.segments.join('.');\n    }\n}\nexports.NSID = NSID;\n// Human readable constraints on NSID:\n// - a valid domain in reversed notation\n// - followed by an additional period-separated name, which is camel-case letters\nconst ensureValidNsid = (nsid) => {\n    const toCheck = nsid;\n    // check that all chars are boring ASCII\n    if (!/^[a-zA-Z0-9.-]*$/.test(toCheck)) {\n        throw new InvalidNsidError('Disallowed characters in NSID (ASCII letters, digits, dashes, periods only)');\n    }\n    if (toCheck.length > 253 + 1 + 63) {\n        throw new InvalidNsidError('NSID is too long (317 chars max)');\n    }\n    const labels = toCheck.split('.');\n    if (labels.length < 3) {\n        throw new InvalidNsidError('NSID needs at least three parts');\n    }\n    for (let i = 0; i < labels.length; i++) {\n        const l = labels[i];\n        if (l.length < 1) {\n            throw new InvalidNsidError('NSID parts can not be empty');\n        }\n        if (l.length > 63) {\n            throw new InvalidNsidError('NSID part too long (max 63 chars)');\n        }\n        if (l.endsWith('-') || l.startsWith('-')) {\n            throw new InvalidNsidError('NSID parts can not start or end with hyphen');\n        }\n        if (/^[0-9]/.test(l) && i === 0) {\n            throw new InvalidNsidError('NSID first part may not start with a digit');\n        }\n        if (!/^[a-zA-Z][a-zA-Z0-9]*$/.test(l) && i + 1 === labels.length) {\n            throw new InvalidNsidError('NSID name part must be only letters and digits (and no leading digit)');\n        }\n    }\n};\nexports.ensureValidNsid = ensureValidNsid;\nconst ensureValidNsidRegex = (nsid) => {\n    // simple regex to enforce most constraints via just regex and length.\n    // hand wrote this regex based on above constraints\n    if (!/^[a-zA-Z]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(\\.[a-zA-Z]([a-zA-Z0-9]{0,62})?)$/.test(nsid)) {\n        throw new InvalidNsidError(\"NSID didn't validate via regex\");\n    }\n    if (nsid.length > 253 + 1 + 63) {\n        throw new InvalidNsidError('NSID is too long (317 chars max)');\n    }\n};\nexports.ensureValidNsidRegex = ensureValidNsidRegex;\nclass InvalidNsidError extends Error {\n}\nexports.InvalidNsidError = InvalidNsidError;\n//# sourceMappingURL=nsid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vbGV4aWNvbi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vc3ludGF4L2Rpc3QvbnNpZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCLEdBQUcsNEJBQTRCLEdBQUcsdUJBQXVCLEdBQUcsWUFBWTtBQUNoRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG1CQUFtQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLEtBQUsseUNBQXlDLEtBQUssdUNBQXVDLEtBQUs7QUFDaEk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9sZXhpY29uL25vZGVfbW9kdWxlcy9AYXRwcm90by9zeW50YXgvZGlzdC9uc2lkLmpzPzZmYzQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuR3JhbW1hcjpcblxuYWxwaGEgICAgID0gXCJhXCIgLyBcImJcIiAvIFwiY1wiIC8gXCJkXCIgLyBcImVcIiAvIFwiZlwiIC8gXCJnXCIgLyBcImhcIiAvIFwiaVwiIC8gXCJqXCIgLyBcImtcIiAvIFwibFwiIC8gXCJtXCIgLyBcIm5cIiAvIFwib1wiIC8gXCJwXCIgLyBcInFcIiAvIFwiclwiIC8gXCJzXCIgLyBcInRcIiAvIFwidVwiIC8gXCJ2XCIgLyBcIndcIiAvIFwieFwiIC8gXCJ5XCIgLyBcInpcIiAvIFwiQVwiIC8gXCJCXCIgLyBcIkNcIiAvIFwiRFwiIC8gXCJFXCIgLyBcIkZcIiAvIFwiR1wiIC8gXCJIXCIgLyBcIklcIiAvIFwiSlwiIC8gXCJLXCIgLyBcIkxcIiAvIFwiTVwiIC8gXCJOXCIgLyBcIk9cIiAvIFwiUFwiIC8gXCJRXCIgLyBcIlJcIiAvIFwiU1wiIC8gXCJUXCIgLyBcIlVcIiAvIFwiVlwiIC8gXCJXXCIgLyBcIlhcIiAvIFwiWVwiIC8gXCJaXCJcbm51bWJlciAgICA9IFwiMVwiIC8gXCIyXCIgLyBcIjNcIiAvIFwiNFwiIC8gXCI1XCIgLyBcIjZcIiAvIFwiN1wiIC8gXCI4XCIgLyBcIjlcIiAvIFwiMFwiXG5kZWxpbSAgICAgPSBcIi5cIlxuc2VnbWVudCAgID0gYWxwaGEgKiggYWxwaGEgLyBudW1iZXIgLyBcIi1cIiApXG5hdXRob3JpdHkgPSBzZWdtZW50ICooIGRlbGltIHNlZ21lbnQgKVxubmFtZSAgICAgID0gYWxwaGEgKiggYWxwaGEgKVxubnNpZCAgICAgID0gYXV0aG9yaXR5IGRlbGltIG5hbWVcblxuKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSW52YWxpZE5zaWRFcnJvciA9IGV4cG9ydHMuZW5zdXJlVmFsaWROc2lkUmVnZXggPSBleHBvcnRzLmVuc3VyZVZhbGlkTnNpZCA9IGV4cG9ydHMuTlNJRCA9IHZvaWQgMDtcbmNsYXNzIE5TSUQge1xuICAgIHN0YXRpYyBwYXJzZShuc2lkKSB7XG4gICAgICAgIHJldHVybiBuZXcgTlNJRChuc2lkKTtcbiAgICB9XG4gICAgc3RhdGljIGNyZWF0ZShhdXRob3JpdHksIG5hbWUpIHtcbiAgICAgICAgY29uc3Qgc2VnbWVudHMgPSBbLi4uYXV0aG9yaXR5LnNwbGl0KCcuJykucmV2ZXJzZSgpLCBuYW1lXS5qb2luKCcuJyk7XG4gICAgICAgIHJldHVybiBuZXcgTlNJRChzZWdtZW50cyk7XG4gICAgfVxuICAgIHN0YXRpYyBpc1ZhbGlkKG5zaWQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIE5TSUQucGFyc2UobnNpZCk7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKG5zaWQpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwic2VnbWVudHNcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFtdXG4gICAgICAgIH0pO1xuICAgICAgICAoMCwgZXhwb3J0cy5lbnN1cmVWYWxpZE5zaWQpKG5zaWQpO1xuICAgICAgICB0aGlzLnNlZ21lbnRzID0gbnNpZC5zcGxpdCgnLicpO1xuICAgIH1cbiAgICBnZXQgYXV0aG9yaXR5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zZWdtZW50c1xuICAgICAgICAgICAgLnNsaWNlKDAsIHRoaXMuc2VnbWVudHMubGVuZ3RoIC0gMSlcbiAgICAgICAgICAgIC5yZXZlcnNlKClcbiAgICAgICAgICAgIC5qb2luKCcuJyk7XG4gICAgfVxuICAgIGdldCBuYW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zZWdtZW50cy5hdCh0aGlzLnNlZ21lbnRzLmxlbmd0aCAtIDEpO1xuICAgIH1cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2VnbWVudHMuam9pbignLicpO1xuICAgIH1cbn1cbmV4cG9ydHMuTlNJRCA9IE5TSUQ7XG4vLyBIdW1hbiByZWFkYWJsZSBjb25zdHJhaW50cyBvbiBOU0lEOlxuLy8gLSBhIHZhbGlkIGRvbWFpbiBpbiByZXZlcnNlZCBub3RhdGlvblxuLy8gLSBmb2xsb3dlZCBieSBhbiBhZGRpdGlvbmFsIHBlcmlvZC1zZXBhcmF0ZWQgbmFtZSwgd2hpY2ggaXMgY2FtZWwtY2FzZSBsZXR0ZXJzXG5jb25zdCBlbnN1cmVWYWxpZE5zaWQgPSAobnNpZCkgPT4ge1xuICAgIGNvbnN0IHRvQ2hlY2sgPSBuc2lkO1xuICAgIC8vIGNoZWNrIHRoYXQgYWxsIGNoYXJzIGFyZSBib3JpbmcgQVNDSUlcbiAgICBpZiAoIS9eW2EtekEtWjAtOS4tXSokLy50ZXN0KHRvQ2hlY2spKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkTnNpZEVycm9yKCdEaXNhbGxvd2VkIGNoYXJhY3RlcnMgaW4gTlNJRCAoQVNDSUkgbGV0dGVycywgZGlnaXRzLCBkYXNoZXMsIHBlcmlvZHMgb25seSknKTtcbiAgICB9XG4gICAgaWYgKHRvQ2hlY2subGVuZ3RoID4gMjUzICsgMSArIDYzKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkTnNpZEVycm9yKCdOU0lEIGlzIHRvbyBsb25nICgzMTcgY2hhcnMgbWF4KScpO1xuICAgIH1cbiAgICBjb25zdCBsYWJlbHMgPSB0b0NoZWNrLnNwbGl0KCcuJyk7XG4gICAgaWYgKGxhYmVscy5sZW5ndGggPCAzKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkTnNpZEVycm9yKCdOU0lEIG5lZWRzIGF0IGxlYXN0IHRocmVlIHBhcnRzJyk7XG4gICAgfVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGFiZWxzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGwgPSBsYWJlbHNbaV07XG4gICAgICAgIGlmIChsLmxlbmd0aCA8IDEpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBJbnZhbGlkTnNpZEVycm9yKCdOU0lEIHBhcnRzIGNhbiBub3QgYmUgZW1wdHknKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobC5sZW5ndGggPiA2Mykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEludmFsaWROc2lkRXJyb3IoJ05TSUQgcGFydCB0b28gbG9uZyAobWF4IDYzIGNoYXJzKScpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChsLmVuZHNXaXRoKCctJykgfHwgbC5zdGFydHNXaXRoKCctJykpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBJbnZhbGlkTnNpZEVycm9yKCdOU0lEIHBhcnRzIGNhbiBub3Qgc3RhcnQgb3IgZW5kIHdpdGggaHlwaGVuJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKC9eWzAtOV0vLnRlc3QobCkgJiYgaSA9PT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEludmFsaWROc2lkRXJyb3IoJ05TSUQgZmlyc3QgcGFydCBtYXkgbm90IHN0YXJ0IHdpdGggYSBkaWdpdCcpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghL15bYS16QS1aXVthLXpBLVowLTldKiQvLnRlc3QobCkgJiYgaSArIDEgPT09IGxhYmVscy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBJbnZhbGlkTnNpZEVycm9yKCdOU0lEIG5hbWUgcGFydCBtdXN0IGJlIG9ubHkgbGV0dGVycyBhbmQgZGlnaXRzIChhbmQgbm8gbGVhZGluZyBkaWdpdCknKTtcbiAgICAgICAgfVxuICAgIH1cbn07XG5leHBvcnRzLmVuc3VyZVZhbGlkTnNpZCA9IGVuc3VyZVZhbGlkTnNpZDtcbmNvbnN0IGVuc3VyZVZhbGlkTnNpZFJlZ2V4ID0gKG5zaWQpID0+IHtcbiAgICAvLyBzaW1wbGUgcmVnZXggdG8gZW5mb3JjZSBtb3N0IGNvbnN0cmFpbnRzIHZpYSBqdXN0IHJlZ2V4IGFuZCBsZW5ndGguXG4gICAgLy8gaGFuZCB3cm90ZSB0aGlzIHJlZ2V4IGJhc2VkIG9uIGFib3ZlIGNvbnN0cmFpbnRzXG4gICAgaWYgKCEvXlthLXpBLVpdKFthLXpBLVowLTktXXswLDYxfVthLXpBLVowLTldKT8oXFwuW2EtekEtWjAtOV0oW2EtekEtWjAtOS1dezAsNjF9W2EtekEtWjAtOV0pPykrKFxcLlthLXpBLVpdKFthLXpBLVowLTldezAsNjJ9KT8pJC8udGVzdChuc2lkKSkge1xuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZE5zaWRFcnJvcihcIk5TSUQgZGlkbid0IHZhbGlkYXRlIHZpYSByZWdleFwiKTtcbiAgICB9XG4gICAgaWYgKG5zaWQubGVuZ3RoID4gMjUzICsgMSArIDYzKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkTnNpZEVycm9yKCdOU0lEIGlzIHRvbyBsb25nICgzMTcgY2hhcnMgbWF4KScpO1xuICAgIH1cbn07XG5leHBvcnRzLmVuc3VyZVZhbGlkTnNpZFJlZ2V4ID0gZW5zdXJlVmFsaWROc2lkUmVnZXg7XG5jbGFzcyBJbnZhbGlkTnNpZEVycm9yIGV4dGVuZHMgRXJyb3Ige1xufVxuZXhwb3J0cy5JbnZhbGlkTnNpZEVycm9yID0gSW52YWxpZE5zaWRFcnJvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5zaWQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/nsid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/recordkey.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/recordkey.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InvalidRecordKeyError = exports.isValidRecordKey = exports.ensureValidRecordKey = void 0;\nconst ensureValidRecordKey = (rkey) => {\n    if (rkey.length > 512 || rkey.length < 1) {\n        throw new InvalidRecordKeyError('record key must be 1 to 512 characters');\n    }\n    // simple regex to enforce most constraints via just regex and length.\n    if (!/^[a-zA-Z0-9_~.:-]{1,512}$/.test(rkey)) {\n        throw new InvalidRecordKeyError('record key syntax not valid (regex)');\n    }\n    if (rkey === '.' || rkey === '..')\n        throw new InvalidRecordKeyError('record key can not be \".\" or \"..\"');\n};\nexports.ensureValidRecordKey = ensureValidRecordKey;\nconst isValidRecordKey = (rkey) => {\n    try {\n        (0, exports.ensureValidRecordKey)(rkey);\n    }\n    catch (err) {\n        if (err instanceof InvalidRecordKeyError) {\n            return false;\n        }\n        throw err;\n    }\n    return true;\n};\nexports.isValidRecordKey = isValidRecordKey;\nclass InvalidRecordKeyError extends Error {\n}\nexports.InvalidRecordKeyError = InvalidRecordKeyError;\n//# sourceMappingURL=recordkey.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vbGV4aWNvbi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vc3ludGF4L2Rpc3QvcmVjb3Jka2V5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDZCQUE2QixHQUFHLHdCQUF3QixHQUFHLDRCQUE0QjtBQUN2RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLE1BQU07QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL2xleGljb24vbm9kZV9tb2R1bGVzL0BhdHByb3RvL3N5bnRheC9kaXN0L3JlY29yZGtleS5qcz8yNDkyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JbnZhbGlkUmVjb3JkS2V5RXJyb3IgPSBleHBvcnRzLmlzVmFsaWRSZWNvcmRLZXkgPSBleHBvcnRzLmVuc3VyZVZhbGlkUmVjb3JkS2V5ID0gdm9pZCAwO1xuY29uc3QgZW5zdXJlVmFsaWRSZWNvcmRLZXkgPSAocmtleSkgPT4ge1xuICAgIGlmIChya2V5Lmxlbmd0aCA+IDUxMiB8fCBya2V5Lmxlbmd0aCA8IDEpIHtcbiAgICAgICAgdGhyb3cgbmV3IEludmFsaWRSZWNvcmRLZXlFcnJvcigncmVjb3JkIGtleSBtdXN0IGJlIDEgdG8gNTEyIGNoYXJhY3RlcnMnKTtcbiAgICB9XG4gICAgLy8gc2ltcGxlIHJlZ2V4IHRvIGVuZm9yY2UgbW9zdCBjb25zdHJhaW50cyB2aWEganVzdCByZWdleCBhbmQgbGVuZ3RoLlxuICAgIGlmICghL15bYS16QS1aMC05X34uOi1dezEsNTEyfSQvLnRlc3QocmtleSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEludmFsaWRSZWNvcmRLZXlFcnJvcigncmVjb3JkIGtleSBzeW50YXggbm90IHZhbGlkIChyZWdleCknKTtcbiAgICB9XG4gICAgaWYgKHJrZXkgPT09ICcuJyB8fCBya2V5ID09PSAnLi4nKVxuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZFJlY29yZEtleUVycm9yKCdyZWNvcmQga2V5IGNhbiBub3QgYmUgXCIuXCIgb3IgXCIuLlwiJyk7XG59O1xuZXhwb3J0cy5lbnN1cmVWYWxpZFJlY29yZEtleSA9IGVuc3VyZVZhbGlkUmVjb3JkS2V5O1xuY29uc3QgaXNWYWxpZFJlY29yZEtleSA9IChya2V5KSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgKDAsIGV4cG9ydHMuZW5zdXJlVmFsaWRSZWNvcmRLZXkpKHJrZXkpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGlmIChlcnIgaW5zdGFuY2VvZiBJbnZhbGlkUmVjb3JkS2V5RXJyb3IpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBlcnI7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufTtcbmV4cG9ydHMuaXNWYWxpZFJlY29yZEtleSA9IGlzVmFsaWRSZWNvcmRLZXk7XG5jbGFzcyBJbnZhbGlkUmVjb3JkS2V5RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG59XG5leHBvcnRzLkludmFsaWRSZWNvcmRLZXlFcnJvciA9IEludmFsaWRSZWNvcmRLZXlFcnJvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlY29yZGtleS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/recordkey.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/tid.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/tid.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InvalidTidError = exports.isValidTid = exports.ensureValidTid = void 0;\nconst TID_LENGTH = 13;\nconst TID_REGEX = /^[234567abcdefghij][234567abcdefghijklmnopqrstuvwxyz]{12}$/;\nconst ensureValidTid = (tid) => {\n    if (tid.length !== TID_LENGTH) {\n        throw new InvalidTidError(`TID must be ${TID_LENGTH} characters`);\n    }\n    // simple regex to enforce most constraints via just regex and length.\n    if (!TID_REGEX.test(tid)) {\n        throw new InvalidTidError('TID syntax not valid (regex)');\n    }\n};\nexports.ensureValidTid = ensureValidTid;\nconst isValidTid = (tid) => {\n    return tid.length === TID_LENGTH && TID_REGEX.test(tid);\n};\nexports.isValidTid = isValidTid;\nclass InvalidTidError extends Error {\n}\nexports.InvalidTidError = InvalidTidError;\n//# sourceMappingURL=tid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vbGV4aWNvbi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vc3ludGF4L2Rpc3QvdGlkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QixHQUFHLGtCQUFrQixHQUFHLHNCQUFzQjtBQUNyRTtBQUNBLHlFQUF5RSxHQUFHO0FBQzVFO0FBQ0E7QUFDQSxpREFBaUQsWUFBWTtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9sZXhpY29uL25vZGVfbW9kdWxlcy9AYXRwcm90by9zeW50YXgvZGlzdC90aWQuanM/ZDAwNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSW52YWxpZFRpZEVycm9yID0gZXhwb3J0cy5pc1ZhbGlkVGlkID0gZXhwb3J0cy5lbnN1cmVWYWxpZFRpZCA9IHZvaWQgMDtcbmNvbnN0IFRJRF9MRU5HVEggPSAxMztcbmNvbnN0IFRJRF9SRUdFWCA9IC9eWzIzNDU2N2FiY2RlZmdoaWpdWzIzNDU2N2FiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6XXsxMn0kLztcbmNvbnN0IGVuc3VyZVZhbGlkVGlkID0gKHRpZCkgPT4ge1xuICAgIGlmICh0aWQubGVuZ3RoICE9PSBUSURfTEVOR1RIKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkVGlkRXJyb3IoYFRJRCBtdXN0IGJlICR7VElEX0xFTkdUSH0gY2hhcmFjdGVyc2ApO1xuICAgIH1cbiAgICAvLyBzaW1wbGUgcmVnZXggdG8gZW5mb3JjZSBtb3N0IGNvbnN0cmFpbnRzIHZpYSBqdXN0IHJlZ2V4IGFuZCBsZW5ndGguXG4gICAgaWYgKCFUSURfUkVHRVgudGVzdCh0aWQpKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkVGlkRXJyb3IoJ1RJRCBzeW50YXggbm90IHZhbGlkIChyZWdleCknKTtcbiAgICB9XG59O1xuZXhwb3J0cy5lbnN1cmVWYWxpZFRpZCA9IGVuc3VyZVZhbGlkVGlkO1xuY29uc3QgaXNWYWxpZFRpZCA9ICh0aWQpID0+IHtcbiAgICByZXR1cm4gdGlkLmxlbmd0aCA9PT0gVElEX0xFTkdUSCAmJiBUSURfUkVHRVgudGVzdCh0aWQpO1xufTtcbmV4cG9ydHMuaXNWYWxpZFRpZCA9IGlzVmFsaWRUaWQ7XG5jbGFzcyBJbnZhbGlkVGlkRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG59XG5leHBvcnRzLkludmFsaWRUaWRFcnJvciA9IEludmFsaWRUaWRFcnJvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRpZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/lexicon/node_modules/@atproto/syntax/dist/tid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/syntax/dist/aturi.js":
/*!****************************************************!*\
  !*** ./node_modules/@atproto/syntax/dist/aturi.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AtUri = exports.ATP_URI_REGEX = void 0;\n__exportStar(__webpack_require__(/*! ./aturi_validation */ \"(ssr)/./node_modules/@atproto/syntax/dist/aturi_validation.js\"), exports);\nexports.ATP_URI_REGEX = \n// proto-    --did--------------   --name----------------   --path----   --query--   --hash--\n/^(at:\\/\\/)?((?:did:[a-z0-9:%-]+)|(?:[a-z0-9][a-z0-9.:-]*))(\\/[^?#\\s]*)?(\\?[^#\\s]+)?(#[^\\s]+)?$/i;\n//                       --path-----   --query--  --hash--\nconst RELATIVE_REGEX = /^(\\/[^?#\\s]*)?(\\?[^#\\s]+)?(#[^\\s]+)?$/i;\nclass AtUri {\n    constructor(uri, base) {\n        Object.defineProperty(this, \"hash\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"host\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"pathname\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"searchParams\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        let parsed;\n        if (base) {\n            parsed = parse(base);\n            if (!parsed) {\n                throw new Error(`Invalid at uri: ${base}`);\n            }\n            const relativep = parseRelative(uri);\n            if (!relativep) {\n                throw new Error(`Invalid path: ${uri}`);\n            }\n            Object.assign(parsed, relativep);\n        }\n        else {\n            parsed = parse(uri);\n            if (!parsed) {\n                throw new Error(`Invalid at uri: ${uri}`);\n            }\n        }\n        this.hash = parsed.hash;\n        this.host = parsed.host;\n        this.pathname = parsed.pathname;\n        this.searchParams = parsed.searchParams;\n    }\n    static make(handleOrDid, collection, rkey) {\n        let str = handleOrDid;\n        if (collection)\n            str += '/' + collection;\n        if (rkey)\n            str += '/' + rkey;\n        return new AtUri(str);\n    }\n    get protocol() {\n        return 'at:';\n    }\n    get origin() {\n        return `at://${this.host}`;\n    }\n    get hostname() {\n        return this.host;\n    }\n    set hostname(v) {\n        this.host = v;\n    }\n    get search() {\n        return this.searchParams.toString();\n    }\n    set search(v) {\n        this.searchParams = new URLSearchParams(v);\n    }\n    get collection() {\n        return this.pathname.split('/').filter(Boolean)[0] || '';\n    }\n    set collection(v) {\n        const parts = this.pathname.split('/').filter(Boolean);\n        parts[0] = v;\n        this.pathname = parts.join('/');\n    }\n    get rkey() {\n        return this.pathname.split('/').filter(Boolean)[1] || '';\n    }\n    set rkey(v) {\n        const parts = this.pathname.split('/').filter(Boolean);\n        if (!parts[0])\n            parts[0] = 'undefined';\n        parts[1] = v;\n        this.pathname = parts.join('/');\n    }\n    get href() {\n        return this.toString();\n    }\n    toString() {\n        let path = this.pathname || '/';\n        if (!path.startsWith('/')) {\n            path = `/${path}`;\n        }\n        let qs = this.searchParams.toString();\n        if (qs && !qs.startsWith('?')) {\n            qs = `?${qs}`;\n        }\n        let hash = this.hash;\n        if (hash && !hash.startsWith('#')) {\n            hash = `#${hash}`;\n        }\n        return `at://${this.host}${path}${qs}${hash}`;\n    }\n}\nexports.AtUri = AtUri;\nfunction parse(str) {\n    const match = exports.ATP_URI_REGEX.exec(str);\n    if (match) {\n        return {\n            hash: match[5] || '',\n            host: match[2] || '',\n            pathname: match[3] || '',\n            searchParams: new URLSearchParams(match[4] || ''),\n        };\n    }\n    return undefined;\n}\nfunction parseRelative(str) {\n    const match = RELATIVE_REGEX.exec(str);\n    if (match) {\n        return {\n            hash: match[3] || '',\n            pathname: match[1] || '',\n            searchParams: new URLSearchParams(match[2] || ''),\n        };\n    }\n    return undefined;\n}\n//# sourceMappingURL=aturi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/syntax/dist/aturi.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/syntax/dist/aturi_validation.js":
/*!***************************************************************!*\
  !*** ./node_modules/@atproto/syntax/dist/aturi_validation.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ensureValidAtUriRegex = exports.ensureValidAtUri = void 0;\nconst did_1 = __webpack_require__(/*! ./did */ \"(ssr)/./node_modules/@atproto/syntax/dist/did.js\");\nconst handle_1 = __webpack_require__(/*! ./handle */ \"(ssr)/./node_modules/@atproto/syntax/dist/handle.js\");\nconst nsid_1 = __webpack_require__(/*! ./nsid */ \"(ssr)/./node_modules/@atproto/syntax/dist/nsid.js\");\n// Human-readable constraints on ATURI:\n//   - following regular URLs, a 8KByte hard total length limit\n//   - follows ATURI docs on website\n//      - all ASCII characters, no whitespace. non-ASCII could be URL-encoded\n//      - starts \"at://\"\n//      - \"authority\" is a valid DID or a valid handle\n//      - optionally, follow \"authority\" with \"/\" and valid NSID as start of path\n//      - optionally, if NSID given, follow that with \"/\" and rkey\n//      - rkey path component can include URL-encoded (\"percent encoded\"), or:\n//          ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\" / \":\" / \"@\" / \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n//          [a-zA-Z0-9._~:@!$&'\\(\\)*+,;=-]\n//      - rkey must have at least one char\n//      - regardless of path component, a fragment can follow  as \"#\" and then a JSON pointer (RFC-6901)\nconst ensureValidAtUri = (uri) => {\n    // JSON pointer is pretty different from rest of URI, so split that out first\n    const uriParts = uri.split('#');\n    if (uriParts.length > 2) {\n        throw new Error('ATURI can have at most one \"#\", separating fragment out');\n    }\n    const fragmentPart = uriParts[1] || null;\n    uri = uriParts[0];\n    // check that all chars are boring ASCII\n    if (!/^[a-zA-Z0-9._~:@!$&')(*+,;=%/-]*$/.test(uri)) {\n        throw new Error('Disallowed characters in ATURI (ASCII)');\n    }\n    const parts = uri.split('/');\n    if (parts.length >= 3 && (parts[0] !== 'at:' || parts[1].length !== 0)) {\n        throw new Error('ATURI must start with \"at://\"');\n    }\n    if (parts.length < 3) {\n        throw new Error('ATURI requires at least method and authority sections');\n    }\n    try {\n        if (parts[2].startsWith('did:')) {\n            (0, did_1.ensureValidDid)(parts[2]);\n        }\n        else {\n            (0, handle_1.ensureValidHandle)(parts[2]);\n        }\n    }\n    catch {\n        throw new Error('ATURI authority must be a valid handle or DID');\n    }\n    if (parts.length >= 4) {\n        if (parts[3].length === 0) {\n            throw new Error('ATURI can not have a slash after authority without a path segment');\n        }\n        try {\n            (0, nsid_1.ensureValidNsid)(parts[3]);\n        }\n        catch {\n            throw new Error('ATURI requires first path segment (if supplied) to be valid NSID');\n        }\n    }\n    if (parts.length >= 5) {\n        if (parts[4].length === 0) {\n            throw new Error('ATURI can not have a slash after collection, unless record key is provided');\n        }\n        // would validate rkey here, but there are basically no constraints!\n    }\n    if (parts.length >= 6) {\n        throw new Error('ATURI path can have at most two parts, and no trailing slash');\n    }\n    if (uriParts.length >= 2 && fragmentPart == null) {\n        throw new Error('ATURI fragment must be non-empty and start with slash');\n    }\n    if (fragmentPart != null) {\n        if (fragmentPart.length === 0 || fragmentPart[0] !== '/') {\n            throw new Error('ATURI fragment must be non-empty and start with slash');\n        }\n        // NOTE: enforcing *some* checks here for sanity. Eg, at least no whitespace\n        if (!/^\\/[a-zA-Z0-9._~:@!$&')(*+,;=%[\\]/-]*$/.test(fragmentPart)) {\n            throw new Error('Disallowed characters in ATURI fragment (ASCII)');\n        }\n    }\n    if (uri.length > 8 * 1024) {\n        throw new Error('ATURI is far too long');\n    }\n};\nexports.ensureValidAtUri = ensureValidAtUri;\nconst ensureValidAtUriRegex = (uri) => {\n    // simple regex to enforce most constraints via just regex and length.\n    // hand wrote this regex based on above constraints. whew!\n    const aturiRegex = /^at:\\/\\/(?<authority>[a-zA-Z0-9._:%-]+)(\\/(?<collection>[a-zA-Z0-9-.]+)(\\/(?<rkey>[a-zA-Z0-9._~:@!$&%')(*+,;=-]+))?)?(#(?<fragment>\\/[a-zA-Z0-9._~:@!$&%')(*+,;=\\-[\\]/\\\\]*))?$/;\n    const rm = uri.match(aturiRegex);\n    if (!rm || !rm.groups) {\n        throw new Error(\"ATURI didn't validate via regex\");\n    }\n    const groups = rm.groups;\n    try {\n        (0, handle_1.ensureValidHandleRegex)(groups.authority);\n    }\n    catch {\n        try {\n            (0, did_1.ensureValidDidRegex)(groups.authority);\n        }\n        catch {\n            throw new Error('ATURI authority must be a valid handle or DID');\n        }\n    }\n    if (groups.collection) {\n        try {\n            (0, nsid_1.ensureValidNsidRegex)(groups.collection);\n        }\n        catch {\n            throw new Error('ATURI collection path segment must be a valid NSID');\n        }\n    }\n    if (uri.length > 8 * 1024) {\n        throw new Error('ATURI is far too long');\n    }\n};\nexports.ensureValidAtUriRegex = ensureValidAtUriRegex;\n//# sourceMappingURL=aturi_validation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/syntax/dist/aturi_validation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/syntax/dist/datetime.js":
/*!*******************************************************!*\
  !*** ./node_modules/@atproto/syntax/dist/datetime.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InvalidDatetimeError = exports.normalizeDatetimeAlways = exports.normalizeDatetime = exports.isValidDatetime = exports.ensureValidDatetime = void 0;\n/* Validates datetime string against atproto Lexicon 'datetime' format.\n * Syntax is described at: https://atproto.com/specs/lexicon#datetime\n */\nconst ensureValidDatetime = (dtStr) => {\n    const date = new Date(dtStr);\n    // must parse as ISO 8601; this also verifies semantics like month is not 13 or 00\n    if (isNaN(date.getTime())) {\n        throw new InvalidDatetimeError('datetime did not parse as ISO 8601');\n    }\n    if (date.toISOString().startsWith('-')) {\n        throw new InvalidDatetimeError('datetime normalized to a negative time');\n    }\n    // regex and other checks for RFC-3339\n    if (!/^[0-9]{4}-[01][0-9]-[0-3][0-9]T[0-2][0-9]:[0-6][0-9]:[0-6][0-9](.[0-9]{1,20})?(Z|([+-][0-2][0-9]:[0-5][0-9]))$/.test(dtStr)) {\n        throw new InvalidDatetimeError(\"datetime didn't validate via regex\");\n    }\n    if (dtStr.length > 64) {\n        throw new InvalidDatetimeError('datetime is too long (64 chars max)');\n    }\n    if (dtStr.endsWith('-00:00')) {\n        throw new InvalidDatetimeError('datetime can not use \"-00:00\" for UTC timezone');\n    }\n    if (dtStr.startsWith('000')) {\n        throw new InvalidDatetimeError('datetime so close to year zero not allowed');\n    }\n};\nexports.ensureValidDatetime = ensureValidDatetime;\n/* Same logic as ensureValidDatetime(), but returns a boolean instead of throwing an exception.\n */\nconst isValidDatetime = (dtStr) => {\n    try {\n        (0, exports.ensureValidDatetime)(dtStr);\n    }\n    catch (err) {\n        if (err instanceof InvalidDatetimeError) {\n            return false;\n        }\n        throw err;\n    }\n    return true;\n};\nexports.isValidDatetime = isValidDatetime;\n/* Takes a flexible datetime string and normalizes representation.\n *\n * This function will work with any valid atproto datetime (eg, anything which isValidDatetime() is true for). It *additionally* is more flexible about accepting datetimes that don't comply to RFC 3339, or are missing timezone information, and normalizing them to a valid datetime.\n *\n * One use-case is a consistent, sortable string. Another is to work with older invalid createdAt datetimes.\n *\n * Successful output will be a valid atproto datetime with millisecond precision (3 sub-second digits) and UTC timezone with trailing 'Z' syntax. Throws `InvalidDatetimeError` if the input string could not be parsed as a datetime, even with permissive parsing.\n *\n * Expected output format: YYYY-MM-DDTHH:mm:ss.sssZ\n */\nconst normalizeDatetime = (dtStr) => {\n    if ((0, exports.isValidDatetime)(dtStr)) {\n        const outStr = new Date(dtStr).toISOString();\n        if ((0, exports.isValidDatetime)(outStr)) {\n            return outStr;\n        }\n    }\n    // check if this permissive datetime is missing a timezone\n    if (!/.*(([+-]\\d\\d:?\\d\\d)|[a-zA-Z])$/.test(dtStr)) {\n        const date = new Date(dtStr + 'Z');\n        if (!isNaN(date.getTime())) {\n            const tzStr = date.toISOString();\n            if ((0, exports.isValidDatetime)(tzStr)) {\n                return tzStr;\n            }\n        }\n    }\n    // finally try parsing as simple datetime\n    const date = new Date(dtStr);\n    if (isNaN(date.getTime())) {\n        throw new InvalidDatetimeError('datetime did not parse as any timestamp format');\n    }\n    const isoStr = date.toISOString();\n    if ((0, exports.isValidDatetime)(isoStr)) {\n        return isoStr;\n    }\n    else {\n        throw new InvalidDatetimeError('datetime normalized to invalid timestamp string');\n    }\n};\nexports.normalizeDatetime = normalizeDatetime;\n/* Variant of normalizeDatetime() which always returns a valid datetime strings.\n *\n * If a InvalidDatetimeError is encountered, returns the UNIX epoch time as a UTC datetime (1970-01-01T00:00:00.000Z).\n */\nconst normalizeDatetimeAlways = (dtStr) => {\n    try {\n        return (0, exports.normalizeDatetime)(dtStr);\n    }\n    catch (err) {\n        if (err instanceof InvalidDatetimeError) {\n            return new Date(0).toISOString();\n        }\n        throw err;\n    }\n};\nexports.normalizeDatetimeAlways = normalizeDatetimeAlways;\n/* Indicates a datetime string did not pass full atproto Lexicon datetime string format checks.\n */\nclass InvalidDatetimeError extends Error {\n}\nexports.InvalidDatetimeError = InvalidDatetimeError;\n//# sourceMappingURL=datetime.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vc3ludGF4L2Rpc3QvZGF0ZXRpbWUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCLEdBQUcsK0JBQStCLEdBQUcseUJBQXlCLEdBQUcsdUJBQXVCLEdBQUcsMkJBQTJCO0FBQ2xKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsRUFBRSw4REFBOEQsS0FBSztBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9zeW50YXgvZGlzdC9kYXRldGltZS5qcz83MTNlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JbnZhbGlkRGF0ZXRpbWVFcnJvciA9IGV4cG9ydHMubm9ybWFsaXplRGF0ZXRpbWVBbHdheXMgPSBleHBvcnRzLm5vcm1hbGl6ZURhdGV0aW1lID0gZXhwb3J0cy5pc1ZhbGlkRGF0ZXRpbWUgPSBleHBvcnRzLmVuc3VyZVZhbGlkRGF0ZXRpbWUgPSB2b2lkIDA7XG4vKiBWYWxpZGF0ZXMgZGF0ZXRpbWUgc3RyaW5nIGFnYWluc3QgYXRwcm90byBMZXhpY29uICdkYXRldGltZScgZm9ybWF0LlxuICogU3ludGF4IGlzIGRlc2NyaWJlZCBhdDogaHR0cHM6Ly9hdHByb3RvLmNvbS9zcGVjcy9sZXhpY29uI2RhdGV0aW1lXG4gKi9cbmNvbnN0IGVuc3VyZVZhbGlkRGF0ZXRpbWUgPSAoZHRTdHIpID0+IHtcbiAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoZHRTdHIpO1xuICAgIC8vIG11c3QgcGFyc2UgYXMgSVNPIDg2MDE7IHRoaXMgYWxzbyB2ZXJpZmllcyBzZW1hbnRpY3MgbGlrZSBtb250aCBpcyBub3QgMTMgb3IgMDBcbiAgICBpZiAoaXNOYU4oZGF0ZS5nZXRUaW1lKCkpKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkRGF0ZXRpbWVFcnJvcignZGF0ZXRpbWUgZGlkIG5vdCBwYXJzZSBhcyBJU08gODYwMScpO1xuICAgIH1cbiAgICBpZiAoZGF0ZS50b0lTT1N0cmluZygpLnN0YXJ0c1dpdGgoJy0nKSkge1xuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZERhdGV0aW1lRXJyb3IoJ2RhdGV0aW1lIG5vcm1hbGl6ZWQgdG8gYSBuZWdhdGl2ZSB0aW1lJyk7XG4gICAgfVxuICAgIC8vIHJlZ2V4IGFuZCBvdGhlciBjaGVja3MgZm9yIFJGQy0zMzM5XG4gICAgaWYgKCEvXlswLTldezR9LVswMV1bMC05XS1bMC0zXVswLTldVFswLTJdWzAtOV06WzAtNl1bMC05XTpbMC02XVswLTldKC5bMC05XXsxLDIwfSk/KFp8KFsrLV1bMC0yXVswLTldOlswLTVdWzAtOV0pKSQvLnRlc3QoZHRTdHIpKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkRGF0ZXRpbWVFcnJvcihcImRhdGV0aW1lIGRpZG4ndCB2YWxpZGF0ZSB2aWEgcmVnZXhcIik7XG4gICAgfVxuICAgIGlmIChkdFN0ci5sZW5ndGggPiA2NCkge1xuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZERhdGV0aW1lRXJyb3IoJ2RhdGV0aW1lIGlzIHRvbyBsb25nICg2NCBjaGFycyBtYXgpJyk7XG4gICAgfVxuICAgIGlmIChkdFN0ci5lbmRzV2l0aCgnLTAwOjAwJykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEludmFsaWREYXRldGltZUVycm9yKCdkYXRldGltZSBjYW4gbm90IHVzZSBcIi0wMDowMFwiIGZvciBVVEMgdGltZXpvbmUnKTtcbiAgICB9XG4gICAgaWYgKGR0U3RyLnN0YXJ0c1dpdGgoJzAwMCcpKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkRGF0ZXRpbWVFcnJvcignZGF0ZXRpbWUgc28gY2xvc2UgdG8geWVhciB6ZXJvIG5vdCBhbGxvd2VkJyk7XG4gICAgfVxufTtcbmV4cG9ydHMuZW5zdXJlVmFsaWREYXRldGltZSA9IGVuc3VyZVZhbGlkRGF0ZXRpbWU7XG4vKiBTYW1lIGxvZ2ljIGFzIGVuc3VyZVZhbGlkRGF0ZXRpbWUoKSwgYnV0IHJldHVybnMgYSBib29sZWFuIGluc3RlYWQgb2YgdGhyb3dpbmcgYW4gZXhjZXB0aW9uLlxuICovXG5jb25zdCBpc1ZhbGlkRGF0ZXRpbWUgPSAoZHRTdHIpID0+IHtcbiAgICB0cnkge1xuICAgICAgICAoMCwgZXhwb3J0cy5lbnN1cmVWYWxpZERhdGV0aW1lKShkdFN0cik7XG4gICAgfVxuICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgaWYgKGVyciBpbnN0YW5jZW9mIEludmFsaWREYXRldGltZUVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgZXJyO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn07XG5leHBvcnRzLmlzVmFsaWREYXRldGltZSA9IGlzVmFsaWREYXRldGltZTtcbi8qIFRha2VzIGEgZmxleGlibGUgZGF0ZXRpbWUgc3RyaW5nIGFuZCBub3JtYWxpemVzIHJlcHJlc2VudGF0aW9uLlxuICpcbiAqIFRoaXMgZnVuY3Rpb24gd2lsbCB3b3JrIHdpdGggYW55IHZhbGlkIGF0cHJvdG8gZGF0ZXRpbWUgKGVnLCBhbnl0aGluZyB3aGljaCBpc1ZhbGlkRGF0ZXRpbWUoKSBpcyB0cnVlIGZvcikuIEl0ICphZGRpdGlvbmFsbHkqIGlzIG1vcmUgZmxleGlibGUgYWJvdXQgYWNjZXB0aW5nIGRhdGV0aW1lcyB0aGF0IGRvbid0IGNvbXBseSB0byBSRkMgMzMzOSwgb3IgYXJlIG1pc3NpbmcgdGltZXpvbmUgaW5mb3JtYXRpb24sIGFuZCBub3JtYWxpemluZyB0aGVtIHRvIGEgdmFsaWQgZGF0ZXRpbWUuXG4gKlxuICogT25lIHVzZS1jYXNlIGlzIGEgY29uc2lzdGVudCwgc29ydGFibGUgc3RyaW5nLiBBbm90aGVyIGlzIHRvIHdvcmsgd2l0aCBvbGRlciBpbnZhbGlkIGNyZWF0ZWRBdCBkYXRldGltZXMuXG4gKlxuICogU3VjY2Vzc2Z1bCBvdXRwdXQgd2lsbCBiZSBhIHZhbGlkIGF0cHJvdG8gZGF0ZXRpbWUgd2l0aCBtaWxsaXNlY29uZCBwcmVjaXNpb24gKDMgc3ViLXNlY29uZCBkaWdpdHMpIGFuZCBVVEMgdGltZXpvbmUgd2l0aCB0cmFpbGluZyAnWicgc3ludGF4LiBUaHJvd3MgYEludmFsaWREYXRldGltZUVycm9yYCBpZiB0aGUgaW5wdXQgc3RyaW5nIGNvdWxkIG5vdCBiZSBwYXJzZWQgYXMgYSBkYXRldGltZSwgZXZlbiB3aXRoIHBlcm1pc3NpdmUgcGFyc2luZy5cbiAqXG4gKiBFeHBlY3RlZCBvdXRwdXQgZm9ybWF0OiBZWVlZLU1NLUREVEhIOm1tOnNzLnNzc1pcbiAqL1xuY29uc3Qgbm9ybWFsaXplRGF0ZXRpbWUgPSAoZHRTdHIpID0+IHtcbiAgICBpZiAoKDAsIGV4cG9ydHMuaXNWYWxpZERhdGV0aW1lKShkdFN0cikpIHtcbiAgICAgICAgY29uc3Qgb3V0U3RyID0gbmV3IERhdGUoZHRTdHIpLnRvSVNPU3RyaW5nKCk7XG4gICAgICAgIGlmICgoMCwgZXhwb3J0cy5pc1ZhbGlkRGF0ZXRpbWUpKG91dFN0cikpIHtcbiAgICAgICAgICAgIHJldHVybiBvdXRTdHI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gY2hlY2sgaWYgdGhpcyBwZXJtaXNzaXZlIGRhdGV0aW1lIGlzIG1pc3NpbmcgYSB0aW1lem9uZVxuICAgIGlmICghLy4qKChbKy1dXFxkXFxkOj9cXGRcXGQpfFthLXpBLVpdKSQvLnRlc3QoZHRTdHIpKSB7XG4gICAgICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShkdFN0ciArICdaJyk7XG4gICAgICAgIGlmICghaXNOYU4oZGF0ZS5nZXRUaW1lKCkpKSB7XG4gICAgICAgICAgICBjb25zdCB0elN0ciA9IGRhdGUudG9JU09TdHJpbmcoKTtcbiAgICAgICAgICAgIGlmICgoMCwgZXhwb3J0cy5pc1ZhbGlkRGF0ZXRpbWUpKHR6U3RyKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0elN0cjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBmaW5hbGx5IHRyeSBwYXJzaW5nIGFzIHNpbXBsZSBkYXRldGltZVxuICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShkdFN0cik7XG4gICAgaWYgKGlzTmFOKGRhdGUuZ2V0VGltZSgpKSkge1xuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZERhdGV0aW1lRXJyb3IoJ2RhdGV0aW1lIGRpZCBub3QgcGFyc2UgYXMgYW55IHRpbWVzdGFtcCBmb3JtYXQnKTtcbiAgICB9XG4gICAgY29uc3QgaXNvU3RyID0gZGF0ZS50b0lTT1N0cmluZygpO1xuICAgIGlmICgoMCwgZXhwb3J0cy5pc1ZhbGlkRGF0ZXRpbWUpKGlzb1N0cikpIHtcbiAgICAgICAgcmV0dXJuIGlzb1N0cjtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkRGF0ZXRpbWVFcnJvcignZGF0ZXRpbWUgbm9ybWFsaXplZCB0byBpbnZhbGlkIHRpbWVzdGFtcCBzdHJpbmcnKTtcbiAgICB9XG59O1xuZXhwb3J0cy5ub3JtYWxpemVEYXRldGltZSA9IG5vcm1hbGl6ZURhdGV0aW1lO1xuLyogVmFyaWFudCBvZiBub3JtYWxpemVEYXRldGltZSgpIHdoaWNoIGFsd2F5cyByZXR1cm5zIGEgdmFsaWQgZGF0ZXRpbWUgc3RyaW5ncy5cbiAqXG4gKiBJZiBhIEludmFsaWREYXRldGltZUVycm9yIGlzIGVuY291bnRlcmVkLCByZXR1cm5zIHRoZSBVTklYIGVwb2NoIHRpbWUgYXMgYSBVVEMgZGF0ZXRpbWUgKDE5NzAtMDEtMDFUMDA6MDA6MDAuMDAwWikuXG4gKi9cbmNvbnN0IG5vcm1hbGl6ZURhdGV0aW1lQWx3YXlzID0gKGR0U3RyKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuICgwLCBleHBvcnRzLm5vcm1hbGl6ZURhdGV0aW1lKShkdFN0cik7XG4gICAgfVxuICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgaWYgKGVyciBpbnN0YW5jZW9mIEludmFsaWREYXRldGltZUVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IERhdGUoMCkudG9JU09TdHJpbmcoKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBlcnI7XG4gICAgfVxufTtcbmV4cG9ydHMubm9ybWFsaXplRGF0ZXRpbWVBbHdheXMgPSBub3JtYWxpemVEYXRldGltZUFsd2F5cztcbi8qIEluZGljYXRlcyBhIGRhdGV0aW1lIHN0cmluZyBkaWQgbm90IHBhc3MgZnVsbCBhdHByb3RvIExleGljb24gZGF0ZXRpbWUgc3RyaW5nIGZvcm1hdCBjaGVja3MuXG4gKi9cbmNsYXNzIEludmFsaWREYXRldGltZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xufVxuZXhwb3J0cy5JbnZhbGlkRGF0ZXRpbWVFcnJvciA9IEludmFsaWREYXRldGltZUVycm9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0ZXRpbWUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/syntax/dist/datetime.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/syntax/dist/did.js":
/*!**************************************************!*\
  !*** ./node_modules/@atproto/syntax/dist/did.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InvalidDidError = exports.ensureValidDidRegex = exports.ensureValidDid = void 0;\n// Human-readable constraints:\n//   - valid W3C DID (https://www.w3.org/TR/did-core/#did-syntax)\n//      - entire URI is ASCII: [a-zA-Z0-9._:%-]\n//      - always starts \"did:\" (lower-case)\n//      - method name is one or more lower-case letters, followed by \":\"\n//      - remaining identifier can have any of the above chars, but can not end in \":\"\n//      - it seems that a bunch of \":\" can be included, and don't need spaces between\n//      - \"%\" is used only for \"percent encoding\" and must be followed by two hex characters (and thus can't end in \"%\")\n//      - query (\"?\") and fragment (\"#\") stuff is defined for \"DID URIs\", but not as part of identifier itself\n//      - \"The current specification does not take a position on the maximum length of a DID\"\n//   - in current atproto, only allowing did:plc and did:web. But not *forcing* this at lexicon layer\n//   - hard length limit of 8KBytes\n//   - not going to validate \"percent encoding\" here\nconst ensureValidDid = (did) => {\n    if (!did.startsWith('did:')) {\n        throw new InvalidDidError('DID requires \"did:\" prefix');\n    }\n    // check that all chars are boring ASCII\n    if (!/^[a-zA-Z0-9._:%-]*$/.test(did)) {\n        throw new InvalidDidError('Disallowed characters in DID (ASCII letters, digits, and a couple other characters only)');\n    }\n    const { length, 1: method } = did.split(':');\n    if (length < 3) {\n        throw new InvalidDidError('DID requires prefix, method, and method-specific content');\n    }\n    if (!/^[a-z]+$/.test(method)) {\n        throw new InvalidDidError('DID method must be lower-case letters');\n    }\n    if (did.endsWith(':') || did.endsWith('%')) {\n        throw new InvalidDidError('DID can not end with \":\" or \"%\"');\n    }\n    if (did.length > 2 * 1024) {\n        throw new InvalidDidError('DID is too long (2048 chars max)');\n    }\n};\nexports.ensureValidDid = ensureValidDid;\nconst ensureValidDidRegex = (did) => {\n    // simple regex to enforce most constraints via just regex and length.\n    // hand wrote this regex based on above constraints\n    if (!/^did:[a-z]+:[a-zA-Z0-9._:%-]*[a-zA-Z0-9._-]$/.test(did)) {\n        throw new InvalidDidError(\"DID didn't validate via regex\");\n    }\n    if (did.length > 2 * 1024) {\n        throw new InvalidDidError('DID is too long (2048 chars max)');\n    }\n};\nexports.ensureValidDidRegex = ensureValidDidRegex;\nclass InvalidDidError extends Error {\n}\nexports.InvalidDidError = InvalidDidError;\n//# sourceMappingURL=did.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vc3ludGF4L2Rpc3QvZGlkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QixHQUFHLDJCQUEyQixHQUFHLHNCQUFzQjtBQUM5RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG9CQUFvQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vc3ludGF4L2Rpc3QvZGlkLmpzPzFjZmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkludmFsaWREaWRFcnJvciA9IGV4cG9ydHMuZW5zdXJlVmFsaWREaWRSZWdleCA9IGV4cG9ydHMuZW5zdXJlVmFsaWREaWQgPSB2b2lkIDA7XG4vLyBIdW1hbi1yZWFkYWJsZSBjb25zdHJhaW50czpcbi8vICAgLSB2YWxpZCBXM0MgRElEIChodHRwczovL3d3dy53My5vcmcvVFIvZGlkLWNvcmUvI2RpZC1zeW50YXgpXG4vLyAgICAgIC0gZW50aXJlIFVSSSBpcyBBU0NJSTogW2EtekEtWjAtOS5fOiUtXVxuLy8gICAgICAtIGFsd2F5cyBzdGFydHMgXCJkaWQ6XCIgKGxvd2VyLWNhc2UpXG4vLyAgICAgIC0gbWV0aG9kIG5hbWUgaXMgb25lIG9yIG1vcmUgbG93ZXItY2FzZSBsZXR0ZXJzLCBmb2xsb3dlZCBieSBcIjpcIlxuLy8gICAgICAtIHJlbWFpbmluZyBpZGVudGlmaWVyIGNhbiBoYXZlIGFueSBvZiB0aGUgYWJvdmUgY2hhcnMsIGJ1dCBjYW4gbm90IGVuZCBpbiBcIjpcIlxuLy8gICAgICAtIGl0IHNlZW1zIHRoYXQgYSBidW5jaCBvZiBcIjpcIiBjYW4gYmUgaW5jbHVkZWQsIGFuZCBkb24ndCBuZWVkIHNwYWNlcyBiZXR3ZWVuXG4vLyAgICAgIC0gXCIlXCIgaXMgdXNlZCBvbmx5IGZvciBcInBlcmNlbnQgZW5jb2RpbmdcIiBhbmQgbXVzdCBiZSBmb2xsb3dlZCBieSB0d28gaGV4IGNoYXJhY3RlcnMgKGFuZCB0aHVzIGNhbid0IGVuZCBpbiBcIiVcIilcbi8vICAgICAgLSBxdWVyeSAoXCI/XCIpIGFuZCBmcmFnbWVudCAoXCIjXCIpIHN0dWZmIGlzIGRlZmluZWQgZm9yIFwiRElEIFVSSXNcIiwgYnV0IG5vdCBhcyBwYXJ0IG9mIGlkZW50aWZpZXIgaXRzZWxmXG4vLyAgICAgIC0gXCJUaGUgY3VycmVudCBzcGVjaWZpY2F0aW9uIGRvZXMgbm90IHRha2UgYSBwb3NpdGlvbiBvbiB0aGUgbWF4aW11bSBsZW5ndGggb2YgYSBESURcIlxuLy8gICAtIGluIGN1cnJlbnQgYXRwcm90bywgb25seSBhbGxvd2luZyBkaWQ6cGxjIGFuZCBkaWQ6d2ViLiBCdXQgbm90ICpmb3JjaW5nKiB0aGlzIGF0IGxleGljb24gbGF5ZXJcbi8vICAgLSBoYXJkIGxlbmd0aCBsaW1pdCBvZiA4S0J5dGVzXG4vLyAgIC0gbm90IGdvaW5nIHRvIHZhbGlkYXRlIFwicGVyY2VudCBlbmNvZGluZ1wiIGhlcmVcbmNvbnN0IGVuc3VyZVZhbGlkRGlkID0gKGRpZCkgPT4ge1xuICAgIGlmICghZGlkLnN0YXJ0c1dpdGgoJ2RpZDonKSkge1xuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZERpZEVycm9yKCdESUQgcmVxdWlyZXMgXCJkaWQ6XCIgcHJlZml4Jyk7XG4gICAgfVxuICAgIC8vIGNoZWNrIHRoYXQgYWxsIGNoYXJzIGFyZSBib3JpbmcgQVNDSUlcbiAgICBpZiAoIS9eW2EtekEtWjAtOS5fOiUtXSokLy50ZXN0KGRpZCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEludmFsaWREaWRFcnJvcignRGlzYWxsb3dlZCBjaGFyYWN0ZXJzIGluIERJRCAoQVNDSUkgbGV0dGVycywgZGlnaXRzLCBhbmQgYSBjb3VwbGUgb3RoZXIgY2hhcmFjdGVycyBvbmx5KScpO1xuICAgIH1cbiAgICBjb25zdCB7IGxlbmd0aCwgMTogbWV0aG9kIH0gPSBkaWQuc3BsaXQoJzonKTtcbiAgICBpZiAobGVuZ3RoIDwgMykge1xuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZERpZEVycm9yKCdESUQgcmVxdWlyZXMgcHJlZml4LCBtZXRob2QsIGFuZCBtZXRob2Qtc3BlY2lmaWMgY29udGVudCcpO1xuICAgIH1cbiAgICBpZiAoIS9eW2Etel0rJC8udGVzdChtZXRob2QpKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkRGlkRXJyb3IoJ0RJRCBtZXRob2QgbXVzdCBiZSBsb3dlci1jYXNlIGxldHRlcnMnKTtcbiAgICB9XG4gICAgaWYgKGRpZC5lbmRzV2l0aCgnOicpIHx8IGRpZC5lbmRzV2l0aCgnJScpKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkRGlkRXJyb3IoJ0RJRCBjYW4gbm90IGVuZCB3aXRoIFwiOlwiIG9yIFwiJVwiJyk7XG4gICAgfVxuICAgIGlmIChkaWQubGVuZ3RoID4gMiAqIDEwMjQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEludmFsaWREaWRFcnJvcignRElEIGlzIHRvbyBsb25nICgyMDQ4IGNoYXJzIG1heCknKTtcbiAgICB9XG59O1xuZXhwb3J0cy5lbnN1cmVWYWxpZERpZCA9IGVuc3VyZVZhbGlkRGlkO1xuY29uc3QgZW5zdXJlVmFsaWREaWRSZWdleCA9IChkaWQpID0+IHtcbiAgICAvLyBzaW1wbGUgcmVnZXggdG8gZW5mb3JjZSBtb3N0IGNvbnN0cmFpbnRzIHZpYSBqdXN0IHJlZ2V4IGFuZCBsZW5ndGguXG4gICAgLy8gaGFuZCB3cm90ZSB0aGlzIHJlZ2V4IGJhc2VkIG9uIGFib3ZlIGNvbnN0cmFpbnRzXG4gICAgaWYgKCEvXmRpZDpbYS16XSs6W2EtekEtWjAtOS5fOiUtXSpbYS16QS1aMC05Ll8tXSQvLnRlc3QoZGlkKSkge1xuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZERpZEVycm9yKFwiRElEIGRpZG4ndCB2YWxpZGF0ZSB2aWEgcmVnZXhcIik7XG4gICAgfVxuICAgIGlmIChkaWQubGVuZ3RoID4gMiAqIDEwMjQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEludmFsaWREaWRFcnJvcignRElEIGlzIHRvbyBsb25nICgyMDQ4IGNoYXJzIG1heCknKTtcbiAgICB9XG59O1xuZXhwb3J0cy5lbnN1cmVWYWxpZERpZFJlZ2V4ID0gZW5zdXJlVmFsaWREaWRSZWdleDtcbmNsYXNzIEludmFsaWREaWRFcnJvciBleHRlbmRzIEVycm9yIHtcbn1cbmV4cG9ydHMuSW52YWxpZERpZEVycm9yID0gSW52YWxpZERpZEVycm9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGlkLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/syntax/dist/did.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/syntax/dist/handle.js":
/*!*****************************************************!*\
  !*** ./node_modules/@atproto/syntax/dist/handle.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DisallowedDomainError = exports.UnsupportedDomainError = exports.ReservedHandleError = exports.InvalidHandleError = exports.isValidTld = exports.isValidHandle = exports.normalizeAndEnsureValidHandle = exports.normalizeHandle = exports.ensureValidHandleRegex = exports.ensureValidHandle = exports.DISALLOWED_TLDS = exports.INVALID_HANDLE = void 0;\nexports.INVALID_HANDLE = 'handle.invalid';\n// Currently these are registration-time restrictions, not protocol-level\n// restrictions. We have a couple accounts in the wild that we need to clean up\n// before hard-disallow.\n// See also: https://en.wikipedia.org/wiki/Top-level_domain#Reserved_domains\nexports.DISALLOWED_TLDS = [\n    '.local',\n    '.arpa',\n    '.invalid',\n    '.localhost',\n    '.internal',\n    '.example',\n    '.alt',\n    // policy could concievably change on \".onion\" some day\n    '.onion',\n    // NOTE: .test is allowed in testing and devopment. In practical terms\n    // \"should\" \"never\" actually resolve and get registered in production\n];\n// Handle constraints, in English:\n//  - must be a possible domain name\n//    - RFC-1035 is commonly referenced, but has been updated. eg, RFC-3696,\n//      section 2. and RFC-3986, section 3. can now have leading numbers (eg,\n//      4chan.org)\n//    - \"labels\" (sub-names) are made of ASCII letters, digits, hyphens\n//    - can not start or end with a hyphen\n//    - TLD (last component) should not start with a digit\n//    - can't end with a hyphen (can end with digit)\n//    - each segment must be between 1 and 63 characters (not including any periods)\n//    - overall length can't be more than 253 characters\n//    - separated by (ASCII) periods; does not start or end with period\n//    - case insensitive\n//    - domains (handles) are equal if they are the same lower-case\n//    - punycode allowed for internationalization\n//  - no whitespace, null bytes, joining chars, etc\n//  - does not validate whether domain or TLD exists, or is a reserved or\n//    special TLD (eg, .onion or .local)\n//  - does not validate punycode\nconst ensureValidHandle = (handle) => {\n    // check that all chars are boring ASCII\n    if (!/^[a-zA-Z0-9.-]*$/.test(handle)) {\n        throw new InvalidHandleError('Disallowed characters in handle (ASCII letters, digits, dashes, periods only)');\n    }\n    if (handle.length > 253) {\n        throw new InvalidHandleError('Handle is too long (253 chars max)');\n    }\n    const labels = handle.split('.');\n    if (labels.length < 2) {\n        throw new InvalidHandleError('Handle domain needs at least two parts');\n    }\n    for (let i = 0; i < labels.length; i++) {\n        const l = labels[i];\n        if (l.length < 1) {\n            throw new InvalidHandleError('Handle parts can not be empty');\n        }\n        if (l.length > 63) {\n            throw new InvalidHandleError('Handle part too long (max 63 chars)');\n        }\n        if (l.endsWith('-') || l.startsWith('-')) {\n            throw new InvalidHandleError('Handle parts can not start or end with hyphens');\n        }\n        if (i + 1 === labels.length && !/^[a-zA-Z]/.test(l)) {\n            throw new InvalidHandleError('Handle final component (TLD) must start with ASCII letter');\n        }\n    }\n};\nexports.ensureValidHandle = ensureValidHandle;\n// simple regex translation of above constraints\nconst ensureValidHandleRegex = (handle) => {\n    if (!/^([a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?$/.test(handle)) {\n        throw new InvalidHandleError(\"Handle didn't validate via regex\");\n    }\n    if (handle.length > 253) {\n        throw new InvalidHandleError('Handle is too long (253 chars max)');\n    }\n};\nexports.ensureValidHandleRegex = ensureValidHandleRegex;\nconst normalizeHandle = (handle) => {\n    return handle.toLowerCase();\n};\nexports.normalizeHandle = normalizeHandle;\nconst normalizeAndEnsureValidHandle = (handle) => {\n    const normalized = (0, exports.normalizeHandle)(handle);\n    (0, exports.ensureValidHandle)(normalized);\n    return normalized;\n};\nexports.normalizeAndEnsureValidHandle = normalizeAndEnsureValidHandle;\nconst isValidHandle = (handle) => {\n    try {\n        (0, exports.ensureValidHandle)(handle);\n    }\n    catch (err) {\n        if (err instanceof InvalidHandleError) {\n            return false;\n        }\n        throw err;\n    }\n    return true;\n};\nexports.isValidHandle = isValidHandle;\nconst isValidTld = (handle) => {\n    return !exports.DISALLOWED_TLDS.some((domain) => handle.endsWith(domain));\n};\nexports.isValidTld = isValidTld;\nclass InvalidHandleError extends Error {\n}\nexports.InvalidHandleError = InvalidHandleError;\n/** @deprecated Never used */\nclass ReservedHandleError extends Error {\n}\nexports.ReservedHandleError = ReservedHandleError;\n/** @deprecated Never used */\nclass UnsupportedDomainError extends Error {\n}\nexports.UnsupportedDomainError = UnsupportedDomainError;\n/** @deprecated Never used */\nclass DisallowedDomainError extends Error {\n}\nexports.DisallowedDomainError = DisallowedDomainError;\n//# sourceMappingURL=handle.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/syntax/dist/handle.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/syntax/dist/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@atproto/syntax/dist/index.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./handle */ \"(ssr)/./node_modules/@atproto/syntax/dist/handle.js\"), exports);\n__exportStar(__webpack_require__(/*! ./did */ \"(ssr)/./node_modules/@atproto/syntax/dist/did.js\"), exports);\n__exportStar(__webpack_require__(/*! ./nsid */ \"(ssr)/./node_modules/@atproto/syntax/dist/nsid.js\"), exports);\n__exportStar(__webpack_require__(/*! ./aturi */ \"(ssr)/./node_modules/@atproto/syntax/dist/aturi.js\"), exports);\n__exportStar(__webpack_require__(/*! ./tid */ \"(ssr)/./node_modules/@atproto/syntax/dist/tid.js\"), exports);\n__exportStar(__webpack_require__(/*! ./recordkey */ \"(ssr)/./node_modules/@atproto/syntax/dist/recordkey.js\"), exports);\n__exportStar(__webpack_require__(/*! ./datetime */ \"(ssr)/./node_modules/@atproto/syntax/dist/datetime.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vc3ludGF4L2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxtQkFBTyxDQUFDLHFFQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQywrREFBTztBQUM1QixhQUFhLG1CQUFPLENBQUMsaUVBQVE7QUFDN0IsYUFBYSxtQkFBTyxDQUFDLG1FQUFTO0FBQzlCLGFBQWEsbUJBQU8sQ0FBQywrREFBTztBQUM1QixhQUFhLG1CQUFPLENBQUMsMkVBQWE7QUFDbEMsYUFBYSxtQkFBTyxDQUFDLHlFQUFZO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVhY2Utem9uZS13ZWIvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vc3ludGF4L2Rpc3QvaW5kZXguanM/M2Y0NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2hhbmRsZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZGlkXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9uc2lkXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hdHVyaVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdGlkXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9yZWNvcmRrZXlcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2RhdGV0aW1lXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/syntax/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/syntax/dist/nsid.js":
/*!***************************************************!*\
  !*** ./node_modules/@atproto/syntax/dist/nsid.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\nGrammar:\n\nalpha     = \"a\" / \"b\" / \"c\" / \"d\" / \"e\" / \"f\" / \"g\" / \"h\" / \"i\" / \"j\" / \"k\" / \"l\" / \"m\" / \"n\" / \"o\" / \"p\" / \"q\" / \"r\" / \"s\" / \"t\" / \"u\" / \"v\" / \"w\" / \"x\" / \"y\" / \"z\" / \"A\" / \"B\" / \"C\" / \"D\" / \"E\" / \"F\" / \"G\" / \"H\" / \"I\" / \"J\" / \"K\" / \"L\" / \"M\" / \"N\" / \"O\" / \"P\" / \"Q\" / \"R\" / \"S\" / \"T\" / \"U\" / \"V\" / \"W\" / \"X\" / \"Y\" / \"Z\"\nnumber    = \"1\" / \"2\" / \"3\" / \"4\" / \"5\" / \"6\" / \"7\" / \"8\" / \"9\" / \"0\"\ndelim     = \".\"\nsegment   = alpha *( alpha / number / \"-\" )\nauthority = segment *( delim segment )\nname      = alpha *( alpha )\nnsid      = authority delim name\n\n*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InvalidNsidError = exports.ensureValidNsidRegex = exports.ensureValidNsid = exports.NSID = void 0;\nclass NSID {\n    static parse(nsid) {\n        return new NSID(nsid);\n    }\n    static create(authority, name) {\n        const segments = [...authority.split('.').reverse(), name].join('.');\n        return new NSID(segments);\n    }\n    static isValid(nsid) {\n        try {\n            NSID.parse(nsid);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    constructor(nsid) {\n        Object.defineProperty(this, \"segments\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        (0, exports.ensureValidNsid)(nsid);\n        this.segments = nsid.split('.');\n    }\n    get authority() {\n        return this.segments\n            .slice(0, this.segments.length - 1)\n            .reverse()\n            .join('.');\n    }\n    get name() {\n        return this.segments.at(this.segments.length - 1);\n    }\n    toString() {\n        return this.segments.join('.');\n    }\n}\nexports.NSID = NSID;\n// Human readable constraints on NSID:\n// - a valid domain in reversed notation\n// - followed by an additional period-separated name, which is camel-case letters\nconst ensureValidNsid = (nsid) => {\n    const toCheck = nsid;\n    // check that all chars are boring ASCII\n    if (!/^[a-zA-Z0-9.-]*$/.test(toCheck)) {\n        throw new InvalidNsidError('Disallowed characters in NSID (ASCII letters, digits, dashes, periods only)');\n    }\n    if (toCheck.length > 253 + 1 + 63) {\n        throw new InvalidNsidError('NSID is too long (317 chars max)');\n    }\n    const labels = toCheck.split('.');\n    if (labels.length < 3) {\n        throw new InvalidNsidError('NSID needs at least three parts');\n    }\n    for (let i = 0; i < labels.length; i++) {\n        const l = labels[i];\n        if (l.length < 1) {\n            throw new InvalidNsidError('NSID parts can not be empty');\n        }\n        if (l.length > 63) {\n            throw new InvalidNsidError('NSID part too long (max 63 chars)');\n        }\n        if (l.endsWith('-') || l.startsWith('-')) {\n            throw new InvalidNsidError('NSID parts can not start or end with hyphen');\n        }\n        if (/^[0-9]/.test(l) && i === 0) {\n            throw new InvalidNsidError('NSID first part may not start with a digit');\n        }\n        if (!/^[a-zA-Z]+$/.test(l) && i + 1 === labels.length) {\n            throw new InvalidNsidError('NSID name part must be only letters');\n        }\n    }\n};\nexports.ensureValidNsid = ensureValidNsid;\nconst ensureValidNsidRegex = (nsid) => {\n    // simple regex to enforce most constraints via just regex and length.\n    // hand wrote this regex based on above constraints\n    if (!/^[a-zA-Z]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(\\.[a-zA-Z]([a-zA-Z]{0,61}[a-zA-Z])?)$/.test(nsid)) {\n        throw new InvalidNsidError(\"NSID didn't validate via regex\");\n    }\n    if (nsid.length > 253 + 1 + 63) {\n        throw new InvalidNsidError('NSID is too long (317 chars max)');\n    }\n};\nexports.ensureValidNsidRegex = ensureValidNsidRegex;\nclass InvalidNsidError extends Error {\n}\nexports.InvalidNsidError = InvalidNsidError;\n//# sourceMappingURL=nsid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vc3ludGF4L2Rpc3QvbnNpZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCLEdBQUcsNEJBQTRCLEdBQUcsdUJBQXVCLEdBQUcsWUFBWTtBQUNoRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG1CQUFtQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLEtBQUsseUNBQXlDLEtBQUssb0NBQW9DLEtBQUs7QUFDN0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9zeW50YXgvZGlzdC9uc2lkLmpzPzIwM2MiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuR3JhbW1hcjpcblxuYWxwaGEgICAgID0gXCJhXCIgLyBcImJcIiAvIFwiY1wiIC8gXCJkXCIgLyBcImVcIiAvIFwiZlwiIC8gXCJnXCIgLyBcImhcIiAvIFwiaVwiIC8gXCJqXCIgLyBcImtcIiAvIFwibFwiIC8gXCJtXCIgLyBcIm5cIiAvIFwib1wiIC8gXCJwXCIgLyBcInFcIiAvIFwiclwiIC8gXCJzXCIgLyBcInRcIiAvIFwidVwiIC8gXCJ2XCIgLyBcIndcIiAvIFwieFwiIC8gXCJ5XCIgLyBcInpcIiAvIFwiQVwiIC8gXCJCXCIgLyBcIkNcIiAvIFwiRFwiIC8gXCJFXCIgLyBcIkZcIiAvIFwiR1wiIC8gXCJIXCIgLyBcIklcIiAvIFwiSlwiIC8gXCJLXCIgLyBcIkxcIiAvIFwiTVwiIC8gXCJOXCIgLyBcIk9cIiAvIFwiUFwiIC8gXCJRXCIgLyBcIlJcIiAvIFwiU1wiIC8gXCJUXCIgLyBcIlVcIiAvIFwiVlwiIC8gXCJXXCIgLyBcIlhcIiAvIFwiWVwiIC8gXCJaXCJcbm51bWJlciAgICA9IFwiMVwiIC8gXCIyXCIgLyBcIjNcIiAvIFwiNFwiIC8gXCI1XCIgLyBcIjZcIiAvIFwiN1wiIC8gXCI4XCIgLyBcIjlcIiAvIFwiMFwiXG5kZWxpbSAgICAgPSBcIi5cIlxuc2VnbWVudCAgID0gYWxwaGEgKiggYWxwaGEgLyBudW1iZXIgLyBcIi1cIiApXG5hdXRob3JpdHkgPSBzZWdtZW50ICooIGRlbGltIHNlZ21lbnQgKVxubmFtZSAgICAgID0gYWxwaGEgKiggYWxwaGEgKVxubnNpZCAgICAgID0gYXV0aG9yaXR5IGRlbGltIG5hbWVcblxuKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSW52YWxpZE5zaWRFcnJvciA9IGV4cG9ydHMuZW5zdXJlVmFsaWROc2lkUmVnZXggPSBleHBvcnRzLmVuc3VyZVZhbGlkTnNpZCA9IGV4cG9ydHMuTlNJRCA9IHZvaWQgMDtcbmNsYXNzIE5TSUQge1xuICAgIHN0YXRpYyBwYXJzZShuc2lkKSB7XG4gICAgICAgIHJldHVybiBuZXcgTlNJRChuc2lkKTtcbiAgICB9XG4gICAgc3RhdGljIGNyZWF0ZShhdXRob3JpdHksIG5hbWUpIHtcbiAgICAgICAgY29uc3Qgc2VnbWVudHMgPSBbLi4uYXV0aG9yaXR5LnNwbGl0KCcuJykucmV2ZXJzZSgpLCBuYW1lXS5qb2luKCcuJyk7XG4gICAgICAgIHJldHVybiBuZXcgTlNJRChzZWdtZW50cyk7XG4gICAgfVxuICAgIHN0YXRpYyBpc1ZhbGlkKG5zaWQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIE5TSUQucGFyc2UobnNpZCk7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKG5zaWQpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwic2VnbWVudHNcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFtdXG4gICAgICAgIH0pO1xuICAgICAgICAoMCwgZXhwb3J0cy5lbnN1cmVWYWxpZE5zaWQpKG5zaWQpO1xuICAgICAgICB0aGlzLnNlZ21lbnRzID0gbnNpZC5zcGxpdCgnLicpO1xuICAgIH1cbiAgICBnZXQgYXV0aG9yaXR5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zZWdtZW50c1xuICAgICAgICAgICAgLnNsaWNlKDAsIHRoaXMuc2VnbWVudHMubGVuZ3RoIC0gMSlcbiAgICAgICAgICAgIC5yZXZlcnNlKClcbiAgICAgICAgICAgIC5qb2luKCcuJyk7XG4gICAgfVxuICAgIGdldCBuYW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zZWdtZW50cy5hdCh0aGlzLnNlZ21lbnRzLmxlbmd0aCAtIDEpO1xuICAgIH1cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2VnbWVudHMuam9pbignLicpO1xuICAgIH1cbn1cbmV4cG9ydHMuTlNJRCA9IE5TSUQ7XG4vLyBIdW1hbiByZWFkYWJsZSBjb25zdHJhaW50cyBvbiBOU0lEOlxuLy8gLSBhIHZhbGlkIGRvbWFpbiBpbiByZXZlcnNlZCBub3RhdGlvblxuLy8gLSBmb2xsb3dlZCBieSBhbiBhZGRpdGlvbmFsIHBlcmlvZC1zZXBhcmF0ZWQgbmFtZSwgd2hpY2ggaXMgY2FtZWwtY2FzZSBsZXR0ZXJzXG5jb25zdCBlbnN1cmVWYWxpZE5zaWQgPSAobnNpZCkgPT4ge1xuICAgIGNvbnN0IHRvQ2hlY2sgPSBuc2lkO1xuICAgIC8vIGNoZWNrIHRoYXQgYWxsIGNoYXJzIGFyZSBib3JpbmcgQVNDSUlcbiAgICBpZiAoIS9eW2EtekEtWjAtOS4tXSokLy50ZXN0KHRvQ2hlY2spKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkTnNpZEVycm9yKCdEaXNhbGxvd2VkIGNoYXJhY3RlcnMgaW4gTlNJRCAoQVNDSUkgbGV0dGVycywgZGlnaXRzLCBkYXNoZXMsIHBlcmlvZHMgb25seSknKTtcbiAgICB9XG4gICAgaWYgKHRvQ2hlY2subGVuZ3RoID4gMjUzICsgMSArIDYzKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkTnNpZEVycm9yKCdOU0lEIGlzIHRvbyBsb25nICgzMTcgY2hhcnMgbWF4KScpO1xuICAgIH1cbiAgICBjb25zdCBsYWJlbHMgPSB0b0NoZWNrLnNwbGl0KCcuJyk7XG4gICAgaWYgKGxhYmVscy5sZW5ndGggPCAzKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkTnNpZEVycm9yKCdOU0lEIG5lZWRzIGF0IGxlYXN0IHRocmVlIHBhcnRzJyk7XG4gICAgfVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGFiZWxzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGwgPSBsYWJlbHNbaV07XG4gICAgICAgIGlmIChsLmxlbmd0aCA8IDEpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBJbnZhbGlkTnNpZEVycm9yKCdOU0lEIHBhcnRzIGNhbiBub3QgYmUgZW1wdHknKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobC5sZW5ndGggPiA2Mykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEludmFsaWROc2lkRXJyb3IoJ05TSUQgcGFydCB0b28gbG9uZyAobWF4IDYzIGNoYXJzKScpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChsLmVuZHNXaXRoKCctJykgfHwgbC5zdGFydHNXaXRoKCctJykpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBJbnZhbGlkTnNpZEVycm9yKCdOU0lEIHBhcnRzIGNhbiBub3Qgc3RhcnQgb3IgZW5kIHdpdGggaHlwaGVuJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKC9eWzAtOV0vLnRlc3QobCkgJiYgaSA9PT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEludmFsaWROc2lkRXJyb3IoJ05TSUQgZmlyc3QgcGFydCBtYXkgbm90IHN0YXJ0IHdpdGggYSBkaWdpdCcpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghL15bYS16QS1aXSskLy50ZXN0KGwpICYmIGkgKyAxID09PSBsYWJlbHMubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgSW52YWxpZE5zaWRFcnJvcignTlNJRCBuYW1lIHBhcnQgbXVzdCBiZSBvbmx5IGxldHRlcnMnKTtcbiAgICAgICAgfVxuICAgIH1cbn07XG5leHBvcnRzLmVuc3VyZVZhbGlkTnNpZCA9IGVuc3VyZVZhbGlkTnNpZDtcbmNvbnN0IGVuc3VyZVZhbGlkTnNpZFJlZ2V4ID0gKG5zaWQpID0+IHtcbiAgICAvLyBzaW1wbGUgcmVnZXggdG8gZW5mb3JjZSBtb3N0IGNvbnN0cmFpbnRzIHZpYSBqdXN0IHJlZ2V4IGFuZCBsZW5ndGguXG4gICAgLy8gaGFuZCB3cm90ZSB0aGlzIHJlZ2V4IGJhc2VkIG9uIGFib3ZlIGNvbnN0cmFpbnRzXG4gICAgaWYgKCEvXlthLXpBLVpdKFthLXpBLVowLTktXXswLDYxfVthLXpBLVowLTldKT8oXFwuW2EtekEtWjAtOV0oW2EtekEtWjAtOS1dezAsNjF9W2EtekEtWjAtOV0pPykrKFxcLlthLXpBLVpdKFthLXpBLVpdezAsNjF9W2EtekEtWl0pPykkLy50ZXN0KG5zaWQpKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkTnNpZEVycm9yKFwiTlNJRCBkaWRuJ3QgdmFsaWRhdGUgdmlhIHJlZ2V4XCIpO1xuICAgIH1cbiAgICBpZiAobnNpZC5sZW5ndGggPiAyNTMgKyAxICsgNjMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEludmFsaWROc2lkRXJyb3IoJ05TSUQgaXMgdG9vIGxvbmcgKDMxNyBjaGFycyBtYXgpJyk7XG4gICAgfVxufTtcbmV4cG9ydHMuZW5zdXJlVmFsaWROc2lkUmVnZXggPSBlbnN1cmVWYWxpZE5zaWRSZWdleDtcbmNsYXNzIEludmFsaWROc2lkRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG59XG5leHBvcnRzLkludmFsaWROc2lkRXJyb3IgPSBJbnZhbGlkTnNpZEVycm9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bnNpZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/syntax/dist/nsid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/syntax/dist/recordkey.js":
/*!********************************************************!*\
  !*** ./node_modules/@atproto/syntax/dist/recordkey.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InvalidRecordKeyError = exports.isValidRecordKey = exports.ensureValidRecordKey = void 0;\nconst ensureValidRecordKey = (rkey) => {\n    if (rkey.length > 512 || rkey.length < 1) {\n        throw new InvalidRecordKeyError('record key must be 1 to 512 characters');\n    }\n    // simple regex to enforce most constraints via just regex and length.\n    if (!/^[a-zA-Z0-9_~.:-]{1,512}$/.test(rkey)) {\n        throw new InvalidRecordKeyError('record key syntax not valid (regex)');\n    }\n    if (rkey === '.' || rkey === '..')\n        throw new InvalidRecordKeyError('record key can not be \".\" or \"..\"');\n};\nexports.ensureValidRecordKey = ensureValidRecordKey;\nconst isValidRecordKey = (rkey) => {\n    try {\n        (0, exports.ensureValidRecordKey)(rkey);\n    }\n    catch (err) {\n        if (err instanceof InvalidRecordKeyError) {\n            return false;\n        }\n        throw err;\n    }\n    return true;\n};\nexports.isValidRecordKey = isValidRecordKey;\nclass InvalidRecordKeyError extends Error {\n}\nexports.InvalidRecordKeyError = InvalidRecordKeyError;\n//# sourceMappingURL=recordkey.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vc3ludGF4L2Rpc3QvcmVjb3Jka2V5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDZCQUE2QixHQUFHLHdCQUF3QixHQUFHLDRCQUE0QjtBQUN2RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLE1BQU07QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL3N5bnRheC9kaXN0L3JlY29yZGtleS5qcz84NzE3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JbnZhbGlkUmVjb3JkS2V5RXJyb3IgPSBleHBvcnRzLmlzVmFsaWRSZWNvcmRLZXkgPSBleHBvcnRzLmVuc3VyZVZhbGlkUmVjb3JkS2V5ID0gdm9pZCAwO1xuY29uc3QgZW5zdXJlVmFsaWRSZWNvcmRLZXkgPSAocmtleSkgPT4ge1xuICAgIGlmIChya2V5Lmxlbmd0aCA+IDUxMiB8fCBya2V5Lmxlbmd0aCA8IDEpIHtcbiAgICAgICAgdGhyb3cgbmV3IEludmFsaWRSZWNvcmRLZXlFcnJvcigncmVjb3JkIGtleSBtdXN0IGJlIDEgdG8gNTEyIGNoYXJhY3RlcnMnKTtcbiAgICB9XG4gICAgLy8gc2ltcGxlIHJlZ2V4IHRvIGVuZm9yY2UgbW9zdCBjb25zdHJhaW50cyB2aWEganVzdCByZWdleCBhbmQgbGVuZ3RoLlxuICAgIGlmICghL15bYS16QS1aMC05X34uOi1dezEsNTEyfSQvLnRlc3QocmtleSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEludmFsaWRSZWNvcmRLZXlFcnJvcigncmVjb3JkIGtleSBzeW50YXggbm90IHZhbGlkIChyZWdleCknKTtcbiAgICB9XG4gICAgaWYgKHJrZXkgPT09ICcuJyB8fCBya2V5ID09PSAnLi4nKVxuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZFJlY29yZEtleUVycm9yKCdyZWNvcmQga2V5IGNhbiBub3QgYmUgXCIuXCIgb3IgXCIuLlwiJyk7XG59O1xuZXhwb3J0cy5lbnN1cmVWYWxpZFJlY29yZEtleSA9IGVuc3VyZVZhbGlkUmVjb3JkS2V5O1xuY29uc3QgaXNWYWxpZFJlY29yZEtleSA9IChya2V5KSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgKDAsIGV4cG9ydHMuZW5zdXJlVmFsaWRSZWNvcmRLZXkpKHJrZXkpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGlmIChlcnIgaW5zdGFuY2VvZiBJbnZhbGlkUmVjb3JkS2V5RXJyb3IpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBlcnI7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufTtcbmV4cG9ydHMuaXNWYWxpZFJlY29yZEtleSA9IGlzVmFsaWRSZWNvcmRLZXk7XG5jbGFzcyBJbnZhbGlkUmVjb3JkS2V5RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG59XG5leHBvcnRzLkludmFsaWRSZWNvcmRLZXlFcnJvciA9IEludmFsaWRSZWNvcmRLZXlFcnJvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlY29yZGtleS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/syntax/dist/recordkey.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/syntax/dist/tid.js":
/*!**************************************************!*\
  !*** ./node_modules/@atproto/syntax/dist/tid.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InvalidTidError = exports.isValidTid = exports.ensureValidTid = void 0;\nconst TID_LENGTH = 13;\nconst TID_REGEX = /^[234567abcdefghij][234567abcdefghijklmnopqrstuvwxyz]{12}$/;\nconst ensureValidTid = (tid) => {\n    if (tid.length !== TID_LENGTH) {\n        throw new InvalidTidError(`TID must be ${TID_LENGTH} characters`);\n    }\n    // simple regex to enforce most constraints via just regex and length.\n    if (!TID_REGEX.test(tid)) {\n        throw new InvalidTidError('TID syntax not valid (regex)');\n    }\n};\nexports.ensureValidTid = ensureValidTid;\nconst isValidTid = (tid) => {\n    return tid.length === TID_LENGTH && TID_REGEX.test(tid);\n};\nexports.isValidTid = isValidTid;\nclass InvalidTidError extends Error {\n}\nexports.InvalidTidError = InvalidTidError;\n//# sourceMappingURL=tid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8vc3ludGF4L2Rpc3QvdGlkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QixHQUFHLGtCQUFrQixHQUFHLHNCQUFzQjtBQUNyRTtBQUNBLHlFQUF5RSxHQUFHO0FBQzVFO0FBQ0E7QUFDQSxpREFBaUQsWUFBWTtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by9zeW50YXgvZGlzdC90aWQuanM/NjBkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSW52YWxpZFRpZEVycm9yID0gZXhwb3J0cy5pc1ZhbGlkVGlkID0gZXhwb3J0cy5lbnN1cmVWYWxpZFRpZCA9IHZvaWQgMDtcbmNvbnN0IFRJRF9MRU5HVEggPSAxMztcbmNvbnN0IFRJRF9SRUdFWCA9IC9eWzIzNDU2N2FiY2RlZmdoaWpdWzIzNDU2N2FiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6XXsxMn0kLztcbmNvbnN0IGVuc3VyZVZhbGlkVGlkID0gKHRpZCkgPT4ge1xuICAgIGlmICh0aWQubGVuZ3RoICE9PSBUSURfTEVOR1RIKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkVGlkRXJyb3IoYFRJRCBtdXN0IGJlICR7VElEX0xFTkdUSH0gY2hhcmFjdGVyc2ApO1xuICAgIH1cbiAgICAvLyBzaW1wbGUgcmVnZXggdG8gZW5mb3JjZSBtb3N0IGNvbnN0cmFpbnRzIHZpYSBqdXN0IHJlZ2V4IGFuZCBsZW5ndGguXG4gICAgaWYgKCFUSURfUkVHRVgudGVzdCh0aWQpKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkVGlkRXJyb3IoJ1RJRCBzeW50YXggbm90IHZhbGlkIChyZWdleCknKTtcbiAgICB9XG59O1xuZXhwb3J0cy5lbnN1cmVWYWxpZFRpZCA9IGVuc3VyZVZhbGlkVGlkO1xuY29uc3QgaXNWYWxpZFRpZCA9ICh0aWQpID0+IHtcbiAgICByZXR1cm4gdGlkLmxlbmd0aCA9PT0gVElEX0xFTkdUSCAmJiBUSURfUkVHRVgudGVzdCh0aWQpO1xufTtcbmV4cG9ydHMuaXNWYWxpZFRpZCA9IGlzVmFsaWRUaWQ7XG5jbGFzcyBJbnZhbGlkVGlkRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG59XG5leHBvcnRzLkludmFsaWRUaWRFcnJvciA9IEludmFsaWRUaWRFcnJvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRpZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/syntax/dist/tid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/xrpc/dist/client.js":
/*!***************************************************!*\
  !*** ./node_modules/@atproto/xrpc/dist/client.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ServiceClient = exports.Client = void 0;\nconst lexicon_1 = __webpack_require__(/*! @atproto/lexicon */ \"(ssr)/./node_modules/@atproto/lexicon/dist/index.js\");\nconst util_1 = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/@atproto/xrpc/dist/util.js\");\nconst xrpc_client_1 = __webpack_require__(/*! ./xrpc-client */ \"(ssr)/./node_modules/@atproto/xrpc/dist/xrpc-client.js\");\n/** @deprecated Use {@link XrpcClient} instead */\nclass Client {\n    constructor() {\n        Object.defineProperty(this, \"lex\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new lexicon_1.Lexicons()\n        });\n    }\n    /** @deprecated */\n    get fetch() {\n        throw new Error('Client.fetch is no longer supported. Use an XrpcClient instead.');\n    }\n    /** @deprecated */\n    set fetch(_) {\n        throw new Error('Client.fetch is no longer supported. Use an XrpcClient instead.');\n    }\n    // method calls\n    //\n    async call(serviceUri, methodNsid, params, data, opts) {\n        return this.service(serviceUri).call(methodNsid, params, data, opts);\n    }\n    service(serviceUri) {\n        return new ServiceClient(this, serviceUri);\n    }\n    // schemas\n    // =\n    addLexicon(doc) {\n        this.lex.add(doc);\n    }\n    addLexicons(docs) {\n        for (const doc of docs) {\n            this.addLexicon(doc);\n        }\n    }\n    removeLexicon(uri) {\n        this.lex.remove(uri);\n    }\n}\nexports.Client = Client;\n/** @deprecated Use {@link XrpcClient} instead */\nclass ServiceClient extends xrpc_client_1.XrpcClient {\n    constructor(baseClient, serviceUri) {\n        super(async (input, init) => {\n            const headers = (0, util_1.combineHeaders)(init.headers, Object.entries(this.headers));\n            return fetch(new URL(input, this.uri), { ...init, headers });\n        }, baseClient.lex);\n        Object.defineProperty(this, \"baseClient\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: baseClient\n        });\n        Object.defineProperty(this, \"uri\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.uri = typeof serviceUri === 'string' ? new URL(serviceUri) : serviceUri;\n    }\n}\nexports.ServiceClient = ServiceClient;\n//# sourceMappingURL=client.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8veHJwYy9kaXN0L2NsaWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUIsR0FBRyxjQUFjO0FBQ3RDLGtCQUFrQixtQkFBTyxDQUFDLDZFQUFrQjtBQUM1QyxlQUFlLG1CQUFPLENBQUMsK0RBQVE7QUFDL0Isc0JBQXNCLG1CQUFPLENBQUMsNkVBQWU7QUFDN0MscUJBQXFCLGtCQUFrQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxxQkFBcUIsa0JBQWtCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELGtCQUFrQjtBQUN2RSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL3hycGMvZGlzdC9jbGllbnQuanM/MzExYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2VydmljZUNsaWVudCA9IGV4cG9ydHMuQ2xpZW50ID0gdm9pZCAwO1xuY29uc3QgbGV4aWNvbl8xID0gcmVxdWlyZShcIkBhdHByb3RvL2xleGljb25cIik7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi91dGlsXCIpO1xuY29uc3QgeHJwY19jbGllbnRfMSA9IHJlcXVpcmUoXCIuL3hycGMtY2xpZW50XCIpO1xuLyoqIEBkZXByZWNhdGVkIFVzZSB7QGxpbmsgWHJwY0NsaWVudH0gaW5zdGVhZCAqL1xuY2xhc3MgQ2xpZW50IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGV4XCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBuZXcgbGV4aWNvbl8xLkxleGljb25zKClcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKiBAZGVwcmVjYXRlZCAqL1xuICAgIGdldCBmZXRjaCgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDbGllbnQuZmV0Y2ggaXMgbm8gbG9uZ2VyIHN1cHBvcnRlZC4gVXNlIGFuIFhycGNDbGllbnQgaW5zdGVhZC4nKTtcbiAgICB9XG4gICAgLyoqIEBkZXByZWNhdGVkICovXG4gICAgc2V0IGZldGNoKF8pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDbGllbnQuZmV0Y2ggaXMgbm8gbG9uZ2VyIHN1cHBvcnRlZC4gVXNlIGFuIFhycGNDbGllbnQgaW5zdGVhZC4nKTtcbiAgICB9XG4gICAgLy8gbWV0aG9kIGNhbGxzXG4gICAgLy9cbiAgICBhc3luYyBjYWxsKHNlcnZpY2VVcmksIG1ldGhvZE5zaWQsIHBhcmFtcywgZGF0YSwgb3B0cykge1xuICAgICAgICByZXR1cm4gdGhpcy5zZXJ2aWNlKHNlcnZpY2VVcmkpLmNhbGwobWV0aG9kTnNpZCwgcGFyYW1zLCBkYXRhLCBvcHRzKTtcbiAgICB9XG4gICAgc2VydmljZShzZXJ2aWNlVXJpKSB7XG4gICAgICAgIHJldHVybiBuZXcgU2VydmljZUNsaWVudCh0aGlzLCBzZXJ2aWNlVXJpKTtcbiAgICB9XG4gICAgLy8gc2NoZW1hc1xuICAgIC8vID1cbiAgICBhZGRMZXhpY29uKGRvYykge1xuICAgICAgICB0aGlzLmxleC5hZGQoZG9jKTtcbiAgICB9XG4gICAgYWRkTGV4aWNvbnMoZG9jcykge1xuICAgICAgICBmb3IgKGNvbnN0IGRvYyBvZiBkb2NzKSB7XG4gICAgICAgICAgICB0aGlzLmFkZExleGljb24oZG9jKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZW1vdmVMZXhpY29uKHVyaSkge1xuICAgICAgICB0aGlzLmxleC5yZW1vdmUodXJpKTtcbiAgICB9XG59XG5leHBvcnRzLkNsaWVudCA9IENsaWVudDtcbi8qKiBAZGVwcmVjYXRlZCBVc2Uge0BsaW5rIFhycGNDbGllbnR9IGluc3RlYWQgKi9cbmNsYXNzIFNlcnZpY2VDbGllbnQgZXh0ZW5kcyB4cnBjX2NsaWVudF8xLlhycGNDbGllbnQge1xuICAgIGNvbnN0cnVjdG9yKGJhc2VDbGllbnQsIHNlcnZpY2VVcmkpIHtcbiAgICAgICAgc3VwZXIoYXN5bmMgKGlucHV0LCBpbml0KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBoZWFkZXJzID0gKDAsIHV0aWxfMS5jb21iaW5lSGVhZGVycykoaW5pdC5oZWFkZXJzLCBPYmplY3QuZW50cmllcyh0aGlzLmhlYWRlcnMpKTtcbiAgICAgICAgICAgIHJldHVybiBmZXRjaChuZXcgVVJMKGlucHV0LCB0aGlzLnVyaSksIHsgLi4uaW5pdCwgaGVhZGVycyB9KTtcbiAgICAgICAgfSwgYmFzZUNsaWVudC5sZXgpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJiYXNlQ2xpZW50XCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBiYXNlQ2xpZW50XG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJ1cmlcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy51cmkgPSB0eXBlb2Ygc2VydmljZVVyaSA9PT0gJ3N0cmluZycgPyBuZXcgVVJMKHNlcnZpY2VVcmkpIDogc2VydmljZVVyaTtcbiAgICB9XG59XG5leHBvcnRzLlNlcnZpY2VDbGllbnQgPSBTZXJ2aWNlQ2xpZW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/xrpc/dist/client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/xrpc/dist/fetch-handler.js":
/*!**********************************************************!*\
  !*** ./node_modules/@atproto/xrpc/dist/fetch-handler.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.buildFetchHandler = buildFetchHandler;\nconst util_1 = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/@atproto/xrpc/dist/util.js\");\nfunction buildFetchHandler(options) {\n    // Already a fetch handler (allowed for convenience)\n    if (typeof options === 'function')\n        return options;\n    if (typeof options === 'object' && 'fetchHandler' in options) {\n        return options.fetchHandler.bind(options);\n    }\n    const { service, headers: defaultHeaders = undefined, fetch = globalThis.fetch, } = typeof options === 'string' || options instanceof URL\n        ? { service: options }\n        : options;\n    if (typeof fetch !== 'function') {\n        throw new TypeError('XrpcDispatcher requires fetch() to be available in your environment.');\n    }\n    const defaultHeadersEntries = defaultHeaders != null ? Object.entries(defaultHeaders) : undefined;\n    return async function (url, init) {\n        const base = typeof service === 'function' ? service() : service;\n        const fullUrl = new URL(url, base);\n        const headers = (0, util_1.combineHeaders)(init.headers, defaultHeadersEntries);\n        return fetch(fullUrl, { ...init, headers });\n    };\n}\n//# sourceMappingURL=fetch-handler.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8veHJwYy9kaXN0L2ZldGNoLWhhbmRsZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QseUJBQXlCO0FBQ3pCLGVBQWUsbUJBQU8sQ0FBQywrREFBUTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMEVBQTBFO0FBQ3RGLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0Msa0JBQWtCO0FBQ2xEO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL3hycGMvZGlzdC9mZXRjaC1oYW5kbGVyLmpzP2JjZWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmJ1aWxkRmV0Y2hIYW5kbGVyID0gYnVpbGRGZXRjaEhhbmRsZXI7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi91dGlsXCIpO1xuZnVuY3Rpb24gYnVpbGRGZXRjaEhhbmRsZXIob3B0aW9ucykge1xuICAgIC8vIEFscmVhZHkgYSBmZXRjaCBoYW5kbGVyIChhbGxvd2VkIGZvciBjb252ZW5pZW5jZSlcbiAgICBpZiAodHlwZW9mIG9wdGlvbnMgPT09ICdmdW5jdGlvbicpXG4gICAgICAgIHJldHVybiBvcHRpb25zO1xuICAgIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ29iamVjdCcgJiYgJ2ZldGNoSGFuZGxlcicgaW4gb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gb3B0aW9ucy5mZXRjaEhhbmRsZXIuYmluZChvcHRpb25zKTtcbiAgICB9XG4gICAgY29uc3QgeyBzZXJ2aWNlLCBoZWFkZXJzOiBkZWZhdWx0SGVhZGVycyA9IHVuZGVmaW5lZCwgZmV0Y2ggPSBnbG9iYWxUaGlzLmZldGNoLCB9ID0gdHlwZW9mIG9wdGlvbnMgPT09ICdzdHJpbmcnIHx8IG9wdGlvbnMgaW5zdGFuY2VvZiBVUkxcbiAgICAgICAgPyB7IHNlcnZpY2U6IG9wdGlvbnMgfVxuICAgICAgICA6IG9wdGlvbnM7XG4gICAgaWYgKHR5cGVvZiBmZXRjaCAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdYcnBjRGlzcGF0Y2hlciByZXF1aXJlcyBmZXRjaCgpIHRvIGJlIGF2YWlsYWJsZSBpbiB5b3VyIGVudmlyb25tZW50LicpO1xuICAgIH1cbiAgICBjb25zdCBkZWZhdWx0SGVhZGVyc0VudHJpZXMgPSBkZWZhdWx0SGVhZGVycyAhPSBudWxsID8gT2JqZWN0LmVudHJpZXMoZGVmYXVsdEhlYWRlcnMpIDogdW5kZWZpbmVkO1xuICAgIHJldHVybiBhc3luYyBmdW5jdGlvbiAodXJsLCBpbml0KSB7XG4gICAgICAgIGNvbnN0IGJhc2UgPSB0eXBlb2Ygc2VydmljZSA9PT0gJ2Z1bmN0aW9uJyA/IHNlcnZpY2UoKSA6IHNlcnZpY2U7XG4gICAgICAgIGNvbnN0IGZ1bGxVcmwgPSBuZXcgVVJMKHVybCwgYmFzZSk7XG4gICAgICAgIGNvbnN0IGhlYWRlcnMgPSAoMCwgdXRpbF8xLmNvbWJpbmVIZWFkZXJzKShpbml0LmhlYWRlcnMsIGRlZmF1bHRIZWFkZXJzRW50cmllcyk7XG4gICAgICAgIHJldHVybiBmZXRjaChmdWxsVXJsLCB7IC4uLmluaXQsIGhlYWRlcnMgfSk7XG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZldGNoLWhhbmRsZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/xrpc/dist/fetch-handler.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/xrpc/dist/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@atproto/xrpc/dist/index.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./client */ \"(ssr)/./node_modules/@atproto/xrpc/dist/client.js\"), exports);\n__exportStar(__webpack_require__(/*! ./fetch-handler */ \"(ssr)/./node_modules/@atproto/xrpc/dist/fetch-handler.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@atproto/xrpc/dist/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./util */ \"(ssr)/./node_modules/@atproto/xrpc/dist/util.js\"), exports);\n__exportStar(__webpack_require__(/*! ./xrpc-client */ \"(ssr)/./node_modules/@atproto/xrpc/dist/xrpc-client.js\"), exports);\n/* eslint-disable import/no-deprecated */\nconst client_1 = __webpack_require__(/*! ./client */ \"(ssr)/./node_modules/@atproto/xrpc/dist/client.js\");\n/** @deprecated create a local {@link XrpcClient} instance instead */\nconst defaultInst = new client_1.Client();\nexports[\"default\"] = defaultInst;\n/* eslint-enable import/no-deprecated */\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8veHJwYy9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWEsbUJBQU8sQ0FBQyxtRUFBVTtBQUMvQixhQUFhLG1CQUFPLENBQUMsaUZBQWlCO0FBQ3RDLGFBQWEsbUJBQU8sQ0FBQyxpRUFBUztBQUM5QixhQUFhLG1CQUFPLENBQUMsK0RBQVE7QUFDN0IsYUFBYSxtQkFBTyxDQUFDLDZFQUFlO0FBQ3BDO0FBQ0EsaUJBQWlCLG1CQUFPLENBQUMsbUVBQVU7QUFDbkMsZ0NBQWdDLGtCQUFrQjtBQUNsRDtBQUNBLGtCQUFlO0FBQ2Y7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlYWNlLXpvbmUtd2ViLy4vbm9kZV9tb2R1bGVzL0BhdHByb3RvL3hycGMvZGlzdC9pbmRleC5qcz9mY2ZhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY2xpZW50XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9mZXRjaC1oYW5kbGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdXRpbFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4veHJwYy1jbGllbnRcIiksIGV4cG9ydHMpO1xuLyogZXNsaW50LWRpc2FibGUgaW1wb3J0L25vLWRlcHJlY2F0ZWQgKi9cbmNvbnN0IGNsaWVudF8xID0gcmVxdWlyZShcIi4vY2xpZW50XCIpO1xuLyoqIEBkZXByZWNhdGVkIGNyZWF0ZSBhIGxvY2FsIHtAbGluayBYcnBjQ2xpZW50fSBpbnN0YW5jZSBpbnN0ZWFkICovXG5jb25zdCBkZWZhdWx0SW5zdCA9IG5ldyBjbGllbnRfMS5DbGllbnQoKTtcbmV4cG9ydHMuZGVmYXVsdCA9IGRlZmF1bHRJbnN0O1xuLyogZXNsaW50LWVuYWJsZSBpbXBvcnQvbm8tZGVwcmVjYXRlZCAqL1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/xrpc/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/xrpc/dist/types.js":
/*!**************************************************!*\
  !*** ./node_modules/@atproto/xrpc/dist/types.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.XRPCInvalidResponseError = exports.XRPCError = exports.XRPCResponse = exports.ResponseTypeStrings = exports.ResponseTypeNames = exports.ResponseType = exports.errorResponseBody = void 0;\nexports.httpResponseCodeToEnum = httpResponseCodeToEnum;\nexports.httpResponseCodeToName = httpResponseCodeToName;\nexports.httpResponseCodeToString = httpResponseCodeToString;\nconst zod_1 = __webpack_require__(/*! zod */ \"(ssr)/./node_modules/zod/index.cjs\");\nexports.errorResponseBody = zod_1.z.object({\n    error: zod_1.z.string().optional(),\n    message: zod_1.z.string().optional(),\n});\nvar ResponseType;\n(function (ResponseType) {\n    ResponseType[ResponseType[\"Unknown\"] = 1] = \"Unknown\";\n    ResponseType[ResponseType[\"InvalidResponse\"] = 2] = \"InvalidResponse\";\n    ResponseType[ResponseType[\"Success\"] = 200] = \"Success\";\n    ResponseType[ResponseType[\"InvalidRequest\"] = 400] = \"InvalidRequest\";\n    ResponseType[ResponseType[\"AuthRequired\"] = 401] = \"AuthRequired\";\n    ResponseType[ResponseType[\"Forbidden\"] = 403] = \"Forbidden\";\n    ResponseType[ResponseType[\"XRPCNotSupported\"] = 404] = \"XRPCNotSupported\";\n    ResponseType[ResponseType[\"NotAcceptable\"] = 406] = \"NotAcceptable\";\n    ResponseType[ResponseType[\"PayloadTooLarge\"] = 413] = \"PayloadTooLarge\";\n    ResponseType[ResponseType[\"UnsupportedMediaType\"] = 415] = \"UnsupportedMediaType\";\n    ResponseType[ResponseType[\"RateLimitExceeded\"] = 429] = \"RateLimitExceeded\";\n    ResponseType[ResponseType[\"InternalServerError\"] = 500] = \"InternalServerError\";\n    ResponseType[ResponseType[\"MethodNotImplemented\"] = 501] = \"MethodNotImplemented\";\n    ResponseType[ResponseType[\"UpstreamFailure\"] = 502] = \"UpstreamFailure\";\n    ResponseType[ResponseType[\"NotEnoughResources\"] = 503] = \"NotEnoughResources\";\n    ResponseType[ResponseType[\"UpstreamTimeout\"] = 504] = \"UpstreamTimeout\";\n})(ResponseType || (exports.ResponseType = ResponseType = {}));\nfunction httpResponseCodeToEnum(status) {\n    if (status in ResponseType) {\n        return status;\n    }\n    else if (status >= 100 && status < 200) {\n        return ResponseType.XRPCNotSupported;\n    }\n    else if (status >= 200 && status < 300) {\n        return ResponseType.Success;\n    }\n    else if (status >= 300 && status < 400) {\n        return ResponseType.XRPCNotSupported;\n    }\n    else if (status >= 400 && status < 500) {\n        return ResponseType.InvalidRequest;\n    }\n    else {\n        return ResponseType.InternalServerError;\n    }\n}\nexports.ResponseTypeNames = {\n    [ResponseType.Unknown]: 'Unknown',\n    [ResponseType.InvalidResponse]: 'InvalidResponse',\n    [ResponseType.Success]: 'Success',\n    [ResponseType.InvalidRequest]: 'InvalidRequest',\n    [ResponseType.AuthRequired]: 'AuthenticationRequired',\n    [ResponseType.Forbidden]: 'Forbidden',\n    [ResponseType.XRPCNotSupported]: 'XRPCNotSupported',\n    [ResponseType.PayloadTooLarge]: 'PayloadTooLarge',\n    [ResponseType.UnsupportedMediaType]: 'UnsupportedMediaType',\n    [ResponseType.RateLimitExceeded]: 'RateLimitExceeded',\n    [ResponseType.InternalServerError]: 'InternalServerError',\n    [ResponseType.MethodNotImplemented]: 'MethodNotImplemented',\n    [ResponseType.UpstreamFailure]: 'UpstreamFailure',\n    [ResponseType.NotEnoughResources]: 'NotEnoughResources',\n    [ResponseType.UpstreamTimeout]: 'UpstreamTimeout',\n};\nfunction httpResponseCodeToName(status) {\n    return exports.ResponseTypeNames[httpResponseCodeToEnum(status)];\n}\nexports.ResponseTypeStrings = {\n    [ResponseType.Unknown]: 'Unknown',\n    [ResponseType.InvalidResponse]: 'Invalid Response',\n    [ResponseType.Success]: 'Success',\n    [ResponseType.InvalidRequest]: 'Invalid Request',\n    [ResponseType.AuthRequired]: 'Authentication Required',\n    [ResponseType.Forbidden]: 'Forbidden',\n    [ResponseType.XRPCNotSupported]: 'XRPC Not Supported',\n    [ResponseType.PayloadTooLarge]: 'Payload Too Large',\n    [ResponseType.UnsupportedMediaType]: 'Unsupported Media Type',\n    [ResponseType.RateLimitExceeded]: 'Rate Limit Exceeded',\n    [ResponseType.InternalServerError]: 'Internal Server Error',\n    [ResponseType.MethodNotImplemented]: 'Method Not Implemented',\n    [ResponseType.UpstreamFailure]: 'Upstream Failure',\n    [ResponseType.NotEnoughResources]: 'Not Enough Resources',\n    [ResponseType.UpstreamTimeout]: 'Upstream Timeout',\n};\nfunction httpResponseCodeToString(status) {\n    return exports.ResponseTypeStrings[httpResponseCodeToEnum(status)];\n}\nclass XRPCResponse {\n    constructor(data, headers) {\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: data\n        });\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: headers\n        });\n        Object.defineProperty(this, \"success\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n    }\n}\nexports.XRPCResponse = XRPCResponse;\nclass XRPCError extends Error {\n    constructor(statusCode, error = httpResponseCodeToName(statusCode), message, headers, options) {\n        super(message || error || httpResponseCodeToString(statusCode), options);\n        Object.defineProperty(this, \"error\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: error\n        });\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: headers\n        });\n        Object.defineProperty(this, \"success\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"status\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.status = httpResponseCodeToEnum(statusCode);\n        // Pre 2022 runtimes won't handle the \"options\" constructor argument\n        const cause = options?.cause;\n        if (this.cause === undefined && cause !== undefined) {\n            this.cause = cause;\n        }\n    }\n    static from(cause, fallbackStatus) {\n        if (cause instanceof XRPCError) {\n            return cause;\n        }\n        // Type cast the cause to an Error if it is one\n        const causeErr = cause instanceof Error ? cause : undefined;\n        // Try and find a Response object in the cause\n        const causeResponse = cause instanceof Response\n            ? cause\n            : cause?.['response'] instanceof Response\n                ? cause['response']\n                : undefined;\n        const statusCode = \n        // Extract status code from \"http-errors\" like errors\n        causeErr?.['statusCode'] ??\n            causeErr?.['status'] ??\n            // Use the status code from the response object as fallback\n            causeResponse?.status;\n        // Convert the status code to a ResponseType\n        const status = typeof statusCode === 'number'\n            ? httpResponseCodeToEnum(statusCode)\n            : fallbackStatus ?? ResponseType.Unknown;\n        const message = causeErr?.message ?? String(cause);\n        const headers = causeResponse\n            ? Object.fromEntries(causeResponse.headers.entries())\n            : undefined;\n        return new XRPCError(status, undefined, message, headers, { cause });\n    }\n}\nexports.XRPCError = XRPCError;\nclass XRPCInvalidResponseError extends XRPCError {\n    constructor(lexiconNsid, validationError, responseBody) {\n        super(ResponseType.InvalidResponse, exports.ResponseTypeStrings[ResponseType.InvalidResponse], `The server gave an invalid response and may be out of date.`, undefined, { cause: validationError });\n        Object.defineProperty(this, \"lexiconNsid\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: lexiconNsid\n        });\n        Object.defineProperty(this, \"validationError\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: validationError\n        });\n        Object.defineProperty(this, \"responseBody\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: responseBody\n        });\n    }\n}\nexports.XRPCInvalidResponseError = XRPCInvalidResponseError;\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/xrpc/dist/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/xrpc/dist/util.js":
/*!*************************************************!*\
  !*** ./node_modules/@atproto/xrpc/dist/util.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isErrorResponseBody = isErrorResponseBody;\nexports.getMethodSchemaHTTPMethod = getMethodSchemaHTTPMethod;\nexports.constructMethodCallUri = constructMethodCallUri;\nexports.constructMethodCallUrl = constructMethodCallUrl;\nexports.encodeQueryParam = encodeQueryParam;\nexports.constructMethodCallHeaders = constructMethodCallHeaders;\nexports.combineHeaders = combineHeaders;\nexports.isBodyInit = isBodyInit;\nexports.isIterable = isIterable;\nexports.encodeMethodCallBody = encodeMethodCallBody;\nexports.httpResponseBodyParse = httpResponseBodyParse;\nconst lexicon_1 = __webpack_require__(/*! @atproto/lexicon */ \"(ssr)/./node_modules/@atproto/lexicon/dist/index.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@atproto/xrpc/dist/types.js\");\nconst ReadableStream = globalThis.ReadableStream ||\n    class {\n        constructor() {\n            // This anonymous class will never pass any \"instanceof\" check and cannot\n            // be instantiated.\n            throw new Error('ReadableStream is not supported in this environment');\n        }\n    };\nfunction isErrorResponseBody(v) {\n    return types_1.errorResponseBody.safeParse(v).success;\n}\nfunction getMethodSchemaHTTPMethod(schema) {\n    if (schema.type === 'procedure') {\n        return 'post';\n    }\n    return 'get';\n}\nfunction constructMethodCallUri(nsid, schema, serviceUri, params) {\n    const uri = new URL(constructMethodCallUrl(nsid, schema, params), serviceUri);\n    return uri.toString();\n}\nfunction constructMethodCallUrl(nsid, schema, params) {\n    const pathname = `/xrpc/${encodeURIComponent(nsid)}`;\n    if (!params)\n        return pathname;\n    const searchParams = [];\n    for (const [key, value] of Object.entries(params)) {\n        const paramSchema = schema.parameters?.properties?.[key];\n        if (!paramSchema) {\n            throw new Error(`Invalid query parameter: ${key}`);\n        }\n        if (value !== undefined) {\n            if (paramSchema.type === 'array') {\n                const values = Array.isArray(value) ? value : [value];\n                for (const val of values) {\n                    searchParams.push([\n                        key,\n                        encodeQueryParam(paramSchema.items.type, val),\n                    ]);\n                }\n            }\n            else {\n                searchParams.push([key, encodeQueryParam(paramSchema.type, value)]);\n            }\n        }\n    }\n    if (!searchParams.length)\n        return pathname;\n    return `${pathname}?${new URLSearchParams(searchParams).toString()}`;\n}\nfunction encodeQueryParam(type, value) {\n    if (type === 'string' || type === 'unknown') {\n        return String(value);\n    }\n    if (type === 'float') {\n        return String(Number(value));\n    }\n    else if (type === 'integer') {\n        return String(Number(value) | 0);\n    }\n    else if (type === 'boolean') {\n        return value ? 'true' : 'false';\n    }\n    else if (type === 'datetime') {\n        if (value instanceof Date) {\n            return value.toISOString();\n        }\n        return String(value);\n    }\n    throw new Error(`Unsupported query param type: ${type}`);\n}\nfunction constructMethodCallHeaders(schema, data, opts) {\n    // Not using `new Headers(opts?.headers)` to avoid duplicating headers values\n    // due to inconsistent casing in headers name. In case of multiple headers\n    // with the same name (but using a different case), the last one will be used.\n    // new Headers({ 'content-type': 'foo', 'Content-Type': 'bar' }).get('content-type')\n    // => 'foo, bar'\n    const headers = new Headers();\n    if (opts?.headers) {\n        for (const name in opts.headers) {\n            if (headers.has(name)) {\n                throw new TypeError(`Duplicate header: ${name}`);\n            }\n            const value = opts.headers[name];\n            if (value != null) {\n                headers.set(name, value);\n            }\n        }\n    }\n    if (schema.type === 'procedure') {\n        if (opts?.encoding) {\n            headers.set('content-type', opts.encoding);\n        }\n        else if (!headers.has('content-type') && typeof data !== 'undefined') {\n            // Special handling of BodyInit types before falling back to JSON encoding\n            if (data instanceof ArrayBuffer ||\n                data instanceof ReadableStream ||\n                ArrayBuffer.isView(data)) {\n                headers.set('content-type', 'application/octet-stream');\n            }\n            else if (data instanceof FormData) {\n                // Note: The multipart form data boundary is missing from the header\n                // we set here, making that header invalid. This special case will be\n                // handled in encodeMethodCallBody()\n                headers.set('content-type', 'multipart/form-data');\n            }\n            else if (data instanceof URLSearchParams) {\n                headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n            }\n            else if (isBlobLike(data)) {\n                headers.set('content-type', data.type || 'application/octet-stream');\n            }\n            else if (typeof data === 'string') {\n                headers.set('content-type', 'text/plain;charset=UTF-8');\n            }\n            // At this point, data is not a valid BodyInit type.\n            else if (isIterable(data)) {\n                headers.set('content-type', 'application/octet-stream');\n            }\n            else if (typeof data === 'boolean' ||\n                typeof data === 'number' ||\n                typeof data === 'string' ||\n                typeof data === 'object' // covers \"null\"\n            ) {\n                headers.set('content-type', 'application/json');\n            }\n            else {\n                // symbol, function, bigint\n                throw new types_1.XRPCError(types_1.ResponseType.InvalidRequest, `Unsupported data type: ${typeof data}`);\n            }\n        }\n    }\n    return headers;\n}\nfunction combineHeaders(headersInit, defaultHeaders) {\n    if (!defaultHeaders)\n        return headersInit;\n    let headers = undefined;\n    for (const [name, definition] of defaultHeaders) {\n        // Ignore undefined values (allowed for convenience when using\n        // Object.entries).\n        if (definition === undefined)\n            continue;\n        // Lazy initialization of the headers object\n        headers ?? (headers = new Headers(headersInit));\n        if (headers.has(name))\n            continue;\n        const value = typeof definition === 'function' ? definition() : definition;\n        if (typeof value === 'string')\n            headers.set(name, value);\n        else if (value === null)\n            headers.delete(name);\n        else\n            throw new TypeError(`Invalid \"${name}\" header value: ${typeof value}`);\n    }\n    return headers ?? headersInit;\n}\nfunction isBlobLike(value) {\n    if (value == null)\n        return false;\n    if (typeof value !== 'object')\n        return false;\n    if (typeof Blob === 'function' && value instanceof Blob)\n        return true;\n    // Support for Blobs provided by libraries that don't use the native Blob\n    // (e.g. fetch-blob from node-fetch).\n    // https://github.com/node-fetch/fetch-blob/blob/a1a182e5978811407bef4ea1632b517567dda01f/index.js#L233-L244\n    const tag = value[Symbol.toStringTag];\n    if (tag === 'Blob' || tag === 'File') {\n        return 'stream' in value && typeof value.stream === 'function';\n    }\n    return false;\n}\nfunction isBodyInit(value) {\n    switch (typeof value) {\n        case 'string':\n            return true;\n        case 'object':\n            return (value instanceof ArrayBuffer ||\n                value instanceof FormData ||\n                value instanceof URLSearchParams ||\n                value instanceof ReadableStream ||\n                ArrayBuffer.isView(value) ||\n                isBlobLike(value));\n        default:\n            return false;\n    }\n}\nfunction isIterable(value) {\n    return (value != null &&\n        typeof value === 'object' &&\n        (Symbol.iterator in value || Symbol.asyncIterator in value));\n}\nfunction encodeMethodCallBody(headers, data) {\n    // Silently ignore the body if there is no content-type header.\n    const contentType = headers.get('content-type');\n    if (!contentType) {\n        return undefined;\n    }\n    if (typeof data === 'undefined') {\n        // This error would be returned by the server, but we can catch it earlier\n        // to avoid un-necessary requests. Note that a content-length of 0 does not\n        // necessary mean that the body is \"empty\" (e.g. an empty txt file).\n        throw new types_1.XRPCError(types_1.ResponseType.InvalidRequest, `A request body is expected but none was provided`);\n    }\n    if (isBodyInit(data)) {\n        if (data instanceof FormData && contentType === 'multipart/form-data') {\n            // fetch() will encode FormData payload itself, but it won't override the\n            // content-type header if already present. This would cause the boundary\n            // to be missing from the content-type header, resulting in a 400 error.\n            // Deleting the content-type header here to let fetch() re-create it.\n            headers.delete('content-type');\n        }\n        // Will be encoded by the fetch API.\n        return data;\n    }\n    if (isIterable(data)) {\n        // Note that some environments support using Iterable & AsyncIterable as the\n        // body (e.g. Node's fetch), but not all of them do (browsers).\n        return iterableToReadableStream(data);\n    }\n    if (contentType.startsWith('text/')) {\n        return new TextEncoder().encode(String(data));\n    }\n    if (contentType.startsWith('application/json')) {\n        const json = (0, lexicon_1.stringifyLex)(data);\n        // Server would return a 400 error if the JSON is invalid (e.g. trying to\n        // JSONify a function, or an object that implements toJSON() poorly).\n        if (json === undefined) {\n            throw new types_1.XRPCError(types_1.ResponseType.InvalidRequest, `Failed to encode request body as JSON`);\n        }\n        return new TextEncoder().encode(json);\n    }\n    // At this point, \"data\" is not a valid BodyInit value, and we don't know how\n    // to encode it into one. Passing it to fetch would result in an error. Let's\n    // throw our own error instead.\n    const type = !data || typeof data !== 'object'\n        ? typeof data\n        : data.constructor !== Object &&\n            typeof data.constructor === 'function' &&\n            typeof data.constructor?.name === 'string'\n            ? data.constructor.name\n            : 'object';\n    throw new types_1.XRPCError(types_1.ResponseType.InvalidRequest, `Unable to encode ${type} as ${contentType} data`);\n}\n/**\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/from_static}\n */\nfunction iterableToReadableStream(iterable) {\n    // Use the native ReadableStream.from() if available.\n    if ('from' in ReadableStream && typeof ReadableStream.from === 'function') {\n        return ReadableStream.from(iterable);\n    }\n    // If you see this error, consider using a polyfill for ReadableStream. For\n    // example, the \"web-streams-polyfill\" package:\n    // https://github.com/MattiasBuelens/web-streams-polyfill\n    throw new TypeError('ReadableStream.from() is not supported in this environment. ' +\n        'It is required to support using iterables as the request body. ' +\n        'Consider using a polyfill or re-write your code to use a different body type.');\n}\nfunction httpResponseBodyParse(mimeType, data) {\n    try {\n        if (mimeType) {\n            if (mimeType.includes('application/json')) {\n                const str = new TextDecoder().decode(data);\n                return (0, lexicon_1.jsonStringToLex)(str);\n            }\n            if (mimeType.startsWith('text/')) {\n                return new TextDecoder().decode(data);\n            }\n        }\n        if (data instanceof ArrayBuffer) {\n            return new Uint8Array(data);\n        }\n        return data;\n    }\n    catch (cause) {\n        throw new types_1.XRPCError(types_1.ResponseType.InvalidResponse, undefined, `Failed to parse response body: ${String(cause)}`, undefined, { cause });\n    }\n}\n//# sourceMappingURL=util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/xrpc/dist/util.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@atproto/xrpc/dist/xrpc-client.js":
/*!********************************************************!*\
  !*** ./node_modules/@atproto/xrpc/dist/xrpc-client.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.XrpcClient = void 0;\nconst lexicon_1 = __webpack_require__(/*! @atproto/lexicon */ \"(ssr)/./node_modules/@atproto/lexicon/dist/index.js\");\nconst fetch_handler_1 = __webpack_require__(/*! ./fetch-handler */ \"(ssr)/./node_modules/@atproto/xrpc/dist/fetch-handler.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@atproto/xrpc/dist/types.js\");\nconst util_1 = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/@atproto/xrpc/dist/util.js\");\nclass XrpcClient {\n    constructor(fetchHandlerOpts, \n    // \"Lexicons\" is redundant here (because that class implements\n    // \"Iterable<LexiconDoc>\") but we keep it for explicitness:\n    lex) {\n        Object.defineProperty(this, \"fetchHandler\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        Object.defineProperty(this, \"lex\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.fetchHandler = (0, fetch_handler_1.buildFetchHandler)(fetchHandlerOpts);\n        this.lex = lex instanceof lexicon_1.Lexicons ? lex : new lexicon_1.Lexicons(lex);\n    }\n    setHeader(key, value) {\n        this.headers.set(key.toLowerCase(), value);\n    }\n    unsetHeader(key) {\n        this.headers.delete(key.toLowerCase());\n    }\n    clearHeaders() {\n        this.headers.clear();\n    }\n    async call(methodNsid, params, data, opts) {\n        const def = this.lex.getDefOrThrow(methodNsid);\n        if (!def || (def.type !== 'query' && def.type !== 'procedure')) {\n            throw new TypeError(`Invalid lexicon: ${methodNsid}. Must be a query or procedure.`);\n        }\n        // @TODO: should we validate the params and data here?\n        // this.lex.assertValidXrpcParams(methodNsid, params)\n        // if (data !== undefined) {\n        //   this.lex.assertValidXrpcInput(methodNsid, data)\n        // }\n        const reqUrl = (0, util_1.constructMethodCallUrl)(methodNsid, def, params);\n        const reqMethod = (0, util_1.getMethodSchemaHTTPMethod)(def);\n        const reqHeaders = (0, util_1.constructMethodCallHeaders)(def, data, opts);\n        const reqBody = (0, util_1.encodeMethodCallBody)(reqHeaders, data);\n        // The duplex field is required for streaming bodies, but not yet reflected\n        // anywhere in docs or types. See whatwg/fetch#1438, nodejs/node#46221.\n        const init = {\n            method: reqMethod,\n            headers: (0, util_1.combineHeaders)(reqHeaders, this.headers),\n            body: reqBody,\n            duplex: 'half',\n            signal: opts?.signal,\n        };\n        try {\n            const response = await this.fetchHandler.call(undefined, reqUrl, init);\n            const resStatus = response.status;\n            const resHeaders = Object.fromEntries(response.headers.entries());\n            const resBodyBytes = await response.arrayBuffer();\n            const resBody = (0, util_1.httpResponseBodyParse)(response.headers.get('content-type'), resBodyBytes);\n            const resCode = (0, types_1.httpResponseCodeToEnum)(resStatus);\n            if (resCode !== types_1.ResponseType.Success) {\n                const { error = undefined, message = undefined } = resBody && (0, util_1.isErrorResponseBody)(resBody) ? resBody : {};\n                throw new types_1.XRPCError(resCode, error, message, resHeaders);\n            }\n            try {\n                this.lex.assertValidXrpcOutput(methodNsid, resBody);\n            }\n            catch (e) {\n                if (e instanceof lexicon_1.ValidationError) {\n                    throw new types_1.XRPCInvalidResponseError(methodNsid, e, resBody);\n                }\n                throw e;\n            }\n            return new types_1.XRPCResponse(resBody, resHeaders);\n        }\n        catch (err) {\n            throw types_1.XRPCError.from(err);\n        }\n    }\n}\nexports.XrpcClient = XrpcClient;\n//# sourceMappingURL=xrpc-client.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF0cHJvdG8veHJwYy9kaXN0L3hycGMtY2xpZW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQixrQkFBa0IsbUJBQU8sQ0FBQyw2RUFBa0I7QUFDNUMsd0JBQXdCLG1CQUFPLENBQUMsaUZBQWlCO0FBQ2pELGdCQUFnQixtQkFBTyxDQUFDLGlFQUFTO0FBQ2pDLGVBQWUsbUJBQU8sQ0FBQywrREFBUTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELFdBQVc7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHlDQUF5QztBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZWFjZS16b25lLXdlYi8uL25vZGVfbW9kdWxlcy9AYXRwcm90by94cnBjL2Rpc3QveHJwYy1jbGllbnQuanM/NDFmMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuWHJwY0NsaWVudCA9IHZvaWQgMDtcbmNvbnN0IGxleGljb25fMSA9IHJlcXVpcmUoXCJAYXRwcm90by9sZXhpY29uXCIpO1xuY29uc3QgZmV0Y2hfaGFuZGxlcl8xID0gcmVxdWlyZShcIi4vZmV0Y2gtaGFuZGxlclwiKTtcbmNvbnN0IHR5cGVzXzEgPSByZXF1aXJlKFwiLi90eXBlc1wiKTtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuL3V0aWxcIik7XG5jbGFzcyBYcnBjQ2xpZW50IHtcbiAgICBjb25zdHJ1Y3RvcihmZXRjaEhhbmRsZXJPcHRzLCBcbiAgICAvLyBcIkxleGljb25zXCIgaXMgcmVkdW5kYW50IGhlcmUgKGJlY2F1c2UgdGhhdCBjbGFzcyBpbXBsZW1lbnRzXG4gICAgLy8gXCJJdGVyYWJsZTxMZXhpY29uRG9jPlwiKSBidXQgd2Uga2VlcCBpdCBmb3IgZXhwbGljaXRuZXNzOlxuICAgIGxleCkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJmZXRjaEhhbmRsZXJcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiaGVhZGVyc1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogbmV3IE1hcCgpXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJsZXhcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5mZXRjaEhhbmRsZXIgPSAoMCwgZmV0Y2hfaGFuZGxlcl8xLmJ1aWxkRmV0Y2hIYW5kbGVyKShmZXRjaEhhbmRsZXJPcHRzKTtcbiAgICAgICAgdGhpcy5sZXggPSBsZXggaW5zdGFuY2VvZiBsZXhpY29uXzEuTGV4aWNvbnMgPyBsZXggOiBuZXcgbGV4aWNvbl8xLkxleGljb25zKGxleCk7XG4gICAgfVxuICAgIHNldEhlYWRlcihrZXksIHZhbHVlKSB7XG4gICAgICAgIHRoaXMuaGVhZGVycy5zZXQoa2V5LnRvTG93ZXJDYXNlKCksIHZhbHVlKTtcbiAgICB9XG4gICAgdW5zZXRIZWFkZXIoa2V5KSB7XG4gICAgICAgIHRoaXMuaGVhZGVycy5kZWxldGUoa2V5LnRvTG93ZXJDYXNlKCkpO1xuICAgIH1cbiAgICBjbGVhckhlYWRlcnMoKSB7XG4gICAgICAgIHRoaXMuaGVhZGVycy5jbGVhcigpO1xuICAgIH1cbiAgICBhc3luYyBjYWxsKG1ldGhvZE5zaWQsIHBhcmFtcywgZGF0YSwgb3B0cykge1xuICAgICAgICBjb25zdCBkZWYgPSB0aGlzLmxleC5nZXREZWZPclRocm93KG1ldGhvZE5zaWQpO1xuICAgICAgICBpZiAoIWRlZiB8fCAoZGVmLnR5cGUgIT09ICdxdWVyeScgJiYgZGVmLnR5cGUgIT09ICdwcm9jZWR1cmUnKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgSW52YWxpZCBsZXhpY29uOiAke21ldGhvZE5zaWR9LiBNdXN0IGJlIGEgcXVlcnkgb3IgcHJvY2VkdXJlLmApO1xuICAgICAgICB9XG4gICAgICAgIC8vIEBUT0RPOiBzaG91bGQgd2UgdmFsaWRhdGUgdGhlIHBhcmFtcyBhbmQgZGF0YSBoZXJlP1xuICAgICAgICAvLyB0aGlzLmxleC5hc3NlcnRWYWxpZFhycGNQYXJhbXMobWV0aG9kTnNpZCwgcGFyYW1zKVxuICAgICAgICAvLyBpZiAoZGF0YSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIC8vICAgdGhpcy5sZXguYXNzZXJ0VmFsaWRYcnBjSW5wdXQobWV0aG9kTnNpZCwgZGF0YSlcbiAgICAgICAgLy8gfVxuICAgICAgICBjb25zdCByZXFVcmwgPSAoMCwgdXRpbF8xLmNvbnN0cnVjdE1ldGhvZENhbGxVcmwpKG1ldGhvZE5zaWQsIGRlZiwgcGFyYW1zKTtcbiAgICAgICAgY29uc3QgcmVxTWV0aG9kID0gKDAsIHV0aWxfMS5nZXRNZXRob2RTY2hlbWFIVFRQTWV0aG9kKShkZWYpO1xuICAgICAgICBjb25zdCByZXFIZWFkZXJzID0gKDAsIHV0aWxfMS5jb25zdHJ1Y3RNZXRob2RDYWxsSGVhZGVycykoZGVmLCBkYXRhLCBvcHRzKTtcbiAgICAgICAgY29uc3QgcmVxQm9keSA9ICgwLCB1dGlsXzEuZW5jb2RlTWV0aG9kQ2FsbEJvZHkpKHJlcUhlYWRlcnMsIGRhdGEpO1xuICAgICAgICAvLyBUaGUgZHVwbGV4IGZpZWxkIGlzIHJlcXVpcmVkIGZvciBzdHJlYW1pbmcgYm9kaWVzLCBidXQgbm90IHlldCByZWZsZWN0ZWRcbiAgICAgICAgLy8gYW55d2hlcmUgaW4gZG9jcyBvciB0eXBlcy4gU2VlIHdoYXR3Zy9mZXRjaCMxNDM4LCBub2RlanMvbm9kZSM0NjIyMS5cbiAgICAgICAgY29uc3QgaW5pdCA9IHtcbiAgICAgICAgICAgIG1ldGhvZDogcmVxTWV0aG9kLFxuICAgICAgICAgICAgaGVhZGVyczogKDAsIHV0aWxfMS5jb21iaW5lSGVhZGVycykocmVxSGVhZGVycywgdGhpcy5oZWFkZXJzKSxcbiAgICAgICAgICAgIGJvZHk6IHJlcUJvZHksXG4gICAgICAgICAgICBkdXBsZXg6ICdoYWxmJyxcbiAgICAgICAgICAgIHNpZ25hbDogb3B0cz8uc2lnbmFsLFxuICAgICAgICB9O1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmZldGNoSGFuZGxlci5jYWxsKHVuZGVmaW5lZCwgcmVxVXJsLCBpbml0KTtcbiAgICAgICAgICAgIGNvbnN0IHJlc1N0YXR1cyA9IHJlc3BvbnNlLnN0YXR1cztcbiAgICAgICAgICAgIGNvbnN0IHJlc0hlYWRlcnMgPSBPYmplY3QuZnJvbUVudHJpZXMocmVzcG9uc2UuaGVhZGVycy5lbnRyaWVzKCkpO1xuICAgICAgICAgICAgY29uc3QgcmVzQm9keUJ5dGVzID0gYXdhaXQgcmVzcG9uc2UuYXJyYXlCdWZmZXIoKTtcbiAgICAgICAgICAgIGNvbnN0IHJlc0JvZHkgPSAoMCwgdXRpbF8xLmh0dHBSZXNwb25zZUJvZHlQYXJzZSkocmVzcG9uc2UuaGVhZGVycy5nZXQoJ2NvbnRlbnQtdHlwZScpLCByZXNCb2R5Qnl0ZXMpO1xuICAgICAgICAgICAgY29uc3QgcmVzQ29kZSA9ICgwLCB0eXBlc18xLmh0dHBSZXNwb25zZUNvZGVUb0VudW0pKHJlc1N0YXR1cyk7XG4gICAgICAgICAgICBpZiAocmVzQ29kZSAhPT0gdHlwZXNfMS5SZXNwb25zZVR5cGUuU3VjY2Vzcykge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgZXJyb3IgPSB1bmRlZmluZWQsIG1lc3NhZ2UgPSB1bmRlZmluZWQgfSA9IHJlc0JvZHkgJiYgKDAsIHV0aWxfMS5pc0Vycm9yUmVzcG9uc2VCb2R5KShyZXNCb2R5KSA/IHJlc0JvZHkgOiB7fTtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgdHlwZXNfMS5YUlBDRXJyb3IocmVzQ29kZSwgZXJyb3IsIG1lc3NhZ2UsIHJlc0hlYWRlcnMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICB0aGlzLmxleC5hc3NlcnRWYWxpZFhycGNPdXRwdXQobWV0aG9kTnNpZCwgcmVzQm9keSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIGlmIChlIGluc3RhbmNlb2YgbGV4aWNvbl8xLlZhbGlkYXRpb25FcnJvcikge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgdHlwZXNfMS5YUlBDSW52YWxpZFJlc3BvbnNlRXJyb3IobWV0aG9kTnNpZCwgZSwgcmVzQm9keSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbmV3IHR5cGVzXzEuWFJQQ1Jlc3BvbnNlKHJlc0JvZHksIHJlc0hlYWRlcnMpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIHRocm93IHR5cGVzXzEuWFJQQ0Vycm9yLmZyb20oZXJyKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuWHJwY0NsaWVudCA9IFhycGNDbGllbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD14cnBjLWNsaWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@atproto/xrpc/dist/xrpc-client.js\n");

/***/ })

};
;